// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: liqi.proto

package message

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GamePlayerState int32

const (
	GamePlayerState_NULL    GamePlayerState = 0
	GamePlayerState_AUTH    GamePlayerState = 1
	GamePlayerState_SYNCING GamePlayerState = 2
	GamePlayerState_READY   GamePlayerState = 3
)

// Enum value maps for GamePlayerState.
var (
	GamePlayerState_name = map[int32]string{
		0: "NULL",
		1: "AUTH",
		2: "SYNCING",
		3: "READY",
	}
	GamePlayerState_value = map[string]int32{
		"NULL":    0,
		"AUTH":    1,
		"SYNCING": 2,
		"READY":   3,
	}
)

func (x GamePlayerState) Enum() *GamePlayerState {
	p := new(GamePlayerState)
	*p = x
	return p
}

func (x GamePlayerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GamePlayerState) Descriptor() protoreflect.EnumDescriptor {
	return file_liqi_proto_enumTypes[0].Descriptor()
}

func (GamePlayerState) Type() protoreflect.EnumType {
	return &file_liqi_proto_enumTypes[0]
}

func (x GamePlayerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GamePlayerState.Descriptor instead.
func (GamePlayerState) EnumDescriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{0}
}

type NotifyCaptcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckId   uint32 `protobuf:"varint,1,opt,name=check_id,json=checkId,proto3" json:"check_id"`
	StartTime uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	RandomStr string `protobuf:"bytes,3,opt,name=random_str,json=randomStr,proto3" json:"random_str"`
	Type      uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type"`
}

func (x *NotifyCaptcha) Reset() {
	*x = NotifyCaptcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCaptcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCaptcha) ProtoMessage() {}

func (x *NotifyCaptcha) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCaptcha.ProtoReflect.Descriptor instead.
func (*NotifyCaptcha) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{0}
}

func (x *NotifyCaptcha) GetCheckId() uint32 {
	if x != nil {
		return x.CheckId
	}
	return 0
}

func (x *NotifyCaptcha) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *NotifyCaptcha) GetRandomStr() string {
	if x != nil {
		return x.RandomStr
	}
	return ""
}

func (x *NotifyCaptcha) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type NotifyRoomGameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUrl      string `protobuf:"bytes,1,opt,name=game_url,json=gameUrl,proto3" json:"game_url"`
	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken,proto3" json:"connect_token"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
	Location     string `protobuf:"bytes,4,opt,name=location,proto3" json:"location"`
}

func (x *NotifyRoomGameStart) Reset() {
	*x = NotifyRoomGameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomGameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomGameStart) ProtoMessage() {}

func (x *NotifyRoomGameStart) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomGameStart.ProtoReflect.Descriptor instead.
func (*NotifyRoomGameStart) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{1}
}

func (x *NotifyRoomGameStart) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *NotifyRoomGameStart) GetConnectToken() string {
	if x != nil {
		return x.ConnectToken
	}
	return ""
}

func (x *NotifyRoomGameStart) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *NotifyRoomGameStart) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type NotifyMatchGameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUrl      string `protobuf:"bytes,1,opt,name=game_url,json=gameUrl,proto3" json:"game_url"`
	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken,proto3" json:"connect_token"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
	MatchModeId  uint32 `protobuf:"varint,4,opt,name=match_mode_id,json=matchModeId,proto3" json:"match_mode_id"`
	Location     string `protobuf:"bytes,5,opt,name=location,proto3" json:"location"`
}

func (x *NotifyMatchGameStart) Reset() {
	*x = NotifyMatchGameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMatchGameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMatchGameStart) ProtoMessage() {}

func (x *NotifyMatchGameStart) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMatchGameStart.ProtoReflect.Descriptor instead.
func (*NotifyMatchGameStart) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{2}
}

func (x *NotifyMatchGameStart) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *NotifyMatchGameStart) GetConnectToken() string {
	if x != nil {
		return x.ConnectToken
	}
	return ""
}

func (x *NotifyMatchGameStart) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *NotifyMatchGameStart) GetMatchModeId() uint32 {
	if x != nil {
		return x.MatchModeId
	}
	return 0
}

func (x *NotifyMatchGameStart) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type NotifyRoomPlayerReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32                                   `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Ready       bool                                     `protobuf:"varint,2,opt,name=ready,proto3" json:"ready"`
	AccountList *NotifyRoomPlayerReady_AccountReadyState `protobuf:"bytes,3,opt,name=account_list,json=accountList,proto3" json:"account_list"`
	Seq         uint32                                   `protobuf:"varint,4,opt,name=seq,proto3" json:"seq"`
}

func (x *NotifyRoomPlayerReady) Reset() {
	*x = NotifyRoomPlayerReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerReady) ProtoMessage() {}

func (x *NotifyRoomPlayerReady) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerReady.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerReady) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{3}
}

func (x *NotifyRoomPlayerReady) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyRoomPlayerReady) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *NotifyRoomPlayerReady) GetAccountList() *NotifyRoomPlayerReady_AccountReadyState {
	if x != nil {
		return x.AccountList
	}
	return nil
}

func (x *NotifyRoomPlayerReady) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type NotifyRoomPlayerDressing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32                                         `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Dressing    bool                                           `protobuf:"varint,2,opt,name=dressing,proto3" json:"dressing"`
	AccountList *NotifyRoomPlayerDressing_AccountDressingState `protobuf:"bytes,3,opt,name=account_list,json=accountList,proto3" json:"account_list"`
	Seq         uint32                                         `protobuf:"varint,4,opt,name=seq,proto3" json:"seq"`
}

func (x *NotifyRoomPlayerDressing) Reset() {
	*x = NotifyRoomPlayerDressing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerDressing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerDressing) ProtoMessage() {}

func (x *NotifyRoomPlayerDressing) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerDressing.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerDressing) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{4}
}

func (x *NotifyRoomPlayerDressing) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyRoomPlayerDressing) GetDressing() bool {
	if x != nil {
		return x.Dressing
	}
	return false
}

func (x *NotifyRoomPlayerDressing) GetAccountList() *NotifyRoomPlayerDressing_AccountDressingState {
	if x != nil {
		return x.AccountList
	}
	return nil
}

func (x *NotifyRoomPlayerDressing) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type NotifyRoomPlayerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateList []*PlayerBaseView `protobuf:"bytes,1,rep,name=update_list,json=updateList,proto3" json:"update_list"`
	RemoveList []uint32          `protobuf:"varint,2,rep,packed,name=remove_list,json=removeList,proto3" json:"remove_list"`
	OwnerId    uint32            `protobuf:"varint,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id"`
	RobotCount uint32            `protobuf:"varint,4,opt,name=robot_count,json=robotCount,proto3" json:"robot_count"`
	PlayerList []*PlayerBaseView `protobuf:"bytes,5,rep,name=player_list,json=playerList,proto3" json:"player_list"`
	Seq        uint32            `protobuf:"varint,6,opt,name=seq,proto3" json:"seq"`
}

func (x *NotifyRoomPlayerUpdate) Reset() {
	*x = NotifyRoomPlayerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerUpdate) ProtoMessage() {}

func (x *NotifyRoomPlayerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerUpdate.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{5}
}

func (x *NotifyRoomPlayerUpdate) GetUpdateList() []*PlayerBaseView {
	if x != nil {
		return x.UpdateList
	}
	return nil
}

func (x *NotifyRoomPlayerUpdate) GetRemoveList() []uint32 {
	if x != nil {
		return x.RemoveList
	}
	return nil
}

func (x *NotifyRoomPlayerUpdate) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *NotifyRoomPlayerUpdate) GetRobotCount() uint32 {
	if x != nil {
		return x.RobotCount
	}
	return 0
}

func (x *NotifyRoomPlayerUpdate) GetPlayerList() []*PlayerBaseView {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

func (x *NotifyRoomPlayerUpdate) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type NotifyRoomKickOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyRoomKickOut) Reset() {
	*x = NotifyRoomKickOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomKickOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomKickOut) ProtoMessage() {}

func (x *NotifyRoomKickOut) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomKickOut.ProtoReflect.Descriptor instead.
func (*NotifyRoomKickOut) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{6}
}

type NotifyFriendStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId    uint32              `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
	ActiveState *AccountActiveState `protobuf:"bytes,2,opt,name=active_state,json=activeState,proto3" json:"active_state"`
}

func (x *NotifyFriendStateChange) Reset() {
	*x = NotifyFriendStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyFriendStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFriendStateChange) ProtoMessage() {}

func (x *NotifyFriendStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFriendStateChange.ProtoReflect.Descriptor instead.
func (*NotifyFriendStateChange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{7}
}

func (x *NotifyFriendStateChange) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *NotifyFriendStateChange) GetActiveState() *AccountActiveState {
	if x != nil {
		return x.ActiveState
	}
	return nil
}

type NotifyFriendViewChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32          `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
	Base     *PlayerBaseView `protobuf:"bytes,2,opt,name=base,proto3" json:"base"`
}

func (x *NotifyFriendViewChange) Reset() {
	*x = NotifyFriendViewChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyFriendViewChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFriendViewChange) ProtoMessage() {}

func (x *NotifyFriendViewChange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFriendViewChange.ProtoReflect.Descriptor instead.
func (*NotifyFriendViewChange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{8}
}

func (x *NotifyFriendViewChange) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *NotifyFriendViewChange) GetBase() *PlayerBaseView {
	if x != nil {
		return x.Base
	}
	return nil
}

type NotifyFriendChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Type      uint32  `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Friend    *Friend `protobuf:"bytes,3,opt,name=friend,proto3" json:"friend"`
}

func (x *NotifyFriendChange) Reset() {
	*x = NotifyFriendChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyFriendChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFriendChange) ProtoMessage() {}

func (x *NotifyFriendChange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFriendChange.ProtoReflect.Descriptor instead.
func (*NotifyFriendChange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{9}
}

func (x *NotifyFriendChange) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyFriendChange) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyFriendChange) GetFriend() *Friend {
	if x != nil {
		return x.Friend
	}
	return nil
}

type NotifyNewFriendApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ApplyTime uint32 `protobuf:"varint,2,opt,name=apply_time,json=applyTime,proto3" json:"apply_time"`
	RemovedId uint32 `protobuf:"varint,3,opt,name=removed_id,json=removedId,proto3" json:"removed_id"`
}

func (x *NotifyNewFriendApply) Reset() {
	*x = NotifyNewFriendApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNewFriendApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNewFriendApply) ProtoMessage() {}

func (x *NotifyNewFriendApply) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNewFriendApply.ProtoReflect.Descriptor instead.
func (*NotifyNewFriendApply) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{10}
}

func (x *NotifyNewFriendApply) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyNewFriendApply) GetApplyTime() uint32 {
	if x != nil {
		return x.ApplyTime
	}
	return 0
}

func (x *NotifyNewFriendApply) GetRemovedId() uint32 {
	if x != nil {
		return x.RemovedId
	}
	return 0
}

type NotifyClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  *PlayerBaseView `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender"`
	Type    uint32          `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Content string          `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
}

func (x *NotifyClientMessage) Reset() {
	*x = NotifyClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyClientMessage) ProtoMessage() {}

func (x *NotifyClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyClientMessage.ProtoReflect.Descriptor instead.
func (*NotifyClientMessage) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{11}
}

func (x *NotifyClientMessage) GetSender() *PlayerBaseView {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *NotifyClientMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyClientMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type NotifyAccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Update *AccountUpdate `protobuf:"bytes,1,opt,name=update,proto3" json:"update"`
}

func (x *NotifyAccountUpdate) Reset() {
	*x = NotifyAccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountUpdate) ProtoMessage() {}

func (x *NotifyAccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAccountUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{12}
}

func (x *NotifyAccountUpdate) GetUpdate() *AccountUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

type NotifyAnotherLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyAnotherLogin) Reset() {
	*x = NotifyAnotherLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAnotherLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAnotherLogin) ProtoMessage() {}

func (x *NotifyAnotherLogin) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAnotherLogin.ProtoReflect.Descriptor instead.
func (*NotifyAnotherLogin) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{13}
}

type NotifyAccountLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyAccountLogout) Reset() {
	*x = NotifyAccountLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountLogout) ProtoMessage() {}

func (x *NotifyAccountLogout) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountLogout.ProtoReflect.Descriptor instead.
func (*NotifyAccountLogout) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{14}
}

type NotifyAnnouncementUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateList []*NotifyAnnouncementUpdate_AnnouncementUpdate `protobuf:"bytes,1,rep,name=update_list,json=updateList,proto3" json:"update_list"`
}

func (x *NotifyAnnouncementUpdate) Reset() {
	*x = NotifyAnnouncementUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAnnouncementUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAnnouncementUpdate) ProtoMessage() {}

func (x *NotifyAnnouncementUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAnnouncementUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAnnouncementUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{15}
}

func (x *NotifyAnnouncementUpdate) GetUpdateList() []*NotifyAnnouncementUpdate_AnnouncementUpdate {
	if x != nil {
		return x.UpdateList
	}
	return nil
}

type NotifyNewMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mail *Mail `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail"`
}

func (x *NotifyNewMail) Reset() {
	*x = NotifyNewMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNewMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNewMail) ProtoMessage() {}

func (x *NotifyNewMail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNewMail.ProtoReflect.Descriptor instead.
func (*NotifyNewMail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{16}
}

func (x *NotifyNewMail) GetMail() *Mail {
	if x != nil {
		return x.Mail
	}
	return nil
}

type NotifyDeleteMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailIdList []uint32 `protobuf:"varint,1,rep,packed,name=mail_id_list,json=mailIdList,proto3" json:"mail_id_list"`
}

func (x *NotifyDeleteMail) Reset() {
	*x = NotifyDeleteMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyDeleteMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyDeleteMail) ProtoMessage() {}

func (x *NotifyDeleteMail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyDeleteMail.ProtoReflect.Descriptor instead.
func (*NotifyDeleteMail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{17}
}

func (x *NotifyDeleteMail) GetMailIdList() []uint32 {
	if x != nil {
		return x.MailIdList
	}
	return nil
}

type NotifyReviveCoinUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasGained bool `protobuf:"varint,1,opt,name=has_gained,json=hasGained,proto3" json:"has_gained"`
}

func (x *NotifyReviveCoinUpdate) Reset() {
	*x = NotifyReviveCoinUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyReviveCoinUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyReviveCoinUpdate) ProtoMessage() {}

func (x *NotifyReviveCoinUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyReviveCoinUpdate.ProtoReflect.Descriptor instead.
func (*NotifyReviveCoinUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{18}
}

func (x *NotifyReviveCoinUpdate) GetHasGained() bool {
	if x != nil {
		return x.HasGained
	}
	return false
}

type NotifyDailyTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses        []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
	MaxDailyTaskCount uint32          `protobuf:"varint,2,opt,name=max_daily_task_count,json=maxDailyTaskCount,proto3" json:"max_daily_task_count"`
	RefreshCount      uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count"`
}

func (x *NotifyDailyTaskUpdate) Reset() {
	*x = NotifyDailyTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyDailyTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyDailyTaskUpdate) ProtoMessage() {}

func (x *NotifyDailyTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyDailyTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyDailyTaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{19}
}

func (x *NotifyDailyTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *NotifyDailyTaskUpdate) GetMaxDailyTaskCount() uint32 {
	if x != nil {
		return x.MaxDailyTaskCount
	}
	return 0
}

func (x *NotifyDailyTaskUpdate) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

type NotifyActivityTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
}

func (x *NotifyActivityTaskUpdate) Reset() {
	*x = NotifyActivityTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityTaskUpdate) ProtoMessage() {}

func (x *NotifyActivityTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyActivityTaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{20}
}

func (x *NotifyActivityTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

type NotifyActivityPeriodTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
}

func (x *NotifyActivityPeriodTaskUpdate) Reset() {
	*x = NotifyActivityPeriodTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityPeriodTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityPeriodTaskUpdate) ProtoMessage() {}

func (x *NotifyActivityPeriodTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityPeriodTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyActivityPeriodTaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{21}
}

func (x *NotifyActivityPeriodTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

type NotifyAccountRandomTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
}

func (x *NotifyAccountRandomTaskUpdate) Reset() {
	*x = NotifyAccountRandomTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountRandomTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountRandomTaskUpdate) ProtoMessage() {}

func (x *NotifyAccountRandomTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountRandomTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAccountRandomTaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{22}
}

func (x *NotifyAccountRandomTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

type NotifyActivitySegmentTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*SegmentTaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
}

func (x *NotifyActivitySegmentTaskUpdate) Reset() {
	*x = NotifyActivitySegmentTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivitySegmentTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivitySegmentTaskUpdate) ProtoMessage() {}

func (x *NotifyActivitySegmentTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivitySegmentTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyActivitySegmentTaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{23}
}

func (x *NotifyActivitySegmentTaskUpdate) GetProgresses() []*SegmentTaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

type NotifyActivityUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*NotifyActivityUpdate_FeedActivityData `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *NotifyActivityUpdate) Reset() {
	*x = NotifyActivityUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityUpdate) ProtoMessage() {}

func (x *NotifyActivityUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityUpdate.ProtoReflect.Descriptor instead.
func (*NotifyActivityUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{24}
}

func (x *NotifyActivityUpdate) GetList() []*NotifyActivityUpdate_FeedActivityData {
	if x != nil {
		return x.List
	}
	return nil
}

type NotifyAccountChallengeTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses     []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
	Level          uint32          `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	RefreshCount   uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count"`
	MatchCount     uint32          `protobuf:"varint,4,opt,name=match_count,json=matchCount,proto3" json:"match_count"`
	TicketId       uint32          `protobuf:"varint,5,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id"`
	RewardedSeason []uint32        `protobuf:"varint,6,rep,packed,name=rewarded_season,json=rewardedSeason,proto3" json:"rewarded_season"`
}

func (x *NotifyAccountChallengeTaskUpdate) Reset() {
	*x = NotifyAccountChallengeTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountChallengeTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountChallengeTaskUpdate) ProtoMessage() {}

func (x *NotifyAccountChallengeTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountChallengeTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAccountChallengeTaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{25}
}

func (x *NotifyAccountChallengeTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *NotifyAccountChallengeTaskUpdate) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *NotifyAccountChallengeTaskUpdate) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

func (x *NotifyAccountChallengeTaskUpdate) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *NotifyAccountChallengeTaskUpdate) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *NotifyAccountChallengeTaskUpdate) GetRewardedSeason() []uint32 {
	if x != nil {
		return x.RewardedSeason
	}
	return nil
}

type NotifyNewComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyNewComment) Reset() {
	*x = NotifyNewComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNewComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNewComment) ProtoMessage() {}

func (x *NotifyNewComment) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNewComment.ProtoReflect.Descriptor instead.
func (*NotifyNewComment) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{26}
}

type NotifyRollingNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice []*RollingNotice `protobuf:"bytes,1,rep,name=notice,proto3" json:"notice"`
}

func (x *NotifyRollingNotice) Reset() {
	*x = NotifyRollingNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRollingNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRollingNotice) ProtoMessage() {}

func (x *NotifyRollingNotice) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRollingNotice.ProtoReflect.Descriptor instead.
func (*NotifyRollingNotice) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{27}
}

func (x *NotifyRollingNotice) GetNotice() []*RollingNotice {
	if x != nil {
		return x.Notice
	}
	return nil
}

type NotifyGiftSendRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyGiftSendRefresh) Reset() {
	*x = NotifyGiftSendRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGiftSendRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGiftSendRefresh) ProtoMessage() {}

func (x *NotifyGiftSendRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGiftSendRefresh.ProtoReflect.Descriptor instead.
func (*NotifyGiftSendRefresh) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{28}
}

type NotifyShopUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopInfo *ShopInfo `protobuf:"bytes,1,opt,name=shop_info,json=shopInfo,proto3" json:"shop_info"`
}

func (x *NotifyShopUpdate) Reset() {
	*x = NotifyShopUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyShopUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyShopUpdate) ProtoMessage() {}

func (x *NotifyShopUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyShopUpdate.ProtoReflect.Descriptor instead.
func (*NotifyShopUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{29}
}

func (x *NotifyShopUpdate) GetShopInfo() *ShopInfo {
	if x != nil {
		return x.ShopInfo
	}
	return nil
}

type NotifyVipLevelChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GiftLimit           uint32  `protobuf:"varint,1,opt,name=gift_limit,json=giftLimit,proto3" json:"gift_limit"`
	FriendMaxCount      uint32  `protobuf:"varint,2,opt,name=friend_max_count,json=friendMaxCount,proto3" json:"friend_max_count"`
	ZhpFreeRefreshLimit uint32  `protobuf:"varint,3,opt,name=zhp_free_refresh_limit,json=zhpFreeRefreshLimit,proto3" json:"zhp_free_refresh_limit"`
	ZhpCostRefreshLimit uint32  `protobuf:"varint,4,opt,name=zhp_cost_refresh_limit,json=zhpCostRefreshLimit,proto3" json:"zhp_cost_refresh_limit"`
	BuddyBonus          float32 `protobuf:"fixed32,5,opt,name=buddy_bonus,json=buddyBonus,proto3" json:"buddy_bonus"`
	RecordCollectLimit  uint32  `protobuf:"varint,6,opt,name=record_collect_limit,json=recordCollectLimit,proto3" json:"record_collect_limit"`
}

func (x *NotifyVipLevelChange) Reset() {
	*x = NotifyVipLevelChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyVipLevelChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyVipLevelChange) ProtoMessage() {}

func (x *NotifyVipLevelChange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyVipLevelChange.ProtoReflect.Descriptor instead.
func (*NotifyVipLevelChange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{30}
}

func (x *NotifyVipLevelChange) GetGiftLimit() uint32 {
	if x != nil {
		return x.GiftLimit
	}
	return 0
}

func (x *NotifyVipLevelChange) GetFriendMaxCount() uint32 {
	if x != nil {
		return x.FriendMaxCount
	}
	return 0
}

func (x *NotifyVipLevelChange) GetZhpFreeRefreshLimit() uint32 {
	if x != nil {
		return x.ZhpFreeRefreshLimit
	}
	return 0
}

func (x *NotifyVipLevelChange) GetZhpCostRefreshLimit() uint32 {
	if x != nil {
		return x.ZhpCostRefreshLimit
	}
	return 0
}

func (x *NotifyVipLevelChange) GetBuddyBonus() float32 {
	if x != nil {
		return x.BuddyBonus
	}
	return 0
}

func (x *NotifyVipLevelChange) GetRecordCollectLimit() uint32 {
	if x != nil {
		return x.RecordCollectLimit
	}
	return 0
}

type NotifyServerSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *ServerSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings"`
}

func (x *NotifyServerSetting) Reset() {
	*x = NotifyServerSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyServerSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyServerSetting) ProtoMessage() {}

func (x *NotifyServerSetting) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyServerSetting.ProtoReflect.Descriptor instead.
func (*NotifyServerSetting) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{31}
}

func (x *NotifyServerSetting) GetSettings() *ServerSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type NotifyPayResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayResult      uint32                            `protobuf:"varint,1,opt,name=pay_result,json=payResult,proto3" json:"pay_result"`
	OrderId        string                            `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	GoodsId        uint32                            `protobuf:"varint,3,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	NewMonthTicket uint32                            `protobuf:"varint,4,opt,name=new_month_ticket,json=newMonthTicket,proto3" json:"new_month_ticket"`
	ResourceModify []*NotifyPayResult_ResourceModify `protobuf:"bytes,5,rep,name=resource_modify,json=resourceModify,proto3" json:"resource_modify"`
}

func (x *NotifyPayResult) Reset() {
	*x = NotifyPayResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPayResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPayResult) ProtoMessage() {}

func (x *NotifyPayResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPayResult.ProtoReflect.Descriptor instead.
func (*NotifyPayResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{32}
}

func (x *NotifyPayResult) GetPayResult() uint32 {
	if x != nil {
		return x.PayResult
	}
	return 0
}

func (x *NotifyPayResult) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *NotifyPayResult) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *NotifyPayResult) GetNewMonthTicket() uint32 {
	if x != nil {
		return x.NewMonthTicket
	}
	return 0
}

func (x *NotifyPayResult) GetResourceModify() []*NotifyPayResult_ResourceModify {
	if x != nil {
		return x.ResourceModify
	}
	return nil
}

type NotifyCustomContestAccountMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId  uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	AccountId uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Sender    string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender"`
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content"`
	Verified  uint32 `protobuf:"varint,5,opt,name=verified,proto3" json:"verified"`
}

func (x *NotifyCustomContestAccountMsg) Reset() {
	*x = NotifyCustomContestAccountMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCustomContestAccountMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCustomContestAccountMsg) ProtoMessage() {}

func (x *NotifyCustomContestAccountMsg) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCustomContestAccountMsg.ProtoReflect.Descriptor instead.
func (*NotifyCustomContestAccountMsg) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{33}
}

func (x *NotifyCustomContestAccountMsg) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyCustomContestAccountMsg) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyCustomContestAccountMsg) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *NotifyCustomContestAccountMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotifyCustomContestAccountMsg) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

type NotifyCustomContestSystemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId  uint32                      `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	Type      uint32                      `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Uuid      string                      `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid"`
	GameStart *CustomizedContestGameStart `protobuf:"bytes,4,opt,name=game_start,json=gameStart,proto3" json:"game_start"`
	GameEnd   *CustomizedContestGameEnd   `protobuf:"bytes,5,opt,name=game_end,json=gameEnd,proto3" json:"game_end"`
}

func (x *NotifyCustomContestSystemMsg) Reset() {
	*x = NotifyCustomContestSystemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCustomContestSystemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCustomContestSystemMsg) ProtoMessage() {}

func (x *NotifyCustomContestSystemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCustomContestSystemMsg.ProtoReflect.Descriptor instead.
func (*NotifyCustomContestSystemMsg) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{34}
}

func (x *NotifyCustomContestSystemMsg) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyCustomContestSystemMsg) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyCustomContestSystemMsg) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *NotifyCustomContestSystemMsg) GetGameStart() *CustomizedContestGameStart {
	if x != nil {
		return x.GameStart
	}
	return nil
}

func (x *NotifyCustomContestSystemMsg) GetGameEnd() *CustomizedContestGameEnd {
	if x != nil {
		return x.GameEnd
	}
	return nil
}

type NotifyMatchTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid"`
}

func (x *NotifyMatchTimeout) Reset() {
	*x = NotifyMatchTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMatchTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMatchTimeout) ProtoMessage() {}

func (x *NotifyMatchTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMatchTimeout.ProtoReflect.Descriptor instead.
func (*NotifyMatchTimeout) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{35}
}

func (x *NotifyMatchTimeout) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type NotifyCustomContestState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	State    uint32 `protobuf:"varint,2,opt,name=state,proto3" json:"state"`
}

func (x *NotifyCustomContestState) Reset() {
	*x = NotifyCustomContestState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCustomContestState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCustomContestState) ProtoMessage() {}

func (x *NotifyCustomContestState) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCustomContestState.ProtoReflect.Descriptor instead.
func (*NotifyCustomContestState) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{36}
}

func (x *NotifyCustomContestState) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyCustomContestState) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type NotifyActivityChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewActivities []*Activity `protobuf:"bytes,1,rep,name=new_activities,json=newActivities,proto3" json:"new_activities"`
	EndActivities []uint32    `protobuf:"varint,2,rep,packed,name=end_activities,json=endActivities,proto3" json:"end_activities"`
}

func (x *NotifyActivityChange) Reset() {
	*x = NotifyActivityChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityChange) ProtoMessage() {}

func (x *NotifyActivityChange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityChange.ProtoReflect.Descriptor instead.
func (*NotifyActivityChange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{37}
}

func (x *NotifyActivityChange) GetNewActivities() []*Activity {
	if x != nil {
		return x.NewActivities
	}
	return nil
}

func (x *NotifyActivityChange) GetEndActivities() []uint32 {
	if x != nil {
		return x.EndActivities
	}
	return nil
}

type NotifyAFKResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	BanEndTime uint32 `protobuf:"varint,2,opt,name=ban_end_time,json=banEndTime,proto3" json:"ban_end_time"`
	GameUuid   string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
}

func (x *NotifyAFKResult) Reset() {
	*x = NotifyAFKResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAFKResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAFKResult) ProtoMessage() {}

func (x *NotifyAFKResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAFKResult.ProtoReflect.Descriptor instead.
func (*NotifyAFKResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{38}
}

func (x *NotifyAFKResult) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyAFKResult) GetBanEndTime() uint32 {
	if x != nil {
		return x.BanEndTime
	}
	return 0
}

func (x *NotifyAFKResult) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

type NotifyLoginQueueFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyLoginQueueFinished) Reset() {
	*x = NotifyLoginQueueFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyLoginQueueFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyLoginQueueFinished) ProtoMessage() {}

func (x *NotifyLoginQueueFinished) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyLoginQueueFinished.ProtoReflect.Descriptor instead.
func (*NotifyLoginQueueFinished) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{39}
}

type NotifyGameFinishRewardV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModeId        uint32                                  `protobuf:"varint,1,opt,name=mode_id,json=modeId,proto3" json:"mode_id"`
	LevelChange   *NotifyGameFinishRewardV2_LevelChange   `protobuf:"bytes,2,opt,name=level_change,json=levelChange,proto3" json:"level_change"`
	MatchChest    *NotifyGameFinishRewardV2_MatchChest    `protobuf:"bytes,3,opt,name=match_chest,json=matchChest,proto3" json:"match_chest"`
	MainCharacter *NotifyGameFinishRewardV2_MainCharacter `protobuf:"bytes,4,opt,name=main_character,json=mainCharacter,proto3" json:"main_character"`
	CharacterGift *NotifyGameFinishRewardV2_CharacterGift `protobuf:"bytes,5,opt,name=character_gift,json=characterGift,proto3" json:"character_gift"`
}

func (x *NotifyGameFinishRewardV2) Reset() {
	*x = NotifyGameFinishRewardV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishRewardV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishRewardV2) ProtoMessage() {}

func (x *NotifyGameFinishRewardV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishRewardV2.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishRewardV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{40}
}

func (x *NotifyGameFinishRewardV2) GetModeId() uint32 {
	if x != nil {
		return x.ModeId
	}
	return 0
}

func (x *NotifyGameFinishRewardV2) GetLevelChange() *NotifyGameFinishRewardV2_LevelChange {
	if x != nil {
		return x.LevelChange
	}
	return nil
}

func (x *NotifyGameFinishRewardV2) GetMatchChest() *NotifyGameFinishRewardV2_MatchChest {
	if x != nil {
		return x.MatchChest
	}
	return nil
}

func (x *NotifyGameFinishRewardV2) GetMainCharacter() *NotifyGameFinishRewardV2_MainCharacter {
	if x != nil {
		return x.MainCharacter
	}
	return nil
}

func (x *NotifyGameFinishRewardV2) GetCharacterGift() *NotifyGameFinishRewardV2_CharacterGift {
	if x != nil {
		return x.CharacterGift
	}
	return nil
}

type NotifyActivityRewardV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityReward []*NotifyActivityRewardV2_ActivityReward `protobuf:"bytes,1,rep,name=activity_reward,json=activityReward,proto3" json:"activity_reward"`
}

func (x *NotifyActivityRewardV2) Reset() {
	*x = NotifyActivityRewardV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityRewardV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityRewardV2) ProtoMessage() {}

func (x *NotifyActivityRewardV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityRewardV2.ProtoReflect.Descriptor instead.
func (*NotifyActivityRewardV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{41}
}

func (x *NotifyActivityRewardV2) GetActivityReward() []*NotifyActivityRewardV2_ActivityReward {
	if x != nil {
		return x.ActivityReward
	}
	return nil
}

type NotifyActivityPointV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityPoints []*NotifyActivityPointV2_ActivityPoint `protobuf:"bytes,1,rep,name=activity_points,json=activityPoints,proto3" json:"activity_points"`
}

func (x *NotifyActivityPointV2) Reset() {
	*x = NotifyActivityPointV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityPointV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityPointV2) ProtoMessage() {}

func (x *NotifyActivityPointV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityPointV2.ProtoReflect.Descriptor instead.
func (*NotifyActivityPointV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{42}
}

func (x *NotifyActivityPointV2) GetActivityPoints() []*NotifyActivityPointV2_ActivityPoint {
	if x != nil {
		return x.ActivityPoints
	}
	return nil
}

type NotifyLeaderboardPointV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderboardPoints []*NotifyLeaderboardPointV2_LeaderboardPoint `protobuf:"bytes,1,rep,name=leaderboard_points,json=leaderboardPoints,proto3" json:"leaderboard_points"`
}

func (x *NotifyLeaderboardPointV2) Reset() {
	*x = NotifyLeaderboardPointV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyLeaderboardPointV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyLeaderboardPointV2) ProtoMessage() {}

func (x *NotifyLeaderboardPointV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyLeaderboardPointV2.ProtoReflect.Descriptor instead.
func (*NotifyLeaderboardPointV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{43}
}

func (x *NotifyLeaderboardPointV2) GetLeaderboardPoints() []*NotifyLeaderboardPointV2_LeaderboardPoint {
	if x != nil {
		return x.LeaderboardPoints
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	U32Params []uint32 `protobuf:"varint,2,rep,packed,name=u32_params,json=u32Params,proto3" json:"u32_params"`
	StrParams []string `protobuf:"bytes,3,rep,name=str_params,json=strParams,proto3" json:"str_params"`
	JsonParam string   `protobuf:"bytes,4,opt,name=json_param,json=jsonParam,proto3" json:"json_param"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{44}
}

func (x *Error) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetU32Params() []uint32 {
	if x != nil {
		return x.U32Params
	}
	return nil
}

func (x *Error) GetStrParams() []string {
	if x != nil {
		return x.StrParams
	}
	return nil
}

func (x *Error) GetJsonParam() string {
	if x != nil {
		return x.JsonParam
	}
	return ""
}

type Wrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *Wrapper) Reset() {
	*x = Wrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wrapper) ProtoMessage() {}

func (x *Wrapper) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wrapper.ProtoReflect.Descriptor instead.
func (*Wrapper) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{45}
}

func (x *Wrapper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Wrapper) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type NetworkEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Family  string `protobuf:"bytes,1,opt,name=family,proto3" json:"family"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
	Port    uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port"`
}

func (x *NetworkEndpoint) Reset() {
	*x = NetworkEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEndpoint) ProtoMessage() {}

func (x *NetworkEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEndpoint.ProtoReflect.Descriptor instead.
func (*NetworkEndpoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{46}
}

func (x *NetworkEndpoint) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *NetworkEndpoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NetworkEndpoint) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ReqCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqCommon) Reset() {
	*x = ReqCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCommon) ProtoMessage() {}

func (x *ReqCommon) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCommon.ProtoReflect.Descriptor instead.
func (*ReqCommon) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{47}
}

type ResCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResCommon) Reset() {
	*x = ResCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCommon) ProtoMessage() {}

func (x *ResCommon) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCommon.ProtoReflect.Descriptor instead.
func (*ResCommon) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{48}
}

func (x *ResCommon) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ResAccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error         `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Update *AccountUpdate `protobuf:"bytes,2,opt,name=update,proto3" json:"update"`
}

func (x *ResAccountUpdate) Reset() {
	*x = ResAccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountUpdate) ProtoMessage() {}

func (x *ResAccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountUpdate.ProtoReflect.Descriptor instead.
func (*ResAccountUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{49}
}

func (x *ResAccountUpdate) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountUpdate) GetUpdate() *AccountUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

type AntiAddiction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineDuration uint32 `protobuf:"varint,1,opt,name=online_duration,json=onlineDuration,proto3" json:"online_duration"`
}

func (x *AntiAddiction) Reset() {
	*x = AntiAddiction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntiAddiction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiAddiction) ProtoMessage() {}

func (x *AntiAddiction) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiAddiction.ProtoReflect.Descriptor instead.
func (*AntiAddiction) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{50}
}

func (x *AntiAddiction) GetOnlineDuration() uint32 {
	if x != nil {
		return x.OnlineDuration
	}
	return 0
}

type AccountMahjongStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinalPositionCounts []uint32                                 `protobuf:"varint,1,rep,packed,name=final_position_counts,json=finalPositionCounts,proto3" json:"final_position_counts"`
	RecentRound         *AccountMahjongStatistic_RoundSummary    `protobuf:"bytes,2,opt,name=recent_round,json=recentRound,proto3" json:"recent_round"`
	RecentHu            *AccountMahjongStatistic_HuSummary       `protobuf:"bytes,3,opt,name=recent_hu,json=recentHu,proto3" json:"recent_hu"`
	HighestHu           *AccountMahjongStatistic_HighestHuRecord `protobuf:"bytes,4,opt,name=highest_hu,json=highestHu,proto3" json:"highest_hu"`
	Recent_20HuSummary  *AccountMahjongStatistic_Liqi20Summary   `protobuf:"bytes,6,opt,name=recent_20_hu_summary,json=recent20HuSummary,proto3" json:"recent_20_hu_summary"`
	Recent_10HuSummary  *AccountMahjongStatistic_LiQi10Summary   `protobuf:"bytes,7,opt,name=recent_10_hu_summary,json=recent10HuSummary,proto3" json:"recent_10_hu_summary"`
	Recent_10GameResult []*AccountMahjongStatistic_GameResult    `protobuf:"bytes,8,rep,name=recent_10_game_result,json=recent10GameResult,proto3" json:"recent_10_game_result"`
}

func (x *AccountMahjongStatistic) Reset() {
	*x = AccountMahjongStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic) ProtoMessage() {}

func (x *AccountMahjongStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{51}
}

func (x *AccountMahjongStatistic) GetFinalPositionCounts() []uint32 {
	if x != nil {
		return x.FinalPositionCounts
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecentRound() *AccountMahjongStatistic_RoundSummary {
	if x != nil {
		return x.RecentRound
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecentHu() *AccountMahjongStatistic_HuSummary {
	if x != nil {
		return x.RecentHu
	}
	return nil
}

func (x *AccountMahjongStatistic) GetHighestHu() *AccountMahjongStatistic_HighestHuRecord {
	if x != nil {
		return x.HighestHu
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecent_20HuSummary() *AccountMahjongStatistic_Liqi20Summary {
	if x != nil {
		return x.Recent_20HuSummary
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecent_10HuSummary() *AccountMahjongStatistic_LiQi10Summary {
	if x != nil {
		return x.Recent_10HuSummary
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecent_10GameResult() []*AccountMahjongStatistic_GameResult {
	if x != nil {
		return x.Recent_10GameResult
	}
	return nil
}

type AccountStatisticData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MahjongCategory uint32                   `protobuf:"varint,1,opt,name=mahjong_category,json=mahjongCategory,proto3" json:"mahjong_category"`
	GameCategory    uint32                   `protobuf:"varint,2,opt,name=game_category,json=gameCategory,proto3" json:"game_category"`
	Statistic       *AccountMahjongStatistic `protobuf:"bytes,3,opt,name=statistic,proto3" json:"statistic"`
	GameType        uint32                   `protobuf:"varint,4,opt,name=game_type,json=gameType,proto3" json:"game_type"`
}

func (x *AccountStatisticData) Reset() {
	*x = AccountStatisticData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticData) ProtoMessage() {}

func (x *AccountStatisticData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticData.ProtoReflect.Descriptor instead.
func (*AccountStatisticData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{52}
}

func (x *AccountStatisticData) GetMahjongCategory() uint32 {
	if x != nil {
		return x.MahjongCategory
	}
	return 0
}

func (x *AccountStatisticData) GetGameCategory() uint32 {
	if x != nil {
		return x.GameCategory
	}
	return 0
}

func (x *AccountStatisticData) GetStatistic() *AccountMahjongStatistic {
	if x != nil {
		return x.Statistic
	}
	return nil
}

func (x *AccountStatisticData) GetGameType() uint32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

type AccountLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Score uint32 `protobuf:"varint,2,opt,name=score,proto3" json:"score"`
}

func (x *AccountLevel) Reset() {
	*x = AccountLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLevel) ProtoMessage() {}

func (x *AccountLevel) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLevel.ProtoReflect.Descriptor instead.
func (*AccountLevel) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{53}
}

func (x *AccountLevel) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountLevel) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type ViewSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot       uint32   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot"`
	ItemId     uint32   `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Type       uint32   `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
	ItemIdList []uint32 `protobuf:"varint,4,rep,packed,name=item_id_list,json=itemIdList,proto3" json:"item_id_list"`
}

func (x *ViewSlot) Reset() {
	*x = ViewSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewSlot) ProtoMessage() {}

func (x *ViewSlot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewSlot.ProtoReflect.Descriptor instead.
func (*ViewSlot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{54}
}

func (x *ViewSlot) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ViewSlot) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ViewSlot) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ViewSlot) GetItemIdList() []uint32 {
	if x != nil {
		return x.ItemIdList
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId          uint32                        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Nickname           string                        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname"`
	LoginTime          uint32                        `protobuf:"varint,3,opt,name=login_time,json=loginTime,proto3" json:"login_time"`
	LogoutTime         uint32                        `protobuf:"varint,4,opt,name=logout_time,json=logoutTime,proto3" json:"logout_time"`
	RoomId             uint32                        `protobuf:"varint,5,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	AntiAddiction      *AntiAddiction                `protobuf:"bytes,6,opt,name=anti_addiction,json=antiAddiction,proto3" json:"anti_addiction"`
	Title              uint32                        `protobuf:"varint,7,opt,name=title,proto3" json:"title"`
	Signature          string                        `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature"`
	Email              string                        `protobuf:"bytes,9,opt,name=email,proto3" json:"email"`
	EmailVerify        uint32                        `protobuf:"varint,10,opt,name=email_verify,json=emailVerify,proto3" json:"email_verify"`
	Gold               uint32                        `protobuf:"varint,11,opt,name=gold,proto3" json:"gold"`
	Diamond            uint32                        `protobuf:"varint,12,opt,name=diamond,proto3" json:"diamond"`
	AvatarId           uint32                        `protobuf:"varint,13,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id"`
	Vip                uint32                        `protobuf:"varint,14,opt,name=vip,proto3" json:"vip"`
	Birthday           int32                         `protobuf:"varint,15,opt,name=birthday,proto3" json:"birthday"`
	Phone              string                        `protobuf:"bytes,16,opt,name=phone,proto3" json:"phone"`
	PhoneVerify        uint32                        `protobuf:"varint,17,opt,name=phone_verify,json=phoneVerify,proto3" json:"phone_verify"`
	PlatformDiamond    []*Account_PlatformDiamond    `protobuf:"bytes,18,rep,name=platform_diamond,json=platformDiamond,proto3" json:"platform_diamond"`
	Level              *AccountLevel                 `protobuf:"bytes,21,opt,name=level,proto3" json:"level"`
	Level3             *AccountLevel                 `protobuf:"bytes,22,opt,name=level3,proto3" json:"level3"`
	AvatarFrame        uint32                        `protobuf:"varint,23,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame"`
	SkinTicket         uint32                        `protobuf:"varint,24,opt,name=skin_ticket,json=skinTicket,proto3" json:"skin_ticket"`
	PlatformSkinTicket []*Account_PlatformSkinTicket `protobuf:"bytes,25,rep,name=platform_skin_ticket,json=platformSkinTicket,proto3" json:"platform_skin_ticket"`
	Verified           uint32                        `protobuf:"varint,26,opt,name=verified,proto3" json:"verified"`
	ChallengeLevels    []*Account_ChallengeLevel     `protobuf:"bytes,27,rep,name=challenge_levels,json=challengeLevels,proto3" json:"challenge_levels"`
	AchievementCount   []*Account_AchievementCount   `protobuf:"bytes,28,rep,name=achievement_count,json=achievementCount,proto3" json:"achievement_count"`
	FrozenState        uint32                        `protobuf:"varint,29,opt,name=frozen_state,json=frozenState,proto3" json:"frozen_state"`
	LoadingImage       []uint32                      `protobuf:"varint,30,rep,packed,name=loading_image,json=loadingImage,proto3" json:"loading_image"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{55}
}

func (x *Account) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Account) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Account) GetLoginTime() uint32 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *Account) GetLogoutTime() uint32 {
	if x != nil {
		return x.LogoutTime
	}
	return 0
}

func (x *Account) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Account) GetAntiAddiction() *AntiAddiction {
	if x != nil {
		return x.AntiAddiction
	}
	return nil
}

func (x *Account) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *Account) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Account) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Account) GetEmailVerify() uint32 {
	if x != nil {
		return x.EmailVerify
	}
	return 0
}

func (x *Account) GetGold() uint32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *Account) GetDiamond() uint32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *Account) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *Account) GetVip() uint32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *Account) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *Account) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Account) GetPhoneVerify() uint32 {
	if x != nil {
		return x.PhoneVerify
	}
	return 0
}

func (x *Account) GetPlatformDiamond() []*Account_PlatformDiamond {
	if x != nil {
		return x.PlatformDiamond
	}
	return nil
}

func (x *Account) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *Account) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *Account) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *Account) GetSkinTicket() uint32 {
	if x != nil {
		return x.SkinTicket
	}
	return 0
}

func (x *Account) GetPlatformSkinTicket() []*Account_PlatformSkinTicket {
	if x != nil {
		return x.PlatformSkinTicket
	}
	return nil
}

func (x *Account) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *Account) GetChallengeLevels() []*Account_ChallengeLevel {
	if x != nil {
		return x.ChallengeLevels
	}
	return nil
}

func (x *Account) GetAchievementCount() []*Account_AchievementCount {
	if x != nil {
		return x.AchievementCount
	}
	return nil
}

func (x *Account) GetFrozenState() uint32 {
	if x != nil {
		return x.FrozenState
	}
	return 0
}

func (x *Account) GetLoadingImage() []uint32 {
	if x != nil {
		return x.LoadingImage
	}
	return nil
}

type AccountOwnerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlockCharacters []uint32 `protobuf:"varint,1,rep,packed,name=unlock_characters,json=unlockCharacters,proto3" json:"unlock_characters"`
}

func (x *AccountOwnerData) Reset() {
	*x = AccountOwnerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountOwnerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountOwnerData) ProtoMessage() {}

func (x *AccountOwnerData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountOwnerData.ProtoReflect.Descriptor instead.
func (*AccountOwnerData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{56}
}

func (x *AccountOwnerData) GetUnlockCharacters() []uint32 {
	if x != nil {
		return x.UnlockCharacters
	}
	return nil
}

type AccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numerical           []*AccountUpdate_NumericalUpdate      `protobuf:"bytes,1,rep,name=numerical,proto3" json:"numerical"`
	Character           *AccountUpdate_CharacterUpdate        `protobuf:"bytes,2,opt,name=character,proto3" json:"character"`
	Bag                 *BagUpdate                            `protobuf:"bytes,3,opt,name=bag,proto3" json:"bag"`
	Achievement         *AccountUpdate_AchievementUpdate      `protobuf:"bytes,4,opt,name=achievement,proto3" json:"achievement"`
	Shilian             *AccountShiLian                       `protobuf:"bytes,5,opt,name=shilian,proto3" json:"shilian"`
	DailyTask           *AccountUpdate_DailyTaskUpdate        `protobuf:"bytes,6,opt,name=daily_task,json=dailyTask,proto3" json:"daily_task"`
	Title               *AccountUpdate_TitleUpdate            `protobuf:"bytes,7,opt,name=title,proto3" json:"title"`
	NewRechargedList    []uint32                              `protobuf:"varint,8,rep,packed,name=new_recharged_list,json=newRechargedList,proto3" json:"new_recharged_list"`
	ActivityTask        *AccountUpdate_TaskUpdate             `protobuf:"bytes,9,opt,name=activity_task,json=activityTask,proto3" json:"activity_task"`
	ActivityFlipTask    *AccountUpdate_TaskUpdate             `protobuf:"bytes,10,opt,name=activity_flip_task,json=activityFlipTask,proto3" json:"activity_flip_task"`
	ActivityPeriodTask  *AccountUpdate_TaskUpdate             `protobuf:"bytes,11,opt,name=activity_period_task,json=activityPeriodTask,proto3" json:"activity_period_task"`
	ActivityRandomTask  *AccountUpdate_TaskUpdate             `protobuf:"bytes,12,opt,name=activity_random_task,json=activityRandomTask,proto3" json:"activity_random_task"`
	Challenge           *AccountUpdate_AccountChallengeUpdate `protobuf:"bytes,13,opt,name=challenge,proto3" json:"challenge"`
	AbMatch             *AccountUpdate_AccountABMatchUpdate   `protobuf:"bytes,14,opt,name=ab_match,json=abMatch,proto3" json:"ab_match"`
	Activity            *AccountActivityUpdate                `protobuf:"bytes,15,opt,name=activity,proto3" json:"activity"`
	ActivitySegmentTask *AccountUpdate_SegmentTaskUpdate      `protobuf:"bytes,16,opt,name=activity_segment_task,json=activitySegmentTask,proto3" json:"activity_segment_task"`
}

func (x *AccountUpdate) Reset() {
	*x = AccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate) ProtoMessage() {}

func (x *AccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57}
}

func (x *AccountUpdate) GetNumerical() []*AccountUpdate_NumericalUpdate {
	if x != nil {
		return x.Numerical
	}
	return nil
}

func (x *AccountUpdate) GetCharacter() *AccountUpdate_CharacterUpdate {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *AccountUpdate) GetBag() *BagUpdate {
	if x != nil {
		return x.Bag
	}
	return nil
}

func (x *AccountUpdate) GetAchievement() *AccountUpdate_AchievementUpdate {
	if x != nil {
		return x.Achievement
	}
	return nil
}

func (x *AccountUpdate) GetShilian() *AccountShiLian {
	if x != nil {
		return x.Shilian
	}
	return nil
}

func (x *AccountUpdate) GetDailyTask() *AccountUpdate_DailyTaskUpdate {
	if x != nil {
		return x.DailyTask
	}
	return nil
}

func (x *AccountUpdate) GetTitle() *AccountUpdate_TitleUpdate {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *AccountUpdate) GetNewRechargedList() []uint32 {
	if x != nil {
		return x.NewRechargedList
	}
	return nil
}

func (x *AccountUpdate) GetActivityTask() *AccountUpdate_TaskUpdate {
	if x != nil {
		return x.ActivityTask
	}
	return nil
}

func (x *AccountUpdate) GetActivityFlipTask() *AccountUpdate_TaskUpdate {
	if x != nil {
		return x.ActivityFlipTask
	}
	return nil
}

func (x *AccountUpdate) GetActivityPeriodTask() *AccountUpdate_TaskUpdate {
	if x != nil {
		return x.ActivityPeriodTask
	}
	return nil
}

func (x *AccountUpdate) GetActivityRandomTask() *AccountUpdate_TaskUpdate {
	if x != nil {
		return x.ActivityRandomTask
	}
	return nil
}

func (x *AccountUpdate) GetChallenge() *AccountUpdate_AccountChallengeUpdate {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *AccountUpdate) GetAbMatch() *AccountUpdate_AccountABMatchUpdate {
	if x != nil {
		return x.AbMatch
	}
	return nil
}

func (x *AccountUpdate) GetActivity() *AccountActivityUpdate {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *AccountUpdate) GetActivitySegmentTask() *AccountUpdate_SegmentTaskUpdate {
	if x != nil {
		return x.ActivitySegmentTask
	}
	return nil
}

type GameMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	ModeId     uint32 `protobuf:"varint,2,opt,name=mode_id,json=modeId,proto3" json:"mode_id"`
	ContestUid uint32 `protobuf:"varint,3,opt,name=contest_uid,json=contestUid,proto3" json:"contest_uid"`
}

func (x *GameMetaData) Reset() {
	*x = GameMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMetaData) ProtoMessage() {}

func (x *GameMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMetaData.ProtoReflect.Descriptor instead.
func (*GameMetaData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{58}
}

func (x *GameMetaData) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameMetaData) GetModeId() uint32 {
	if x != nil {
		return x.ModeId
	}
	return 0
}

func (x *GameMetaData) GetContestUid() uint32 {
	if x != nil {
		return x.ContestUid
	}
	return 0
}

type AccountPlayingGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUuid string        `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
	Category uint32        `protobuf:"varint,2,opt,name=category,proto3" json:"category"`
	Meta     *GameMetaData `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta"`
}

func (x *AccountPlayingGame) Reset() {
	*x = AccountPlayingGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountPlayingGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPlayingGame) ProtoMessage() {}

func (x *AccountPlayingGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPlayingGame.ProtoReflect.Descriptor instead.
func (*AccountPlayingGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{59}
}

func (x *AccountPlayingGame) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *AccountPlayingGame) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *AccountPlayingGame) GetMeta() *GameMetaData {
	if x != nil {
		return x.Meta
	}
	return nil
}

type AccountCacheView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheVersion uint32              `protobuf:"varint,1,opt,name=cache_version,json=cacheVersion,proto3" json:"cache_version"`
	AccountId    uint32              `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Nickname     string              `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
	LoginTime    uint32              `protobuf:"varint,4,opt,name=login_time,json=loginTime,proto3" json:"login_time"`
	LogoutTime   uint32              `protobuf:"varint,5,opt,name=logout_time,json=logoutTime,proto3" json:"logout_time"`
	IsOnline     bool                `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online"`
	RoomId       uint32              `protobuf:"varint,7,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	Title        uint32              `protobuf:"varint,8,opt,name=title,proto3" json:"title"`
	AvatarId     uint32              `protobuf:"varint,9,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id"`
	Vip          uint32              `protobuf:"varint,10,opt,name=vip,proto3" json:"vip"`
	Level        *AccountLevel       `protobuf:"bytes,11,opt,name=level,proto3" json:"level"`
	PlayingGame  *AccountPlayingGame `protobuf:"bytes,12,opt,name=playing_game,json=playingGame,proto3" json:"playing_game"`
	Level3       *AccountLevel       `protobuf:"bytes,13,opt,name=level3,proto3" json:"level3"`
	AvatarFrame  uint32              `protobuf:"varint,14,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame"`
	Verified     uint32              `protobuf:"varint,15,opt,name=verified,proto3" json:"verified"`
	BanDeadline  uint32              `protobuf:"varint,16,opt,name=ban_deadline,json=banDeadline,proto3" json:"ban_deadline"`
	CommentBan   uint32              `protobuf:"varint,17,opt,name=comment_ban,json=commentBan,proto3" json:"comment_ban"`
	BanState     uint32              `protobuf:"varint,18,opt,name=ban_state,json=banState,proto3" json:"ban_state"`
}

func (x *AccountCacheView) Reset() {
	*x = AccountCacheView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCacheView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCacheView) ProtoMessage() {}

func (x *AccountCacheView) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCacheView.ProtoReflect.Descriptor instead.
func (*AccountCacheView) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{60}
}

func (x *AccountCacheView) GetCacheVersion() uint32 {
	if x != nil {
		return x.CacheVersion
	}
	return 0
}

func (x *AccountCacheView) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountCacheView) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AccountCacheView) GetLoginTime() uint32 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *AccountCacheView) GetLogoutTime() uint32 {
	if x != nil {
		return x.LogoutTime
	}
	return 0
}

func (x *AccountCacheView) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *AccountCacheView) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *AccountCacheView) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *AccountCacheView) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *AccountCacheView) GetVip() uint32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *AccountCacheView) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *AccountCacheView) GetPlayingGame() *AccountPlayingGame {
	if x != nil {
		return x.PlayingGame
	}
	return nil
}

func (x *AccountCacheView) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *AccountCacheView) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *AccountCacheView) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *AccountCacheView) GetBanDeadline() uint32 {
	if x != nil {
		return x.BanDeadline
	}
	return 0
}

func (x *AccountCacheView) GetCommentBan() uint32 {
	if x != nil {
		return x.CommentBan
	}
	return 0
}

func (x *AccountCacheView) GetBanState() uint32 {
	if x != nil {
		return x.BanState
	}
	return 0
}

type PlayerBaseView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	AvatarId    uint32        `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id"`
	Title       uint32        `protobuf:"varint,3,opt,name=title,proto3" json:"title"`
	Nickname    string        `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname"`
	Level       *AccountLevel `protobuf:"bytes,5,opt,name=level,proto3" json:"level"`
	Level3      *AccountLevel `protobuf:"bytes,6,opt,name=level3,proto3" json:"level3"`
	AvatarFrame uint32        `protobuf:"varint,7,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame"`
	Verified    uint32        `protobuf:"varint,8,opt,name=verified,proto3" json:"verified"`
	IsBanned    uint32        `protobuf:"varint,9,opt,name=is_banned,json=isBanned,proto3" json:"is_banned"`
}

func (x *PlayerBaseView) Reset() {
	*x = PlayerBaseView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBaseView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBaseView) ProtoMessage() {}

func (x *PlayerBaseView) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBaseView.ProtoReflect.Descriptor instead.
func (*PlayerBaseView) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{61}
}

func (x *PlayerBaseView) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PlayerBaseView) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *PlayerBaseView) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *PlayerBaseView) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerBaseView) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *PlayerBaseView) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *PlayerBaseView) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *PlayerBaseView) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *PlayerBaseView) GetIsBanned() uint32 {
	if x != nil {
		return x.IsBanned
	}
	return 0
}

type PlayerGameView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	AvatarId    uint32        `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id"`
	Title       uint32        `protobuf:"varint,3,opt,name=title,proto3" json:"title"`
	Nickname    string        `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname"`
	Level       *AccountLevel `protobuf:"bytes,5,opt,name=level,proto3" json:"level"`
	Character   *Character    `protobuf:"bytes,6,opt,name=character,proto3" json:"character"`
	Level3      *AccountLevel `protobuf:"bytes,7,opt,name=level3,proto3" json:"level3"`
	AvatarFrame uint32        `protobuf:"varint,8,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame"`
	Verified    uint32        `protobuf:"varint,9,opt,name=verified,proto3" json:"verified"`
	Views       []*ViewSlot   `protobuf:"bytes,10,rep,name=views,proto3" json:"views"`
}

func (x *PlayerGameView) Reset() {
	*x = PlayerGameView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGameView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGameView) ProtoMessage() {}

func (x *PlayerGameView) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGameView.ProtoReflect.Descriptor instead.
func (*PlayerGameView) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{62}
}

func (x *PlayerGameView) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PlayerGameView) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *PlayerGameView) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *PlayerGameView) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerGameView) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *PlayerGameView) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *PlayerGameView) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *PlayerGameView) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *PlayerGameView) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *PlayerGameView) GetViews() []*ViewSlot {
	if x != nil {
		return x.Views
	}
	return nil
}

type GameSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiSwitch uint32 `protobuf:"varint,1,opt,name=emoji_switch,json=emojiSwitch,proto3" json:"emoji_switch"`
}

func (x *GameSetting) Reset() {
	*x = GameSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSetting) ProtoMessage() {}

func (x *GameSetting) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSetting.ProtoReflect.Descriptor instead.
func (*GameSetting) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{63}
}

func (x *GameSetting) GetEmojiSwitch() uint32 {
	if x != nil {
		return x.EmojiSwitch
	}
	return 0
}

type GameMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode               uint32                     `protobuf:"varint,1,opt,name=mode,proto3" json:"mode"`
	Ai                 bool                       `protobuf:"varint,4,opt,name=ai,proto3" json:"ai"`
	Extendinfo         string                     `protobuf:"bytes,5,opt,name=extendinfo,proto3" json:"extendinfo"`
	DetailRule         *GameDetailRule            `protobuf:"bytes,6,opt,name=detail_rule,json=detailRule,proto3" json:"detail_rule"`
	TestingEnvironment *GameTestingEnvironmentSet `protobuf:"bytes,7,opt,name=testing_environment,json=testingEnvironment,proto3" json:"testing_environment"`
	GameSetting        *GameSetting               `protobuf:"bytes,8,opt,name=game_setting,json=gameSetting,proto3" json:"game_setting"`
}

func (x *GameMode) Reset() {
	*x = GameMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMode) ProtoMessage() {}

func (x *GameMode) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMode.ProtoReflect.Descriptor instead.
func (*GameMode) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{64}
}

func (x *GameMode) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *GameMode) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *GameMode) GetExtendinfo() string {
	if x != nil {
		return x.Extendinfo
	}
	return ""
}

func (x *GameMode) GetDetailRule() *GameDetailRule {
	if x != nil {
		return x.DetailRule
	}
	return nil
}

func (x *GameMode) GetTestingEnvironment() *GameTestingEnvironmentSet {
	if x != nil {
		return x.TestingEnvironment
	}
	return nil
}

func (x *GameMode) GetGameSetting() *GameSetting {
	if x != nil {
		return x.GameSetting
	}
	return nil
}

type GameTestingEnvironmentSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paixing       uint32 `protobuf:"varint,1,opt,name=paixing,proto3" json:"paixing"`
	LeftCount     uint32 `protobuf:"varint,2,opt,name=left_count,json=leftCount,proto3" json:"left_count"`
	FieldSpellVar uint32 `protobuf:"varint,3,opt,name=field_spell_var,json=fieldSpellVar,proto3" json:"field_spell_var"`
}

func (x *GameTestingEnvironmentSet) Reset() {
	*x = GameTestingEnvironmentSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameTestingEnvironmentSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameTestingEnvironmentSet) ProtoMessage() {}

func (x *GameTestingEnvironmentSet) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameTestingEnvironmentSet.ProtoReflect.Descriptor instead.
func (*GameTestingEnvironmentSet) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{65}
}

func (x *GameTestingEnvironmentSet) GetPaixing() uint32 {
	if x != nil {
		return x.Paixing
	}
	return 0
}

func (x *GameTestingEnvironmentSet) GetLeftCount() uint32 {
	if x != nil {
		return x.LeftCount
	}
	return 0
}

func (x *GameTestingEnvironmentSet) GetFieldSpellVar() uint32 {
	if x != nil {
		return x.FieldSpellVar
	}
	return 0
}

type GameDetailRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFixed                  uint32 `protobuf:"varint,1,opt,name=time_fixed,json=timeFixed,proto3" json:"time_fixed"`
	TimeAdd                    uint32 `protobuf:"varint,2,opt,name=time_add,json=timeAdd,proto3" json:"time_add"`
	DoraCount                  uint32 `protobuf:"varint,3,opt,name=dora_count,json=doraCount,proto3" json:"dora_count"`
	Shiduan                    uint32 `protobuf:"varint,4,opt,name=shiduan,proto3" json:"shiduan"`
	InitPoint                  uint32 `protobuf:"varint,5,opt,name=init_point,json=initPoint,proto3" json:"init_point"`
	Fandian                    uint32 `protobuf:"varint,6,opt,name=fandian,proto3" json:"fandian"`
	CanJifei                   bool   `protobuf:"varint,7,opt,name=can_jifei,json=canJifei,proto3" json:"can_jifei"`
	TianbianValue              uint32 `protobuf:"varint,8,opt,name=tianbian_value,json=tianbianValue,proto3" json:"tianbian_value"`
	LiqibangValue              uint32 `protobuf:"varint,9,opt,name=liqibang_value,json=liqibangValue,proto3" json:"liqibang_value"`
	ChangbangValue             uint32 `protobuf:"varint,10,opt,name=changbang_value,json=changbangValue,proto3" json:"changbang_value"`
	NotingFafu_1               uint32 `protobuf:"varint,11,opt,name=noting_fafu_1,json=notingFafu1,proto3" json:"noting_fafu_1"`
	NotingFafu_2               uint32 `protobuf:"varint,12,opt,name=noting_fafu_2,json=notingFafu2,proto3" json:"noting_fafu_2"`
	NotingFafu_3               uint32 `protobuf:"varint,13,opt,name=noting_fafu_3,json=notingFafu3,proto3" json:"noting_fafu_3"`
	HaveLiujumanguan           bool   `protobuf:"varint,14,opt,name=have_liujumanguan,json=haveLiujumanguan,proto3" json:"have_liujumanguan"`
	HaveQieshangmanguan        bool   `protobuf:"varint,15,opt,name=have_qieshangmanguan,json=haveQieshangmanguan,proto3" json:"have_qieshangmanguan"`
	HaveBiaoDora               bool   `protobuf:"varint,16,opt,name=have_biao_dora,json=haveBiaoDora,proto3" json:"have_biao_dora"`
	HaveGangBiaoDora           bool   `protobuf:"varint,17,opt,name=have_gang_biao_dora,json=haveGangBiaoDora,proto3" json:"have_gang_biao_dora"`
	MingDoraImmediatelyOpen    bool   `protobuf:"varint,18,opt,name=ming_dora_immediately_open,json=mingDoraImmediatelyOpen,proto3" json:"ming_dora_immediately_open"`
	HaveLiDora                 bool   `protobuf:"varint,19,opt,name=have_li_dora,json=haveLiDora,proto3" json:"have_li_dora"`
	HaveGangLiDora             bool   `protobuf:"varint,20,opt,name=have_gang_li_dora,json=haveGangLiDora,proto3" json:"have_gang_li_dora"`
	HaveSifenglianda           bool   `protobuf:"varint,21,opt,name=have_sifenglianda,json=haveSifenglianda,proto3" json:"have_sifenglianda"`
	HaveSigangsanle            bool   `protobuf:"varint,22,opt,name=have_sigangsanle,json=haveSigangsanle,proto3" json:"have_sigangsanle"`
	HaveSijializhi             bool   `protobuf:"varint,23,opt,name=have_sijializhi,json=haveSijializhi,proto3" json:"have_sijializhi"`
	HaveJiuzhongjiupai         bool   `protobuf:"varint,24,opt,name=have_jiuzhongjiupai,json=haveJiuzhongjiupai,proto3" json:"have_jiuzhongjiupai"`
	HaveSanjiahele             bool   `protobuf:"varint,25,opt,name=have_sanjiahele,json=haveSanjiahele,proto3" json:"have_sanjiahele"`
	HaveToutiao                bool   `protobuf:"varint,26,opt,name=have_toutiao,json=haveToutiao,proto3" json:"have_toutiao"`
	HaveHelelianzhuang         bool   `protobuf:"varint,27,opt,name=have_helelianzhuang,json=haveHelelianzhuang,proto3" json:"have_helelianzhuang"`
	HaveHelezhongju            bool   `protobuf:"varint,28,opt,name=have_helezhongju,json=haveHelezhongju,proto3" json:"have_helezhongju"`
	HaveTingpailianzhuang      bool   `protobuf:"varint,29,opt,name=have_tingpailianzhuang,json=haveTingpailianzhuang,proto3" json:"have_tingpailianzhuang"`
	HaveTingpaizhongju         bool   `protobuf:"varint,30,opt,name=have_tingpaizhongju,json=haveTingpaizhongju,proto3" json:"have_tingpaizhongju"`
	HaveYifa                   bool   `protobuf:"varint,31,opt,name=have_yifa,json=haveYifa,proto3" json:"have_yifa"`
	HaveNanruxiru              bool   `protobuf:"varint,32,opt,name=have_nanruxiru,json=haveNanruxiru,proto3" json:"have_nanruxiru"`
	Jingsuanyuandian           uint32 `protobuf:"varint,33,opt,name=jingsuanyuandian,proto3" json:"jingsuanyuandian"`
	Shunweima_2                int32  `protobuf:"varint,34,opt,name=shunweima_2,json=shunweima2,proto3" json:"shunweima_2"`
	Shunweima_3                int32  `protobuf:"varint,35,opt,name=shunweima_3,json=shunweima3,proto3" json:"shunweima_3"`
	Shunweima_4                int32  `protobuf:"varint,36,opt,name=shunweima_4,json=shunweima4,proto3" json:"shunweima_4"`
	Bianjietishi               bool   `protobuf:"varint,37,opt,name=bianjietishi,proto3" json:"bianjietishi"`
	AiLevel                    uint32 `protobuf:"varint,38,opt,name=ai_level,json=aiLevel,proto3" json:"ai_level"`
	HaveZimosun                bool   `protobuf:"varint,39,opt,name=have_zimosun,json=haveZimosun,proto3" json:"have_zimosun"`
	DisableMultiYukaman        bool   `protobuf:"varint,40,opt,name=disable_multi_yukaman,json=disableMultiYukaman,proto3" json:"disable_multi_yukaman"`
	Fanfu                      uint32 `protobuf:"varint,41,opt,name=fanfu,proto3" json:"fanfu"`
	GuyiMode                   uint32 `protobuf:"varint,42,opt,name=guyi_mode,json=guyiMode,proto3" json:"guyi_mode"`
	Dora3Mode                  uint32 `protobuf:"varint,43,opt,name=dora3_mode,json=dora3Mode,proto3" json:"dora3_mode"`
	BeginOpenMode              uint32 `protobuf:"varint,44,opt,name=begin_open_mode,json=beginOpenMode,proto3" json:"begin_open_mode"`
	JiuchaoMode                uint32 `protobuf:"varint,45,opt,name=jiuchao_mode,json=jiuchaoMode,proto3" json:"jiuchao_mode"`
	MuyuMode                   uint32 `protobuf:"varint,46,opt,name=muyu_mode,json=muyuMode,proto3" json:"muyu_mode"`
	OpenHand                   uint32 `protobuf:"varint,47,opt,name=open_hand,json=openHand,proto3" json:"open_hand"`
	Xuezhandaodi               uint32 `protobuf:"varint,48,opt,name=xuezhandaodi,proto3" json:"xuezhandaodi"`
	Huansanzhang               uint32 `protobuf:"varint,49,opt,name=huansanzhang,proto3" json:"huansanzhang"`
	Chuanma                    uint32 `protobuf:"varint,50,opt,name=chuanma,proto3" json:"chuanma"`
	RevealDiscard              uint32 `protobuf:"varint,51,opt,name=reveal_discard,json=revealDiscard,proto3" json:"reveal_discard"`
	FieldSpellMode             uint32 `protobuf:"varint,52,opt,name=field_spell_mode,json=fieldSpellMode,proto3" json:"field_spell_mode"`
	Zhanxing                   uint32 `protobuf:"varint,53,opt,name=zhanxing,proto3" json:"zhanxing"`
	TianmingMode               uint32 `protobuf:"varint,54,opt,name=tianming_mode,json=tianmingMode,proto3" json:"tianming_mode"`
	DisableLeijiyiman          bool   `protobuf:"varint,60,opt,name=disable_leijiyiman,json=disableLeijiyiman,proto3" json:"disable_leijiyiman"`
	DisableDoubleYakuman       uint32 `protobuf:"varint,62,opt,name=disable_double_yakuman,json=disableDoubleYakuman,proto3" json:"disable_double_yakuman"`
	DisableCompositeYakuman    uint32 `protobuf:"varint,63,opt,name=disable_composite_yakuman,json=disableCompositeYakuman,proto3" json:"disable_composite_yakuman"`
	EnableShiti                uint32 `protobuf:"varint,64,opt,name=enable_shiti,json=enableShiti,proto3" json:"enable_shiti"`
	EnableNontsumoLiqi         uint32 `protobuf:"varint,65,opt,name=enable_nontsumo_liqi,json=enableNontsumoLiqi,proto3" json:"enable_nontsumo_liqi"`
	DisableDoubleWindFourFu    uint32 `protobuf:"varint,66,opt,name=disable_double_wind_four_fu,json=disableDoubleWindFourFu,proto3" json:"disable_double_wind_four_fu"`
	DisableAngangGuoshi        uint32 `protobuf:"varint,67,opt,name=disable_angang_guoshi,json=disableAngangGuoshi,proto3" json:"disable_angang_guoshi"`
	EnableRenhe                uint32 `protobuf:"varint,68,opt,name=enable_renhe,json=enableRenhe,proto3" json:"enable_renhe"`
	EnableBaopaiExtendSettings uint32 `protobuf:"varint,69,opt,name=enable_baopai_extend_settings,json=enableBaopaiExtendSettings,proto3" json:"enable_baopai_extend_settings"`
}

func (x *GameDetailRule) Reset() {
	*x = GameDetailRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDetailRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailRule) ProtoMessage() {}

func (x *GameDetailRule) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailRule.ProtoReflect.Descriptor instead.
func (*GameDetailRule) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{66}
}

func (x *GameDetailRule) GetTimeFixed() uint32 {
	if x != nil {
		return x.TimeFixed
	}
	return 0
}

func (x *GameDetailRule) GetTimeAdd() uint32 {
	if x != nil {
		return x.TimeAdd
	}
	return 0
}

func (x *GameDetailRule) GetDoraCount() uint32 {
	if x != nil {
		return x.DoraCount
	}
	return 0
}

func (x *GameDetailRule) GetShiduan() uint32 {
	if x != nil {
		return x.Shiduan
	}
	return 0
}

func (x *GameDetailRule) GetInitPoint() uint32 {
	if x != nil {
		return x.InitPoint
	}
	return 0
}

func (x *GameDetailRule) GetFandian() uint32 {
	if x != nil {
		return x.Fandian
	}
	return 0
}

func (x *GameDetailRule) GetCanJifei() bool {
	if x != nil {
		return x.CanJifei
	}
	return false
}

func (x *GameDetailRule) GetTianbianValue() uint32 {
	if x != nil {
		return x.TianbianValue
	}
	return 0
}

func (x *GameDetailRule) GetLiqibangValue() uint32 {
	if x != nil {
		return x.LiqibangValue
	}
	return 0
}

func (x *GameDetailRule) GetChangbangValue() uint32 {
	if x != nil {
		return x.ChangbangValue
	}
	return 0
}

func (x *GameDetailRule) GetNotingFafu_1() uint32 {
	if x != nil {
		return x.NotingFafu_1
	}
	return 0
}

func (x *GameDetailRule) GetNotingFafu_2() uint32 {
	if x != nil {
		return x.NotingFafu_2
	}
	return 0
}

func (x *GameDetailRule) GetNotingFafu_3() uint32 {
	if x != nil {
		return x.NotingFafu_3
	}
	return 0
}

func (x *GameDetailRule) GetHaveLiujumanguan() bool {
	if x != nil {
		return x.HaveLiujumanguan
	}
	return false
}

func (x *GameDetailRule) GetHaveQieshangmanguan() bool {
	if x != nil {
		return x.HaveQieshangmanguan
	}
	return false
}

func (x *GameDetailRule) GetHaveBiaoDora() bool {
	if x != nil {
		return x.HaveBiaoDora
	}
	return false
}

func (x *GameDetailRule) GetHaveGangBiaoDora() bool {
	if x != nil {
		return x.HaveGangBiaoDora
	}
	return false
}

func (x *GameDetailRule) GetMingDoraImmediatelyOpen() bool {
	if x != nil {
		return x.MingDoraImmediatelyOpen
	}
	return false
}

func (x *GameDetailRule) GetHaveLiDora() bool {
	if x != nil {
		return x.HaveLiDora
	}
	return false
}

func (x *GameDetailRule) GetHaveGangLiDora() bool {
	if x != nil {
		return x.HaveGangLiDora
	}
	return false
}

func (x *GameDetailRule) GetHaveSifenglianda() bool {
	if x != nil {
		return x.HaveSifenglianda
	}
	return false
}

func (x *GameDetailRule) GetHaveSigangsanle() bool {
	if x != nil {
		return x.HaveSigangsanle
	}
	return false
}

func (x *GameDetailRule) GetHaveSijializhi() bool {
	if x != nil {
		return x.HaveSijializhi
	}
	return false
}

func (x *GameDetailRule) GetHaveJiuzhongjiupai() bool {
	if x != nil {
		return x.HaveJiuzhongjiupai
	}
	return false
}

func (x *GameDetailRule) GetHaveSanjiahele() bool {
	if x != nil {
		return x.HaveSanjiahele
	}
	return false
}

func (x *GameDetailRule) GetHaveToutiao() bool {
	if x != nil {
		return x.HaveToutiao
	}
	return false
}

func (x *GameDetailRule) GetHaveHelelianzhuang() bool {
	if x != nil {
		return x.HaveHelelianzhuang
	}
	return false
}

func (x *GameDetailRule) GetHaveHelezhongju() bool {
	if x != nil {
		return x.HaveHelezhongju
	}
	return false
}

func (x *GameDetailRule) GetHaveTingpailianzhuang() bool {
	if x != nil {
		return x.HaveTingpailianzhuang
	}
	return false
}

func (x *GameDetailRule) GetHaveTingpaizhongju() bool {
	if x != nil {
		return x.HaveTingpaizhongju
	}
	return false
}

func (x *GameDetailRule) GetHaveYifa() bool {
	if x != nil {
		return x.HaveYifa
	}
	return false
}

func (x *GameDetailRule) GetHaveNanruxiru() bool {
	if x != nil {
		return x.HaveNanruxiru
	}
	return false
}

func (x *GameDetailRule) GetJingsuanyuandian() uint32 {
	if x != nil {
		return x.Jingsuanyuandian
	}
	return 0
}

func (x *GameDetailRule) GetShunweima_2() int32 {
	if x != nil {
		return x.Shunweima_2
	}
	return 0
}

func (x *GameDetailRule) GetShunweima_3() int32 {
	if x != nil {
		return x.Shunweima_3
	}
	return 0
}

func (x *GameDetailRule) GetShunweima_4() int32 {
	if x != nil {
		return x.Shunweima_4
	}
	return 0
}

func (x *GameDetailRule) GetBianjietishi() bool {
	if x != nil {
		return x.Bianjietishi
	}
	return false
}

func (x *GameDetailRule) GetAiLevel() uint32 {
	if x != nil {
		return x.AiLevel
	}
	return 0
}

func (x *GameDetailRule) GetHaveZimosun() bool {
	if x != nil {
		return x.HaveZimosun
	}
	return false
}

func (x *GameDetailRule) GetDisableMultiYukaman() bool {
	if x != nil {
		return x.DisableMultiYukaman
	}
	return false
}

func (x *GameDetailRule) GetFanfu() uint32 {
	if x != nil {
		return x.Fanfu
	}
	return 0
}

func (x *GameDetailRule) GetGuyiMode() uint32 {
	if x != nil {
		return x.GuyiMode
	}
	return 0
}

func (x *GameDetailRule) GetDora3Mode() uint32 {
	if x != nil {
		return x.Dora3Mode
	}
	return 0
}

func (x *GameDetailRule) GetBeginOpenMode() uint32 {
	if x != nil {
		return x.BeginOpenMode
	}
	return 0
}

func (x *GameDetailRule) GetJiuchaoMode() uint32 {
	if x != nil {
		return x.JiuchaoMode
	}
	return 0
}

func (x *GameDetailRule) GetMuyuMode() uint32 {
	if x != nil {
		return x.MuyuMode
	}
	return 0
}

func (x *GameDetailRule) GetOpenHand() uint32 {
	if x != nil {
		return x.OpenHand
	}
	return 0
}

func (x *GameDetailRule) GetXuezhandaodi() uint32 {
	if x != nil {
		return x.Xuezhandaodi
	}
	return 0
}

func (x *GameDetailRule) GetHuansanzhang() uint32 {
	if x != nil {
		return x.Huansanzhang
	}
	return 0
}

func (x *GameDetailRule) GetChuanma() uint32 {
	if x != nil {
		return x.Chuanma
	}
	return 0
}

func (x *GameDetailRule) GetRevealDiscard() uint32 {
	if x != nil {
		return x.RevealDiscard
	}
	return 0
}

func (x *GameDetailRule) GetFieldSpellMode() uint32 {
	if x != nil {
		return x.FieldSpellMode
	}
	return 0
}

func (x *GameDetailRule) GetZhanxing() uint32 {
	if x != nil {
		return x.Zhanxing
	}
	return 0
}

func (x *GameDetailRule) GetTianmingMode() uint32 {
	if x != nil {
		return x.TianmingMode
	}
	return 0
}

func (x *GameDetailRule) GetDisableLeijiyiman() bool {
	if x != nil {
		return x.DisableLeijiyiman
	}
	return false
}

func (x *GameDetailRule) GetDisableDoubleYakuman() uint32 {
	if x != nil {
		return x.DisableDoubleYakuman
	}
	return 0
}

func (x *GameDetailRule) GetDisableCompositeYakuman() uint32 {
	if x != nil {
		return x.DisableCompositeYakuman
	}
	return 0
}

func (x *GameDetailRule) GetEnableShiti() uint32 {
	if x != nil {
		return x.EnableShiti
	}
	return 0
}

func (x *GameDetailRule) GetEnableNontsumoLiqi() uint32 {
	if x != nil {
		return x.EnableNontsumoLiqi
	}
	return 0
}

func (x *GameDetailRule) GetDisableDoubleWindFourFu() uint32 {
	if x != nil {
		return x.DisableDoubleWindFourFu
	}
	return 0
}

func (x *GameDetailRule) GetDisableAngangGuoshi() uint32 {
	if x != nil {
		return x.DisableAngangGuoshi
	}
	return 0
}

func (x *GameDetailRule) GetEnableRenhe() uint32 {
	if x != nil {
		return x.EnableRenhe
	}
	return 0
}

func (x *GameDetailRule) GetEnableBaopaiExtendSettings() uint32 {
	if x != nil {
		return x.EnableBaopaiExtendSettings
	}
	return 0
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         uint32            `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	OwnerId        uint32            `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id"`
	Mode           *GameMode         `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode"`
	MaxPlayerCount uint32            `protobuf:"varint,4,opt,name=max_player_count,json=maxPlayerCount,proto3" json:"max_player_count"`
	Persons        []*PlayerGameView `protobuf:"bytes,5,rep,name=persons,proto3" json:"persons"`
	ReadyList      []uint32          `protobuf:"varint,6,rep,packed,name=ready_list,json=readyList,proto3" json:"ready_list"`
	IsPlaying      bool              `protobuf:"varint,7,opt,name=is_playing,json=isPlaying,proto3" json:"is_playing"`
	PublicLive     bool              `protobuf:"varint,8,opt,name=public_live,json=publicLive,proto3" json:"public_live"`
	RobotCount     uint32            `protobuf:"varint,9,opt,name=robot_count,json=robotCount,proto3" json:"robot_count"`
	TournamentId   uint32            `protobuf:"varint,10,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id"`
	Seq            uint32            `protobuf:"varint,11,opt,name=seq,proto3" json:"seq"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{67}
}

func (x *Room) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Room) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Room) GetMode() *GameMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *Room) GetMaxPlayerCount() uint32 {
	if x != nil {
		return x.MaxPlayerCount
	}
	return 0
}

func (x *Room) GetPersons() []*PlayerGameView {
	if x != nil {
		return x.Persons
	}
	return nil
}

func (x *Room) GetReadyList() []uint32 {
	if x != nil {
		return x.ReadyList
	}
	return nil
}

func (x *Room) GetIsPlaying() bool {
	if x != nil {
		return x.IsPlaying
	}
	return false
}

func (x *Room) GetPublicLive() bool {
	if x != nil {
		return x.PublicLive
	}
	return false
}

func (x *Room) GetRobotCount() uint32 {
	if x != nil {
		return x.RobotCount
	}
	return 0
}

func (x *Room) GetTournamentId() uint32 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

func (x *Room) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type GameEndResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*GameEndResult_PlayerItem `protobuf:"bytes,1,rep,name=players,proto3" json:"players"`
}

func (x *GameEndResult) Reset() {
	*x = GameEndResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEndResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndResult) ProtoMessage() {}

func (x *GameEndResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndResult.ProtoReflect.Descriptor instead.
func (*GameEndResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{68}
}

func (x *GameEndResult) GetPlayers() []*GameEndResult_PlayerItem {
	if x != nil {
		return x.Players
	}
	return nil
}

type GameConnectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken,proto3" json:"connect_token"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
	Location     string `protobuf:"bytes,4,opt,name=location,proto3" json:"location"`
}

func (x *GameConnectInfo) Reset() {
	*x = GameConnectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameConnectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConnectInfo) ProtoMessage() {}

func (x *GameConnectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConnectInfo.ProtoReflect.Descriptor instead.
func (*GameConnectInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{69}
}

func (x *GameConnectInfo) GetConnectToken() string {
	if x != nil {
		return x.ConnectToken
	}
	return ""
}

func (x *GameConnectInfo) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *GameConnectInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type ItemGainRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count  uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ItemGainRecord) Reset() {
	*x = ItemGainRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGainRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGainRecord) ProtoMessage() {}

func (x *ItemGainRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGainRecord.ProtoReflect.Descriptor instead.
func (*ItemGainRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{70}
}

func (x *ItemGainRecord) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemGainRecord) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ItemGainRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordTime    uint32            `protobuf:"varint,1,opt,name=record_time,json=recordTime,proto3" json:"record_time"`
	LimitSourceId uint32            `protobuf:"varint,2,opt,name=limit_source_id,json=limitSourceId,proto3" json:"limit_source_id"`
	Records       []*ItemGainRecord `protobuf:"bytes,3,rep,name=records,proto3" json:"records"`
}

func (x *ItemGainRecords) Reset() {
	*x = ItemGainRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGainRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGainRecords) ProtoMessage() {}

func (x *ItemGainRecords) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGainRecords.ProtoReflect.Descriptor instead.
func (*ItemGainRecords) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{71}
}

func (x *ItemGainRecords) GetRecordTime() uint32 {
	if x != nil {
		return x.RecordTime
	}
	return 0
}

func (x *ItemGainRecords) GetLimitSourceId() uint32 {
	if x != nil {
		return x.LimitSourceId
	}
	return 0
}

func (x *ItemGainRecords) GetRecords() []*ItemGainRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type FakeRandomRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId        uint32   `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	SpecialItemId uint32   `protobuf:"varint,2,opt,name=special_item_id,json=specialItemId,proto3" json:"special_item_id"`
	GainCount     uint32   `protobuf:"varint,3,opt,name=gain_count,json=gainCount,proto3" json:"gain_count"`
	GainHistory   []uint32 `protobuf:"varint,4,rep,packed,name=gain_history,json=gainHistory,proto3" json:"gain_history"`
}

func (x *FakeRandomRecords) Reset() {
	*x = FakeRandomRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FakeRandomRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FakeRandomRecords) ProtoMessage() {}

func (x *FakeRandomRecords) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FakeRandomRecords.ProtoReflect.Descriptor instead.
func (*FakeRandomRecords) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{72}
}

func (x *FakeRandomRecords) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *FakeRandomRecords) GetSpecialItemId() uint32 {
	if x != nil {
		return x.SpecialItemId
	}
	return 0
}

func (x *FakeRandomRecords) GetGainCount() uint32 {
	if x != nil {
		return x.GainCount
	}
	return 0
}

func (x *FakeRandomRecords) GetGainHistory() []uint32 {
	if x != nil {
		return x.GainHistory
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Stack  uint32 `protobuf:"varint,2,opt,name=stack,proto3" json:"stack"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{73}
}

func (x *Item) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *Item) GetStack() uint32 {
	if x != nil {
		return x.Stack
	}
	return 0
}

type Bag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items           []*Item            `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
	DailyGainRecord []*ItemGainRecords `protobuf:"bytes,2,rep,name=daily_gain_record,json=dailyGainRecord,proto3" json:"daily_gain_record"`
}

func (x *Bag) Reset() {
	*x = Bag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bag) ProtoMessage() {}

func (x *Bag) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bag.ProtoReflect.Descriptor instead.
func (*Bag) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{74}
}

func (x *Bag) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Bag) GetDailyGainRecord() []*ItemGainRecords {
	if x != nil {
		return x.DailyGainRecord
	}
	return nil
}

type BagUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateItems           []*Item            `protobuf:"bytes,1,rep,name=update_items,json=updateItems,proto3" json:"update_items"`
	UpdateDailyGainRecord []*ItemGainRecords `protobuf:"bytes,2,rep,name=update_daily_gain_record,json=updateDailyGainRecord,proto3" json:"update_daily_gain_record"`
}

func (x *BagUpdate) Reset() {
	*x = BagUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BagUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BagUpdate) ProtoMessage() {}

func (x *BagUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BagUpdate.ProtoReflect.Descriptor instead.
func (*BagUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{75}
}

func (x *BagUpdate) GetUpdateItems() []*Item {
	if x != nil {
		return x.UpdateItems
	}
	return nil
}

func (x *BagUpdate) GetUpdateDailyGainRecord() []*ItemGainRecords {
	if x != nil {
		return x.UpdateDailyGainRecord
	}
	return nil
}

type RewardSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *RewardSlot) Reset() {
	*x = RewardSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardSlot) ProtoMessage() {}

func (x *RewardSlot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardSlot.ProtoReflect.Descriptor instead.
func (*RewardSlot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{76}
}

func (x *RewardSlot) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RewardSlot) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type OpenResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward  *RewardSlot `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward"`
	Replace *RewardSlot `protobuf:"bytes,2,opt,name=replace,proto3" json:"replace"`
}

func (x *OpenResult) Reset() {
	*x = OpenResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenResult) ProtoMessage() {}

func (x *OpenResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenResult.ProtoReflect.Descriptor instead.
func (*OpenResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{77}
}

func (x *OpenResult) GetReward() *RewardSlot {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *OpenResult) GetReplace() *RewardSlot {
	if x != nil {
		return x.Replace
	}
	return nil
}

type RewardPlusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count    uint32                     `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	Exchange *RewardPlusResult_Exchange `protobuf:"bytes,3,opt,name=exchange,proto3" json:"exchange"`
}

func (x *RewardPlusResult) Reset() {
	*x = RewardPlusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardPlusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardPlusResult) ProtoMessage() {}

func (x *RewardPlusResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardPlusResult.ProtoReflect.Descriptor instead.
func (*RewardPlusResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{78}
}

func (x *RewardPlusResult) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RewardPlusResult) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RewardPlusResult) GetExchange() *RewardPlusResult_Exchange {
	if x != nil {
		return x.Exchange
	}
	return nil
}

type ExecuteReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward       *RewardSlot `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward"`
	Replace      *RewardSlot `protobuf:"bytes,2,opt,name=replace,proto3" json:"replace"`
	ReplaceCount uint32      `protobuf:"varint,3,opt,name=replace_count,json=replaceCount,proto3" json:"replace_count"`
}

func (x *ExecuteReward) Reset() {
	*x = ExecuteReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteReward) ProtoMessage() {}

func (x *ExecuteReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteReward.ProtoReflect.Descriptor instead.
func (*ExecuteReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{79}
}

func (x *ExecuteReward) GetReward() *RewardSlot {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *ExecuteReward) GetReplace() *RewardSlot {
	if x != nil {
		return x.Replace
	}
	return nil
}

func (x *ExecuteReward) GetReplaceCount() uint32 {
	if x != nil {
		return x.ReplaceCount
	}
	return 0
}

type I18NContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang    string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang"`
	Context string `protobuf:"bytes,2,opt,name=context,proto3" json:"context"`
}

func (x *I18NContext) Reset() {
	*x = I18NContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *I18NContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*I18NContext) ProtoMessage() {}

func (x *I18NContext) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use I18NContext.ProtoReflect.Descriptor instead.
func (*I18NContext) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{80}
}

func (x *I18NContext) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *I18NContext) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type Mail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId         uint32         `protobuf:"varint,1,opt,name=mail_id,json=mailId,proto3" json:"mail_id"`
	State          uint32         `protobuf:"varint,2,opt,name=state,proto3" json:"state"`
	TakeAttachment bool           `protobuf:"varint,3,opt,name=take_attachment,json=takeAttachment,proto3" json:"take_attachment"`
	Title          string         `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	Content        string         `protobuf:"bytes,5,opt,name=content,proto3" json:"content"`
	Attachments    []*RewardSlot  `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments"`
	CreateTime     uint32         `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	ExpireTime     uint32         `protobuf:"varint,8,opt,name=expire_time,json=expireTime,proto3" json:"expire_time"`
	ReferenceId    uint32         `protobuf:"varint,9,opt,name=reference_id,json=referenceId,proto3" json:"reference_id"`
	TitleI18N      []*I18NContext `protobuf:"bytes,10,rep,name=title_i18n,json=titleI18n,proto3" json:"title_i18n"`
	ContentI18N    []*I18NContext `protobuf:"bytes,11,rep,name=content_i18n,json=contentI18n,proto3" json:"content_i18n"`
	TemplateId     uint32         `protobuf:"varint,12,opt,name=template_id,json=templateId,proto3" json:"template_id"`
}

func (x *Mail) Reset() {
	*x = Mail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail) ProtoMessage() {}

func (x *Mail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mail.ProtoReflect.Descriptor instead.
func (*Mail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{81}
}

func (x *Mail) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

func (x *Mail) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Mail) GetTakeAttachment() bool {
	if x != nil {
		return x.TakeAttachment
	}
	return false
}

func (x *Mail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Mail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Mail) GetAttachments() []*RewardSlot {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Mail) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Mail) GetExpireTime() uint32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *Mail) GetReferenceId() uint32 {
	if x != nil {
		return x.ReferenceId
	}
	return 0
}

func (x *Mail) GetTitleI18N() []*I18NContext {
	if x != nil {
		return x.TitleI18N
	}
	return nil
}

func (x *Mail) GetContentI18N() []*I18NContext {
	if x != nil {
		return x.ContentI18N
	}
	return nil
}

func (x *Mail) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

type AchievementProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Counter      uint32 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter"`
	Achieved     bool   `protobuf:"varint,3,opt,name=achieved,proto3" json:"achieved"`
	Rewarded     bool   `protobuf:"varint,4,opt,name=rewarded,proto3" json:"rewarded"`
	AchievedTime uint32 `protobuf:"varint,5,opt,name=achieved_time,json=achievedTime,proto3" json:"achieved_time"`
}

func (x *AchievementProgress) Reset() {
	*x = AchievementProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementProgress) ProtoMessage() {}

func (x *AchievementProgress) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementProgress.ProtoReflect.Descriptor instead.
func (*AchievementProgress) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{82}
}

func (x *AchievementProgress) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AchievementProgress) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *AchievementProgress) GetAchieved() bool {
	if x != nil {
		return x.Achieved
	}
	return false
}

func (x *AchievementProgress) GetRewarded() bool {
	if x != nil {
		return x.Rewarded
	}
	return false
}

func (x *AchievementProgress) GetAchievedTime() uint32 {
	if x != nil {
		return x.AchievedTime
	}
	return 0
}

type AccountStatisticByGameMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode              uint32                                     `protobuf:"varint,1,opt,name=mode,proto3" json:"mode"`
	GameCountSum      uint32                                     `protobuf:"varint,2,opt,name=game_count_sum,json=gameCountSum,proto3" json:"game_count_sum"`
	GameFinalPosition []uint32                                   `protobuf:"varint,3,rep,packed,name=game_final_position,json=gameFinalPosition,proto3" json:"game_final_position"`
	FlyCount          uint32                                     `protobuf:"varint,4,opt,name=fly_count,json=flyCount,proto3" json:"fly_count"`
	GoldEarnSum       float32                                    `protobuf:"fixed32,5,opt,name=gold_earn_sum,json=goldEarnSum,proto3" json:"gold_earn_sum"`
	RoundCountSum     uint32                                     `protobuf:"varint,6,opt,name=round_count_sum,json=roundCountSum,proto3" json:"round_count_sum"`
	DadianSum         float32                                    `protobuf:"fixed32,7,opt,name=dadian_sum,json=dadianSum,proto3" json:"dadian_sum"`
	RoundEnd          []*AccountStatisticByGameMode_RoundEndData `protobuf:"bytes,8,rep,name=round_end,json=roundEnd,proto3" json:"round_end"`
	MingCountSum      uint32                                     `protobuf:"varint,9,opt,name=ming_count_sum,json=mingCountSum,proto3" json:"ming_count_sum"`
	LiqiCountSum      uint32                                     `protobuf:"varint,10,opt,name=liqi_count_sum,json=liqiCountSum,proto3" json:"liqi_count_sum"`
	XunCountSum       uint32                                     `protobuf:"varint,11,opt,name=xun_count_sum,json=xunCountSum,proto3" json:"xun_count_sum"`
	HighestLianzhuang uint32                                     `protobuf:"varint,12,opt,name=highest_lianzhuang,json=highestLianzhuang,proto3" json:"highest_lianzhuang"`
	ScoreEarnSum      uint32                                     `protobuf:"varint,13,opt,name=score_earn_sum,json=scoreEarnSum,proto3" json:"score_earn_sum"`
	RankScore         []*AccountStatisticByGameMode_RankScore    `protobuf:"bytes,14,rep,name=rank_score,json=rankScore,proto3" json:"rank_score"`
}

func (x *AccountStatisticByGameMode) Reset() {
	*x = AccountStatisticByGameMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticByGameMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticByGameMode) ProtoMessage() {}

func (x *AccountStatisticByGameMode) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticByGameMode.ProtoReflect.Descriptor instead.
func (*AccountStatisticByGameMode) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{83}
}

func (x *AccountStatisticByGameMode) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetGameCountSum() uint32 {
	if x != nil {
		return x.GameCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetGameFinalPosition() []uint32 {
	if x != nil {
		return x.GameFinalPosition
	}
	return nil
}

func (x *AccountStatisticByGameMode) GetFlyCount() uint32 {
	if x != nil {
		return x.FlyCount
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetGoldEarnSum() float32 {
	if x != nil {
		return x.GoldEarnSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetRoundCountSum() uint32 {
	if x != nil {
		return x.RoundCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetDadianSum() float32 {
	if x != nil {
		return x.DadianSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetRoundEnd() []*AccountStatisticByGameMode_RoundEndData {
	if x != nil {
		return x.RoundEnd
	}
	return nil
}

func (x *AccountStatisticByGameMode) GetMingCountSum() uint32 {
	if x != nil {
		return x.MingCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetLiqiCountSum() uint32 {
	if x != nil {
		return x.LiqiCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetXunCountSum() uint32 {
	if x != nil {
		return x.XunCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetHighestLianzhuang() uint32 {
	if x != nil {
		return x.HighestLianzhuang
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetScoreEarnSum() uint32 {
	if x != nil {
		return x.ScoreEarnSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetRankScore() []*AccountStatisticByGameMode_RankScore {
	if x != nil {
		return x.RankScore
	}
	return nil
}

type AccountStatisticByFan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanId uint32 `protobuf:"varint,1,opt,name=fan_id,json=fanId,proto3" json:"fan_id"`
	Sum   uint32 `protobuf:"varint,2,opt,name=sum,proto3" json:"sum"`
}

func (x *AccountStatisticByFan) Reset() {
	*x = AccountStatisticByFan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticByFan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticByFan) ProtoMessage() {}

func (x *AccountStatisticByFan) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticByFan.ProtoReflect.Descriptor instead.
func (*AccountStatisticByFan) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{84}
}

func (x *AccountStatisticByFan) GetFanId() uint32 {
	if x != nil {
		return x.FanId
	}
	return 0
}

func (x *AccountStatisticByFan) GetSum() uint32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type AccountFanAchieved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MahjongCategory uint32                   `protobuf:"varint,1,opt,name=mahjong_category,json=mahjongCategory,proto3" json:"mahjong_category"`
	Fan             []*AccountStatisticByFan `protobuf:"bytes,2,rep,name=fan,proto3" json:"fan"`
	Liujumanguan    uint32                   `protobuf:"varint,3,opt,name=liujumanguan,proto3" json:"liujumanguan"`
}

func (x *AccountFanAchieved) Reset() {
	*x = AccountFanAchieved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountFanAchieved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFanAchieved) ProtoMessage() {}

func (x *AccountFanAchieved) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFanAchieved.ProtoReflect.Descriptor instead.
func (*AccountFanAchieved) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{85}
}

func (x *AccountFanAchieved) GetMahjongCategory() uint32 {
	if x != nil {
		return x.MahjongCategory
	}
	return 0
}

func (x *AccountFanAchieved) GetFan() []*AccountStatisticByFan {
	if x != nil {
		return x.Fan
	}
	return nil
}

func (x *AccountFanAchieved) GetLiujumanguan() uint32 {
	if x != nil {
		return x.Liujumanguan
	}
	return 0
}

type AccountDetailStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameMode     []*AccountStatisticByGameMode `protobuf:"bytes,1,rep,name=game_mode,json=gameMode,proto3" json:"game_mode"`
	Fan          []*AccountStatisticByFan      `protobuf:"bytes,2,rep,name=fan,proto3" json:"fan"`
	Liujumanguan uint32                        `protobuf:"varint,3,opt,name=liujumanguan,proto3" json:"liujumanguan"`
	FanAchieved  []*AccountFanAchieved         `protobuf:"bytes,4,rep,name=fan_achieved,json=fanAchieved,proto3" json:"fan_achieved"`
}

func (x *AccountDetailStatistic) Reset() {
	*x = AccountDetailStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatistic) ProtoMessage() {}

func (x *AccountDetailStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatistic.ProtoReflect.Descriptor instead.
func (*AccountDetailStatistic) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{86}
}

func (x *AccountDetailStatistic) GetGameMode() []*AccountStatisticByGameMode {
	if x != nil {
		return x.GameMode
	}
	return nil
}

func (x *AccountDetailStatistic) GetFan() []*AccountStatisticByFan {
	if x != nil {
		return x.Fan
	}
	return nil
}

func (x *AccountDetailStatistic) GetLiujumanguan() uint32 {
	if x != nil {
		return x.Liujumanguan
	}
	return 0
}

func (x *AccountDetailStatistic) GetFanAchieved() []*AccountFanAchieved {
	if x != nil {
		return x.FanAchieved
	}
	return nil
}

type AccountDetailStatisticByCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category        uint32                  `protobuf:"varint,1,opt,name=category,proto3" json:"category"`
	DetailStatistic *AccountDetailStatistic `protobuf:"bytes,2,opt,name=detail_statistic,json=detailStatistic,proto3" json:"detail_statistic"`
}

func (x *AccountDetailStatisticByCategory) Reset() {
	*x = AccountDetailStatisticByCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticByCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticByCategory) ProtoMessage() {}

func (x *AccountDetailStatisticByCategory) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticByCategory.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticByCategory) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{87}
}

func (x *AccountDetailStatisticByCategory) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *AccountDetailStatisticByCategory) GetDetailStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.DetailStatistic
	}
	return nil
}

type AccountDetailStatisticV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendRoomStatistic        *AccountDetailStatistic                              `protobuf:"bytes,1,opt,name=friend_room_statistic,json=friendRoomStatistic,proto3" json:"friend_room_statistic"`
	RankStatistic              *AccountDetailStatisticV2_RankStatistic              `protobuf:"bytes,2,opt,name=rank_statistic,json=rankStatistic,proto3" json:"rank_statistic"`
	CustomizedContestStatistic *AccountDetailStatisticV2_CustomizedContestStatistic `protobuf:"bytes,3,opt,name=customized_contest_statistic,json=customizedContestStatistic,proto3" json:"customized_contest_statistic"`
	LeisureMatchStatistic      *AccountDetailStatistic                              `protobuf:"bytes,4,opt,name=leisure_match_statistic,json=leisureMatchStatistic,proto3" json:"leisure_match_statistic"`
	ChallengeMatchStatistic    *AccountDetailStatisticV2_ChallengeStatistic         `protobuf:"bytes,5,opt,name=challenge_match_statistic,json=challengeMatchStatistic,proto3" json:"challenge_match_statistic"`
	ActivityMatchStatistic     *AccountDetailStatistic                              `protobuf:"bytes,6,opt,name=activity_match_statistic,json=activityMatchStatistic,proto3" json:"activity_match_statistic"`
	AbMatchStatistic           *AccountDetailStatistic                              `protobuf:"bytes,7,opt,name=ab_match_statistic,json=abMatchStatistic,proto3" json:"ab_match_statistic"`
}

func (x *AccountDetailStatisticV2) Reset() {
	*x = AccountDetailStatisticV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2) ProtoMessage() {}

func (x *AccountDetailStatisticV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{88}
}

func (x *AccountDetailStatisticV2) GetFriendRoomStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.FriendRoomStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetRankStatistic() *AccountDetailStatisticV2_RankStatistic {
	if x != nil {
		return x.RankStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetCustomizedContestStatistic() *AccountDetailStatisticV2_CustomizedContestStatistic {
	if x != nil {
		return x.CustomizedContestStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetLeisureMatchStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.LeisureMatchStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetChallengeMatchStatistic() *AccountDetailStatisticV2_ChallengeStatistic {
	if x != nil {
		return x.ChallengeMatchStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetActivityMatchStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.ActivityMatchStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetAbMatchStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.AbMatchStatistic
	}
	return nil
}

type AccountShiLian struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step  uint32 `protobuf:"varint,1,opt,name=step,proto3" json:"step"`
	State uint32 `protobuf:"varint,2,opt,name=state,proto3" json:"state"`
}

func (x *AccountShiLian) Reset() {
	*x = AccountShiLian{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountShiLian) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountShiLian) ProtoMessage() {}

func (x *AccountShiLian) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountShiLian.ProtoReflect.Descriptor instead.
func (*AccountShiLian) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{89}
}

func (x *AccountShiLian) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *AccountShiLian) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type ClientDeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform       string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform"`
	Hardware       string `protobuf:"bytes,2,opt,name=hardware,proto3" json:"hardware"`
	Os             string `protobuf:"bytes,3,opt,name=os,proto3" json:"os"`
	OsVersion      string `protobuf:"bytes,4,opt,name=os_version,json=osVersion,proto3" json:"os_version"`
	IsBrowser      bool   `protobuf:"varint,5,opt,name=is_browser,json=isBrowser,proto3" json:"is_browser"`
	Software       string `protobuf:"bytes,6,opt,name=software,proto3" json:"software"`
	SalePlatform   string `protobuf:"bytes,7,opt,name=sale_platform,json=salePlatform,proto3" json:"sale_platform"`
	HardwareVendor string `protobuf:"bytes,8,opt,name=hardware_vendor,json=hardwareVendor,proto3" json:"hardware_vendor"`
	ModelNumber    string `protobuf:"bytes,9,opt,name=model_number,json=modelNumber,proto3" json:"model_number"`
	ScreenWidth    uint32 `protobuf:"varint,10,opt,name=screen_width,json=screenWidth,proto3" json:"screen_width"`
	ScreenHeight   uint32 `protobuf:"varint,11,opt,name=screen_height,json=screenHeight,proto3" json:"screen_height"`
}

func (x *ClientDeviceInfo) Reset() {
	*x = ClientDeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientDeviceInfo) ProtoMessage() {}

func (x *ClientDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientDeviceInfo.ProtoReflect.Descriptor instead.
func (*ClientDeviceInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{90}
}

func (x *ClientDeviceInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ClientDeviceInfo) GetHardware() string {
	if x != nil {
		return x.Hardware
	}
	return ""
}

func (x *ClientDeviceInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ClientDeviceInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *ClientDeviceInfo) GetIsBrowser() bool {
	if x != nil {
		return x.IsBrowser
	}
	return false
}

func (x *ClientDeviceInfo) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *ClientDeviceInfo) GetSalePlatform() string {
	if x != nil {
		return x.SalePlatform
	}
	return ""
}

func (x *ClientDeviceInfo) GetHardwareVendor() string {
	if x != nil {
		return x.HardwareVendor
	}
	return ""
}

func (x *ClientDeviceInfo) GetModelNumber() string {
	if x != nil {
		return x.ModelNumber
	}
	return ""
}

func (x *ClientDeviceInfo) GetScreenWidth() uint32 {
	if x != nil {
		return x.ScreenWidth
	}
	return 0
}

func (x *ClientDeviceInfo) GetScreenHeight() uint32 {
	if x != nil {
		return x.ScreenHeight
	}
	return 0
}

type ClientVersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource"`
	Package  string `protobuf:"bytes,2,opt,name=package,proto3" json:"package"`
}

func (x *ClientVersionInfo) Reset() {
	*x = ClientVersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientVersionInfo) ProtoMessage() {}

func (x *ClientVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientVersionInfo.ProtoReflect.Descriptor instead.
func (*ClientVersionInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{91}
}

func (x *ClientVersionInfo) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ClientVersionInfo) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

type Announcement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Content     string `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
	HeaderImage string `protobuf:"bytes,4,opt,name=header_image,json=headerImage,proto3" json:"header_image"`
}

func (x *Announcement) Reset() {
	*x = Announcement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Announcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Announcement) ProtoMessage() {}

func (x *Announcement) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Announcement.ProtoReflect.Descriptor instead.
func (*Announcement) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{92}
}

func (x *Announcement) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Announcement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Announcement) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Announcement) GetHeaderImage() string {
	if x != nil {
		return x.HeaderImage
	}
	return ""
}

type TaskProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Counter  uint32 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter"`
	Achieved bool   `protobuf:"varint,3,opt,name=achieved,proto3" json:"achieved"`
	Rewarded bool   `protobuf:"varint,4,opt,name=rewarded,proto3" json:"rewarded"`
	Failed   bool   `protobuf:"varint,5,opt,name=failed,proto3" json:"failed"`
}

func (x *TaskProgress) Reset() {
	*x = TaskProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProgress) ProtoMessage() {}

func (x *TaskProgress) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProgress.ProtoReflect.Descriptor instead.
func (*TaskProgress) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{93}
}

func (x *TaskProgress) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskProgress) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *TaskProgress) GetAchieved() bool {
	if x != nil {
		return x.Achieved
	}
	return false
}

func (x *TaskProgress) GetRewarded() bool {
	if x != nil {
		return x.Rewarded
	}
	return false
}

func (x *TaskProgress) GetFailed() bool {
	if x != nil {
		return x.Failed
	}
	return false
}

type GameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category uint32        `protobuf:"varint,1,opt,name=category,proto3" json:"category"`
	Mode     *GameMode     `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode"`
	Meta     *GameMetaData `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta"`
}

func (x *GameConfig) Reset() {
	*x = GameConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfig) ProtoMessage() {}

func (x *GameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfig.ProtoReflect.Descriptor instead.
func (*GameConfig) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{94}
}

func (x *GameConfig) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GameConfig) GetMode() *GameMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *GameConfig) GetMeta() *GameMetaData {
	if x != nil {
		return x.Meta
	}
	return nil
}

type RPGState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerDamaged  uint32 `protobuf:"varint,1,opt,name=player_damaged,json=playerDamaged,proto3" json:"player_damaged"`
	MonsterDamaged uint32 `protobuf:"varint,2,opt,name=monster_damaged,json=monsterDamaged,proto3" json:"monster_damaged"`
	MonsterSeq     uint32 `protobuf:"varint,3,opt,name=monster_seq,json=monsterSeq,proto3" json:"monster_seq"`
}

func (x *RPGState) Reset() {
	*x = RPGState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPGState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPGState) ProtoMessage() {}

func (x *RPGState) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPGState.ProtoReflect.Descriptor instead.
func (*RPGState) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{95}
}

func (x *RPGState) GetPlayerDamaged() uint32 {
	if x != nil {
		return x.PlayerDamaged
	}
	return 0
}

func (x *RPGState) GetMonsterDamaged() uint32 {
	if x != nil {
		return x.MonsterDamaged
	}
	return 0
}

func (x *RPGState) GetMonsterSeq() uint32 {
	if x != nil {
		return x.MonsterSeq
	}
	return 0
}

type RPGActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      uint32    `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	LastShowUuid    string    `protobuf:"bytes,5,opt,name=last_show_uuid,json=lastShowUuid,proto3" json:"last_show_uuid"`
	LastPlayedUuid  string    `protobuf:"bytes,6,opt,name=last_played_uuid,json=lastPlayedUuid,proto3" json:"last_played_uuid"`
	CurrentState    *RPGState `protobuf:"bytes,7,opt,name=current_state,json=currentState,proto3" json:"current_state"`
	LastShowState   *RPGState `protobuf:"bytes,8,opt,name=last_show_state,json=lastShowState,proto3" json:"last_show_state"`
	ReceivedRewards []uint32  `protobuf:"varint,9,rep,packed,name=received_rewards,json=receivedRewards,proto3" json:"received_rewards"`
	LastShowId      uint32    `protobuf:"varint,10,opt,name=last_show_id,json=lastShowId,proto3" json:"last_show_id"`
}

func (x *RPGActivity) Reset() {
	*x = RPGActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPGActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPGActivity) ProtoMessage() {}

func (x *RPGActivity) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPGActivity.ProtoReflect.Descriptor instead.
func (*RPGActivity) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{96}
}

func (x *RPGActivity) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *RPGActivity) GetLastShowUuid() string {
	if x != nil {
		return x.LastShowUuid
	}
	return ""
}

func (x *RPGActivity) GetLastPlayedUuid() string {
	if x != nil {
		return x.LastPlayedUuid
	}
	return ""
}

func (x *RPGActivity) GetCurrentState() *RPGState {
	if x != nil {
		return x.CurrentState
	}
	return nil
}

func (x *RPGActivity) GetLastShowState() *RPGState {
	if x != nil {
		return x.LastShowState
	}
	return nil
}

func (x *RPGActivity) GetReceivedRewards() []uint32 {
	if x != nil {
		return x.ReceivedRewards
	}
	return nil
}

func (x *RPGActivity) GetLastShowId() uint32 {
	if x != nil {
		return x.LastShowId
	}
	return 0
}

type ActivityArenaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinCount        uint32 `protobuf:"varint,1,opt,name=win_count,json=winCount,proto3" json:"win_count"`
	LoseCount       uint32 `protobuf:"varint,2,opt,name=lose_count,json=loseCount,proto3" json:"lose_count"`
	ActivityId      uint32 `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	EnterTime       uint32 `protobuf:"varint,4,opt,name=enter_time,json=enterTime,proto3" json:"enter_time"`
	DailyEnterCount uint32 `protobuf:"varint,5,opt,name=daily_enter_count,json=dailyEnterCount,proto3" json:"daily_enter_count"`
	DailyEnterTime  uint32 `protobuf:"varint,6,opt,name=daily_enter_time,json=dailyEnterTime,proto3" json:"daily_enter_time"`
	MaxWinCount     uint32 `protobuf:"varint,7,opt,name=max_win_count,json=maxWinCount,proto3" json:"max_win_count"`
	TotalWinCount   uint32 `protobuf:"varint,8,opt,name=total_win_count,json=totalWinCount,proto3" json:"total_win_count"`
}

func (x *ActivityArenaData) Reset() {
	*x = ActivityArenaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityArenaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityArenaData) ProtoMessage() {}

func (x *ActivityArenaData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityArenaData.ProtoReflect.Descriptor instead.
func (*ActivityArenaData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{97}
}

func (x *ActivityArenaData) GetWinCount() uint32 {
	if x != nil {
		return x.WinCount
	}
	return 0
}

func (x *ActivityArenaData) GetLoseCount() uint32 {
	if x != nil {
		return x.LoseCount
	}
	return 0
}

func (x *ActivityArenaData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityArenaData) GetEnterTime() uint32 {
	if x != nil {
		return x.EnterTime
	}
	return 0
}

func (x *ActivityArenaData) GetDailyEnterCount() uint32 {
	if x != nil {
		return x.DailyEnterCount
	}
	return 0
}

func (x *ActivityArenaData) GetDailyEnterTime() uint32 {
	if x != nil {
		return x.DailyEnterTime
	}
	return 0
}

func (x *ActivityArenaData) GetMaxWinCount() uint32 {
	if x != nil {
		return x.MaxWinCount
	}
	return 0
}

func (x *ActivityArenaData) GetTotalWinCount() uint32 {
	if x != nil {
		return x.TotalWinCount
	}
	return 0
}

type FeedActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId        uint32                              `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	FeedCount         uint32                              `protobuf:"varint,2,opt,name=feed_count,json=feedCount,proto3" json:"feed_count"`
	FriendReceiveData *FeedActivityData_CountWithTimeData `protobuf:"bytes,3,opt,name=friend_receive_data,json=friendReceiveData,proto3" json:"friend_receive_data"`
	FriendSendData    *FeedActivityData_CountWithTimeData `protobuf:"bytes,4,opt,name=friend_send_data,json=friendSendData,proto3" json:"friend_send_data"`
	GiftInbox         []*FeedActivityData_GiftBoxData     `protobuf:"bytes,5,rep,name=gift_inbox,json=giftInbox,proto3" json:"gift_inbox"`
}

func (x *FeedActivityData) Reset() {
	*x = FeedActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedActivityData) ProtoMessage() {}

func (x *FeedActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedActivityData.ProtoReflect.Descriptor instead.
func (*FeedActivityData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{98}
}

func (x *FeedActivityData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *FeedActivityData) GetFeedCount() uint32 {
	if x != nil {
		return x.FeedCount
	}
	return 0
}

func (x *FeedActivityData) GetFriendReceiveData() *FeedActivityData_CountWithTimeData {
	if x != nil {
		return x.FriendReceiveData
	}
	return nil
}

func (x *FeedActivityData) GetFriendSendData() *FeedActivityData_CountWithTimeData {
	if x != nil {
		return x.FriendSendData
	}
	return nil
}

func (x *FeedActivityData) GetGiftInbox() []*FeedActivityData_GiftBoxData {
	if x != nil {
		return x.GiftInbox
	}
	return nil
}

type SegmentTaskProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Counter       uint32 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter"`
	Achieved      bool   `protobuf:"varint,3,opt,name=achieved,proto3" json:"achieved"`
	Rewarded      bool   `protobuf:"varint,4,opt,name=rewarded,proto3" json:"rewarded"`
	Failed        bool   `protobuf:"varint,5,opt,name=failed,proto3" json:"failed"`
	RewardCount   uint32 `protobuf:"varint,6,opt,name=reward_count,json=rewardCount,proto3" json:"reward_count"`
	AchievedCount uint32 `protobuf:"varint,7,opt,name=achieved_count,json=achievedCount,proto3" json:"achieved_count"`
}

func (x *SegmentTaskProgress) Reset() {
	*x = SegmentTaskProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentTaskProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentTaskProgress) ProtoMessage() {}

func (x *SegmentTaskProgress) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentTaskProgress.ProtoReflect.Descriptor instead.
func (*SegmentTaskProgress) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{99}
}

func (x *SegmentTaskProgress) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SegmentTaskProgress) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *SegmentTaskProgress) GetAchieved() bool {
	if x != nil {
		return x.Achieved
	}
	return false
}

func (x *SegmentTaskProgress) GetRewarded() bool {
	if x != nil {
		return x.Rewarded
	}
	return false
}

func (x *SegmentTaskProgress) GetFailed() bool {
	if x != nil {
		return x.Failed
	}
	return false
}

func (x *SegmentTaskProgress) GetRewardCount() uint32 {
	if x != nil {
		return x.RewardCount
	}
	return 0
}

func (x *SegmentTaskProgress) GetAchievedCount() uint32 {
	if x != nil {
		return x.AchievedCount
	}
	return 0
}

type MineActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DigPoint []*Point      `protobuf:"bytes,1,rep,name=dig_point,json=digPoint,proto3" json:"dig_point"`
	Map      []*MineReward `protobuf:"bytes,2,rep,name=map,proto3" json:"map"`
	Id       uint32        `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
}

func (x *MineActivityData) Reset() {
	*x = MineActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MineActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MineActivityData) ProtoMessage() {}

func (x *MineActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MineActivityData.ProtoReflect.Descriptor instead.
func (*MineActivityData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{100}
}

func (x *MineActivityData) GetDigPoint() []*Point {
	if x != nil {
		return x.DigPoint
	}
	return nil
}

func (x *MineActivityData) GetMap() []*MineReward {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *MineActivityData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AccountActivityUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MineData       []*MineActivityData        `protobuf:"bytes,1,rep,name=mine_data,json=mineData,proto3" json:"mine_data"`
	RpgData        []*RPGActivity             `protobuf:"bytes,2,rep,name=rpg_data,json=rpgData,proto3" json:"rpg_data"`
	FeedData       []*ActivityFeedData        `protobuf:"bytes,3,rep,name=feed_data,json=feedData,proto3" json:"feed_data"`
	SpotData       []*ActivitySpotData        `protobuf:"bytes,4,rep,name=spot_data,json=spotData,proto3" json:"spot_data"`
	FriendGiftData []*ActivityFriendGiftData  `protobuf:"bytes,5,rep,name=friend_gift_data,json=friendGiftData,proto3" json:"friend_gift_data"`
	UpgradeData    []*ActivityUpgradeData     `protobuf:"bytes,6,rep,name=upgrade_data,json=upgradeData,proto3" json:"upgrade_data"`
	GachaData      []*ActivityGachaUpdateData `protobuf:"bytes,7,rep,name=gacha_data,json=gachaData,proto3" json:"gacha_data"`
}

func (x *AccountActivityUpdate) Reset() {
	*x = AccountActivityUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountActivityUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountActivityUpdate) ProtoMessage() {}

func (x *AccountActivityUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountActivityUpdate.ProtoReflect.Descriptor instead.
func (*AccountActivityUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{101}
}

func (x *AccountActivityUpdate) GetMineData() []*MineActivityData {
	if x != nil {
		return x.MineData
	}
	return nil
}

func (x *AccountActivityUpdate) GetRpgData() []*RPGActivity {
	if x != nil {
		return x.RpgData
	}
	return nil
}

func (x *AccountActivityUpdate) GetFeedData() []*ActivityFeedData {
	if x != nil {
		return x.FeedData
	}
	return nil
}

func (x *AccountActivityUpdate) GetSpotData() []*ActivitySpotData {
	if x != nil {
		return x.SpotData
	}
	return nil
}

func (x *AccountActivityUpdate) GetFriendGiftData() []*ActivityFriendGiftData {
	if x != nil {
		return x.FriendGiftData
	}
	return nil
}

func (x *AccountActivityUpdate) GetUpgradeData() []*ActivityUpgradeData {
	if x != nil {
		return x.UpgradeData
	}
	return nil
}

func (x *AccountActivityUpdate) GetGachaData() []*ActivityGachaUpdateData {
	if x != nil {
		return x.GachaData
	}
	return nil
}

type ActivityFeedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId        uint32                              `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	FeedCount         uint32                              `protobuf:"varint,2,opt,name=feed_count,json=feedCount,proto3" json:"feed_count"`
	FriendReceiveData *ActivityFeedData_CountWithTimeData `protobuf:"bytes,3,opt,name=friend_receive_data,json=friendReceiveData,proto3" json:"friend_receive_data"`
	FriendSendData    *ActivityFeedData_CountWithTimeData `protobuf:"bytes,4,opt,name=friend_send_data,json=friendSendData,proto3" json:"friend_send_data"`
	GiftInbox         []*ActivityFeedData_GiftBoxData     `protobuf:"bytes,5,rep,name=gift_inbox,json=giftInbox,proto3" json:"gift_inbox"`
	MaxInboxId        uint32                              `protobuf:"varint,6,opt,name=max_inbox_id,json=maxInboxId,proto3" json:"max_inbox_id"`
}

func (x *ActivityFeedData) Reset() {
	*x = ActivityFeedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFeedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFeedData) ProtoMessage() {}

func (x *ActivityFeedData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFeedData.ProtoReflect.Descriptor instead.
func (*ActivityFeedData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{102}
}

func (x *ActivityFeedData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityFeedData) GetFeedCount() uint32 {
	if x != nil {
		return x.FeedCount
	}
	return 0
}

func (x *ActivityFeedData) GetFriendReceiveData() *ActivityFeedData_CountWithTimeData {
	if x != nil {
		return x.FriendReceiveData
	}
	return nil
}

func (x *ActivityFeedData) GetFriendSendData() *ActivityFeedData_CountWithTimeData {
	if x != nil {
		return x.FriendSendData
	}
	return nil
}

func (x *ActivityFeedData) GetGiftInbox() []*ActivityFeedData_GiftBoxData {
	if x != nil {
		return x.GiftInbox
	}
	return nil
}

func (x *ActivityFeedData) GetMaxInboxId() uint32 {
	if x != nil {
		return x.MaxInboxId
	}
	return 0
}

type ActivityFriendGiftData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  uint32                                    `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	MaxInboxId  uint32                                    `protobuf:"varint,2,opt,name=max_inbox_id,json=maxInboxId,proto3" json:"max_inbox_id"`
	ReceiveData *ActivityFriendGiftData_CountWithTimeData `protobuf:"bytes,3,opt,name=receive_data,json=receiveData,proto3" json:"receive_data"`
	SendData    *ActivityFriendGiftData_CountWithTimeData `protobuf:"bytes,4,opt,name=send_data,json=sendData,proto3" json:"send_data"`
	GiftInbox   []*ActivityFriendGiftData_GiftBoxData     `protobuf:"bytes,5,rep,name=gift_inbox,json=giftInbox,proto3" json:"gift_inbox"`
}

func (x *ActivityFriendGiftData) Reset() {
	*x = ActivityFriendGiftData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFriendGiftData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFriendGiftData) ProtoMessage() {}

func (x *ActivityFriendGiftData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFriendGiftData.ProtoReflect.Descriptor instead.
func (*ActivityFriendGiftData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{103}
}

func (x *ActivityFriendGiftData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityFriendGiftData) GetMaxInboxId() uint32 {
	if x != nil {
		return x.MaxInboxId
	}
	return 0
}

func (x *ActivityFriendGiftData) GetReceiveData() *ActivityFriendGiftData_CountWithTimeData {
	if x != nil {
		return x.ReceiveData
	}
	return nil
}

func (x *ActivityFriendGiftData) GetSendData() *ActivityFriendGiftData_CountWithTimeData {
	if x != nil {
		return x.SendData
	}
	return nil
}

func (x *ActivityFriendGiftData) GetGiftInbox() []*ActivityFriendGiftData_GiftBoxData {
	if x != nil {
		return x.GiftInbox
	}
	return nil
}

type ActivityUpgradeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    uint32                            `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Groups        []*ActivityUpgradeData_LevelGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups"`
	ReceivedLevel uint32                            `protobuf:"varint,3,opt,name=received_level,json=receivedLevel,proto3" json:"received_level"`
}

func (x *ActivityUpgradeData) Reset() {
	*x = ActivityUpgradeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityUpgradeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityUpgradeData) ProtoMessage() {}

func (x *ActivityUpgradeData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityUpgradeData.ProtoReflect.Descriptor instead.
func (*ActivityUpgradeData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{104}
}

func (x *ActivityUpgradeData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityUpgradeData) GetGroups() []*ActivityUpgradeData_LevelGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ActivityUpgradeData) GetReceivedLevel() uint32 {
	if x != nil {
		return x.ReceivedLevel
	}
	return 0
}

type GachaRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *GachaRecord) Reset() {
	*x = GachaRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GachaRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GachaRecord) ProtoMessage() {}

func (x *GachaRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GachaRecord.ProtoReflect.Descriptor instead.
func (*GachaRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{105}
}

func (x *GachaRecord) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GachaRecord) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ActivityGachaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32         `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Gained     []*GachaRecord `protobuf:"bytes,2,rep,name=gained,proto3" json:"gained"`
}

func (x *ActivityGachaData) Reset() {
	*x = ActivityGachaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityGachaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityGachaData) ProtoMessage() {}

func (x *ActivityGachaData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityGachaData.ProtoReflect.Descriptor instead.
func (*ActivityGachaData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{106}
}

func (x *ActivityGachaData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityGachaData) GetGained() []*GachaRecord {
	if x != nil {
		return x.Gained
	}
	return nil
}

type ActivityGachaUpdateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  uint32         `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Gained      []*GachaRecord `protobuf:"bytes,2,rep,name=gained,proto3" json:"gained"`
	RemainCount uint32         `protobuf:"varint,3,opt,name=remain_count,json=remainCount,proto3" json:"remain_count"`
}

func (x *ActivityGachaUpdateData) Reset() {
	*x = ActivityGachaUpdateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityGachaUpdateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityGachaUpdateData) ProtoMessage() {}

func (x *ActivityGachaUpdateData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityGachaUpdateData.ProtoReflect.Descriptor instead.
func (*ActivityGachaUpdateData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{107}
}

func (x *ActivityGachaUpdateData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityGachaUpdateData) GetGained() []*GachaRecord {
	if x != nil {
		return x.Gained
	}
	return nil
}

func (x *ActivityGachaUpdateData) GetRemainCount() uint32 {
	if x != nil {
		return x.RemainCount
	}
	return 0
}

type ActivitySpotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32                       `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Spots      []*ActivitySpotData_SpotData `protobuf:"bytes,3,rep,name=spots,proto3" json:"spots"`
}

func (x *ActivitySpotData) Reset() {
	*x = ActivitySpotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivitySpotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySpotData) ProtoMessage() {}

func (x *ActivitySpotData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySpotData.ProtoReflect.Descriptor instead.
func (*ActivitySpotData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{108}
}

func (x *ActivitySpotData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivitySpotData) GetSpots() []*ActivitySpotData_SpotData {
	if x != nil {
		return x.Spots
	}
	return nil
}

type AccountActiveState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint32              `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	LoginTime  uint32              `protobuf:"varint,2,opt,name=login_time,json=loginTime,proto3" json:"login_time"`
	LogoutTime uint32              `protobuf:"varint,3,opt,name=logout_time,json=logoutTime,proto3" json:"logout_time"`
	IsOnline   bool                `protobuf:"varint,4,opt,name=is_online,json=isOnline,proto3" json:"is_online"`
	Playing    *AccountPlayingGame `protobuf:"bytes,5,opt,name=playing,proto3" json:"playing"`
}

func (x *AccountActiveState) Reset() {
	*x = AccountActiveState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountActiveState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountActiveState) ProtoMessage() {}

func (x *AccountActiveState) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountActiveState.ProtoReflect.Descriptor instead.
func (*AccountActiveState) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{109}
}

func (x *AccountActiveState) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountActiveState) GetLoginTime() uint32 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *AccountActiveState) GetLogoutTime() uint32 {
	if x != nil {
		return x.LogoutTime
	}
	return 0
}

func (x *AccountActiveState) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *AccountActiveState) GetPlaying() *AccountPlayingGame {
	if x != nil {
		return x.Playing
	}
	return nil
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *PlayerBaseView     `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	State *AccountActiveState `protobuf:"bytes,2,opt,name=state,proto3" json:"state"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{110}
}

func (x *Friend) GetBase() *PlayerBaseView {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Friend) GetState() *AccountActiveState {
	if x != nil {
		return x.State
	}
	return nil
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X uint32 `protobuf:"varint,1,opt,name=x,proto3" json:"x"`
	Y uint32 `protobuf:"varint,2,opt,name=y,proto3" json:"y"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{111}
}

func (x *Point) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type MineReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point    *Point `protobuf:"bytes,1,opt,name=point,proto3" json:"point"`
	RewardId uint32 `protobuf:"varint,2,opt,name=reward_id,json=rewardId,proto3" json:"reward_id"`
	Received bool   `protobuf:"varint,3,opt,name=received,proto3" json:"received"`
}

func (x *MineReward) Reset() {
	*x = MineReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MineReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MineReward) ProtoMessage() {}

func (x *MineReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MineReward.ProtoReflect.Descriptor instead.
func (*MineReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{112}
}

func (x *MineReward) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *MineReward) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *MineReward) GetReceived() bool {
	if x != nil {
		return x.Received
	}
	return false
}

type GameLiveUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp      uint32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp"`
	ActionCategory uint32 `protobuf:"varint,2,opt,name=action_category,json=actionCategory,proto3" json:"action_category"`
	ActionData     []byte `protobuf:"bytes,3,opt,name=action_data,json=actionData,proto3" json:"action_data"`
}

func (x *GameLiveUnit) Reset() {
	*x = GameLiveUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLiveUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLiveUnit) ProtoMessage() {}

func (x *GameLiveUnit) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLiveUnit.ProtoReflect.Descriptor instead.
func (*GameLiveUnit) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{113}
}

func (x *GameLiveUnit) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GameLiveUnit) GetActionCategory() uint32 {
	if x != nil {
		return x.ActionCategory
	}
	return 0
}

func (x *GameLiveUnit) GetActionData() []byte {
	if x != nil {
		return x.ActionData
	}
	return nil
}

type GameLiveSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*GameLiveUnit `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions"`
}

func (x *GameLiveSegment) Reset() {
	*x = GameLiveSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLiveSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLiveSegment) ProtoMessage() {}

func (x *GameLiveSegment) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLiveSegment.ProtoReflect.Descriptor instead.
func (*GameLiveSegment) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{114}
}

func (x *GameLiveSegment) GetActions() []*GameLiveUnit {
	if x != nil {
		return x.Actions
	}
	return nil
}

type GameLiveSegmentUri struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentId  uint32 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id"`
	SegmentUri string `protobuf:"bytes,2,opt,name=segment_uri,json=segmentUri,proto3" json:"segment_uri"`
}

func (x *GameLiveSegmentUri) Reset() {
	*x = GameLiveSegmentUri{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLiveSegmentUri) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLiveSegmentUri) ProtoMessage() {}

func (x *GameLiveSegmentUri) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLiveSegmentUri.ProtoReflect.Descriptor instead.
func (*GameLiveSegmentUri) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{115}
}

func (x *GameLiveSegmentUri) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *GameLiveSegmentUri) GetSegmentUri() string {
	if x != nil {
		return x.SegmentUri
	}
	return ""
}

type GameLiveHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
	StartTime  uint32            `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	GameConfig *GameConfig       `protobuf:"bytes,3,opt,name=game_config,json=gameConfig,proto3" json:"game_config"`
	Players    []*PlayerGameView `protobuf:"bytes,4,rep,name=players,proto3" json:"players"`
	SeatList   []uint32          `protobuf:"varint,5,rep,packed,name=seat_list,json=seatList,proto3" json:"seat_list"`
}

func (x *GameLiveHead) Reset() {
	*x = GameLiveHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLiveHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLiveHead) ProtoMessage() {}

func (x *GameLiveHead) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLiveHead.ProtoReflect.Descriptor instead.
func (*GameLiveHead) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{116}
}

func (x *GameLiveHead) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GameLiveHead) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GameLiveHead) GetGameConfig() *GameConfig {
	if x != nil {
		return x.GameConfig
	}
	return nil
}

func (x *GameLiveHead) GetPlayers() []*PlayerGameView {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameLiveHead) GetSeatList() []uint32 {
	if x != nil {
		return x.SeatList
	}
	return nil
}

type GameNewRoundState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatStates []uint32 `protobuf:"varint,1,rep,packed,name=seat_states,json=seatStates,proto3" json:"seat_states"`
}

func (x *GameNewRoundState) Reset() {
	*x = GameNewRoundState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameNewRoundState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameNewRoundState) ProtoMessage() {}

func (x *GameNewRoundState) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameNewRoundState.ProtoReflect.Descriptor instead.
func (*GameNewRoundState) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{117}
}

func (x *GameNewRoundState) GetSeatStates() []uint32 {
	if x != nil {
		return x.SeatStates
	}
	return nil
}

type GameEndAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State uint32 `protobuf:"varint,1,opt,name=state,proto3" json:"state"`
}

func (x *GameEndAction) Reset() {
	*x = GameEndAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEndAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndAction) ProtoMessage() {}

func (x *GameEndAction) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndAction.ProtoReflect.Descriptor instead.
func (*GameEndAction) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{118}
}

func (x *GameEndAction) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type GameNoopAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameNoopAction) Reset() {
	*x = GameNoopAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameNoopAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameNoopAction) ProtoMessage() {}

func (x *GameNoopAction) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameNoopAction.ProtoReflect.Descriptor instead.
func (*GameNoopAction) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{119}
}

type CommentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId uint32          `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id"`
	Timestamp uint32          `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp"`
	Commenter *PlayerBaseView `protobuf:"bytes,3,opt,name=commenter,proto3" json:"commenter"`
	Content   string          `protobuf:"bytes,4,opt,name=content,proto3" json:"content"`
	IsBanned  uint32          `protobuf:"varint,5,opt,name=is_banned,json=isBanned,proto3" json:"is_banned"`
}

func (x *CommentItem) Reset() {
	*x = CommentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentItem) ProtoMessage() {}

func (x *CommentItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentItem.ProtoReflect.Descriptor instead.
func (*CommentItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{120}
}

func (x *CommentItem) GetCommentId() uint32 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentItem) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CommentItem) GetCommenter() *PlayerBaseView {
	if x != nil {
		return x.Commenter
	}
	return nil
}

func (x *CommentItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentItem) GetIsBanned() uint32 {
	if x != nil {
		return x.IsBanned
	}
	return 0
}

type RollingNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Content        string `protobuf:"bytes,2,opt,name=content,proto3" json:"content"`
	StartTime      uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime        uint32 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	RepeatInterval uint32 `protobuf:"varint,5,opt,name=repeat_interval,json=repeatInterval,proto3" json:"repeat_interval"`
	Lang           string `protobuf:"bytes,6,opt,name=lang,proto3" json:"lang"`
}

func (x *RollingNotice) Reset() {
	*x = RollingNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollingNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollingNotice) ProtoMessage() {}

func (x *RollingNotice) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollingNotice.ProtoReflect.Descriptor instead.
func (*RollingNotice) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{121}
}

func (x *RollingNotice) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RollingNotice) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RollingNotice) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RollingNotice) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RollingNotice) GetRepeatInterval() uint32 {
	if x != nil {
		return x.RepeatInterval
	}
	return 0
}

func (x *RollingNotice) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type BillingGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Desc          string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc"`
	Icon          string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon"`
	ResourceId    uint32 `protobuf:"varint,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id"`
	ResourceCount uint32 `protobuf:"varint,6,opt,name=resource_count,json=resourceCount,proto3" json:"resource_count"`
}

func (x *BillingGoods) Reset() {
	*x = BillingGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingGoods) ProtoMessage() {}

func (x *BillingGoods) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingGoods.ProtoReflect.Descriptor instead.
func (*BillingGoods) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{122}
}

func (x *BillingGoods) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BillingGoods) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BillingGoods) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *BillingGoods) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *BillingGoods) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *BillingGoods) GetResourceCount() uint32 {
	if x != nil {
		return x.ResourceCount
	}
	return 0
}

type BillShortcut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count     uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	DealPrice uint32 `protobuf:"varint,3,opt,name=deal_price,json=dealPrice,proto3" json:"deal_price"`
}

func (x *BillShortcut) Reset() {
	*x = BillShortcut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillShortcut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillShortcut) ProtoMessage() {}

func (x *BillShortcut) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillShortcut.ProtoReflect.Descriptor instead.
func (*BillShortcut) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{123}
}

func (x *BillShortcut) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BillShortcut) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BillShortcut) GetDealPrice() uint32 {
	if x != nil {
		return x.DealPrice
	}
	return 0
}

type BillingProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods         *BillingGoods `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods"`
	CurrencyCode  string        `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code"`
	CurrencyPrice uint32        `protobuf:"varint,3,opt,name=currency_price,json=currencyPrice,proto3" json:"currency_price"`
	SortWeight    uint32        `protobuf:"varint,4,opt,name=sort_weight,json=sortWeight,proto3" json:"sort_weight"`
}

func (x *BillingProduct) Reset() {
	*x = BillingProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingProduct) ProtoMessage() {}

func (x *BillingProduct) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingProduct.ProtoReflect.Descriptor instead.
func (*BillingProduct) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{124}
}

func (x *BillingProduct) GetGoods() *BillingGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *BillingProduct) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *BillingProduct) GetCurrencyPrice() uint32 {
	if x != nil {
		return x.CurrencyPrice
	}
	return 0
}

func (x *BillingProduct) GetSortWeight() uint32 {
	if x != nil {
		return x.SortWeight
	}
	return 0
}

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charid        uint32      `protobuf:"varint,1,opt,name=charid,proto3" json:"charid"`
	Level         uint32      `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	Exp           uint32      `protobuf:"varint,3,opt,name=exp,proto3" json:"exp"`
	Views         []*ViewSlot `protobuf:"bytes,4,rep,name=views,proto3" json:"views"`
	Skin          uint32      `protobuf:"varint,5,opt,name=skin,proto3" json:"skin"`
	IsUpgraded    bool        `protobuf:"varint,6,opt,name=is_upgraded,json=isUpgraded,proto3" json:"is_upgraded"`
	ExtraEmoji    []uint32    `protobuf:"varint,7,rep,packed,name=extra_emoji,json=extraEmoji,proto3" json:"extra_emoji"`
	RewardedLevel []uint32    `protobuf:"varint,8,rep,packed,name=rewarded_level,json=rewardedLevel,proto3" json:"rewarded_level"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{125}
}

func (x *Character) GetCharid() uint32 {
	if x != nil {
		return x.Charid
	}
	return 0
}

func (x *Character) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Character) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *Character) GetViews() []*ViewSlot {
	if x != nil {
		return x.Views
	}
	return nil
}

func (x *Character) GetSkin() uint32 {
	if x != nil {
		return x.Skin
	}
	return 0
}

func (x *Character) GetIsUpgraded() bool {
	if x != nil {
		return x.IsUpgraded
	}
	return false
}

func (x *Character) GetExtraEmoji() []uint32 {
	if x != nil {
		return x.ExtraEmoji
	}
	return nil
}

func (x *Character) GetRewardedLevel() []uint32 {
	if x != nil {
		return x.RewardedLevel
	}
	return nil
}

type BuyRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *BuyRecord) Reset() {
	*x = BuyRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyRecord) ProtoMessage() {}

func (x *BuyRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyRecord.ProtoReflect.Descriptor instead.
func (*BuyRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{126}
}

func (x *BuyRecord) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuyRecord) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ZHPShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods       []uint32              `protobuf:"varint,1,rep,packed,name=goods,proto3" json:"goods"`
	BuyRecords  []*BuyRecord          `protobuf:"bytes,2,rep,name=buy_records,json=buyRecords,proto3" json:"buy_records"`
	FreeRefresh *ZHPShop_RefreshCount `protobuf:"bytes,3,opt,name=free_refresh,json=freeRefresh,proto3" json:"free_refresh"`
	CostRefresh *ZHPShop_RefreshCount `protobuf:"bytes,4,opt,name=cost_refresh,json=costRefresh,proto3" json:"cost_refresh"`
}

func (x *ZHPShop) Reset() {
	*x = ZHPShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZHPShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZHPShop) ProtoMessage() {}

func (x *ZHPShop) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZHPShop.ProtoReflect.Descriptor instead.
func (*ZHPShop) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{127}
}

func (x *ZHPShop) GetGoods() []uint32 {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *ZHPShop) GetBuyRecords() []*BuyRecord {
	if x != nil {
		return x.BuyRecords
	}
	return nil
}

func (x *ZHPShop) GetFreeRefresh() *ZHPShop_RefreshCount {
	if x != nil {
		return x.FreeRefresh
	}
	return nil
}

func (x *ZHPShop) GetCostRefresh() *ZHPShop_RefreshCount {
	if x != nil {
		return x.CostRefresh
	}
	return nil
}

type MonthTicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	EndTime     uint32 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	LastPayTime uint32 `protobuf:"varint,3,opt,name=last_pay_time,json=lastPayTime,proto3" json:"last_pay_time"`
}

func (x *MonthTicketInfo) Reset() {
	*x = MonthTicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthTicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthTicketInfo) ProtoMessage() {}

func (x *MonthTicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthTicketInfo.ProtoReflect.Descriptor instead.
func (*MonthTicketInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{128}
}

func (x *MonthTicketInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MonthTicketInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MonthTicketInfo) GetLastPayTime() uint32 {
	if x != nil {
		return x.LastPayTime
	}
	return 0
}

type ShopInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zhp             *ZHPShop     `protobuf:"bytes,1,opt,name=zhp,proto3" json:"zhp"`
	BuyRecords      []*BuyRecord `protobuf:"bytes,2,rep,name=buy_records,json=buyRecords,proto3" json:"buy_records"`
	LastRefreshTime uint32       `protobuf:"varint,3,opt,name=last_refresh_time,json=lastRefreshTime,proto3" json:"last_refresh_time"`
}

func (x *ShopInfo) Reset() {
	*x = ShopInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopInfo) ProtoMessage() {}

func (x *ShopInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopInfo.ProtoReflect.Descriptor instead.
func (*ShopInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{129}
}

func (x *ShopInfo) GetZhp() *ZHPShop {
	if x != nil {
		return x.Zhp
	}
	return nil
}

func (x *ShopInfo) GetBuyRecords() []*BuyRecord {
	if x != nil {
		return x.BuyRecords
	}
	return nil
}

func (x *ShopInfo) GetLastRefreshTime() uint32 {
	if x != nil {
		return x.LastRefreshTime
	}
	return 0
}

type ChangeNicknameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to"`
	Time uint32 `protobuf:"varint,3,opt,name=time,proto3" json:"time"`
}

func (x *ChangeNicknameRecord) Reset() {
	*x = ChangeNicknameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNicknameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNicknameRecord) ProtoMessage() {}

func (x *ChangeNicknameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNicknameRecord.ProtoReflect.Descriptor instead.
func (*ChangeNicknameRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{130}
}

func (x *ChangeNicknameRecord) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ChangeNicknameRecord) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ChangeNicknameRecord) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ServerSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSetting   *PaymentSetting   `protobuf:"bytes,3,opt,name=payment_setting,json=paymentSetting,proto3" json:"payment_setting"`
	PaymentSettingV2 *PaymentSettingV2 `protobuf:"bytes,4,opt,name=payment_setting_v2,json=paymentSettingV2,proto3" json:"payment_setting_v2"`
	NicknameSetting  *NicknameSetting  `protobuf:"bytes,5,opt,name=nickname_setting,json=nicknameSetting,proto3" json:"nickname_setting"`
}

func (x *ServerSettings) Reset() {
	*x = ServerSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSettings) ProtoMessage() {}

func (x *ServerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSettings.ProtoReflect.Descriptor instead.
func (*ServerSettings) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{131}
}

func (x *ServerSettings) GetPaymentSetting() *PaymentSetting {
	if x != nil {
		return x.PaymentSetting
	}
	return nil
}

func (x *ServerSettings) GetPaymentSettingV2() *PaymentSettingV2 {
	if x != nil {
		return x.PaymentSettingV2
	}
	return nil
}

func (x *ServerSettings) GetNicknameSetting() *NicknameSetting {
	if x != nil {
		return x.NicknameSetting
	}
	return nil
}

type NicknameSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable    uint32   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable"`
	Nicknames []string `protobuf:"bytes,2,rep,name=nicknames,proto3" json:"nicknames"`
}

func (x *NicknameSetting) Reset() {
	*x = NicknameSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NicknameSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NicknameSetting) ProtoMessage() {}

func (x *NicknameSetting) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NicknameSetting.ProtoReflect.Descriptor instead.
func (*NicknameSetting) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{132}
}

func (x *NicknameSetting) GetEnable() uint32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *NicknameSetting) GetNicknames() []string {
	if x != nil {
		return x.Nicknames
	}
	return nil
}

type PaymentSettingV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayment      uint32                                 `protobuf:"varint,1,opt,name=open_payment,json=openPayment,proto3" json:"open_payment"`
	PaymentPlatforms []*PaymentSettingV2_PaymentSettingUnit `protobuf:"bytes,2,rep,name=payment_platforms,json=paymentPlatforms,proto3" json:"payment_platforms"`
}

func (x *PaymentSettingV2) Reset() {
	*x = PaymentSettingV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSettingV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSettingV2) ProtoMessage() {}

func (x *PaymentSettingV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSettingV2.ProtoReflect.Descriptor instead.
func (*PaymentSettingV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{133}
}

func (x *PaymentSettingV2) GetOpenPayment() uint32 {
	if x != nil {
		return x.OpenPayment
	}
	return 0
}

func (x *PaymentSettingV2) GetPaymentPlatforms() []*PaymentSettingV2_PaymentSettingUnit {
	if x != nil {
		return x.PaymentPlatforms
	}
	return nil
}

type PaymentSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayment         uint32                     `protobuf:"varint,1,opt,name=open_payment,json=openPayment,proto3" json:"open_payment"`
	PaymentInfoShowType uint32                     `protobuf:"varint,2,opt,name=payment_info_show_type,json=paymentInfoShowType,proto3" json:"payment_info_show_type"`
	PaymentInfo         string                     `protobuf:"bytes,3,opt,name=payment_info,json=paymentInfo,proto3" json:"payment_info"`
	Wechat              *PaymentSetting_WechatData `protobuf:"bytes,4,opt,name=wechat,proto3" json:"wechat"`
	Alipay              *PaymentSetting_AlipayData `protobuf:"bytes,5,opt,name=alipay,proto3" json:"alipay"`
}

func (x *PaymentSetting) Reset() {
	*x = PaymentSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSetting) ProtoMessage() {}

func (x *PaymentSetting) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSetting.ProtoReflect.Descriptor instead.
func (*PaymentSetting) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{134}
}

func (x *PaymentSetting) GetOpenPayment() uint32 {
	if x != nil {
		return x.OpenPayment
	}
	return 0
}

func (x *PaymentSetting) GetPaymentInfoShowType() uint32 {
	if x != nil {
		return x.PaymentInfoShowType
	}
	return 0
}

func (x *PaymentSetting) GetPaymentInfo() string {
	if x != nil {
		return x.PaymentInfo
	}
	return ""
}

func (x *PaymentSetting) GetWechat() *PaymentSetting_WechatData {
	if x != nil {
		return x.Wechat
	}
	return nil
}

func (x *PaymentSetting) GetAlipay() *PaymentSetting_AlipayData {
	if x != nil {
		return x.Alipay
	}
	return nil
}

type AccountSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value"`
}

func (x *AccountSetting) Reset() {
	*x = AccountSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSetting) ProtoMessage() {}

func (x *AccountSetting) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSetting.ProtoReflect.Descriptor instead.
func (*AccountSetting) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{135}
}

func (x *AccountSetting) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *AccountSetting) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ChestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChestId        uint32 `protobuf:"varint,1,opt,name=chest_id,json=chestId,proto3" json:"chest_id"`
	TotalOpenCount uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount,proto3" json:"total_open_count"`
	ConsumeCount   uint32 `protobuf:"varint,3,opt,name=consume_count,json=consumeCount,proto3" json:"consume_count"`
	FaceBlackCount uint32 `protobuf:"varint,4,opt,name=face_black_count,json=faceBlackCount,proto3" json:"face_black_count"`
}

func (x *ChestData) Reset() {
	*x = ChestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChestData) ProtoMessage() {}

func (x *ChestData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChestData.ProtoReflect.Descriptor instead.
func (*ChestData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{136}
}

func (x *ChestData) GetChestId() uint32 {
	if x != nil {
		return x.ChestId
	}
	return 0
}

func (x *ChestData) GetTotalOpenCount() uint32 {
	if x != nil {
		return x.TotalOpenCount
	}
	return 0
}

func (x *ChestData) GetConsumeCount() uint32 {
	if x != nil {
		return x.ConsumeCount
	}
	return 0
}

func (x *ChestData) GetFaceBlackCount() uint32 {
	if x != nil {
		return x.FaceBlackCount
	}
	return 0
}

type ChestDataV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChestId              uint32 `protobuf:"varint,1,opt,name=chest_id,json=chestId,proto3" json:"chest_id"`
	TotalOpenCount       uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount,proto3" json:"total_open_count"`
	FaceBlackCount       uint32 `protobuf:"varint,3,opt,name=face_black_count,json=faceBlackCount,proto3" json:"face_black_count"`
	TicketFaceBlackCount uint32 `protobuf:"varint,4,opt,name=ticket_face_black_count,json=ticketFaceBlackCount,proto3" json:"ticket_face_black_count"`
}

func (x *ChestDataV2) Reset() {
	*x = ChestDataV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChestDataV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChestDataV2) ProtoMessage() {}

func (x *ChestDataV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChestDataV2.ProtoReflect.Descriptor instead.
func (*ChestDataV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{137}
}

func (x *ChestDataV2) GetChestId() uint32 {
	if x != nil {
		return x.ChestId
	}
	return 0
}

func (x *ChestDataV2) GetTotalOpenCount() uint32 {
	if x != nil {
		return x.TotalOpenCount
	}
	return 0
}

func (x *ChestDataV2) GetFaceBlackCount() uint32 {
	if x != nil {
		return x.FaceBlackCount
	}
	return 0
}

func (x *ChestDataV2) GetTicketFaceBlackCount() uint32 {
	if x != nil {
		return x.TicketFaceBlackCount
	}
	return 0
}

type FaithData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaithId        uint32 `protobuf:"varint,1,opt,name=faith_id,json=faithId,proto3" json:"faith_id"`
	TotalOpenCount uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount,proto3" json:"total_open_count"`
	ConsumeCount   uint32 `protobuf:"varint,3,opt,name=consume_count,json=consumeCount,proto3" json:"consume_count"`
	ModifyCount    int32  `protobuf:"varint,4,opt,name=modify_count,json=modifyCount,proto3" json:"modify_count"`
}

func (x *FaithData) Reset() {
	*x = FaithData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaithData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaithData) ProtoMessage() {}

func (x *FaithData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaithData.ProtoReflect.Descriptor instead.
func (*FaithData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{138}
}

func (x *FaithData) GetFaithId() uint32 {
	if x != nil {
		return x.FaithId
	}
	return 0
}

func (x *FaithData) GetTotalOpenCount() uint32 {
	if x != nil {
		return x.TotalOpenCount
	}
	return 0
}

func (x *FaithData) GetConsumeCount() uint32 {
	if x != nil {
		return x.ConsumeCount
	}
	return 0
}

func (x *FaithData) GetModifyCount() int32 {
	if x != nil {
		return x.ModifyCount
	}
	return 0
}

type CustomizedContestBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId    uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	ContestId   uint32 `protobuf:"varint,2,opt,name=contest_id,json=contestId,proto3" json:"contest_id"`
	ContestName string `protobuf:"bytes,3,opt,name=contest_name,json=contestName,proto3" json:"contest_name"`
	State       uint32 `protobuf:"varint,4,opt,name=state,proto3" json:"state"`
	CreatorId   uint32 `protobuf:"varint,5,opt,name=creator_id,json=creatorId,proto3" json:"creator_id"`
	CreateTime  uint32 `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	StartTime   uint32 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	FinishTime  uint32 `protobuf:"varint,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time"`
	Open        bool   `protobuf:"varint,9,opt,name=open,proto3" json:"open"`
	ContestType uint32 `protobuf:"varint,10,opt,name=contest_type,json=contestType,proto3" json:"contest_type"`
}

func (x *CustomizedContestBase) Reset() {
	*x = CustomizedContestBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestBase) ProtoMessage() {}

func (x *CustomizedContestBase) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestBase.ProtoReflect.Descriptor instead.
func (*CustomizedContestBase) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{139}
}

func (x *CustomizedContestBase) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContestBase) GetContestId() uint32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *CustomizedContestBase) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *CustomizedContestBase) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CustomizedContestBase) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CustomizedContestBase) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizedContestBase) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CustomizedContestBase) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *CustomizedContestBase) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *CustomizedContestBase) GetContestType() uint32 {
	if x != nil {
		return x.ContestType
	}
	return 0
}

type CustomizedContestExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId     uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	PublicNotice string `protobuf:"bytes,2,opt,name=public_notice,json=publicNotice,proto3" json:"public_notice"`
}

func (x *CustomizedContestExtend) Reset() {
	*x = CustomizedContestExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestExtend) ProtoMessage() {}

func (x *CustomizedContestExtend) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestExtend.ProtoReflect.Descriptor instead.
func (*CustomizedContestExtend) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{140}
}

func (x *CustomizedContestExtend) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContestExtend) GetPublicNotice() string {
	if x != nil {
		return x.PublicNotice
	}
	return ""
}

type CustomizedContestAbstract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId     uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	ContestId    uint32 `protobuf:"varint,2,opt,name=contest_id,json=contestId,proto3" json:"contest_id"`
	ContestName  string `protobuf:"bytes,3,opt,name=contest_name,json=contestName,proto3" json:"contest_name"`
	State        uint32 `protobuf:"varint,4,opt,name=state,proto3" json:"state"`
	CreatorId    uint32 `protobuf:"varint,5,opt,name=creator_id,json=creatorId,proto3" json:"creator_id"`
	CreateTime   uint32 `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	StartTime    uint32 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	FinishTime   uint32 `protobuf:"varint,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time"`
	Open         bool   `protobuf:"varint,9,opt,name=open,proto3" json:"open"`
	PublicNotice string `protobuf:"bytes,10,opt,name=public_notice,json=publicNotice,proto3" json:"public_notice"`
	ContestType  uint32 `protobuf:"varint,11,opt,name=contest_type,json=contestType,proto3" json:"contest_type"`
}

func (x *CustomizedContestAbstract) Reset() {
	*x = CustomizedContestAbstract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestAbstract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestAbstract) ProtoMessage() {}

func (x *CustomizedContestAbstract) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestAbstract.ProtoReflect.Descriptor instead.
func (*CustomizedContestAbstract) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{141}
}

func (x *CustomizedContestAbstract) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContestAbstract) GetContestId() uint32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *CustomizedContestAbstract) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *CustomizedContestAbstract) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CustomizedContestAbstract) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CustomizedContestAbstract) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizedContestAbstract) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CustomizedContestAbstract) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *CustomizedContestAbstract) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *CustomizedContestAbstract) GetPublicNotice() string {
	if x != nil {
		return x.PublicNotice
	}
	return ""
}

func (x *CustomizedContestAbstract) GetContestType() uint32 {
	if x != nil {
		return x.ContestType
	}
	return 0
}

type CustomizedContestDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId         uint32    `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	ContestId        uint32    `protobuf:"varint,2,opt,name=contest_id,json=contestId,proto3" json:"contest_id"`
	ContestName      string    `protobuf:"bytes,3,opt,name=contest_name,json=contestName,proto3" json:"contest_name"`
	State            uint32    `protobuf:"varint,4,opt,name=state,proto3" json:"state"`
	CreatorId        uint32    `protobuf:"varint,5,opt,name=creator_id,json=creatorId,proto3" json:"creator_id"`
	CreateTime       uint32    `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	StartTime        uint32    `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	FinishTime       uint32    `protobuf:"varint,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time"`
	Open             bool      `protobuf:"varint,9,opt,name=open,proto3" json:"open"`
	RankRule         uint32    `protobuf:"varint,10,opt,name=rank_rule,json=rankRule,proto3" json:"rank_rule"`
	GameMode         *GameMode `protobuf:"bytes,11,opt,name=game_mode,json=gameMode,proto3" json:"game_mode"`
	PrivateNotice    string    `protobuf:"bytes,12,opt,name=private_notice,json=privateNotice,proto3" json:"private_notice"`
	ObserverSwitch   uint32    `protobuf:"varint,13,opt,name=observer_switch,json=observerSwitch,proto3" json:"observer_switch"`
	EmojiSwitch      uint32    `protobuf:"varint,14,opt,name=emoji_switch,json=emojiSwitch,proto3" json:"emoji_switch"`
	ContestType      uint32    `protobuf:"varint,15,opt,name=contest_type,json=contestType,proto3" json:"contest_type"`
	DisableBroadcast uint32    `protobuf:"varint,16,opt,name=disable_broadcast,json=disableBroadcast,proto3" json:"disable_broadcast"`
}

func (x *CustomizedContestDetail) Reset() {
	*x = CustomizedContestDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestDetail) ProtoMessage() {}

func (x *CustomizedContestDetail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestDetail.ProtoReflect.Descriptor instead.
func (*CustomizedContestDetail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{142}
}

func (x *CustomizedContestDetail) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContestDetail) GetContestId() uint32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *CustomizedContestDetail) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *CustomizedContestDetail) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CustomizedContestDetail) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CustomizedContestDetail) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizedContestDetail) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CustomizedContestDetail) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *CustomizedContestDetail) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *CustomizedContestDetail) GetRankRule() uint32 {
	if x != nil {
		return x.RankRule
	}
	return 0
}

func (x *CustomizedContestDetail) GetGameMode() *GameMode {
	if x != nil {
		return x.GameMode
	}
	return nil
}

func (x *CustomizedContestDetail) GetPrivateNotice() string {
	if x != nil {
		return x.PrivateNotice
	}
	return ""
}

func (x *CustomizedContestDetail) GetObserverSwitch() uint32 {
	if x != nil {
		return x.ObserverSwitch
	}
	return 0
}

func (x *CustomizedContestDetail) GetEmojiSwitch() uint32 {
	if x != nil {
		return x.EmojiSwitch
	}
	return 0
}

func (x *CustomizedContestDetail) GetContestType() uint32 {
	if x != nil {
		return x.ContestType
	}
	return 0
}

func (x *CustomizedContestDetail) GetDisableBroadcast() uint32 {
	if x != nil {
		return x.DisableBroadcast
	}
	return 0
}

type CustomizedContestPlayerReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankRule       uint32   `protobuf:"varint,1,opt,name=rank_rule,json=rankRule,proto3" json:"rank_rule"`
	Rank           uint32   `protobuf:"varint,2,opt,name=rank,proto3" json:"rank"`
	Point          int32    `protobuf:"varint,3,opt,name=point,proto3" json:"point"`
	GameRanks      []uint32 `protobuf:"varint,4,rep,packed,name=game_ranks,json=gameRanks,proto3" json:"game_ranks"`
	TotalGameCount uint32   `protobuf:"varint,5,opt,name=total_game_count,json=totalGameCount,proto3" json:"total_game_count"`
}

func (x *CustomizedContestPlayerReport) Reset() {
	*x = CustomizedContestPlayerReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestPlayerReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestPlayerReport) ProtoMessage() {}

func (x *CustomizedContestPlayerReport) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestPlayerReport.ProtoReflect.Descriptor instead.
func (*CustomizedContestPlayerReport) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{143}
}

func (x *CustomizedContestPlayerReport) GetRankRule() uint32 {
	if x != nil {
		return x.RankRule
	}
	return 0
}

func (x *CustomizedContestPlayerReport) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *CustomizedContestPlayerReport) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *CustomizedContestPlayerReport) GetGameRanks() []uint32 {
	if x != nil {
		return x.GameRanks
	}
	return nil
}

func (x *CustomizedContestPlayerReport) GetTotalGameCount() uint32 {
	if x != nil {
		return x.TotalGameCount
	}
	return 0
}

type RecordGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string                    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
	StartTime uint32                    `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime   uint32                    `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	Config    *GameConfig               `protobuf:"bytes,5,opt,name=config,proto3" json:"config"`
	Accounts  []*RecordGame_AccountInfo `protobuf:"bytes,11,rep,name=accounts,proto3" json:"accounts"`
	Result    *GameEndResult            `protobuf:"bytes,12,opt,name=result,proto3" json:"result"`
}

func (x *RecordGame) Reset() {
	*x = RecordGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGame) ProtoMessage() {}

func (x *RecordGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGame.ProtoReflect.Descriptor instead.
func (*RecordGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{144}
}

func (x *RecordGame) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RecordGame) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RecordGame) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RecordGame) GetConfig() *GameConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *RecordGame) GetAccounts() []*RecordGame_AccountInfo {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *RecordGame) GetResult() *GameEndResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CustomizedContestGameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*CustomizedContestGameStart_Item `protobuf:"bytes,1,rep,name=players,proto3" json:"players"`
}

func (x *CustomizedContestGameStart) Reset() {
	*x = CustomizedContestGameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestGameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestGameStart) ProtoMessage() {}

func (x *CustomizedContestGameStart) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestGameStart.ProtoReflect.Descriptor instead.
func (*CustomizedContestGameStart) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{145}
}

func (x *CustomizedContestGameStart) GetPlayers() []*CustomizedContestGameStart_Item {
	if x != nil {
		return x.Players
	}
	return nil
}

type CustomizedContestGameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*CustomizedContestGameEnd_Item `protobuf:"bytes,1,rep,name=players,proto3" json:"players"`
}

func (x *CustomizedContestGameEnd) Reset() {
	*x = CustomizedContestGameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestGameEnd) ProtoMessage() {}

func (x *CustomizedContestGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestGameEnd.ProtoReflect.Descriptor instead.
func (*CustomizedContestGameEnd) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{146}
}

func (x *CustomizedContestGameEnd) GetPlayers() []*CustomizedContestGameEnd_Item {
	if x != nil {
		return x.Players
	}
	return nil
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	StartTime  uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime    uint32 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{147}
}

func (x *Activity) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *Activity) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Activity) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Activity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ExchangeRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeId uint32 `protobuf:"varint,1,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ExchangeRecord) Reset() {
	*x = ExchangeRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRecord) ProtoMessage() {}

func (x *ExchangeRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRecord.ProtoReflect.Descriptor instead.
func (*ExchangeRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{148}
}

func (x *ExchangeRecord) GetExchangeId() uint32 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *ExchangeRecord) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ActivityAccumulatedPointData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId       uint32   `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Point            int32    `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
	GainedRewardList []uint32 `protobuf:"varint,3,rep,packed,name=gained_reward_list,json=gainedRewardList,proto3" json:"gained_reward_list"`
}

func (x *ActivityAccumulatedPointData) Reset() {
	*x = ActivityAccumulatedPointData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityAccumulatedPointData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityAccumulatedPointData) ProtoMessage() {}

func (x *ActivityAccumulatedPointData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityAccumulatedPointData.ProtoReflect.Descriptor instead.
func (*ActivityAccumulatedPointData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{149}
}

func (x *ActivityAccumulatedPointData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityAccumulatedPointData) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *ActivityAccumulatedPointData) GetGainedRewardList() []uint32 {
	if x != nil {
		return x.GainedRewardList
	}
	return nil
}

type ActivityRankPointData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId,proto3" json:"leaderboard_id"`
	Point         int32  `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
	GainedReward  bool   `protobuf:"varint,3,opt,name=gained_reward,json=gainedReward,proto3" json:"gained_reward"`
	GainableTime  uint32 `protobuf:"varint,4,opt,name=gainable_time,json=gainableTime,proto3" json:"gainable_time"`
}

func (x *ActivityRankPointData) Reset() {
	*x = ActivityRankPointData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRankPointData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRankPointData) ProtoMessage() {}

func (x *ActivityRankPointData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRankPointData.ProtoReflect.Descriptor instead.
func (*ActivityRankPointData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{150}
}

func (x *ActivityRankPointData) GetLeaderboardId() uint32 {
	if x != nil {
		return x.LeaderboardId
	}
	return 0
}

func (x *ActivityRankPointData) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *ActivityRankPointData) GetGainedReward() bool {
	if x != nil {
		return x.GainedReward
	}
	return false
}

func (x *ActivityRankPointData) GetGainableTime() uint32 {
	if x != nil {
		return x.GainableTime
	}
	return 0
}

type GameRoundHuData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hupai          *GameRoundHuData_HuPai `protobuf:"bytes,1,opt,name=hupai,proto3" json:"hupai"`
	Fans           []*GameRoundHuData_Fan `protobuf:"bytes,2,rep,name=fans,proto3" json:"fans"`
	Score          uint32                 `protobuf:"varint,3,opt,name=score,proto3" json:"score"`
	Xun            uint32                 `protobuf:"varint,4,opt,name=xun,proto3" json:"xun"`
	TitleId        uint32                 `protobuf:"varint,5,opt,name=title_id,json=titleId,proto3" json:"title_id"`
	FanSum         uint32                 `protobuf:"varint,6,opt,name=fan_sum,json=fanSum,proto3" json:"fan_sum"`
	FuSum          uint32                 `protobuf:"varint,7,opt,name=fu_sum,json=fuSum,proto3" json:"fu_sum"`
	YakumanCount   uint32                 `protobuf:"varint,8,opt,name=yakuman_count,json=yakumanCount,proto3" json:"yakuman_count"`
	BiaoDoraCount  uint32                 `protobuf:"varint,9,opt,name=biao_dora_count,json=biaoDoraCount,proto3" json:"biao_dora_count"`
	RedDoraCount   uint32                 `protobuf:"varint,10,opt,name=red_dora_count,json=redDoraCount,proto3" json:"red_dora_count"`
	LiDoraCount    uint32                 `protobuf:"varint,11,opt,name=li_dora_count,json=liDoraCount,proto3" json:"li_dora_count"`
	BabeiCount     uint32                 `protobuf:"varint,12,opt,name=babei_count,json=babeiCount,proto3" json:"babei_count"`
	XuanShangCount uint32                 `protobuf:"varint,13,opt,name=xuan_shang_count,json=xuanShangCount,proto3" json:"xuan_shang_count"`
}

func (x *GameRoundHuData) Reset() {
	*x = GameRoundHuData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundHuData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundHuData) ProtoMessage() {}

func (x *GameRoundHuData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundHuData.ProtoReflect.Descriptor instead.
func (*GameRoundHuData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{151}
}

func (x *GameRoundHuData) GetHupai() *GameRoundHuData_HuPai {
	if x != nil {
		return x.Hupai
	}
	return nil
}

func (x *GameRoundHuData) GetFans() []*GameRoundHuData_Fan {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *GameRoundHuData) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GameRoundHuData) GetXun() uint32 {
	if x != nil {
		return x.Xun
	}
	return 0
}

func (x *GameRoundHuData) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *GameRoundHuData) GetFanSum() uint32 {
	if x != nil {
		return x.FanSum
	}
	return 0
}

func (x *GameRoundHuData) GetFuSum() uint32 {
	if x != nil {
		return x.FuSum
	}
	return 0
}

func (x *GameRoundHuData) GetYakumanCount() uint32 {
	if x != nil {
		return x.YakumanCount
	}
	return 0
}

func (x *GameRoundHuData) GetBiaoDoraCount() uint32 {
	if x != nil {
		return x.BiaoDoraCount
	}
	return 0
}

func (x *GameRoundHuData) GetRedDoraCount() uint32 {
	if x != nil {
		return x.RedDoraCount
	}
	return 0
}

func (x *GameRoundHuData) GetLiDoraCount() uint32 {
	if x != nil {
		return x.LiDoraCount
	}
	return 0
}

func (x *GameRoundHuData) GetBabeiCount() uint32 {
	if x != nil {
		return x.BabeiCount
	}
	return 0
}

func (x *GameRoundHuData) GetXuanShangCount() uint32 {
	if x != nil {
		return x.XuanShangCount
	}
	return 0
}

type GameRoundPlayerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           uint32           `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Hands          []string         `protobuf:"bytes,2,rep,name=hands,proto3" json:"hands"`
	Ming           []string         `protobuf:"bytes,3,rep,name=ming,proto3" json:"ming"`
	LiqiType       uint32           `protobuf:"varint,4,opt,name=liqi_type,json=liqiType,proto3" json:"liqi_type"`
	IsFulu         bool             `protobuf:"varint,5,opt,name=is_fulu,json=isFulu,proto3" json:"is_fulu"`
	IsLiujumanguan bool             `protobuf:"varint,6,opt,name=is_liujumanguan,json=isLiujumanguan,proto3" json:"is_liujumanguan"`
	LianZhuang     uint32           `protobuf:"varint,7,opt,name=lian_zhuang,json=lianZhuang,proto3" json:"lian_zhuang"`
	Hu             *GameRoundHuData `protobuf:"bytes,8,opt,name=hu,proto3" json:"hu"`
}

func (x *GameRoundPlayerResult) Reset() {
	*x = GameRoundPlayerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundPlayerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundPlayerResult) ProtoMessage() {}

func (x *GameRoundPlayerResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundPlayerResult.ProtoReflect.Descriptor instead.
func (*GameRoundPlayerResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{152}
}

func (x *GameRoundPlayerResult) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameRoundPlayerResult) GetHands() []string {
	if x != nil {
		return x.Hands
	}
	return nil
}

func (x *GameRoundPlayerResult) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *GameRoundPlayerResult) GetLiqiType() uint32 {
	if x != nil {
		return x.LiqiType
	}
	return 0
}

func (x *GameRoundPlayerResult) GetIsFulu() bool {
	if x != nil {
		return x.IsFulu
	}
	return false
}

func (x *GameRoundPlayerResult) GetIsLiujumanguan() bool {
	if x != nil {
		return x.IsLiujumanguan
	}
	return false
}

func (x *GameRoundPlayerResult) GetLianZhuang() uint32 {
	if x != nil {
		return x.LianZhuang
	}
	return 0
}

func (x *GameRoundPlayerResult) GetHu() *GameRoundHuData {
	if x != nil {
		return x.Hu
	}
	return nil
}

type GameRoundPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score  int32                  `protobuf:"varint,1,opt,name=score,proto3" json:"score"`
	Rank   uint32                 `protobuf:"varint,2,opt,name=rank,proto3" json:"rank"`
	Result *GameRoundPlayerResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result"`
}

func (x *GameRoundPlayer) Reset() {
	*x = GameRoundPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundPlayer) ProtoMessage() {}

func (x *GameRoundPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundPlayer.ProtoReflect.Descriptor instead.
func (*GameRoundPlayer) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{153}
}

func (x *GameRoundPlayer) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GameRoundPlayer) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GameRoundPlayer) GetResult() *GameRoundPlayerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GameRoundSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ju      uint32             `protobuf:"varint,1,opt,name=ju,proto3" json:"ju"`
	Ben     uint32             `protobuf:"varint,2,opt,name=ben,proto3" json:"ben"`
	Players []*GameRoundPlayer `protobuf:"bytes,3,rep,name=players,proto3" json:"players"`
}

func (x *GameRoundSnapshot) Reset() {
	*x = GameRoundSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundSnapshot) ProtoMessage() {}

func (x *GameRoundSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundSnapshot.ProtoReflect.Descriptor instead.
func (*GameRoundSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{154}
}

func (x *GameRoundSnapshot) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *GameRoundSnapshot) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *GameRoundSnapshot) GetPlayers() []*GameRoundPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

type GameFinalSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string                            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
	State          uint32                            `protobuf:"varint,2,opt,name=state,proto3" json:"state"`
	Category       uint32                            `protobuf:"varint,3,opt,name=category,proto3" json:"category"`
	Mode           *GameMode                         `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode"`
	Meta           *GameMetaData                     `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta"`
	CalculateParam *GameFinalSnapshot_CalculateParam `protobuf:"bytes,6,opt,name=calculate_param,json=calculateParam,proto3" json:"calculate_param"`
	CreateTime     uint32                            `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	StartTime      uint32                            `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	FinishTime     uint32                            `protobuf:"varint,9,opt,name=finish_time,json=finishTime,proto3" json:"finish_time"`
	Seats          []*GameFinalSnapshot_GameSeat     `protobuf:"bytes,10,rep,name=seats,proto3" json:"seats"`
	Rounds         []*GameRoundSnapshot              `protobuf:"bytes,11,rep,name=rounds,proto3" json:"rounds"`
	AccountViews   []*PlayerGameView                 `protobuf:"bytes,12,rep,name=account_views,json=accountViews,proto3" json:"account_views"`
	FinalPlayers   []*GameFinalSnapshot_FinalPlayer  `protobuf:"bytes,13,rep,name=final_players,json=finalPlayers,proto3" json:"final_players"`
	AfkInfo        []*GameFinalSnapshot_AFKInfo      `protobuf:"bytes,14,rep,name=afk_info,json=afkInfo,proto3" json:"afk_info"`
}

func (x *GameFinalSnapshot) Reset() {
	*x = GameFinalSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot) ProtoMessage() {}

func (x *GameFinalSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{155}
}

func (x *GameFinalSnapshot) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GameFinalSnapshot) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GameFinalSnapshot) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GameFinalSnapshot) GetMode() *GameMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *GameFinalSnapshot) GetMeta() *GameMetaData {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GameFinalSnapshot) GetCalculateParam() *GameFinalSnapshot_CalculateParam {
	if x != nil {
		return x.CalculateParam
	}
	return nil
}

func (x *GameFinalSnapshot) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GameFinalSnapshot) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GameFinalSnapshot) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *GameFinalSnapshot) GetSeats() []*GameFinalSnapshot_GameSeat {
	if x != nil {
		return x.Seats
	}
	return nil
}

func (x *GameFinalSnapshot) GetRounds() []*GameRoundSnapshot {
	if x != nil {
		return x.Rounds
	}
	return nil
}

func (x *GameFinalSnapshot) GetAccountViews() []*PlayerGameView {
	if x != nil {
		return x.AccountViews
	}
	return nil
}

func (x *GameFinalSnapshot) GetFinalPlayers() []*GameFinalSnapshot_FinalPlayer {
	if x != nil {
		return x.FinalPlayers
	}
	return nil
}

func (x *GameFinalSnapshot) GetAfkInfo() []*GameFinalSnapshot_AFKInfo {
	if x != nil {
		return x.AfkInfo
	}
	return nil
}

type RecordCollectedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
	Remarks   string `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks"`
	StartTime uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime   uint32 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time"`
}

func (x *RecordCollectedData) Reset() {
	*x = RecordCollectedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordCollectedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordCollectedData) ProtoMessage() {}

func (x *RecordCollectedData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordCollectedData.ProtoReflect.Descriptor instead.
func (*RecordCollectedData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{156}
}

func (x *RecordCollectedData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RecordCollectedData) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *RecordCollectedData) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RecordCollectedData) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ContestDetailRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitPoint                  uint32 `protobuf:"varint,5,opt,name=init_point,json=initPoint,proto3" json:"init_point"`
	Fandian                    uint32 `protobuf:"varint,6,opt,name=fandian,proto3" json:"fandian"`
	CanJifei                   bool   `protobuf:"varint,7,opt,name=can_jifei,json=canJifei,proto3" json:"can_jifei"`
	TianbianValue              uint32 `protobuf:"varint,8,opt,name=tianbian_value,json=tianbianValue,proto3" json:"tianbian_value"`
	LiqibangValue              uint32 `protobuf:"varint,9,opt,name=liqibang_value,json=liqibangValue,proto3" json:"liqibang_value"`
	ChangbangValue             uint32 `protobuf:"varint,10,opt,name=changbang_value,json=changbangValue,proto3" json:"changbang_value"`
	NotingFafu_1               uint32 `protobuf:"varint,11,opt,name=noting_fafu_1,json=notingFafu1,proto3" json:"noting_fafu_1"`
	NotingFafu_2               uint32 `protobuf:"varint,12,opt,name=noting_fafu_2,json=notingFafu2,proto3" json:"noting_fafu_2"`
	NotingFafu_3               uint32 `protobuf:"varint,13,opt,name=noting_fafu_3,json=notingFafu3,proto3" json:"noting_fafu_3"`
	HaveLiujumanguan           bool   `protobuf:"varint,14,opt,name=have_liujumanguan,json=haveLiujumanguan,proto3" json:"have_liujumanguan"`
	HaveQieshangmanguan        bool   `protobuf:"varint,15,opt,name=have_qieshangmanguan,json=haveQieshangmanguan,proto3" json:"have_qieshangmanguan"`
	HaveBiaoDora               bool   `protobuf:"varint,16,opt,name=have_biao_dora,json=haveBiaoDora,proto3" json:"have_biao_dora"`
	HaveGangBiaoDora           bool   `protobuf:"varint,17,opt,name=have_gang_biao_dora,json=haveGangBiaoDora,proto3" json:"have_gang_biao_dora"`
	MingDoraImmediatelyOpen    bool   `protobuf:"varint,18,opt,name=ming_dora_immediately_open,json=mingDoraImmediatelyOpen,proto3" json:"ming_dora_immediately_open"`
	HaveLiDora                 bool   `protobuf:"varint,19,opt,name=have_li_dora,json=haveLiDora,proto3" json:"have_li_dora"`
	HaveGangLiDora             bool   `protobuf:"varint,20,opt,name=have_gang_li_dora,json=haveGangLiDora,proto3" json:"have_gang_li_dora"`
	HaveSifenglianda           bool   `protobuf:"varint,21,opt,name=have_sifenglianda,json=haveSifenglianda,proto3" json:"have_sifenglianda"`
	HaveSigangsanle            bool   `protobuf:"varint,22,opt,name=have_sigangsanle,json=haveSigangsanle,proto3" json:"have_sigangsanle"`
	HaveSijializhi             bool   `protobuf:"varint,23,opt,name=have_sijializhi,json=haveSijializhi,proto3" json:"have_sijializhi"`
	HaveJiuzhongjiupai         bool   `protobuf:"varint,24,opt,name=have_jiuzhongjiupai,json=haveJiuzhongjiupai,proto3" json:"have_jiuzhongjiupai"`
	HaveSanjiahele             bool   `protobuf:"varint,25,opt,name=have_sanjiahele,json=haveSanjiahele,proto3" json:"have_sanjiahele"`
	HaveToutiao                bool   `protobuf:"varint,26,opt,name=have_toutiao,json=haveToutiao,proto3" json:"have_toutiao"`
	HaveHelelianzhuang         bool   `protobuf:"varint,27,opt,name=have_helelianzhuang,json=haveHelelianzhuang,proto3" json:"have_helelianzhuang"`
	HaveHelezhongju            bool   `protobuf:"varint,28,opt,name=have_helezhongju,json=haveHelezhongju,proto3" json:"have_helezhongju"`
	HaveTingpailianzhuang      bool   `protobuf:"varint,29,opt,name=have_tingpailianzhuang,json=haveTingpailianzhuang,proto3" json:"have_tingpailianzhuang"`
	HaveTingpaizhongju         bool   `protobuf:"varint,30,opt,name=have_tingpaizhongju,json=haveTingpaizhongju,proto3" json:"have_tingpaizhongju"`
	HaveYifa                   bool   `protobuf:"varint,31,opt,name=have_yifa,json=haveYifa,proto3" json:"have_yifa"`
	HaveNanruxiru              bool   `protobuf:"varint,32,opt,name=have_nanruxiru,json=haveNanruxiru,proto3" json:"have_nanruxiru"`
	Jingsuanyuandian           uint32 `protobuf:"varint,33,opt,name=jingsuanyuandian,proto3" json:"jingsuanyuandian"`
	Shunweima_2                int32  `protobuf:"varint,34,opt,name=shunweima_2,json=shunweima2,proto3" json:"shunweima_2"`
	Shunweima_3                int32  `protobuf:"varint,35,opt,name=shunweima_3,json=shunweima3,proto3" json:"shunweima_3"`
	Shunweima_4                int32  `protobuf:"varint,36,opt,name=shunweima_4,json=shunweima4,proto3" json:"shunweima_4"`
	Bianjietishi               bool   `protobuf:"varint,37,opt,name=bianjietishi,proto3" json:"bianjietishi"`
	AiLevel                    uint32 `protobuf:"varint,38,opt,name=ai_level,json=aiLevel,proto3" json:"ai_level"`
	HaveZimosun                bool   `protobuf:"varint,39,opt,name=have_zimosun,json=haveZimosun,proto3" json:"have_zimosun"`
	DisableMultiYukaman        bool   `protobuf:"varint,40,opt,name=disable_multi_yukaman,json=disableMultiYukaman,proto3" json:"disable_multi_yukaman"`
	GuyiMode                   uint32 `protobuf:"varint,41,opt,name=guyi_mode,json=guyiMode,proto3" json:"guyi_mode"`
	DisableLeijiyiman          bool   `protobuf:"varint,42,opt,name=disable_leijiyiman,json=disableLeijiyiman,proto3" json:"disable_leijiyiman"`
	Dora3Mode                  uint32 `protobuf:"varint,43,opt,name=dora3_mode,json=dora3Mode,proto3" json:"dora3_mode"`
	Xuezhandaodi               uint32 `protobuf:"varint,44,opt,name=xuezhandaodi,proto3" json:"xuezhandaodi"`
	Huansanzhang               uint32 `protobuf:"varint,45,opt,name=huansanzhang,proto3" json:"huansanzhang"`
	Chuanma                    uint32 `protobuf:"varint,46,opt,name=chuanma,proto3" json:"chuanma"`
	DisableDoubleYakuman       uint32 `protobuf:"varint,62,opt,name=disable_double_yakuman,json=disableDoubleYakuman,proto3" json:"disable_double_yakuman"`
	DisableCompositeYakuman    uint32 `protobuf:"varint,63,opt,name=disable_composite_yakuman,json=disableCompositeYakuman,proto3" json:"disable_composite_yakuman"`
	EnableShiti                uint32 `protobuf:"varint,64,opt,name=enable_shiti,json=enableShiti,proto3" json:"enable_shiti"`
	EnableNontsumoLiqi         uint32 `protobuf:"varint,65,opt,name=enable_nontsumo_liqi,json=enableNontsumoLiqi,proto3" json:"enable_nontsumo_liqi"`
	DisableDoubleWindFourFu    uint32 `protobuf:"varint,66,opt,name=disable_double_wind_four_fu,json=disableDoubleWindFourFu,proto3" json:"disable_double_wind_four_fu"`
	DisableAngangGuoshi        uint32 `protobuf:"varint,67,opt,name=disable_angang_guoshi,json=disableAngangGuoshi,proto3" json:"disable_angang_guoshi"`
	EnableRenhe                uint32 `protobuf:"varint,68,opt,name=enable_renhe,json=enableRenhe,proto3" json:"enable_renhe"`
	EnableBaopaiExtendSettings uint32 `protobuf:"varint,69,opt,name=enable_baopai_extend_settings,json=enableBaopaiExtendSettings,proto3" json:"enable_baopai_extend_settings"`
	Fanfu                      uint32 `protobuf:"varint,70,opt,name=fanfu,proto3" json:"fanfu"`
}

func (x *ContestDetailRule) Reset() {
	*x = ContestDetailRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestDetailRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestDetailRule) ProtoMessage() {}

func (x *ContestDetailRule) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestDetailRule.ProtoReflect.Descriptor instead.
func (*ContestDetailRule) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{157}
}

func (x *ContestDetailRule) GetInitPoint() uint32 {
	if x != nil {
		return x.InitPoint
	}
	return 0
}

func (x *ContestDetailRule) GetFandian() uint32 {
	if x != nil {
		return x.Fandian
	}
	return 0
}

func (x *ContestDetailRule) GetCanJifei() bool {
	if x != nil {
		return x.CanJifei
	}
	return false
}

func (x *ContestDetailRule) GetTianbianValue() uint32 {
	if x != nil {
		return x.TianbianValue
	}
	return 0
}

func (x *ContestDetailRule) GetLiqibangValue() uint32 {
	if x != nil {
		return x.LiqibangValue
	}
	return 0
}

func (x *ContestDetailRule) GetChangbangValue() uint32 {
	if x != nil {
		return x.ChangbangValue
	}
	return 0
}

func (x *ContestDetailRule) GetNotingFafu_1() uint32 {
	if x != nil {
		return x.NotingFafu_1
	}
	return 0
}

func (x *ContestDetailRule) GetNotingFafu_2() uint32 {
	if x != nil {
		return x.NotingFafu_2
	}
	return 0
}

func (x *ContestDetailRule) GetNotingFafu_3() uint32 {
	if x != nil {
		return x.NotingFafu_3
	}
	return 0
}

func (x *ContestDetailRule) GetHaveLiujumanguan() bool {
	if x != nil {
		return x.HaveLiujumanguan
	}
	return false
}

func (x *ContestDetailRule) GetHaveQieshangmanguan() bool {
	if x != nil {
		return x.HaveQieshangmanguan
	}
	return false
}

func (x *ContestDetailRule) GetHaveBiaoDora() bool {
	if x != nil {
		return x.HaveBiaoDora
	}
	return false
}

func (x *ContestDetailRule) GetHaveGangBiaoDora() bool {
	if x != nil {
		return x.HaveGangBiaoDora
	}
	return false
}

func (x *ContestDetailRule) GetMingDoraImmediatelyOpen() bool {
	if x != nil {
		return x.MingDoraImmediatelyOpen
	}
	return false
}

func (x *ContestDetailRule) GetHaveLiDora() bool {
	if x != nil {
		return x.HaveLiDora
	}
	return false
}

func (x *ContestDetailRule) GetHaveGangLiDora() bool {
	if x != nil {
		return x.HaveGangLiDora
	}
	return false
}

func (x *ContestDetailRule) GetHaveSifenglianda() bool {
	if x != nil {
		return x.HaveSifenglianda
	}
	return false
}

func (x *ContestDetailRule) GetHaveSigangsanle() bool {
	if x != nil {
		return x.HaveSigangsanle
	}
	return false
}

func (x *ContestDetailRule) GetHaveSijializhi() bool {
	if x != nil {
		return x.HaveSijializhi
	}
	return false
}

func (x *ContestDetailRule) GetHaveJiuzhongjiupai() bool {
	if x != nil {
		return x.HaveJiuzhongjiupai
	}
	return false
}

func (x *ContestDetailRule) GetHaveSanjiahele() bool {
	if x != nil {
		return x.HaveSanjiahele
	}
	return false
}

func (x *ContestDetailRule) GetHaveToutiao() bool {
	if x != nil {
		return x.HaveToutiao
	}
	return false
}

func (x *ContestDetailRule) GetHaveHelelianzhuang() bool {
	if x != nil {
		return x.HaveHelelianzhuang
	}
	return false
}

func (x *ContestDetailRule) GetHaveHelezhongju() bool {
	if x != nil {
		return x.HaveHelezhongju
	}
	return false
}

func (x *ContestDetailRule) GetHaveTingpailianzhuang() bool {
	if x != nil {
		return x.HaveTingpailianzhuang
	}
	return false
}

func (x *ContestDetailRule) GetHaveTingpaizhongju() bool {
	if x != nil {
		return x.HaveTingpaizhongju
	}
	return false
}

func (x *ContestDetailRule) GetHaveYifa() bool {
	if x != nil {
		return x.HaveYifa
	}
	return false
}

func (x *ContestDetailRule) GetHaveNanruxiru() bool {
	if x != nil {
		return x.HaveNanruxiru
	}
	return false
}

func (x *ContestDetailRule) GetJingsuanyuandian() uint32 {
	if x != nil {
		return x.Jingsuanyuandian
	}
	return 0
}

func (x *ContestDetailRule) GetShunweima_2() int32 {
	if x != nil {
		return x.Shunweima_2
	}
	return 0
}

func (x *ContestDetailRule) GetShunweima_3() int32 {
	if x != nil {
		return x.Shunweima_3
	}
	return 0
}

func (x *ContestDetailRule) GetShunweima_4() int32 {
	if x != nil {
		return x.Shunweima_4
	}
	return 0
}

func (x *ContestDetailRule) GetBianjietishi() bool {
	if x != nil {
		return x.Bianjietishi
	}
	return false
}

func (x *ContestDetailRule) GetAiLevel() uint32 {
	if x != nil {
		return x.AiLevel
	}
	return 0
}

func (x *ContestDetailRule) GetHaveZimosun() bool {
	if x != nil {
		return x.HaveZimosun
	}
	return false
}

func (x *ContestDetailRule) GetDisableMultiYukaman() bool {
	if x != nil {
		return x.DisableMultiYukaman
	}
	return false
}

func (x *ContestDetailRule) GetGuyiMode() uint32 {
	if x != nil {
		return x.GuyiMode
	}
	return 0
}

func (x *ContestDetailRule) GetDisableLeijiyiman() bool {
	if x != nil {
		return x.DisableLeijiyiman
	}
	return false
}

func (x *ContestDetailRule) GetDora3Mode() uint32 {
	if x != nil {
		return x.Dora3Mode
	}
	return 0
}

func (x *ContestDetailRule) GetXuezhandaodi() uint32 {
	if x != nil {
		return x.Xuezhandaodi
	}
	return 0
}

func (x *ContestDetailRule) GetHuansanzhang() uint32 {
	if x != nil {
		return x.Huansanzhang
	}
	return 0
}

func (x *ContestDetailRule) GetChuanma() uint32 {
	if x != nil {
		return x.Chuanma
	}
	return 0
}

func (x *ContestDetailRule) GetDisableDoubleYakuman() uint32 {
	if x != nil {
		return x.DisableDoubleYakuman
	}
	return 0
}

func (x *ContestDetailRule) GetDisableCompositeYakuman() uint32 {
	if x != nil {
		return x.DisableCompositeYakuman
	}
	return 0
}

func (x *ContestDetailRule) GetEnableShiti() uint32 {
	if x != nil {
		return x.EnableShiti
	}
	return 0
}

func (x *ContestDetailRule) GetEnableNontsumoLiqi() uint32 {
	if x != nil {
		return x.EnableNontsumoLiqi
	}
	return 0
}

func (x *ContestDetailRule) GetDisableDoubleWindFourFu() uint32 {
	if x != nil {
		return x.DisableDoubleWindFourFu
	}
	return 0
}

func (x *ContestDetailRule) GetDisableAngangGuoshi() uint32 {
	if x != nil {
		return x.DisableAngangGuoshi
	}
	return 0
}

func (x *ContestDetailRule) GetEnableRenhe() uint32 {
	if x != nil {
		return x.EnableRenhe
	}
	return 0
}

func (x *ContestDetailRule) GetEnableBaopaiExtendSettings() uint32 {
	if x != nil {
		return x.EnableBaopaiExtendSettings
	}
	return 0
}

func (x *ContestDetailRule) GetFanfu() uint32 {
	if x != nil {
		return x.Fanfu
	}
	return 0
}

type ContestDetailRuleV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRule  *ContestDetailRule             `protobuf:"bytes,1,opt,name=game_rule,json=gameRule,proto3" json:"game_rule"`
	ExtraRule *ContestDetailRuleV2_ExtraRule `protobuf:"bytes,2,opt,name=extra_rule,json=extraRule,proto3" json:"extra_rule"`
}

func (x *ContestDetailRuleV2) Reset() {
	*x = ContestDetailRuleV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestDetailRuleV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestDetailRuleV2) ProtoMessage() {}

func (x *ContestDetailRuleV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestDetailRuleV2.ProtoReflect.Descriptor instead.
func (*ContestDetailRuleV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{158}
}

func (x *ContestDetailRuleV2) GetGameRule() *ContestDetailRule {
	if x != nil {
		return x.GameRule
	}
	return nil
}

func (x *ContestDetailRuleV2) GetExtraRule() *ContestDetailRuleV2_ExtraRule {
	if x != nil {
		return x.ExtraRule
	}
	return nil
}

type GameRuleSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundType     uint32               `protobuf:"varint,1,opt,name=round_type,json=roundType,proto3" json:"round_type"`
	Shiduan       bool                 `protobuf:"varint,2,opt,name=shiduan,proto3" json:"shiduan"`
	DoraCount     uint32               `protobuf:"varint,3,opt,name=dora_count,json=doraCount,proto3" json:"dora_count"`
	ThinkingType  uint32               `protobuf:"varint,4,opt,name=thinking_type,json=thinkingType,proto3" json:"thinking_type"`
	UseDetailRule bool                 `protobuf:"varint,5,opt,name=use_detail_rule,json=useDetailRule,proto3" json:"use_detail_rule"`
	DetailRuleV2  *ContestDetailRuleV2 `protobuf:"bytes,6,opt,name=detail_rule_v2,json=detailRuleV2,proto3" json:"detail_rule_v2"`
}

func (x *GameRuleSetting) Reset() {
	*x = GameRuleSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRuleSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRuleSetting) ProtoMessage() {}

func (x *GameRuleSetting) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRuleSetting.ProtoReflect.Descriptor instead.
func (*GameRuleSetting) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{159}
}

func (x *GameRuleSetting) GetRoundType() uint32 {
	if x != nil {
		return x.RoundType
	}
	return 0
}

func (x *GameRuleSetting) GetShiduan() bool {
	if x != nil {
		return x.Shiduan
	}
	return false
}

func (x *GameRuleSetting) GetDoraCount() uint32 {
	if x != nil {
		return x.DoraCount
	}
	return 0
}

func (x *GameRuleSetting) GetThinkingType() uint32 {
	if x != nil {
		return x.ThinkingType
	}
	return 0
}

func (x *GameRuleSetting) GetUseDetailRule() bool {
	if x != nil {
		return x.UseDetailRule
	}
	return false
}

func (x *GameRuleSetting) GetDetailRuleV2() *ContestDetailRuleV2 {
	if x != nil {
		return x.DetailRuleV2
	}
	return nil
}

type RecordTingPaiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tile          string `protobuf:"bytes,1,opt,name=tile,proto3" json:"tile"`
	Haveyi        bool   `protobuf:"varint,2,opt,name=haveyi,proto3" json:"haveyi"`
	Yiman         bool   `protobuf:"varint,3,opt,name=yiman,proto3" json:"yiman"`
	Count         uint32 `protobuf:"varint,4,opt,name=count,proto3" json:"count"`
	Fu            uint32 `protobuf:"varint,5,opt,name=fu,proto3" json:"fu"`
	BiaoDoraCount uint32 `protobuf:"varint,6,opt,name=biao_dora_count,json=biaoDoraCount,proto3" json:"biao_dora_count"`
	YimanZimo     bool   `protobuf:"varint,7,opt,name=yiman_zimo,json=yimanZimo,proto3" json:"yiman_zimo"`
	CountZimo     uint32 `protobuf:"varint,8,opt,name=count_zimo,json=countZimo,proto3" json:"count_zimo"`
	FuZimo        uint32 `protobuf:"varint,9,opt,name=fu_zimo,json=fuZimo,proto3" json:"fu_zimo"`
}

func (x *RecordTingPaiInfo) Reset() {
	*x = RecordTingPaiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordTingPaiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordTingPaiInfo) ProtoMessage() {}

func (x *RecordTingPaiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordTingPaiInfo.ProtoReflect.Descriptor instead.
func (*RecordTingPaiInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{160}
}

func (x *RecordTingPaiInfo) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *RecordTingPaiInfo) GetHaveyi() bool {
	if x != nil {
		return x.Haveyi
	}
	return false
}

func (x *RecordTingPaiInfo) GetYiman() bool {
	if x != nil {
		return x.Yiman
	}
	return false
}

func (x *RecordTingPaiInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RecordTingPaiInfo) GetFu() uint32 {
	if x != nil {
		return x.Fu
	}
	return 0
}

func (x *RecordTingPaiInfo) GetBiaoDoraCount() uint32 {
	if x != nil {
		return x.BiaoDoraCount
	}
	return 0
}

func (x *RecordTingPaiInfo) GetYimanZimo() bool {
	if x != nil {
		return x.YimanZimo
	}
	return false
}

func (x *RecordTingPaiInfo) GetCountZimo() uint32 {
	if x != nil {
		return x.CountZimo
	}
	return 0
}

func (x *RecordTingPaiInfo) GetFuZimo() uint32 {
	if x != nil {
		return x.FuZimo
	}
	return 0
}

type RecordNoTilePlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tingpai bool                 `protobuf:"varint,3,opt,name=tingpai,proto3" json:"tingpai"`
	Hand    []string             `protobuf:"bytes,4,rep,name=hand,proto3" json:"hand"`
	Tings   []*RecordTingPaiInfo `protobuf:"bytes,5,rep,name=tings,proto3" json:"tings"`
	Liuman  bool                 `protobuf:"varint,6,opt,name=liuman,proto3" json:"liuman"`
}

func (x *RecordNoTilePlayerInfo) Reset() {
	*x = RecordNoTilePlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNoTilePlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNoTilePlayerInfo) ProtoMessage() {}

func (x *RecordNoTilePlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNoTilePlayerInfo.ProtoReflect.Descriptor instead.
func (*RecordNoTilePlayerInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{161}
}

func (x *RecordNoTilePlayerInfo) GetTingpai() bool {
	if x != nil {
		return x.Tingpai
	}
	return false
}

func (x *RecordNoTilePlayerInfo) GetHand() []string {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *RecordNoTilePlayerInfo) GetTings() []*RecordTingPaiInfo {
	if x != nil {
		return x.Tings
	}
	return nil
}

func (x *RecordNoTilePlayerInfo) GetLiuman() bool {
	if x != nil {
		return x.Liuman
	}
	return false
}

type RecordHuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hand          []string                        `protobuf:"bytes,1,rep,name=hand,proto3" json:"hand"`
	Ming          []string                        `protobuf:"bytes,2,rep,name=ming,proto3" json:"ming"`
	HuTile        string                          `protobuf:"bytes,3,opt,name=hu_tile,json=huTile,proto3" json:"hu_tile"`
	Seat          uint32                          `protobuf:"varint,4,opt,name=seat,proto3" json:"seat"`
	Zimo          bool                            `protobuf:"varint,5,opt,name=zimo,proto3" json:"zimo"`
	Qinjia        bool                            `protobuf:"varint,6,opt,name=qinjia,proto3" json:"qinjia"`
	Liqi          bool                            `protobuf:"varint,7,opt,name=liqi,proto3" json:"liqi"`
	Doras         []string                        `protobuf:"bytes,8,rep,name=doras,proto3" json:"doras"`
	LiDoras       []string                        `protobuf:"bytes,9,rep,name=li_doras,json=liDoras,proto3" json:"li_doras"`
	Yiman         bool                            `protobuf:"varint,10,opt,name=yiman,proto3" json:"yiman"`
	Count         uint32                          `protobuf:"varint,11,opt,name=count,proto3" json:"count"`
	Fans          []*RecordHuleInfo_RecordFanInfo `protobuf:"bytes,12,rep,name=fans,proto3" json:"fans"`
	Fu            uint32                          `protobuf:"varint,13,opt,name=fu,proto3" json:"fu"`
	PointZimoQin  uint32                          `protobuf:"varint,14,opt,name=point_zimo_qin,json=pointZimoQin,proto3" json:"point_zimo_qin"`
	PointZimoXian uint32                          `protobuf:"varint,15,opt,name=point_zimo_xian,json=pointZimoXian,proto3" json:"point_zimo_xian"`
	TitleId       uint32                          `protobuf:"varint,16,opt,name=title_id,json=titleId,proto3" json:"title_id"`
	PointSum      uint32                          `protobuf:"varint,17,opt,name=point_sum,json=pointSum,proto3" json:"point_sum"`
	Dadian        uint32                          `protobuf:"varint,18,opt,name=dadian,proto3" json:"dadian"`
	IsJueZhang    bool                            `protobuf:"varint,19,opt,name=is_jue_zhang,json=isJueZhang,proto3" json:"is_jue_zhang"`
	Xun           uint32                          `protobuf:"varint,20,opt,name=xun,proto3" json:"xun"`
	TingType      uint32                          `protobuf:"varint,21,opt,name=ting_type,json=tingType,proto3" json:"ting_type"`
	TingMian      uint32                          `protobuf:"varint,22,opt,name=ting_mian,json=tingMian,proto3" json:"ting_mian"`
}

func (x *RecordHuleInfo) Reset() {
	*x = RecordHuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHuleInfo) ProtoMessage() {}

func (x *RecordHuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHuleInfo.ProtoReflect.Descriptor instead.
func (*RecordHuleInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{162}
}

func (x *RecordHuleInfo) GetHand() []string {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *RecordHuleInfo) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *RecordHuleInfo) GetHuTile() string {
	if x != nil {
		return x.HuTile
	}
	return ""
}

func (x *RecordHuleInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordHuleInfo) GetZimo() bool {
	if x != nil {
		return x.Zimo
	}
	return false
}

func (x *RecordHuleInfo) GetQinjia() bool {
	if x != nil {
		return x.Qinjia
	}
	return false
}

func (x *RecordHuleInfo) GetLiqi() bool {
	if x != nil {
		return x.Liqi
	}
	return false
}

func (x *RecordHuleInfo) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordHuleInfo) GetLiDoras() []string {
	if x != nil {
		return x.LiDoras
	}
	return nil
}

func (x *RecordHuleInfo) GetYiman() bool {
	if x != nil {
		return x.Yiman
	}
	return false
}

func (x *RecordHuleInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RecordHuleInfo) GetFans() []*RecordHuleInfo_RecordFanInfo {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *RecordHuleInfo) GetFu() uint32 {
	if x != nil {
		return x.Fu
	}
	return 0
}

func (x *RecordHuleInfo) GetPointZimoQin() uint32 {
	if x != nil {
		return x.PointZimoQin
	}
	return 0
}

func (x *RecordHuleInfo) GetPointZimoXian() uint32 {
	if x != nil {
		return x.PointZimoXian
	}
	return 0
}

func (x *RecordHuleInfo) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *RecordHuleInfo) GetPointSum() uint32 {
	if x != nil {
		return x.PointSum
	}
	return 0
}

func (x *RecordHuleInfo) GetDadian() uint32 {
	if x != nil {
		return x.Dadian
	}
	return 0
}

func (x *RecordHuleInfo) GetIsJueZhang() bool {
	if x != nil {
		return x.IsJueZhang
	}
	return false
}

func (x *RecordHuleInfo) GetXun() uint32 {
	if x != nil {
		return x.Xun
	}
	return 0
}

func (x *RecordHuleInfo) GetTingType() uint32 {
	if x != nil {
		return x.TingType
	}
	return 0
}

func (x *RecordHuleInfo) GetTingMian() uint32 {
	if x != nil {
		return x.TingMian
	}
	return 0
}

type RecordHulesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat  int32             `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Hules []*RecordHuleInfo `protobuf:"bytes,2,rep,name=hules,proto3" json:"hules"`
}

func (x *RecordHulesInfo) Reset() {
	*x = RecordHulesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHulesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHulesInfo) ProtoMessage() {}

func (x *RecordHulesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHulesInfo.ProtoReflect.Descriptor instead.
func (*RecordHulesInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{163}
}

func (x *RecordHulesInfo) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordHulesInfo) GetHules() []*RecordHuleInfo {
	if x != nil {
		return x.Hules
	}
	return nil
}

type RecordLiujuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Type uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
}

func (x *RecordLiujuInfo) Reset() {
	*x = RecordLiujuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordLiujuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordLiujuInfo) ProtoMessage() {}

func (x *RecordLiujuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordLiujuInfo.ProtoReflect.Descriptor instead.
func (*RecordLiujuInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{164}
}

func (x *RecordLiujuInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordLiujuInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RecordNoTileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Liujumanguan bool                      `protobuf:"varint,1,opt,name=liujumanguan,proto3" json:"liujumanguan"`
	Players      []*RecordNoTilePlayerInfo `protobuf:"bytes,2,rep,name=players,proto3" json:"players"`
}

func (x *RecordNoTileInfo) Reset() {
	*x = RecordNoTileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNoTileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNoTileInfo) ProtoMessage() {}

func (x *RecordNoTileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNoTileInfo.ProtoReflect.Descriptor instead.
func (*RecordNoTileInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{165}
}

func (x *RecordNoTileInfo) GetLiujumanguan() bool {
	if x != nil {
		return x.Liujumanguan
	}
	return false
}

func (x *RecordNoTileInfo) GetPlayers() []*RecordNoTilePlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

type RecordLiqiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat       uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Score      uint32 `protobuf:"varint,2,opt,name=score,proto3" json:"score"`
	IsW        bool   `protobuf:"varint,3,opt,name=is_w,json=isW,proto3" json:"is_w"`
	IsZhenTing bool   `protobuf:"varint,4,opt,name=is_zhen_ting,json=isZhenTing,proto3" json:"is_zhen_ting"`
	Xun        uint32 `protobuf:"varint,5,opt,name=xun,proto3" json:"xun"`
	IsSuccess  bool   `protobuf:"varint,6,opt,name=is_success,json=isSuccess,proto3" json:"is_success"`
}

func (x *RecordLiqiInfo) Reset() {
	*x = RecordLiqiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordLiqiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordLiqiInfo) ProtoMessage() {}

func (x *RecordLiqiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordLiqiInfo.ProtoReflect.Descriptor instead.
func (*RecordLiqiInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{166}
}

func (x *RecordLiqiInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordLiqiInfo) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RecordLiqiInfo) GetIsW() bool {
	if x != nil {
		return x.IsW
	}
	return false
}

func (x *RecordLiqiInfo) GetIsZhenTing() bool {
	if x != nil {
		return x.IsZhenTing
	}
	return false
}

func (x *RecordLiqiInfo) GetXun() uint32 {
	if x != nil {
		return x.Xun
	}
	return 0
}

func (x *RecordLiqiInfo) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type RecordGangInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat   uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Type   uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Pai    string `protobuf:"bytes,3,opt,name=pai,proto3" json:"pai"`
	IsDora bool   `protobuf:"varint,4,opt,name=is_dora,json=isDora,proto3" json:"is_dora"`
	Xun    uint32 `protobuf:"varint,5,opt,name=xun,proto3" json:"xun"`
}

func (x *RecordGangInfo) Reset() {
	*x = RecordGangInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGangInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGangInfo) ProtoMessage() {}

func (x *RecordGangInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGangInfo.ProtoReflect.Descriptor instead.
func (*RecordGangInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{167}
}

func (x *RecordGangInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordGangInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RecordGangInfo) GetPai() string {
	if x != nil {
		return x.Pai
	}
	return ""
}

func (x *RecordGangInfo) GetIsDora() bool {
	if x != nil {
		return x.IsDora
	}
	return false
}

func (x *RecordGangInfo) GetXun() uint32 {
	if x != nil {
		return x.Xun
	}
	return 0
}

type RecordBaBeiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat    uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	IsZiMo  bool   `protobuf:"varint,2,opt,name=is_zi_mo,json=isZiMo,proto3" json:"is_zi_mo"`
	IsChong bool   `protobuf:"varint,3,opt,name=is_chong,json=isChong,proto3" json:"is_chong"`
	IsBei   bool   `protobuf:"varint,4,opt,name=is_bei,json=isBei,proto3" json:"is_bei"`
}

func (x *RecordBaBeiInfo) Reset() {
	*x = RecordBaBeiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordBaBeiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordBaBeiInfo) ProtoMessage() {}

func (x *RecordBaBeiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordBaBeiInfo.ProtoReflect.Descriptor instead.
func (*RecordBaBeiInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{168}
}

func (x *RecordBaBeiInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordBaBeiInfo) GetIsZiMo() bool {
	if x != nil {
		return x.IsZiMo
	}
	return false
}

func (x *RecordBaBeiInfo) GetIsChong() bool {
	if x != nil {
		return x.IsChong
	}
	return false
}

func (x *RecordBaBeiInfo) GetIsBei() bool {
	if x != nil {
		return x.IsBei
	}
	return false
}

type RecordPeiPaiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoraCount  uint32 `protobuf:"varint,1,opt,name=dora_count,json=doraCount,proto3" json:"dora_count"`
	RDoraCount uint32 `protobuf:"varint,2,opt,name=r_dora_count,json=rDoraCount,proto3" json:"r_dora_count"`
	BeiCount   uint32 `protobuf:"varint,3,opt,name=bei_count,json=beiCount,proto3" json:"bei_count"`
}

func (x *RecordPeiPaiInfo) Reset() {
	*x = RecordPeiPaiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordPeiPaiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordPeiPaiInfo) ProtoMessage() {}

func (x *RecordPeiPaiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordPeiPaiInfo.ProtoReflect.Descriptor instead.
func (*RecordPeiPaiInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{169}
}

func (x *RecordPeiPaiInfo) GetDoraCount() uint32 {
	if x != nil {
		return x.DoraCount
	}
	return 0
}

func (x *RecordPeiPaiInfo) GetRDoraCount() uint32 {
	if x != nil {
		return x.RDoraCount
	}
	return 0
}

func (x *RecordPeiPaiInfo) GetBeiCount() uint32 {
	if x != nil {
		return x.BeiCount
	}
	return 0
}

type RecordRoundInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Chang       uint32              `protobuf:"varint,2,opt,name=chang,proto3" json:"chang"`
	Ju          uint32              `protobuf:"varint,3,opt,name=ju,proto3" json:"ju"`
	Ben         uint32              `protobuf:"varint,4,opt,name=ben,proto3" json:"ben"`
	Scores      []uint32            `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores"`
	LiqiInfos   []*RecordLiqiInfo   `protobuf:"bytes,7,rep,name=liqi_infos,json=liqiInfos,proto3" json:"liqi_infos"`
	GangInfos   []*RecordGangInfo   `protobuf:"bytes,8,rep,name=gang_infos,json=gangInfos,proto3" json:"gang_infos"`
	PeipaiInfos []*RecordPeiPaiInfo `protobuf:"bytes,9,rep,name=peipai_infos,json=peipaiInfos,proto3" json:"peipai_infos"`
	BabaiInfos  []*RecordBaBeiInfo  `protobuf:"bytes,10,rep,name=babai_infos,json=babaiInfos,proto3" json:"babai_infos"`
	HulesInfo   *RecordHulesInfo    `protobuf:"bytes,11,opt,name=hules_info,json=hulesInfo,proto3" json:"hules_info"`
	LiujuInfo   *RecordLiujuInfo    `protobuf:"bytes,12,opt,name=liuju_info,json=liujuInfo,proto3" json:"liuju_info"`
	NoTileInfo  *RecordNoTileInfo   `protobuf:"bytes,13,opt,name=no_tile_info,json=noTileInfo,proto3" json:"no_tile_info"`
}

func (x *RecordRoundInfo) Reset() {
	*x = RecordRoundInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordRoundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRoundInfo) ProtoMessage() {}

func (x *RecordRoundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRoundInfo.ProtoReflect.Descriptor instead.
func (*RecordRoundInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{170}
}

func (x *RecordRoundInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordRoundInfo) GetChang() uint32 {
	if x != nil {
		return x.Chang
	}
	return 0
}

func (x *RecordRoundInfo) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *RecordRoundInfo) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *RecordRoundInfo) GetScores() []uint32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordRoundInfo) GetLiqiInfos() []*RecordLiqiInfo {
	if x != nil {
		return x.LiqiInfos
	}
	return nil
}

func (x *RecordRoundInfo) GetGangInfos() []*RecordGangInfo {
	if x != nil {
		return x.GangInfos
	}
	return nil
}

func (x *RecordRoundInfo) GetPeipaiInfos() []*RecordPeiPaiInfo {
	if x != nil {
		return x.PeipaiInfos
	}
	return nil
}

func (x *RecordRoundInfo) GetBabaiInfos() []*RecordBaBeiInfo {
	if x != nil {
		return x.BabaiInfos
	}
	return nil
}

func (x *RecordRoundInfo) GetHulesInfo() *RecordHulesInfo {
	if x != nil {
		return x.HulesInfo
	}
	return nil
}

func (x *RecordRoundInfo) GetLiujuInfo() *RecordLiujuInfo {
	if x != nil {
		return x.LiujuInfo
	}
	return nil
}

func (x *RecordRoundInfo) GetNoTileInfo() *RecordNoTileInfo {
	if x != nil {
		return x.NoTileInfo
	}
	return nil
}

type RecordAnalysisedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundInfos []*RecordRoundInfo `protobuf:"bytes,1,rep,name=round_infos,json=roundInfos,proto3" json:"round_infos"`
}

func (x *RecordAnalysisedData) Reset() {
	*x = RecordAnalysisedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordAnalysisedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordAnalysisedData) ProtoMessage() {}

func (x *RecordAnalysisedData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordAnalysisedData.ProtoReflect.Descriptor instead.
func (*RecordAnalysisedData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{171}
}

func (x *RecordAnalysisedData) GetRoundInfos() []*RecordRoundInfo {
	if x != nil {
		return x.RoundInfos
	}
	return nil
}

type VoteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Vote       uint32 `protobuf:"varint,2,opt,name=vote,proto3" json:"vote"`
	Count      uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
}

func (x *VoteData) Reset() {
	*x = VoteData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteData) ProtoMessage() {}

func (x *VoteData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteData.ProtoReflect.Descriptor instead.
func (*VoteData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{172}
}

func (x *VoteData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *VoteData) GetVote() uint32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

func (x *VoteData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ActivityBuffData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuffId uint32 `protobuf:"varint,1,opt,name=buff_id,json=buffId,proto3" json:"buff_id"`
	Level  uint32 `protobuf:"varint,5,opt,name=level,proto3" json:"level"`
}

func (x *ActivityBuffData) Reset() {
	*x = ActivityBuffData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityBuffData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityBuffData) ProtoMessage() {}

func (x *ActivityBuffData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityBuffData.ProtoReflect.Descriptor instead.
func (*ActivityBuffData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{173}
}

func (x *ActivityBuffData) GetBuffId() uint32 {
	if x != nil {
		return x.BuffId
	}
	return 0
}

func (x *ActivityBuffData) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type AccountResourceSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BagItem   []*AccountResourceSnapshot_BagItemSnapshot  `protobuf:"bytes,1,rep,name=bag_item,json=bagItem,proto3" json:"bag_item"`
	Currency  []*AccountResourceSnapshot_CurrencySnapshot `protobuf:"bytes,2,rep,name=currency,proto3" json:"currency"`
	Title     *AccountResourceSnapshot_TitleSnapshot      `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	UsedTitle *AccountResourceSnapshot_UsedTitleSnapshot  `protobuf:"bytes,4,opt,name=used_title,json=usedTitle,proto3" json:"used_title"`
}

func (x *AccountResourceSnapshot) Reset() {
	*x = AccountResourceSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResourceSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResourceSnapshot) ProtoMessage() {}

func (x *AccountResourceSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResourceSnapshot.ProtoReflect.Descriptor instead.
func (*AccountResourceSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{174}
}

func (x *AccountResourceSnapshot) GetBagItem() []*AccountResourceSnapshot_BagItemSnapshot {
	if x != nil {
		return x.BagItem
	}
	return nil
}

func (x *AccountResourceSnapshot) GetCurrency() []*AccountResourceSnapshot_CurrencySnapshot {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *AccountResourceSnapshot) GetTitle() *AccountResourceSnapshot_TitleSnapshot {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *AccountResourceSnapshot) GetUsedTitle() *AccountResourceSnapshot_UsedTitleSnapshot {
	if x != nil {
		return x.UsedTitle
	}
	return nil
}

type AccountCharacterSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedCharacters  []uint32                                        `protobuf:"varint,1,rep,packed,name=created_characters,json=createdCharacters,proto3" json:"created_characters"`
	RemovedCharacters  []*Character                                    `protobuf:"bytes,2,rep,name=removed_characters,json=removedCharacters,proto3" json:"removed_characters"`
	ModifiedCharacters []*Character                                    `protobuf:"bytes,3,rep,name=modified_characters,json=modifiedCharacters,proto3" json:"modified_characters"`
	MainCharacter      *AccountCharacterSnapshot_MainCharacterSnapshot `protobuf:"bytes,4,opt,name=main_character,json=mainCharacter,proto3" json:"main_character"`
	Skins              *AccountCharacterSnapshot_SkinsSnapshot         `protobuf:"bytes,5,opt,name=skins,proto3" json:"skins"`
	HiddenCharacters   *AccountCharacterSnapshot_HiddenCharacter       `protobuf:"bytes,6,opt,name=hidden_characters,json=hiddenCharacters,proto3" json:"hidden_characters"`
}

func (x *AccountCharacterSnapshot) Reset() {
	*x = AccountCharacterSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCharacterSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCharacterSnapshot) ProtoMessage() {}

func (x *AccountCharacterSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCharacterSnapshot.ProtoReflect.Descriptor instead.
func (*AccountCharacterSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{175}
}

func (x *AccountCharacterSnapshot) GetCreatedCharacters() []uint32 {
	if x != nil {
		return x.CreatedCharacters
	}
	return nil
}

func (x *AccountCharacterSnapshot) GetRemovedCharacters() []*Character {
	if x != nil {
		return x.RemovedCharacters
	}
	return nil
}

func (x *AccountCharacterSnapshot) GetModifiedCharacters() []*Character {
	if x != nil {
		return x.ModifiedCharacters
	}
	return nil
}

func (x *AccountCharacterSnapshot) GetMainCharacter() *AccountCharacterSnapshot_MainCharacterSnapshot {
	if x != nil {
		return x.MainCharacter
	}
	return nil
}

func (x *AccountCharacterSnapshot) GetSkins() *AccountCharacterSnapshot_SkinsSnapshot {
	if x != nil {
		return x.Skins
	}
	return nil
}

func (x *AccountCharacterSnapshot) GetHiddenCharacters() *AccountCharacterSnapshot_HiddenCharacter {
	if x != nil {
		return x.HiddenCharacters
	}
	return nil
}

type AccountMailRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedMails  []uint32                          `protobuf:"varint,1,rep,packed,name=created_mails,json=createdMails,proto3" json:"created_mails"`
	RemovedMails  []*AccountMailRecord_MailSnapshot `protobuf:"bytes,2,rep,name=removed_mails,json=removedMails,proto3" json:"removed_mails"`
	ModifiedMails []*AccountMailRecord_MailSnapshot `protobuf:"bytes,3,rep,name=modified_mails,json=modifiedMails,proto3" json:"modified_mails"`
}

func (x *AccountMailRecord) Reset() {
	*x = AccountMailRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMailRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMailRecord) ProtoMessage() {}

func (x *AccountMailRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMailRecord.ProtoReflect.Descriptor instead.
func (*AccountMailRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{176}
}

func (x *AccountMailRecord) GetCreatedMails() []uint32 {
	if x != nil {
		return x.CreatedMails
	}
	return nil
}

func (x *AccountMailRecord) GetRemovedMails() []*AccountMailRecord_MailSnapshot {
	if x != nil {
		return x.RemovedMails
	}
	return nil
}

func (x *AccountMailRecord) GetModifiedMails() []*AccountMailRecord_MailSnapshot {
	if x != nil {
		return x.ModifiedMails
	}
	return nil
}

type AccountAchievementSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Achievements  []*AchievementProgress                            `protobuf:"bytes,1,rep,name=achievements,proto3" json:"achievements"`
	RewardedGroup *AccountAchievementSnapshot_RewardedGroupSnapshot `protobuf:"bytes,2,opt,name=rewarded_group,json=rewardedGroup,proto3" json:"rewarded_group"`
	Version       *AccountAchievementSnapshot_AchievementVersion    `protobuf:"bytes,3,opt,name=version,proto3" json:"version"`
}

func (x *AccountAchievementSnapshot) Reset() {
	*x = AccountAchievementSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAchievementSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAchievementSnapshot) ProtoMessage() {}

func (x *AccountAchievementSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAchievementSnapshot.ProtoReflect.Descriptor instead.
func (*AccountAchievementSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{177}
}

func (x *AccountAchievementSnapshot) GetAchievements() []*AchievementProgress {
	if x != nil {
		return x.Achievements
	}
	return nil
}

func (x *AccountAchievementSnapshot) GetRewardedGroup() *AccountAchievementSnapshot_RewardedGroupSnapshot {
	if x != nil {
		return x.RewardedGroup
	}
	return nil
}

func (x *AccountAchievementSnapshot) GetVersion() *AccountAchievementSnapshot_AchievementVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

type AccountMiscSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaithData       *FaithData                                      `protobuf:"bytes,1,opt,name=faith_data,json=faithData,proto3" json:"faith_data"`
	VipRewardGained *AccountMiscSnapshot_AccountVIPRewardSnapshot   `protobuf:"bytes,2,opt,name=vip_reward_gained,json=vipRewardGained,proto3" json:"vip_reward_gained"`
	Vip             *AccountMiscSnapshot_AccountVIP                 `protobuf:"bytes,3,opt,name=vip,proto3" json:"vip"`
	ShopInfo        *ShopInfo                                       `protobuf:"bytes,4,opt,name=shop_info,json=shopInfo,proto3" json:"shop_info"`
	MonthTicket     *AccountMiscSnapshot_AccountMonthTicketSnapshot `protobuf:"bytes,5,opt,name=month_ticket,json=monthTicket,proto3" json:"month_ticket"`
	Recharged       []*AccountMiscSnapshot_AccountRechargeInfo      `protobuf:"bytes,6,rep,name=recharged,proto3" json:"recharged"`
}

func (x *AccountMiscSnapshot) Reset() {
	*x = AccountMiscSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMiscSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMiscSnapshot) ProtoMessage() {}

func (x *AccountMiscSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMiscSnapshot.ProtoReflect.Descriptor instead.
func (*AccountMiscSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{178}
}

func (x *AccountMiscSnapshot) GetFaithData() *FaithData {
	if x != nil {
		return x.FaithData
	}
	return nil
}

func (x *AccountMiscSnapshot) GetVipRewardGained() *AccountMiscSnapshot_AccountVIPRewardSnapshot {
	if x != nil {
		return x.VipRewardGained
	}
	return nil
}

func (x *AccountMiscSnapshot) GetVip() *AccountMiscSnapshot_AccountVIP {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *AccountMiscSnapshot) GetShopInfo() *ShopInfo {
	if x != nil {
		return x.ShopInfo
	}
	return nil
}

func (x *AccountMiscSnapshot) GetMonthTicket() *AccountMiscSnapshot_AccountMonthTicketSnapshot {
	if x != nil {
		return x.MonthTicket
	}
	return nil
}

func (x *AccountMiscSnapshot) GetRecharged() []*AccountMiscSnapshot_AccountRechargeInfo {
	if x != nil {
		return x.Recharged
	}
	return nil
}

type AccountGiftCodeRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedGiftCode []string `protobuf:"bytes,1,rep,name=used_gift_code,json=usedGiftCode,proto3" json:"used_gift_code"`
}

func (x *AccountGiftCodeRecord) Reset() {
	*x = AccountGiftCodeRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGiftCodeRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGiftCodeRecord) ProtoMessage() {}

func (x *AccountGiftCodeRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGiftCodeRecord.ProtoReflect.Descriptor instead.
func (*AccountGiftCodeRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{179}
}

func (x *AccountGiftCodeRecord) GetUsedGiftCode() []string {
	if x != nil {
		return x.UsedGiftCode
	}
	return nil
}

type AccSn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource    *AccountResourceSnapshot    `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource"`
	Character   *AccountCharacterSnapshot   `protobuf:"bytes,2,opt,name=character,proto3" json:"character"`
	Mail        *AccountMailRecord          `protobuf:"bytes,3,opt,name=mail,proto3" json:"mail"`
	Achievement *AccountAchievementSnapshot `protobuf:"bytes,4,opt,name=achievement,proto3" json:"achievement"`
	Misc        *AccountMiscSnapshot        `protobuf:"bytes,5,opt,name=misc,proto3" json:"misc"`
	GiftCode    *AccountGiftCodeRecord      `protobuf:"bytes,6,opt,name=gift_code,json=giftCode,proto3" json:"gift_code"`
}

func (x *AccSn) Reset() {
	*x = AccSn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccSn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccSn) ProtoMessage() {}

func (x *AccSn) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccSn.ProtoReflect.Descriptor instead.
func (*AccSn) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{180}
}

func (x *AccSn) GetResource() *AccountResourceSnapshot {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *AccSn) GetCharacter() *AccountCharacterSnapshot {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *AccSn) GetMail() *AccountMailRecord {
	if x != nil {
		return x.Mail
	}
	return nil
}

func (x *AccSn) GetAchievement() *AccountAchievementSnapshot {
	if x != nil {
		return x.Achievement
	}
	return nil
}

func (x *AccSn) GetMisc() *AccountMiscSnapshot {
	if x != nil {
		return x.Misc
	}
	return nil
}

func (x *AccSn) GetGiftCode() *AccountGiftCodeRecord {
	if x != nil {
		return x.GiftCode
	}
	return nil
}

type AccSnDa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Time      uint32 `protobuf:"varint,2,opt,name=time,proto3" json:"time"`
	Snapshot  []byte `protobuf:"bytes,3,opt,name=snapshot,proto3" json:"snapshot"`
}

func (x *AccSnDa) Reset() {
	*x = AccSnDa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccSnDa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccSnDa) ProtoMessage() {}

func (x *AccSnDa) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccSnDa.ProtoReflect.Descriptor instead.
func (*AccSnDa) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{181}
}

func (x *AccSnDa) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccSnDa) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *AccSnDa) GetSnapshot() []byte {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type ResConnectionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ClientEndpoint *NetworkEndpoint `protobuf:"bytes,2,opt,name=client_endpoint,json=clientEndpoint,proto3" json:"client_endpoint"`
}

func (x *ResConnectionInfo) Reset() {
	*x = ResConnectionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResConnectionInfo) ProtoMessage() {}

func (x *ResConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResConnectionInfo.ProtoReflect.Descriptor instead.
func (*ResConnectionInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{182}
}

func (x *ResConnectionInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResConnectionInfo) GetClientEndpoint() *NetworkEndpoint {
	if x != nil {
		return x.ClientEndpoint
	}
	return nil
}

type ResFetchQueueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Remain uint32 `protobuf:"varint,2,opt,name=remain,proto3" json:"remain"`
	Rank   uint32 `protobuf:"varint,3,opt,name=rank,proto3" json:"rank"`
}

func (x *ResFetchQueueInfo) Reset() {
	*x = ResFetchQueueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchQueueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchQueueInfo) ProtoMessage() {}

func (x *ResFetchQueueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchQueueInfo.ProtoReflect.Descriptor instead.
func (*ResFetchQueueInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{183}
}

func (x *ResFetchQueueInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchQueueInfo) GetRemain() uint32 {
	if x != nil {
		return x.Remain
	}
	return 0
}

func (x *ResFetchQueueInfo) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type ReqOpenidCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
}

func (x *ReqOpenidCheck) Reset() {
	*x = ReqOpenidCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOpenidCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOpenidCheck) ProtoMessage() {}

func (x *ReqOpenidCheck) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOpenidCheck.ProtoReflect.Descriptor instead.
func (*ReqOpenidCheck) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{184}
}

func (x *ReqOpenidCheck) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqOpenidCheck) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ReqSignupAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account             string            `protobuf:"bytes,1,opt,name=account,proto3" json:"account"`
	Password            string            `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
	Code                string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
	Type                uint32            `protobuf:"varint,4,opt,name=type,proto3" json:"type"`
	Device              *ClientDeviceInfo `protobuf:"bytes,5,opt,name=device,proto3" json:"device"`
	ClientVersionString string            `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
	Tag                 string            `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag"`
}

func (x *ReqSignupAccount) Reset() {
	*x = ReqSignupAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSignupAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSignupAccount) ProtoMessage() {}

func (x *ReqSignupAccount) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSignupAccount.ProtoReflect.Descriptor instead.
func (*ReqSignupAccount) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{185}
}

func (x *ReqSignupAccount) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReqSignupAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqSignupAccount) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReqSignupAccount) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqSignupAccount) GetDevice() *ClientDeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ReqSignupAccount) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

func (x *ReqSignupAccount) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ResSignupAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResSignupAccount) Reset() {
	*x = ResSignupAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSignupAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSignupAccount) ProtoMessage() {}

func (x *ResSignupAccount) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSignupAccount.ProtoReflect.Descriptor instead.
func (*ResSignupAccount) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{186}
}

func (x *ResSignupAccount) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account             string             `protobuf:"bytes,1,opt,name=account,proto3" json:"account"`
	Password            string             `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
	Reconnect           bool               `protobuf:"varint,3,opt,name=reconnect,proto3" json:"reconnect"`
	Device              *ClientDeviceInfo  `protobuf:"bytes,4,opt,name=device,proto3" json:"device"`
	RandomKey           string             `protobuf:"bytes,5,opt,name=random_key,json=randomKey,proto3" json:"random_key"`
	ClientVersion       *ClientVersionInfo `protobuf:"bytes,6,opt,name=client_version,json=clientVersion,proto3" json:"client_version"`
	GenAccessToken      bool               `protobuf:"varint,7,opt,name=gen_access_token,json=genAccessToken,proto3" json:"gen_access_token"`
	CurrencyPlatforms   []uint32           `protobuf:"varint,8,rep,packed,name=currency_platforms,json=currencyPlatforms,proto3" json:"currency_platforms"`
	Type                uint32             `protobuf:"varint,9,opt,name=type,proto3" json:"type"`
	Version             uint32             `protobuf:"varint,10,opt,name=version,proto3" json:"version"`
	ClientVersionString string             `protobuf:"bytes,11,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
	Tag                 string             `protobuf:"bytes,12,opt,name=tag,proto3" json:"tag"`
}

func (x *ReqLogin) Reset() {
	*x = ReqLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLogin) ProtoMessage() {}

func (x *ReqLogin) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLogin.ProtoReflect.Descriptor instead.
func (*ReqLogin) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{187}
}

func (x *ReqLogin) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReqLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqLogin) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

func (x *ReqLogin) GetDevice() *ClientDeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ReqLogin) GetRandomKey() string {
	if x != nil {
		return x.RandomKey
	}
	return ""
}

func (x *ReqLogin) GetClientVersion() *ClientVersionInfo {
	if x != nil {
		return x.ClientVersion
	}
	return nil
}

func (x *ReqLogin) GetGenAccessToken() bool {
	if x != nil {
		return x.GenAccessToken
	}
	return false
}

func (x *ReqLogin) GetCurrencyPlatforms() []uint32 {
	if x != nil {
		return x.CurrencyPlatforms
	}
	return nil
}

func (x *ReqLogin) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqLogin) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ReqLogin) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

func (x *ReqLogin) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ResLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error                 *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	AccountId             uint32           `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Account               *Account         `protobuf:"bytes,3,opt,name=account,proto3" json:"account"`
	GameInfo              *GameConnectInfo `protobuf:"bytes,4,opt,name=game_info,json=gameInfo,proto3" json:"game_info"`
	HasUnreadAnnouncement bool             `protobuf:"varint,5,opt,name=has_unread_announcement,json=hasUnreadAnnouncement,proto3" json:"has_unread_announcement"`
	AccessToken           string           `protobuf:"bytes,6,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	SignupTime            uint32           `protobuf:"varint,7,opt,name=signup_time,json=signupTime,proto3" json:"signup_time"`
	IsIdCardAuthed        bool             `protobuf:"varint,8,opt,name=is_id_card_authed,json=isIdCardAuthed,proto3" json:"is_id_card_authed"`
	Country               string           `protobuf:"bytes,9,opt,name=country,proto3" json:"country"`
	LoginedVersion        []uint32         `protobuf:"varint,10,rep,packed,name=logined_version,json=loginedVersion,proto3" json:"logined_version"`
	RewardedVersion       []uint32         `protobuf:"varint,11,rep,packed,name=rewarded_version,json=rewardedVersion,proto3" json:"rewarded_version"`
}

func (x *ResLogin) Reset() {
	*x = ResLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResLogin) ProtoMessage() {}

func (x *ResLogin) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResLogin.ProtoReflect.Descriptor instead.
func (*ResLogin) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{188}
}

func (x *ResLogin) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResLogin) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResLogin) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ResLogin) GetGameInfo() *GameConnectInfo {
	if x != nil {
		return x.GameInfo
	}
	return nil
}

func (x *ResLogin) GetHasUnreadAnnouncement() bool {
	if x != nil {
		return x.HasUnreadAnnouncement
	}
	return false
}

func (x *ResLogin) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ResLogin) GetSignupTime() uint32 {
	if x != nil {
		return x.SignupTime
	}
	return 0
}

func (x *ResLogin) GetIsIdCardAuthed() bool {
	if x != nil {
		return x.IsIdCardAuthed
	}
	return false
}

func (x *ResLogin) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ResLogin) GetLoginedVersion() []uint32 {
	if x != nil {
		return x.LoginedVersion
	}
	return nil
}

func (x *ResLogin) GetRewardedVersion() []uint32 {
	if x != nil {
		return x.RewardedVersion
	}
	return nil
}

type ReqEmailLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email             string            `protobuf:"bytes,1,opt,name=email,proto3" json:"email"`
	Password          string            `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
	Reconnect         bool              `protobuf:"varint,3,opt,name=reconnect,proto3" json:"reconnect"`
	Device            *ClientDeviceInfo `protobuf:"bytes,4,opt,name=device,proto3" json:"device"`
	RandomKey         string            `protobuf:"bytes,5,opt,name=random_key,json=randomKey,proto3" json:"random_key"`
	ClientVersion     string            `protobuf:"bytes,6,opt,name=client_version,json=clientVersion,proto3" json:"client_version"`
	GenAccessToken    bool              `protobuf:"varint,7,opt,name=gen_access_token,json=genAccessToken,proto3" json:"gen_access_token"`
	CurrencyPlatforms []uint32          `protobuf:"varint,8,rep,packed,name=currency_platforms,json=currencyPlatforms,proto3" json:"currency_platforms"`
}

func (x *ReqEmailLogin) Reset() {
	*x = ReqEmailLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEmailLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEmailLogin) ProtoMessage() {}

func (x *ReqEmailLogin) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEmailLogin.ProtoReflect.Descriptor instead.
func (*ReqEmailLogin) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{189}
}

func (x *ReqEmailLogin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ReqEmailLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqEmailLogin) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

func (x *ReqEmailLogin) GetDevice() *ClientDeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ReqEmailLogin) GetRandomKey() string {
	if x != nil {
		return x.RandomKey
	}
	return ""
}

func (x *ReqEmailLogin) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ReqEmailLogin) GetGenAccessToken() bool {
	if x != nil {
		return x.GenAccessToken
	}
	return false
}

func (x *ReqEmailLogin) GetCurrencyPlatforms() []uint32 {
	if x != nil {
		return x.CurrencyPlatforms
	}
	return nil
}

type ReqBindAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
}

func (x *ReqBindAccount) Reset() {
	*x = ReqBindAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBindAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBindAccount) ProtoMessage() {}

func (x *ReqBindAccount) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBindAccount.ProtoReflect.Descriptor instead.
func (*ReqBindAccount) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{190}
}

func (x *ReqBindAccount) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReqBindAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ReqCreatePhoneVerifyCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone"`
	Usage uint32 `protobuf:"varint,2,opt,name=usage,proto3" json:"usage"`
}

func (x *ReqCreatePhoneVerifyCode) Reset() {
	*x = ReqCreatePhoneVerifyCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreatePhoneVerifyCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreatePhoneVerifyCode) ProtoMessage() {}

func (x *ReqCreatePhoneVerifyCode) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreatePhoneVerifyCode.ProtoReflect.Descriptor instead.
func (*ReqCreatePhoneVerifyCode) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{191}
}

func (x *ReqCreatePhoneVerifyCode) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ReqCreatePhoneVerifyCode) GetUsage() uint32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type ReqCreateEmailVerifyCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email"`
	Usage uint32 `protobuf:"varint,2,opt,name=usage,proto3" json:"usage"`
}

func (x *ReqCreateEmailVerifyCode) Reset() {
	*x = ReqCreateEmailVerifyCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateEmailVerifyCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateEmailVerifyCode) ProtoMessage() {}

func (x *ReqCreateEmailVerifyCode) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateEmailVerifyCode.ProtoReflect.Descriptor instead.
func (*ReqCreateEmailVerifyCode) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{192}
}

func (x *ReqCreateEmailVerifyCode) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ReqCreateEmailVerifyCode) GetUsage() uint32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type ReqVerifyCodeForSecure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Operation uint32 `protobuf:"varint,2,opt,name=operation,proto3" json:"operation"`
}

func (x *ReqVerifyCodeForSecure) Reset() {
	*x = ReqVerifyCodeForSecure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqVerifyCodeForSecure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqVerifyCodeForSecure) ProtoMessage() {}

func (x *ReqVerifyCodeForSecure) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqVerifyCodeForSecure.ProtoReflect.Descriptor instead.
func (*ReqVerifyCodeForSecure) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{193}
}

func (x *ReqVerifyCodeForSecure) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReqVerifyCodeForSecure) GetOperation() uint32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

type ResVerfiyCodeForSecure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	SecureToken string `protobuf:"bytes,2,opt,name=secure_token,json=secureToken,proto3" json:"secure_token"`
}

func (x *ResVerfiyCodeForSecure) Reset() {
	*x = ResVerfiyCodeForSecure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResVerfiyCodeForSecure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResVerfiyCodeForSecure) ProtoMessage() {}

func (x *ResVerfiyCodeForSecure) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResVerfiyCodeForSecure.ProtoReflect.Descriptor instead.
func (*ResVerfiyCodeForSecure) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{194}
}

func (x *ResVerfiyCodeForSecure) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResVerfiyCodeForSecure) GetSecureToken() string {
	if x != nil {
		return x.SecureToken
	}
	return ""
}

type ReqBindPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Phone            string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone"`
	Password         string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
	MultiBindVersion bool   `protobuf:"varint,4,opt,name=multi_bind_version,json=multiBindVersion,proto3" json:"multi_bind_version"`
}

func (x *ReqBindPhoneNumber) Reset() {
	*x = ReqBindPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBindPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBindPhoneNumber) ProtoMessage() {}

func (x *ReqBindPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBindPhoneNumber.ProtoReflect.Descriptor instead.
func (*ReqBindPhoneNumber) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{195}
}

func (x *ReqBindPhoneNumber) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReqBindPhoneNumber) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ReqBindPhoneNumber) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqBindPhoneNumber) GetMultiBindVersion() bool {
	if x != nil {
		return x.MultiBindVersion
	}
	return false
}

type ReqUnbindPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Phone    string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
}

func (x *ReqUnbindPhoneNumber) Reset() {
	*x = ReqUnbindPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUnbindPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUnbindPhoneNumber) ProtoMessage() {}

func (x *ReqUnbindPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUnbindPhoneNumber.ProtoReflect.Descriptor instead.
func (*ReqUnbindPhoneNumber) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{196}
}

func (x *ReqUnbindPhoneNumber) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReqUnbindPhoneNumber) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ReqUnbindPhoneNumber) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ResFetchPhoneLoginBind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	PhoneLogin uint32 `protobuf:"varint,2,opt,name=phone_login,json=phoneLogin,proto3" json:"phone_login"`
}

func (x *ResFetchPhoneLoginBind) Reset() {
	*x = ResFetchPhoneLoginBind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchPhoneLoginBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchPhoneLoginBind) ProtoMessage() {}

func (x *ResFetchPhoneLoginBind) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchPhoneLoginBind.ProtoReflect.Descriptor instead.
func (*ResFetchPhoneLoginBind) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{197}
}

func (x *ResFetchPhoneLoginBind) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchPhoneLoginBind) GetPhoneLogin() uint32 {
	if x != nil {
		return x.PhoneLogin
	}
	return 0
}

type ReqCreatePhoneLoginBind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password"`
}

func (x *ReqCreatePhoneLoginBind) Reset() {
	*x = ReqCreatePhoneLoginBind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreatePhoneLoginBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreatePhoneLoginBind) ProtoMessage() {}

func (x *ReqCreatePhoneLoginBind) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreatePhoneLoginBind.ProtoReflect.Descriptor instead.
func (*ReqCreatePhoneLoginBind) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{198}
}

func (x *ReqCreatePhoneLoginBind) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ReqBindEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email"`
	Code     string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
}

func (x *ReqBindEmail) Reset() {
	*x = ReqBindEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBindEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBindEmail) ProtoMessage() {}

func (x *ReqBindEmail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBindEmail.ProtoReflect.Descriptor instead.
func (*ReqBindEmail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{199}
}

func (x *ReqBindEmail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ReqBindEmail) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReqBindEmail) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ReqModifyPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewPassword string `protobuf:"bytes,1,opt,name=new_password,json=newPassword,proto3" json:"new_password"`
	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password"`
	SecureToken string `protobuf:"bytes,3,opt,name=secure_token,json=secureToken,proto3" json:"secure_token"`
}

func (x *ReqModifyPassword) Reset() {
	*x = ReqModifyPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqModifyPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqModifyPassword) ProtoMessage() {}

func (x *ReqModifyPassword) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqModifyPassword.ProtoReflect.Descriptor instead.
func (*ReqModifyPassword) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{200}
}

func (x *ReqModifyPassword) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ReqModifyPassword) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ReqModifyPassword) GetSecureToken() string {
	if x != nil {
		return x.SecureToken
	}
	return ""
}

type ReqOauth2Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Code                string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	Uid                 string `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid"`
	ClientVersionString string `protobuf:"bytes,4,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqOauth2Auth) Reset() {
	*x = ReqOauth2Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOauth2Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOauth2Auth) ProtoMessage() {}

func (x *ReqOauth2Auth) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOauth2Auth.ProtoReflect.Descriptor instead.
func (*ReqOauth2Auth) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{201}
}

func (x *ReqOauth2Auth) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqOauth2Auth) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReqOauth2Auth) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqOauth2Auth) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResOauth2Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
}

func (x *ResOauth2Auth) Reset() {
	*x = ResOauth2Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOauth2Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOauth2Auth) ProtoMessage() {}

func (x *ResOauth2Auth) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOauth2Auth.ProtoReflect.Descriptor instead.
func (*ResOauth2Auth) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{202}
}

func (x *ResOauth2Auth) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResOauth2Auth) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type ReqOauth2Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
}

func (x *ReqOauth2Check) Reset() {
	*x = ReqOauth2Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOauth2Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOauth2Check) ProtoMessage() {}

func (x *ReqOauth2Check) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOauth2Check.ProtoReflect.Descriptor instead.
func (*ReqOauth2Check) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{203}
}

func (x *ReqOauth2Check) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqOauth2Check) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type ResOauth2Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	HasAccount bool   `protobuf:"varint,2,opt,name=has_account,json=hasAccount,proto3" json:"has_account"`
}

func (x *ResOauth2Check) Reset() {
	*x = ResOauth2Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOauth2Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOauth2Check) ProtoMessage() {}

func (x *ResOauth2Check) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOauth2Check.ProtoReflect.Descriptor instead.
func (*ResOauth2Check) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{204}
}

func (x *ResOauth2Check) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResOauth2Check) GetHasAccount() bool {
	if x != nil {
		return x.HasAccount
	}
	return false
}

type ReqOauth2Signup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                uint32             `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	AccessToken         string             `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	Email               string             `protobuf:"bytes,3,opt,name=email,proto3" json:"email"`
	AdvertiseStr        string             `protobuf:"bytes,4,opt,name=advertise_str,json=advertiseStr,proto3" json:"advertise_str"`
	Device              *ClientDeviceInfo  `protobuf:"bytes,5,opt,name=device,proto3" json:"device"`
	ClientVersion       *ClientVersionInfo `protobuf:"bytes,6,opt,name=client_version,json=clientVersion,proto3" json:"client_version"`
	ClientVersionString string             `protobuf:"bytes,7,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
	Tag                 string             `protobuf:"bytes,8,opt,name=tag,proto3" json:"tag"`
}

func (x *ReqOauth2Signup) Reset() {
	*x = ReqOauth2Signup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOauth2Signup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOauth2Signup) ProtoMessage() {}

func (x *ReqOauth2Signup) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOauth2Signup.ProtoReflect.Descriptor instead.
func (*ReqOauth2Signup) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{205}
}

func (x *ReqOauth2Signup) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqOauth2Signup) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqOauth2Signup) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ReqOauth2Signup) GetAdvertiseStr() string {
	if x != nil {
		return x.AdvertiseStr
	}
	return ""
}

func (x *ReqOauth2Signup) GetDevice() *ClientDeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ReqOauth2Signup) GetClientVersion() *ClientVersionInfo {
	if x != nil {
		return x.ClientVersion
	}
	return nil
}

func (x *ReqOauth2Signup) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

func (x *ReqOauth2Signup) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ResOauth2Signup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResOauth2Signup) Reset() {
	*x = ResOauth2Signup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOauth2Signup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOauth2Signup) ProtoMessage() {}

func (x *ResOauth2Signup) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOauth2Signup.ProtoReflect.Descriptor instead.
func (*ResOauth2Signup) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{206}
}

func (x *ResOauth2Signup) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqOauth2Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                uint32             `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	AccessToken         string             `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	Reconnect           bool               `protobuf:"varint,3,opt,name=reconnect,proto3" json:"reconnect"`
	Device              *ClientDeviceInfo  `protobuf:"bytes,4,opt,name=device,proto3" json:"device"`
	RandomKey           string             `protobuf:"bytes,5,opt,name=random_key,json=randomKey,proto3" json:"random_key"`
	ClientVersion       *ClientVersionInfo `protobuf:"bytes,6,opt,name=client_version,json=clientVersion,proto3" json:"client_version"`
	GenAccessToken      bool               `protobuf:"varint,7,opt,name=gen_access_token,json=genAccessToken,proto3" json:"gen_access_token"`
	CurrencyPlatforms   []uint32           `protobuf:"varint,8,rep,packed,name=currency_platforms,json=currencyPlatforms,proto3" json:"currency_platforms"`
	Version             uint32             `protobuf:"varint,9,opt,name=version,proto3" json:"version"`
	ClientVersionString string             `protobuf:"bytes,10,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
	Tag                 string             `protobuf:"bytes,11,opt,name=tag,proto3" json:"tag"`
}

func (x *ReqOauth2Login) Reset() {
	*x = ReqOauth2Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOauth2Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOauth2Login) ProtoMessage() {}

func (x *ReqOauth2Login) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOauth2Login.ProtoReflect.Descriptor instead.
func (*ReqOauth2Login) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{207}
}

func (x *ReqOauth2Login) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqOauth2Login) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqOauth2Login) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

func (x *ReqOauth2Login) GetDevice() *ClientDeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ReqOauth2Login) GetRandomKey() string {
	if x != nil {
		return x.RandomKey
	}
	return ""
}

func (x *ReqOauth2Login) GetClientVersion() *ClientVersionInfo {
	if x != nil {
		return x.ClientVersion
	}
	return nil
}

func (x *ReqOauth2Login) GetGenAccessToken() bool {
	if x != nil {
		return x.GenAccessToken
	}
	return false
}

func (x *ReqOauth2Login) GetCurrencyPlatforms() []uint32 {
	if x != nil {
		return x.CurrencyPlatforms
	}
	return nil
}

func (x *ReqOauth2Login) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ReqOauth2Login) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

func (x *ReqOauth2Login) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ReqDMMPreLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishUrl string `protobuf:"bytes,1,opt,name=finish_url,json=finishUrl,proto3" json:"finish_url"`
}

func (x *ReqDMMPreLogin) Reset() {
	*x = ReqDMMPreLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDMMPreLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDMMPreLogin) ProtoMessage() {}

func (x *ReqDMMPreLogin) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDMMPreLogin.ProtoReflect.Descriptor instead.
func (*ReqDMMPreLogin) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{208}
}

func (x *ReqDMMPreLogin) GetFinishUrl() string {
	if x != nil {
		return x.FinishUrl
	}
	return ""
}

type ResDMMPreLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	Parameter string `protobuf:"bytes,1,opt,name=parameter,proto3" json:"parameter"`
}

func (x *ResDMMPreLogin) Reset() {
	*x = ResDMMPreLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDMMPreLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDMMPreLogin) ProtoMessage() {}

func (x *ResDMMPreLogin) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDMMPreLogin.ProtoReflect.Descriptor instead.
func (*ResDMMPreLogin) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{209}
}

func (x *ResDMMPreLogin) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResDMMPreLogin) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

type ReqLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqLogout) Reset() {
	*x = ReqLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLogout) ProtoMessage() {}

func (x *ReqLogout) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLogout.ProtoReflect.Descriptor instead.
func (*ReqLogout) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{210}
}

type ResLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResLogout) Reset() {
	*x = ResLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResLogout) ProtoMessage() {}

func (x *ResLogout) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResLogout.ProtoReflect.Descriptor instead.
func (*ResLogout) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{211}
}

func (x *ResLogout) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqHeatBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoOperationCounter uint32 `protobuf:"varint,1,opt,name=no_operation_counter,json=noOperationCounter,proto3" json:"no_operation_counter"`
}

func (x *ReqHeatBeat) Reset() {
	*x = ReqHeatBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqHeatBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHeatBeat) ProtoMessage() {}

func (x *ReqHeatBeat) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHeatBeat.ProtoReflect.Descriptor instead.
func (*ReqHeatBeat) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{212}
}

func (x *ReqHeatBeat) GetNoOperationCounter() uint32 {
	if x != nil {
		return x.NoOperationCounter
	}
	return 0
}

type ReqLoginBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract"`
}

func (x *ReqLoginBeat) Reset() {
	*x = ReqLoginBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLoginBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLoginBeat) ProtoMessage() {}

func (x *ReqLoginBeat) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLoginBeat.ProtoReflect.Descriptor instead.
func (*ReqLoginBeat) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{213}
}

func (x *ReqLoginBeat) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type ReqJoinMatchQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchMode           uint32 `protobuf:"varint,1,opt,name=match_mode,json=matchMode,proto3" json:"match_mode"`
	ClientVersionString string `protobuf:"bytes,2,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqJoinMatchQueue) Reset() {
	*x = ReqJoinMatchQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqJoinMatchQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqJoinMatchQueue) ProtoMessage() {}

func (x *ReqJoinMatchQueue) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqJoinMatchQueue.ProtoReflect.Descriptor instead.
func (*ReqJoinMatchQueue) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{214}
}

func (x *ReqJoinMatchQueue) GetMatchMode() uint32 {
	if x != nil {
		return x.MatchMode
	}
	return 0
}

func (x *ReqJoinMatchQueue) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ReqCancelMatchQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchMode uint32 `protobuf:"varint,1,opt,name=match_mode,json=matchMode,proto3" json:"match_mode"`
}

func (x *ReqCancelMatchQueue) Reset() {
	*x = ReqCancelMatchQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCancelMatchQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCancelMatchQueue) ProtoMessage() {}

func (x *ReqCancelMatchQueue) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCancelMatchQueue.ProtoReflect.Descriptor instead.
func (*ReqCancelMatchQueue) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{215}
}

func (x *ReqCancelMatchQueue) GetMatchMode() uint32 {
	if x != nil {
		return x.MatchMode
	}
	return 0
}

type ReqAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqAccountInfo) Reset() {
	*x = ReqAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAccountInfo) ProtoMessage() {}

func (x *ReqAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAccountInfo.ProtoReflect.Descriptor instead.
func (*ReqAccountInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{216}
}

func (x *ReqAccountInfo) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ResAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Account *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account"`
	Room    *Room    `protobuf:"bytes,3,opt,name=room,proto3" json:"room"`
}

func (x *ResAccountInfo) Reset() {
	*x = ResAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountInfo) ProtoMessage() {}

func (x *ResAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountInfo.ProtoReflect.Descriptor instead.
func (*ResAccountInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{217}
}

func (x *ResAccountInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountInfo) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ResAccountInfo) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type ReqCreateNickname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname     string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname"`
	AdvertiseStr string `protobuf:"bytes,2,opt,name=advertise_str,json=advertiseStr,proto3" json:"advertise_str"`
	Tag          string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag"`
}

func (x *ReqCreateNickname) Reset() {
	*x = ReqCreateNickname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateNickname) ProtoMessage() {}

func (x *ReqCreateNickname) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateNickname.ProtoReflect.Descriptor instead.
func (*ReqCreateNickname) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{218}
}

func (x *ReqCreateNickname) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ReqCreateNickname) GetAdvertiseStr() string {
	if x != nil {
		return x.AdvertiseStr
	}
	return ""
}

func (x *ReqCreateNickname) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ReqModifyNickname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname  string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname"`
	UseItemId uint32 `protobuf:"varint,2,opt,name=use_item_id,json=useItemId,proto3" json:"use_item_id"`
}

func (x *ReqModifyNickname) Reset() {
	*x = ReqModifyNickname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqModifyNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqModifyNickname) ProtoMessage() {}

func (x *ReqModifyNickname) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqModifyNickname.ProtoReflect.Descriptor instead.
func (*ReqModifyNickname) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{219}
}

func (x *ReqModifyNickname) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ReqModifyNickname) GetUseItemId() uint32 {
	if x != nil {
		return x.UseItemId
	}
	return 0
}

type ReqModifyBirthday struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday int32 `protobuf:"varint,1,opt,name=birthday,proto3" json:"birthday"`
}

func (x *ReqModifyBirthday) Reset() {
	*x = ReqModifyBirthday{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqModifyBirthday) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqModifyBirthday) ProtoMessage() {}

func (x *ReqModifyBirthday) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqModifyBirthday.ProtoReflect.Descriptor instead.
func (*ReqModifyBirthday) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{220}
}

func (x *ReqModifyBirthday) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

type ResSelfRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Room  *Room  `protobuf:"bytes,2,opt,name=room,proto3" json:"room"`
}

func (x *ResSelfRoom) Reset() {
	*x = ResSelfRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSelfRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSelfRoom) ProtoMessage() {}

func (x *ResSelfRoom) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSelfRoom.ProtoReflect.Descriptor instead.
func (*ResSelfRoom) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{221}
}

func (x *ResSelfRoom) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSelfRoom) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type ReqCreateRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerCount         uint32    `protobuf:"varint,1,opt,name=player_count,json=playerCount,proto3" json:"player_count"`
	Mode                *GameMode `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode"`
	PublicLive          bool      `protobuf:"varint,3,opt,name=public_live,json=publicLive,proto3" json:"public_live"`
	ClientVersionString string    `protobuf:"bytes,4,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateRoom) Reset() {
	*x = ReqCreateRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateRoom) ProtoMessage() {}

func (x *ReqCreateRoom) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateRoom.ProtoReflect.Descriptor instead.
func (*ReqCreateRoom) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{222}
}

func (x *ReqCreateRoom) GetPlayerCount() uint32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

func (x *ReqCreateRoom) GetMode() *GameMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *ReqCreateRoom) GetPublicLive() bool {
	if x != nil {
		return x.PublicLive
	}
	return false
}

func (x *ReqCreateRoom) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Room  *Room  `protobuf:"bytes,2,opt,name=room,proto3" json:"room"`
}

func (x *ResCreateRoom) Reset() {
	*x = ResCreateRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateRoom) ProtoMessage() {}

func (x *ResCreateRoom) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateRoom.ProtoReflect.Descriptor instead.
func (*ResCreateRoom) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{223}
}

func (x *ResCreateRoom) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateRoom) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type ReqJoinRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId              uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	ClientVersionString string `protobuf:"bytes,2,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqJoinRoom) Reset() {
	*x = ReqJoinRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqJoinRoom) ProtoMessage() {}

func (x *ReqJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqJoinRoom.ProtoReflect.Descriptor instead.
func (*ReqJoinRoom) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{224}
}

func (x *ReqJoinRoom) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ReqJoinRoom) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResJoinRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Room  *Room  `protobuf:"bytes,2,opt,name=room,proto3" json:"room"`
}

func (x *ResJoinRoom) Reset() {
	*x = ResJoinRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResJoinRoom) ProtoMessage() {}

func (x *ResJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResJoinRoom.ProtoReflect.Descriptor instead.
func (*ResJoinRoom) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{225}
}

func (x *ResJoinRoom) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResJoinRoom) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type ReqRoomReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready"`
}

func (x *ReqRoomReady) Reset() {
	*x = ReqRoomReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRoomReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRoomReady) ProtoMessage() {}

func (x *ReqRoomReady) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRoomReady.ProtoReflect.Descriptor instead.
func (*ReqRoomReady) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{226}
}

func (x *ReqRoomReady) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type ReqRoomDressing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dressing bool `protobuf:"varint,1,opt,name=dressing,proto3" json:"dressing"`
}

func (x *ReqRoomDressing) Reset() {
	*x = ReqRoomDressing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRoomDressing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRoomDressing) ProtoMessage() {}

func (x *ReqRoomDressing) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRoomDressing.ProtoReflect.Descriptor instead.
func (*ReqRoomDressing) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{227}
}

func (x *ReqRoomDressing) GetDressing() bool {
	if x != nil {
		return x.Dressing
	}
	return false
}

type ReqRoomStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqRoomStart) Reset() {
	*x = ReqRoomStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRoomStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRoomStart) ProtoMessage() {}

func (x *ReqRoomStart) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRoomStart.ProtoReflect.Descriptor instead.
func (*ReqRoomStart) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{228}
}

type ReqRoomKick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqRoomKick) Reset() {
	*x = ReqRoomKick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRoomKick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRoomKick) ProtoMessage() {}

func (x *ReqRoomKick) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRoomKick.ProtoReflect.Descriptor instead.
func (*ReqRoomKick) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{229}
}

func (x *ReqRoomKick) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ReqModifyRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotCount uint32 `protobuf:"varint,1,opt,name=robot_count,json=robotCount,proto3" json:"robot_count"`
}

func (x *ReqModifyRoom) Reset() {
	*x = ReqModifyRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqModifyRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqModifyRoom) ProtoMessage() {}

func (x *ReqModifyRoom) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqModifyRoom.ProtoReflect.Descriptor instead.
func (*ReqModifyRoom) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{230}
}

func (x *ReqModifyRoom) GetRobotCount() uint32 {
	if x != nil {
		return x.RobotCount
	}
	return 0
}

type ReqChangeAvatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId uint32 `protobuf:"varint,1,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id"`
}

func (x *ReqChangeAvatar) Reset() {
	*x = ReqChangeAvatar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqChangeAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqChangeAvatar) ProtoMessage() {}

func (x *ReqChangeAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqChangeAvatar.ProtoReflect.Descriptor instead.
func (*ReqChangeAvatar) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{231}
}

func (x *ReqChangeAvatar) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type ReqAccountStatisticInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqAccountStatisticInfo) Reset() {
	*x = ReqAccountStatisticInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAccountStatisticInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAccountStatisticInfo) ProtoMessage() {}

func (x *ReqAccountStatisticInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAccountStatisticInfo.ProtoReflect.Descriptor instead.
func (*ReqAccountStatisticInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{232}
}

func (x *ReqAccountStatisticInfo) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ResAccountStatisticInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error                    `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	StatisticData []*AccountStatisticData   `protobuf:"bytes,2,rep,name=statistic_data,json=statisticData,proto3" json:"statistic_data"`
	DetailData    *AccountDetailStatisticV2 `protobuf:"bytes,3,opt,name=detail_data,json=detailData,proto3" json:"detail_data"`
}

func (x *ResAccountStatisticInfo) Reset() {
	*x = ResAccountStatisticInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountStatisticInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountStatisticInfo) ProtoMessage() {}

func (x *ResAccountStatisticInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountStatisticInfo.ProtoReflect.Descriptor instead.
func (*ResAccountStatisticInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{233}
}

func (x *ResAccountStatisticInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountStatisticInfo) GetStatisticData() []*AccountStatisticData {
	if x != nil {
		return x.StatisticData
	}
	return nil
}

func (x *ResAccountStatisticInfo) GetDetailData() *AccountDetailStatisticV2 {
	if x != nil {
		return x.DetailData
	}
	return nil
}

type ResAccountChallengeRankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error                                       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	SeasonInfo []*ResAccountChallengeRankInfo_ChallengeRank `protobuf:"bytes,2,rep,name=season_info,json=seasonInfo,proto3" json:"season_info"`
}

func (x *ResAccountChallengeRankInfo) Reset() {
	*x = ResAccountChallengeRankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountChallengeRankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountChallengeRankInfo) ProtoMessage() {}

func (x *ResAccountChallengeRankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountChallengeRankInfo.ProtoReflect.Descriptor instead.
func (*ResAccountChallengeRankInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{234}
}

func (x *ResAccountChallengeRankInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountChallengeRankInfo) GetSeasonInfo() []*ResAccountChallengeRankInfo_ChallengeRank {
	if x != nil {
		return x.SeasonInfo
	}
	return nil
}

type ResAccountCharacterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	UnlockList []uint32 `protobuf:"varint,1,rep,packed,name=unlock_list,json=unlockList,proto3" json:"unlock_list"`
}

func (x *ResAccountCharacterInfo) Reset() {
	*x = ResAccountCharacterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountCharacterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountCharacterInfo) ProtoMessage() {}

func (x *ResAccountCharacterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountCharacterInfo.ProtoReflect.Descriptor instead.
func (*ResAccountCharacterInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{235}
}

func (x *ResAccountCharacterInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountCharacterInfo) GetUnlockList() []uint32 {
	if x != nil {
		return x.UnlockList
	}
	return nil
}

type ReqShopPurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Id   uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id"`
}

func (x *ReqShopPurchase) Reset() {
	*x = ReqShopPurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqShopPurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqShopPurchase) ProtoMessage() {}

func (x *ReqShopPurchase) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqShopPurchase.ProtoReflect.Descriptor instead.
func (*ReqShopPurchase) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{236}
}

func (x *ReqShopPurchase) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReqShopPurchase) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResShopPurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error         `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Update *AccountUpdate `protobuf:"bytes,2,opt,name=update,proto3" json:"update"`
}

func (x *ResShopPurchase) Reset() {
	*x = ResShopPurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResShopPurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResShopPurchase) ProtoMessage() {}

func (x *ResShopPurchase) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResShopPurchase.ProtoReflect.Descriptor instead.
func (*ResShopPurchase) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{237}
}

func (x *ResShopPurchase) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResShopPurchase) GetUpdate() *AccountUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

type ReqGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUuid            string `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
	ClientVersionString string `protobuf:"bytes,2,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqGameRecord) Reset() {
	*x = ReqGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameRecord) ProtoMessage() {}

func (x *ReqGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameRecord.ProtoReflect.Descriptor instead.
func (*ReqGameRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{238}
}

func (x *ReqGameRecord) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *ReqGameRecord) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error      `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Head    *RecordGame `protobuf:"bytes,3,opt,name=head,proto3" json:"head"`
	Data    []byte      `protobuf:"bytes,4,opt,name=data,proto3" json:"data"`
	DataUrl string      `protobuf:"bytes,5,opt,name=data_url,json=dataUrl,proto3" json:"data_url"`
}

func (x *ResGameRecord) Reset() {
	*x = ResGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameRecord) ProtoMessage() {}

func (x *ResGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameRecord.ProtoReflect.Descriptor instead.
func (*ResGameRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{239}
}

func (x *ResGameRecord) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResGameRecord) GetHead() *RecordGame {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *ResGameRecord) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResGameRecord) GetDataUrl() string {
	if x != nil {
		return x.DataUrl
	}
	return ""
}

type ReqGameRecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	Type  uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *ReqGameRecordList) Reset() {
	*x = ReqGameRecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameRecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameRecordList) ProtoMessage() {}

func (x *ReqGameRecordList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameRecordList.ProtoReflect.Descriptor instead.
func (*ReqGameRecordList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{240}
}

func (x *ReqGameRecordList) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ReqGameRecordList) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqGameRecordList) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResGameRecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	TotalCount uint32        `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count"`
	RecordList []*RecordGame `protobuf:"bytes,3,rep,name=record_list,json=recordList,proto3" json:"record_list"`
}

func (x *ResGameRecordList) Reset() {
	*x = ResGameRecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameRecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameRecordList) ProtoMessage() {}

func (x *ResGameRecordList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameRecordList.ProtoReflect.Descriptor instead.
func (*ResGameRecordList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{241}
}

func (x *ResGameRecordList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResGameRecordList) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ResGameRecordList) GetRecordList() []*RecordGame {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type ResCollectedGameRecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error              *Error                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	RecordList         []*RecordCollectedData `protobuf:"bytes,2,rep,name=record_list,json=recordList,proto3" json:"record_list"`
	RecordCollectLimit uint32                 `protobuf:"varint,3,opt,name=record_collect_limit,json=recordCollectLimit,proto3" json:"record_collect_limit"`
}

func (x *ResCollectedGameRecordList) Reset() {
	*x = ResCollectedGameRecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCollectedGameRecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCollectedGameRecordList) ProtoMessage() {}

func (x *ResCollectedGameRecordList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCollectedGameRecordList.ProtoReflect.Descriptor instead.
func (*ResCollectedGameRecordList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{242}
}

func (x *ResCollectedGameRecordList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCollectedGameRecordList) GetRecordList() []*RecordCollectedData {
	if x != nil {
		return x.RecordList
	}
	return nil
}

func (x *ResCollectedGameRecordList) GetRecordCollectLimit() uint32 {
	if x != nil {
		return x.RecordCollectLimit
	}
	return 0
}

type ReqGameRecordsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UuidList []string `protobuf:"bytes,1,rep,name=uuid_list,json=uuidList,proto3" json:"uuid_list"`
}

func (x *ReqGameRecordsDetail) Reset() {
	*x = ReqGameRecordsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameRecordsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameRecordsDetail) ProtoMessage() {}

func (x *ReqGameRecordsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameRecordsDetail.ProtoReflect.Descriptor instead.
func (*ReqGameRecordsDetail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{243}
}

func (x *ReqGameRecordsDetail) GetUuidList() []string {
	if x != nil {
		return x.UuidList
	}
	return nil
}

type ResGameRecordsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	RecordList []*RecordGame `protobuf:"bytes,2,rep,name=record_list,json=recordList,proto3" json:"record_list"`
}

func (x *ResGameRecordsDetail) Reset() {
	*x = ResGameRecordsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameRecordsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameRecordsDetail) ProtoMessage() {}

func (x *ResGameRecordsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameRecordsDetail.ProtoReflect.Descriptor instead.
func (*ResGameRecordsDetail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{244}
}

func (x *ResGameRecordsDetail) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResGameRecordsDetail) GetRecordList() []*RecordGame {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type ReqAddCollectedGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
	Remarks   string `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks"`
	StartTime uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime   uint32 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time"`
}

func (x *ReqAddCollectedGameRecord) Reset() {
	*x = ReqAddCollectedGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddCollectedGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddCollectedGameRecord) ProtoMessage() {}

func (x *ReqAddCollectedGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddCollectedGameRecord.ProtoReflect.Descriptor instead.
func (*ReqAddCollectedGameRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{245}
}

func (x *ReqAddCollectedGameRecord) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ReqAddCollectedGameRecord) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *ReqAddCollectedGameRecord) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqAddCollectedGameRecord) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ResAddCollectedGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResAddCollectedGameRecord) Reset() {
	*x = ResAddCollectedGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAddCollectedGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAddCollectedGameRecord) ProtoMessage() {}

func (x *ResAddCollectedGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAddCollectedGameRecord.ProtoReflect.Descriptor instead.
func (*ResAddCollectedGameRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{246}
}

func (x *ResAddCollectedGameRecord) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqRemoveCollectedGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
}

func (x *ReqRemoveCollectedGameRecord) Reset() {
	*x = ReqRemoveCollectedGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRemoveCollectedGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRemoveCollectedGameRecord) ProtoMessage() {}

func (x *ReqRemoveCollectedGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRemoveCollectedGameRecord.ProtoReflect.Descriptor instead.
func (*ReqRemoveCollectedGameRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{247}
}

func (x *ReqRemoveCollectedGameRecord) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ResRemoveCollectedGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResRemoveCollectedGameRecord) Reset() {
	*x = ResRemoveCollectedGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRemoveCollectedGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRemoveCollectedGameRecord) ProtoMessage() {}

func (x *ResRemoveCollectedGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRemoveCollectedGameRecord.ProtoReflect.Descriptor instead.
func (*ResRemoveCollectedGameRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{248}
}

func (x *ResRemoveCollectedGameRecord) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqChangeCollectedGameRecordRemarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
	Remarks string `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks"`
}

func (x *ReqChangeCollectedGameRecordRemarks) Reset() {
	*x = ReqChangeCollectedGameRecordRemarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqChangeCollectedGameRecordRemarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqChangeCollectedGameRecordRemarks) ProtoMessage() {}

func (x *ReqChangeCollectedGameRecordRemarks) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqChangeCollectedGameRecordRemarks.ProtoReflect.Descriptor instead.
func (*ReqChangeCollectedGameRecordRemarks) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{249}
}

func (x *ReqChangeCollectedGameRecordRemarks) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ReqChangeCollectedGameRecordRemarks) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type ResChangeCollectedGameRecordRemarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResChangeCollectedGameRecordRemarks) Reset() {
	*x = ResChangeCollectedGameRecordRemarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResChangeCollectedGameRecordRemarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResChangeCollectedGameRecordRemarks) ProtoMessage() {}

func (x *ResChangeCollectedGameRecordRemarks) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResChangeCollectedGameRecordRemarks.ProtoReflect.Descriptor instead.
func (*ResChangeCollectedGameRecordRemarks) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{250}
}

func (x *ResChangeCollectedGameRecordRemarks) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqLevelLeaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
}

func (x *ReqLevelLeaderboard) Reset() {
	*x = ReqLevelLeaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLevelLeaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLevelLeaderboard) ProtoMessage() {}

func (x *ReqLevelLeaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLevelLeaderboard.ProtoReflect.Descriptor instead.
func (*ReqLevelLeaderboard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{251}
}

func (x *ReqLevelLeaderboard) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResLevelLeaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error                      `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items    []*ResLevelLeaderboard_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	SelfRank uint32                      `protobuf:"varint,3,opt,name=self_rank,json=selfRank,proto3" json:"self_rank"`
}

func (x *ResLevelLeaderboard) Reset() {
	*x = ResLevelLeaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResLevelLeaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResLevelLeaderboard) ProtoMessage() {}

func (x *ResLevelLeaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResLevelLeaderboard.ProtoReflect.Descriptor instead.
func (*ResLevelLeaderboard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{252}
}

func (x *ResLevelLeaderboard) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResLevelLeaderboard) GetItems() []*ResLevelLeaderboard_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResLevelLeaderboard) GetSelfRank() uint32 {
	if x != nil {
		return x.SelfRank
	}
	return 0
}

type ReqChallangeLeaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season uint32 `protobuf:"varint,1,opt,name=season,proto3" json:"season"`
}

func (x *ReqChallangeLeaderboard) Reset() {
	*x = ReqChallangeLeaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqChallangeLeaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqChallangeLeaderboard) ProtoMessage() {}

func (x *ReqChallangeLeaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqChallangeLeaderboard.ProtoReflect.Descriptor instead.
func (*ReqChallangeLeaderboard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{253}
}

func (x *ReqChallangeLeaderboard) GetSeason() uint32 {
	if x != nil {
		return x.Season
	}
	return 0
}

type ResChallengeLeaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error                          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items    []*ResChallengeLeaderboard_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	SelfRank uint32                          `protobuf:"varint,3,opt,name=self_rank,json=selfRank,proto3" json:"self_rank"`
}

func (x *ResChallengeLeaderboard) Reset() {
	*x = ResChallengeLeaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResChallengeLeaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResChallengeLeaderboard) ProtoMessage() {}

func (x *ResChallengeLeaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResChallengeLeaderboard.ProtoReflect.Descriptor instead.
func (*ResChallengeLeaderboard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{254}
}

func (x *ResChallengeLeaderboard) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResChallengeLeaderboard) GetItems() []*ResChallengeLeaderboard_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResChallengeLeaderboard) GetSelfRank() uint32 {
	if x != nil {
		return x.SelfRank
	}
	return 0
}

type ReqMutiChallengeLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIdList []uint32 `protobuf:"varint,1,rep,packed,name=account_id_list,json=accountIdList,proto3" json:"account_id_list"`
	Season        uint32   `protobuf:"varint,2,opt,name=season,proto3" json:"season"`
}

func (x *ReqMutiChallengeLevel) Reset() {
	*x = ReqMutiChallengeLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMutiChallengeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMutiChallengeLevel) ProtoMessage() {}

func (x *ReqMutiChallengeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMutiChallengeLevel.ProtoReflect.Descriptor instead.
func (*ReqMutiChallengeLevel) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{255}
}

func (x *ReqMutiChallengeLevel) GetAccountIdList() []uint32 {
	if x != nil {
		return x.AccountIdList
	}
	return nil
}

func (x *ReqMutiChallengeLevel) GetSeason() uint32 {
	if x != nil {
		return x.Season
	}
	return 0
}

type ResMutiChallengeLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error                        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items []*ResMutiChallengeLevel_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *ResMutiChallengeLevel) Reset() {
	*x = ResMutiChallengeLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMutiChallengeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMutiChallengeLevel) ProtoMessage() {}

func (x *ResMutiChallengeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMutiChallengeLevel.ProtoReflect.Descriptor instead.
func (*ResMutiChallengeLevel) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{256}
}

func (x *ResMutiChallengeLevel) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResMutiChallengeLevel) GetItems() []*ResMutiChallengeLevel_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReqMultiAccountId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIdList []uint32 `protobuf:"varint,1,rep,packed,name=account_id_list,json=accountIdList,proto3" json:"account_id_list"`
}

func (x *ReqMultiAccountId) Reset() {
	*x = ReqMultiAccountId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMultiAccountId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMultiAccountId) ProtoMessage() {}

func (x *ReqMultiAccountId) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMultiAccountId.ProtoReflect.Descriptor instead.
func (*ReqMultiAccountId) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{257}
}

func (x *ReqMultiAccountId) GetAccountIdList() []uint32 {
	if x != nil {
		return x.AccountIdList
	}
	return nil
}

type ResMultiAccountBrief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error            `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Players []*PlayerBaseView `protobuf:"bytes,2,rep,name=players,proto3" json:"players"`
}

func (x *ResMultiAccountBrief) Reset() {
	*x = ResMultiAccountBrief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMultiAccountBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMultiAccountBrief) ProtoMessage() {}

func (x *ResMultiAccountBrief) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMultiAccountBrief.ProtoReflect.Descriptor instead.
func (*ResMultiAccountBrief) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{258}
}

func (x *ResMultiAccountBrief) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResMultiAccountBrief) GetPlayers() []*PlayerBaseView {
	if x != nil {
		return x.Players
	}
	return nil
}

type ResFriendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error    `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Friends        []*Friend `protobuf:"bytes,2,rep,name=friends,proto3" json:"friends"`
	FriendMaxCount uint32    `protobuf:"varint,3,opt,name=friend_max_count,json=friendMaxCount,proto3" json:"friend_max_count"`
	FriendCount    uint32    `protobuf:"varint,4,opt,name=friend_count,json=friendCount,proto3" json:"friend_count"`
}

func (x *ResFriendList) Reset() {
	*x = ResFriendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFriendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFriendList) ProtoMessage() {}

func (x *ResFriendList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFriendList.ProtoReflect.Descriptor instead.
func (*ResFriendList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{259}
}

func (x *ResFriendList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFriendList) GetFriends() []*Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *ResFriendList) GetFriendMaxCount() uint32 {
	if x != nil {
		return x.FriendMaxCount
	}
	return 0
}

func (x *ResFriendList) GetFriendCount() uint32 {
	if x != nil {
		return x.FriendCount
	}
	return 0
}

type ResFriendApplyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error                            `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Applies []*ResFriendApplyList_FriendApply `protobuf:"bytes,2,rep,name=applies,proto3" json:"applies"`
}

func (x *ResFriendApplyList) Reset() {
	*x = ResFriendApplyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFriendApplyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFriendApplyList) ProtoMessage() {}

func (x *ResFriendApplyList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFriendApplyList.ProtoReflect.Descriptor instead.
func (*ResFriendApplyList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{260}
}

func (x *ResFriendApplyList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFriendApplyList) GetApplies() []*ResFriendApplyList_FriendApply {
	if x != nil {
		return x.Applies
	}
	return nil
}

type ReqApplyFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
}

func (x *ReqApplyFriend) Reset() {
	*x = ReqApplyFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqApplyFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqApplyFriend) ProtoMessage() {}

func (x *ReqApplyFriend) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqApplyFriend.ProtoReflect.Descriptor instead.
func (*ReqApplyFriend) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{261}
}

func (x *ReqApplyFriend) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type ReqHandleFriendApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
	Method   uint32 `protobuf:"varint,2,opt,name=method,proto3" json:"method"`
}

func (x *ReqHandleFriendApply) Reset() {
	*x = ReqHandleFriendApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqHandleFriendApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHandleFriendApply) ProtoMessage() {}

func (x *ReqHandleFriendApply) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHandleFriendApply.ProtoReflect.Descriptor instead.
func (*ReqHandleFriendApply) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{262}
}

func (x *ReqHandleFriendApply) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ReqHandleFriendApply) GetMethod() uint32 {
	if x != nil {
		return x.Method
	}
	return 0
}

type ReqRemoveFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
}

func (x *ReqRemoveFriend) Reset() {
	*x = ReqRemoveFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRemoveFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRemoveFriend) ProtoMessage() {}

func (x *ReqRemoveFriend) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRemoveFriend.ProtoReflect.Descriptor instead.
func (*ReqRemoveFriend) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{263}
}

func (x *ReqRemoveFriend) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type ReqSearchAccountByPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchNext bool   `protobuf:"varint,1,opt,name=search_next,json=searchNext,proto3" json:"search_next"`
	Pattern    string `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern"`
}

func (x *ReqSearchAccountByPattern) Reset() {
	*x = ReqSearchAccountByPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSearchAccountByPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSearchAccountByPattern) ProtoMessage() {}

func (x *ReqSearchAccountByPattern) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSearchAccountByPattern.ProtoReflect.Descriptor instead.
func (*ReqSearchAccountByPattern) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{264}
}

func (x *ReqSearchAccountByPattern) GetSearchNext() bool {
	if x != nil {
		return x.SearchNext
	}
	return false
}

func (x *ReqSearchAccountByPattern) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

type ResSearchAccountByPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	IsFinished    bool     `protobuf:"varint,2,opt,name=is_finished,json=isFinished,proto3" json:"is_finished"`
	MatchAccounts []uint32 `protobuf:"varint,3,rep,packed,name=match_accounts,json=matchAccounts,proto3" json:"match_accounts"`
	DecodeId      uint32   `protobuf:"varint,4,opt,name=decode_id,json=decodeId,proto3" json:"decode_id"`
}

func (x *ResSearchAccountByPattern) Reset() {
	*x = ResSearchAccountByPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSearchAccountByPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSearchAccountByPattern) ProtoMessage() {}

func (x *ResSearchAccountByPattern) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSearchAccountByPattern.ProtoReflect.Descriptor instead.
func (*ResSearchAccountByPattern) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{265}
}

func (x *ResSearchAccountByPattern) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSearchAccountByPattern) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *ResSearchAccountByPattern) GetMatchAccounts() []uint32 {
	if x != nil {
		return x.MatchAccounts
	}
	return nil
}

func (x *ResSearchAccountByPattern) GetDecodeId() uint32 {
	if x != nil {
		return x.DecodeId
	}
	return 0
}

type ReqAccountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIdList []uint32 `protobuf:"varint,1,rep,packed,name=account_id_list,json=accountIdList,proto3" json:"account_id_list"`
}

func (x *ReqAccountList) Reset() {
	*x = ReqAccountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAccountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAccountList) ProtoMessage() {}

func (x *ReqAccountList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAccountList.ProtoReflect.Descriptor instead.
func (*ReqAccountList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{266}
}

func (x *ReqAccountList) GetAccountIdList() []uint32 {
	if x != nil {
		return x.AccountIdList
	}
	return nil
}

type ResAccountStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error                `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	States []*AccountActiveState `protobuf:"bytes,2,rep,name=states,proto3" json:"states"`
}

func (x *ResAccountStates) Reset() {
	*x = ResAccountStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountStates) ProtoMessage() {}

func (x *ResAccountStates) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountStates.ProtoReflect.Descriptor instead.
func (*ResAccountStates) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{267}
}

func (x *ResAccountStates) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountStates) GetStates() []*AccountActiveState {
	if x != nil {
		return x.States
	}
	return nil
}

type ReqSearchAccountById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqSearchAccountById) Reset() {
	*x = ReqSearchAccountById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSearchAccountById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSearchAccountById) ProtoMessage() {}

func (x *ReqSearchAccountById) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSearchAccountById.ProtoReflect.Descriptor instead.
func (*ReqSearchAccountById) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{268}
}

func (x *ReqSearchAccountById) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ResSearchAccountById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Player *PlayerBaseView `protobuf:"bytes,2,opt,name=player,proto3" json:"player"`
}

func (x *ResSearchAccountById) Reset() {
	*x = ResSearchAccountById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSearchAccountById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSearchAccountById) ProtoMessage() {}

func (x *ResSearchAccountById) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSearchAccountById.ProtoReflect.Descriptor instead.
func (*ResSearchAccountById) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{269}
}

func (x *ResSearchAccountById) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSearchAccountById) GetPlayer() *PlayerBaseView {
	if x != nil {
		return x.Player
	}
	return nil
}

type ResBagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Bag   *Bag   `protobuf:"bytes,2,opt,name=bag,proto3" json:"bag"`
}

func (x *ResBagInfo) Reset() {
	*x = ResBagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResBagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResBagInfo) ProtoMessage() {}

func (x *ResBagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResBagInfo.ProtoReflect.Descriptor instead.
func (*ResBagInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{270}
}

func (x *ResBagInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResBagInfo) GetBag() *Bag {
	if x != nil {
		return x.Bag
	}
	return nil
}

type ReqUseBagItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
}

func (x *ReqUseBagItem) Reset() {
	*x = ReqUseBagItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUseBagItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUseBagItem) ProtoMessage() {}

func (x *ReqUseBagItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUseBagItem.ProtoReflect.Descriptor instead.
func (*ReqUseBagItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{271}
}

func (x *ReqUseBagItem) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type ReqOpenManualItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count    uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	SelectId uint32 `protobuf:"varint,3,opt,name=select_id,json=selectId,proto3" json:"select_id"`
}

func (x *ReqOpenManualItem) Reset() {
	*x = ReqOpenManualItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOpenManualItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOpenManualItem) ProtoMessage() {}

func (x *ReqOpenManualItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOpenManualItem.ProtoReflect.Descriptor instead.
func (*ReqOpenManualItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{272}
}

func (x *ReqOpenManualItem) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ReqOpenManualItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqOpenManualItem) GetSelectId() uint32 {
	if x != nil {
		return x.SelectId
	}
	return 0
}

type ReqOpenRandomRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
}

func (x *ReqOpenRandomRewardItem) Reset() {
	*x = ReqOpenRandomRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOpenRandomRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOpenRandomRewardItem) ProtoMessage() {}

func (x *ReqOpenRandomRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOpenRandomRewardItem.ProtoReflect.Descriptor instead.
func (*ReqOpenRandomRewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{273}
}

func (x *ReqOpenRandomRewardItem) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type ResOpenRandomRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Results []*OpenResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results"`
}

func (x *ResOpenRandomRewardItem) Reset() {
	*x = ResOpenRandomRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOpenRandomRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOpenRandomRewardItem) ProtoMessage() {}

func (x *ResOpenRandomRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOpenRandomRewardItem.ProtoReflect.Descriptor instead.
func (*ResOpenRandomRewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{274}
}

func (x *ResOpenRandomRewardItem) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResOpenRandomRewardItem) GetResults() []*OpenResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReqOpenAllRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
}

func (x *ReqOpenAllRewardItem) Reset() {
	*x = ReqOpenAllRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOpenAllRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOpenAllRewardItem) ProtoMessage() {}

func (x *ReqOpenAllRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOpenAllRewardItem.ProtoReflect.Descriptor instead.
func (*ReqOpenAllRewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{275}
}

func (x *ReqOpenAllRewardItem) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type ResOpenAllRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Results []*OpenResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results"`
}

func (x *ResOpenAllRewardItem) Reset() {
	*x = ResOpenAllRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOpenAllRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOpenAllRewardItem) ProtoMessage() {}

func (x *ResOpenAllRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOpenAllRewardItem.ProtoReflect.Descriptor instead.
func (*ResOpenAllRewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{276}
}

func (x *ResOpenAllRewardItem) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResOpenAllRewardItem) GetResults() []*OpenResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReqComposeShard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
}

func (x *ReqComposeShard) Reset() {
	*x = ReqComposeShard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqComposeShard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqComposeShard) ProtoMessage() {}

func (x *ReqComposeShard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqComposeShard.ProtoReflect.Descriptor instead.
func (*ReqComposeShard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{277}
}

func (x *ReqComposeShard) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type ReqFetchAnnouncement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang     string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform"`
}

func (x *ReqFetchAnnouncement) Reset() {
	*x = ReqFetchAnnouncement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchAnnouncement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchAnnouncement) ProtoMessage() {}

func (x *ReqFetchAnnouncement) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchAnnouncement.ProtoReflect.Descriptor instead.
func (*ReqFetchAnnouncement) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{278}
}

func (x *ReqFetchAnnouncement) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *ReqFetchAnnouncement) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type ResAnnouncement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Announcements []*Announcement `protobuf:"bytes,2,rep,name=announcements,proto3" json:"announcements"`
	Sort          []uint32        `protobuf:"varint,3,rep,packed,name=sort,proto3" json:"sort"`
	ReadList      []uint32        `protobuf:"varint,4,rep,packed,name=read_list,json=readList,proto3" json:"read_list"`
}

func (x *ResAnnouncement) Reset() {
	*x = ResAnnouncement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAnnouncement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAnnouncement) ProtoMessage() {}

func (x *ResAnnouncement) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAnnouncement.ProtoReflect.Descriptor instead.
func (*ResAnnouncement) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{279}
}

func (x *ResAnnouncement) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAnnouncement) GetAnnouncements() []*Announcement {
	if x != nil {
		return x.Announcements
	}
	return nil
}

func (x *ResAnnouncement) GetSort() []uint32 {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ResAnnouncement) GetReadList() []uint32 {
	if x != nil {
		return x.ReadList
	}
	return nil
}

type ResMailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error  `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Mails []*Mail `protobuf:"bytes,2,rep,name=mails,proto3" json:"mails"`
}

func (x *ResMailInfo) Reset() {
	*x = ResMailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMailInfo) ProtoMessage() {}

func (x *ResMailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMailInfo.ProtoReflect.Descriptor instead.
func (*ResMailInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{280}
}

func (x *ResMailInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResMailInfo) GetMails() []*Mail {
	if x != nil {
		return x.Mails
	}
	return nil
}

type ReqReadMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId uint32 `protobuf:"varint,1,opt,name=mail_id,json=mailId,proto3" json:"mail_id"`
}

func (x *ReqReadMail) Reset() {
	*x = ReqReadMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReadMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReadMail) ProtoMessage() {}

func (x *ReqReadMail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReadMail.ProtoReflect.Descriptor instead.
func (*ReqReadMail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{281}
}

func (x *ReqReadMail) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

type ReqDeleteMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId uint32 `protobuf:"varint,1,opt,name=mail_id,json=mailId,proto3" json:"mail_id"`
}

func (x *ReqDeleteMail) Reset() {
	*x = ReqDeleteMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteMail) ProtoMessage() {}

func (x *ReqDeleteMail) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteMail.ProtoReflect.Descriptor instead.
func (*ReqDeleteMail) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{282}
}

func (x *ReqDeleteMail) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

type ReqTakeAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId uint32 `protobuf:"varint,1,opt,name=mail_id,json=mailId,proto3" json:"mail_id"`
}

func (x *ReqTakeAttachment) Reset() {
	*x = ReqTakeAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTakeAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTakeAttachment) ProtoMessage() {}

func (x *ReqTakeAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTakeAttachment.ProtoReflect.Descriptor instead.
func (*ReqTakeAttachment) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{283}
}

func (x *ReqTakeAttachment) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

type ReqReceiveAchievementGroupReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id"`
}

func (x *ReqReceiveAchievementGroupReward) Reset() {
	*x = ReqReceiveAchievementGroupReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveAchievementGroupReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveAchievementGroupReward) ProtoMessage() {}

func (x *ReqReceiveAchievementGroupReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveAchievementGroupReward.ProtoReflect.Descriptor instead.
func (*ReqReceiveAchievementGroupReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{284}
}

func (x *ReqReceiveAchievementGroupReward) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ResReceiveAchievementGroupReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ExecuteReward []*ExecuteReward `protobuf:"bytes,2,rep,name=execute_reward,json=executeReward,proto3" json:"execute_reward"`
}

func (x *ResReceiveAchievementGroupReward) Reset() {
	*x = ResReceiveAchievementGroupReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveAchievementGroupReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveAchievementGroupReward) ProtoMessage() {}

func (x *ResReceiveAchievementGroupReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveAchievementGroupReward.ProtoReflect.Descriptor instead.
func (*ResReceiveAchievementGroupReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{285}
}

func (x *ResReceiveAchievementGroupReward) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReceiveAchievementGroupReward) GetExecuteReward() []*ExecuteReward {
	if x != nil {
		return x.ExecuteReward
	}
	return nil
}

type ReqReceiveAchievementReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementId uint32 `protobuf:"varint,1,opt,name=achievement_id,json=achievementId,proto3" json:"achievement_id"`
}

func (x *ReqReceiveAchievementReward) Reset() {
	*x = ReqReceiveAchievementReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveAchievementReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveAchievementReward) ProtoMessage() {}

func (x *ReqReceiveAchievementReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveAchievementReward.ProtoReflect.Descriptor instead.
func (*ReqReceiveAchievementReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{286}
}

func (x *ReqReceiveAchievementReward) GetAchievementId() uint32 {
	if x != nil {
		return x.AchievementId
	}
	return 0
}

type ResReceiveAchievementReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ExecuteReward []*ExecuteReward `protobuf:"bytes,2,rep,name=execute_reward,json=executeReward,proto3" json:"execute_reward"`
}

func (x *ResReceiveAchievementReward) Reset() {
	*x = ResReceiveAchievementReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveAchievementReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveAchievementReward) ProtoMessage() {}

func (x *ResReceiveAchievementReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveAchievementReward.ProtoReflect.Descriptor instead.
func (*ResReceiveAchievementReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{287}
}

func (x *ResReceiveAchievementReward) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReceiveAchievementReward) GetExecuteReward() []*ExecuteReward {
	if x != nil {
		return x.ExecuteReward
	}
	return nil
}

type ResFetchAchievementRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error                                     `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	Rate  []*ResFetchAchievementRate_AchievementRate `protobuf:"bytes,1,rep,name=rate,proto3" json:"rate"`
}

func (x *ResFetchAchievementRate) Reset() {
	*x = ResFetchAchievementRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchAchievementRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchAchievementRate) ProtoMessage() {}

func (x *ResFetchAchievementRate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchAchievementRate.ProtoReflect.Descriptor instead.
func (*ResFetchAchievementRate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{288}
}

func (x *ResFetchAchievementRate) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchAchievementRate) GetRate() []*ResFetchAchievementRate_AchievementRate {
	if x != nil {
		return x.Rate
	}
	return nil
}

type ResAchievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Progresses    []*AchievementProgress `protobuf:"bytes,2,rep,name=progresses,proto3" json:"progresses"`
	RewardedGroup []uint32               `protobuf:"varint,3,rep,packed,name=rewarded_group,json=rewardedGroup,proto3" json:"rewarded_group"`
}

func (x *ResAchievement) Reset() {
	*x = ResAchievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAchievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAchievement) ProtoMessage() {}

func (x *ResAchievement) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAchievement.ProtoReflect.Descriptor instead.
func (*ResAchievement) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{289}
}

func (x *ResAchievement) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAchievement) GetProgresses() []*AchievementProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *ResAchievement) GetRewardedGroup() []uint32 {
	if x != nil {
		return x.RewardedGroup
	}
	return nil
}

type ResTitleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	TitleList []uint32 `protobuf:"varint,2,rep,packed,name=title_list,json=titleList,proto3" json:"title_list"`
}

func (x *ResTitleList) Reset() {
	*x = ResTitleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResTitleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResTitleList) ProtoMessage() {}

func (x *ResTitleList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResTitleList.ProtoReflect.Descriptor instead.
func (*ResTitleList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{290}
}

func (x *ResTitleList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResTitleList) GetTitleList() []uint32 {
	if x != nil {
		return x.TitleList
	}
	return nil
}

type ReqUseTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title uint32 `protobuf:"varint,1,opt,name=title,proto3" json:"title"`
}

func (x *ReqUseTitle) Reset() {
	*x = ReqUseTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUseTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUseTitle) ProtoMessage() {}

func (x *ReqUseTitle) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUseTitle.ProtoReflect.Descriptor instead.
func (*ReqUseTitle) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{291}
}

func (x *ReqUseTitle) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

type ReqBuyShiLian struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
}

func (x *ReqBuyShiLian) Reset() {
	*x = ReqBuyShiLian{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBuyShiLian) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBuyShiLian) ProtoMessage() {}

func (x *ReqBuyShiLian) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBuyShiLian.ProtoReflect.Descriptor instead.
func (*ReqBuyShiLian) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{292}
}

func (x *ReqBuyShiLian) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ReqUpdateClientValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value"`
}

func (x *ReqUpdateClientValue) Reset() {
	*x = ReqUpdateClientValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateClientValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateClientValue) ProtoMessage() {}

func (x *ReqUpdateClientValue) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateClientValue.ProtoReflect.Descriptor instead.
func (*ReqUpdateClientValue) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{293}
}

func (x *ReqUpdateClientValue) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *ReqUpdateClientValue) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ResClientValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error                  `protobuf:"bytes,3,opt,name=error,proto3" json:"error"`
	Datas          []*ResClientValue_Value `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas"`
	RechargedCount uint32                  `protobuf:"varint,2,opt,name=recharged_count,json=rechargedCount,proto3" json:"recharged_count"`
}

func (x *ResClientValue) Reset() {
	*x = ResClientValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResClientValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResClientValue) ProtoMessage() {}

func (x *ResClientValue) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResClientValue.ProtoReflect.Descriptor instead.
func (*ResClientValue) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{294}
}

func (x *ResClientValue) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResClientValue) GetDatas() []*ResClientValue_Value {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *ResClientValue) GetRechargedCount() uint32 {
	if x != nil {
		return x.RechargedCount
	}
	return 0
}

type ReqClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
}

func (x *ReqClientMessage) Reset() {
	*x = ReqClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqClientMessage) ProtoMessage() {}

func (x *ReqClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqClientMessage.ProtoReflect.Descriptor instead.
func (*ReqClientMessage) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{295}
}

func (x *ReqClientMessage) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ReqClientMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqCurrentMatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModeList []uint32 `protobuf:"varint,1,rep,packed,name=mode_list,json=modeList,proto3" json:"mode_list"`
}

func (x *ReqCurrentMatchInfo) Reset() {
	*x = ReqCurrentMatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCurrentMatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCurrentMatchInfo) ProtoMessage() {}

func (x *ReqCurrentMatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCurrentMatchInfo.ProtoReflect.Descriptor instead.
func (*ReqCurrentMatchInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{296}
}

func (x *ReqCurrentMatchInfo) GetModeList() []uint32 {
	if x != nil {
		return x.ModeList
	}
	return nil
}

type ResCurrentMatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error                                  `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Matches []*ResCurrentMatchInfo_CurrentMatchInfo `protobuf:"bytes,2,rep,name=matches,proto3" json:"matches"`
}

func (x *ResCurrentMatchInfo) Reset() {
	*x = ResCurrentMatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCurrentMatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCurrentMatchInfo) ProtoMessage() {}

func (x *ResCurrentMatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCurrentMatchInfo.ProtoReflect.Descriptor instead.
func (*ResCurrentMatchInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{297}
}

func (x *ResCurrentMatchInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCurrentMatchInfo) GetMatches() []*ResCurrentMatchInfo_CurrentMatchInfo {
	if x != nil {
		return x.Matches
	}
	return nil
}

type ReqUserComplain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
	Type     uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
}

func (x *ReqUserComplain) Reset() {
	*x = ReqUserComplain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserComplain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserComplain) ProtoMessage() {}

func (x *ReqUserComplain) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserComplain.ProtoReflect.Descriptor instead.
func (*ReqUserComplain) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{298}
}

func (x *ReqUserComplain) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ReqUserComplain) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ReqReadAnnouncement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnnouncementId uint32 `protobuf:"varint,1,opt,name=announcement_id,json=announcementId,proto3" json:"announcement_id"`
}

func (x *ReqReadAnnouncement) Reset() {
	*x = ReqReadAnnouncement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReadAnnouncement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReadAnnouncement) ProtoMessage() {}

func (x *ReqReadAnnouncement) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReadAnnouncement.ProtoReflect.Descriptor instead.
func (*ReqReadAnnouncement) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{299}
}

func (x *ReqReadAnnouncement) GetAnnouncementId() uint32 {
	if x != nil {
		return x.AnnouncementId
	}
	return 0
}

type ResReviveCoinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	HasGained bool   `protobuf:"varint,2,opt,name=has_gained,json=hasGained,proto3" json:"has_gained"`
}

func (x *ResReviveCoinInfo) Reset() {
	*x = ResReviveCoinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReviveCoinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReviveCoinInfo) ProtoMessage() {}

func (x *ResReviveCoinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReviveCoinInfo.ProtoReflect.Descriptor instead.
func (*ResReviveCoinInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{300}
}

func (x *ResReviveCoinInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReviveCoinInfo) GetHasGained() bool {
	if x != nil {
		return x.HasGained
	}
	return false
}

type ResDailyTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error             *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Progresses        []*TaskProgress `protobuf:"bytes,2,rep,name=progresses,proto3" json:"progresses"`
	HasRefreshCount   bool            `protobuf:"varint,3,opt,name=has_refresh_count,json=hasRefreshCount,proto3" json:"has_refresh_count"`
	MaxDailyTaskCount uint32          `protobuf:"varint,4,opt,name=max_daily_task_count,json=maxDailyTaskCount,proto3" json:"max_daily_task_count"`
	RefreshCount      uint32          `protobuf:"varint,5,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count"`
}

func (x *ResDailyTask) Reset() {
	*x = ResDailyTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDailyTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDailyTask) ProtoMessage() {}

func (x *ResDailyTask) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDailyTask.ProtoReflect.Descriptor instead.
func (*ResDailyTask) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{301}
}

func (x *ResDailyTask) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResDailyTask) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *ResDailyTask) GetHasRefreshCount() bool {
	if x != nil {
		return x.HasRefreshCount
	}
	return false
}

func (x *ResDailyTask) GetMaxDailyTaskCount() uint32 {
	if x != nil {
		return x.MaxDailyTaskCount
	}
	return 0
}

func (x *ResDailyTask) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

type ReqRefreshDailyTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id"`
}

func (x *ReqRefreshDailyTask) Reset() {
	*x = ReqRefreshDailyTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRefreshDailyTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRefreshDailyTask) ProtoMessage() {}

func (x *ReqRefreshDailyTask) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRefreshDailyTask.ProtoReflect.Descriptor instead.
func (*ReqRefreshDailyTask) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{302}
}

func (x *ReqRefreshDailyTask) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ResRefreshDailyTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Progress     *TaskProgress `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress"`
	RefreshCount uint32        `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count"`
}

func (x *ResRefreshDailyTask) Reset() {
	*x = ResRefreshDailyTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRefreshDailyTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRefreshDailyTask) ProtoMessage() {}

func (x *ResRefreshDailyTask) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRefreshDailyTask.ProtoReflect.Descriptor instead.
func (*ResRefreshDailyTask) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{303}
}

func (x *ResRefreshDailyTask) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResRefreshDailyTask) GetProgress() *TaskProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *ResRefreshDailyTask) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

type ReqUseGiftCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
}

func (x *ReqUseGiftCode) Reset() {
	*x = ReqUseGiftCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUseGiftCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUseGiftCode) ProtoMessage() {}

func (x *ReqUseGiftCode) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUseGiftCode.ProtoReflect.Descriptor instead.
func (*ReqUseGiftCode) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{304}
}

func (x *ReqUseGiftCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ResUseGiftCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rewards []*RewardSlot `protobuf:"bytes,6,rep,name=rewards,proto3" json:"rewards"`
}

func (x *ResUseGiftCode) Reset() {
	*x = ResUseGiftCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUseGiftCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUseGiftCode) ProtoMessage() {}

func (x *ResUseGiftCode) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUseGiftCode.ProtoReflect.Descriptor instead.
func (*ResUseGiftCode) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{305}
}

func (x *ResUseGiftCode) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResUseGiftCode) GetRewards() []*RewardSlot {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ResUseSpecialGiftCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rewards []*ExecuteReward `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
}

func (x *ResUseSpecialGiftCode) Reset() {
	*x = ResUseSpecialGiftCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUseSpecialGiftCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUseSpecialGiftCode) ProtoMessage() {}

func (x *ResUseSpecialGiftCode) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUseSpecialGiftCode.ProtoReflect.Descriptor instead.
func (*ResUseSpecialGiftCode) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{306}
}

func (x *ResUseSpecialGiftCode) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResUseSpecialGiftCode) GetRewards() []*ExecuteReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ReqSendClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
	Type     uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Content  string `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
}

func (x *ReqSendClientMessage) Reset() {
	*x = ReqSendClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSendClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSendClientMessage) ProtoMessage() {}

func (x *ReqSendClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSendClientMessage.ProtoReflect.Descriptor instead.
func (*ReqSendClientMessage) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{307}
}

func (x *ReqSendClientMessage) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ReqSendClientMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqSendClientMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ReqGameLiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUuid string `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
}

func (x *ReqGameLiveInfo) Reset() {
	*x = ReqGameLiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameLiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameLiveInfo) ProtoMessage() {}

func (x *ReqGameLiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameLiveInfo.ProtoReflect.Descriptor instead.
func (*ReqGameLiveInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{308}
}

func (x *ReqGameLiveInfo) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

type ResGameLiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error            *Error                `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	LeftStartSeconds uint32                `protobuf:"varint,2,opt,name=left_start_seconds,json=leftStartSeconds,proto3" json:"left_start_seconds"`
	LiveHead         *GameLiveHead         `protobuf:"bytes,3,opt,name=live_head,json=liveHead,proto3" json:"live_head"`
	Segments         []*GameLiveSegmentUri `protobuf:"bytes,4,rep,name=segments,proto3" json:"segments"`
	NowMillisecond   uint32                `protobuf:"varint,5,opt,name=now_millisecond,json=nowMillisecond,proto3" json:"now_millisecond"`
}

func (x *ResGameLiveInfo) Reset() {
	*x = ResGameLiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameLiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameLiveInfo) ProtoMessage() {}

func (x *ResGameLiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameLiveInfo.ProtoReflect.Descriptor instead.
func (*ResGameLiveInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{309}
}

func (x *ResGameLiveInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResGameLiveInfo) GetLeftStartSeconds() uint32 {
	if x != nil {
		return x.LeftStartSeconds
	}
	return 0
}

func (x *ResGameLiveInfo) GetLiveHead() *GameLiveHead {
	if x != nil {
		return x.LiveHead
	}
	return nil
}

func (x *ResGameLiveInfo) GetSegments() []*GameLiveSegmentUri {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *ResGameLiveInfo) GetNowMillisecond() uint32 {
	if x != nil {
		return x.NowMillisecond
	}
	return 0
}

type ReqGameLiveLeftSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUuid      string `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
	LastSegmentId uint32 `protobuf:"varint,2,opt,name=last_segment_id,json=lastSegmentId,proto3" json:"last_segment_id"`
}

func (x *ReqGameLiveLeftSegment) Reset() {
	*x = ReqGameLiveLeftSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameLiveLeftSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameLiveLeftSegment) ProtoMessage() {}

func (x *ReqGameLiveLeftSegment) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameLiveLeftSegment.ProtoReflect.Descriptor instead.
func (*ReqGameLiveLeftSegment) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{310}
}

func (x *ReqGameLiveLeftSegment) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *ReqGameLiveLeftSegment) GetLastSegmentId() uint32 {
	if x != nil {
		return x.LastSegmentId
	}
	return 0
}

type ResGameLiveLeftSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error                 *Error                `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	LiveState             uint32                `protobuf:"varint,2,opt,name=live_state,json=liveState,proto3" json:"live_state"`
	Segments              []*GameLiveSegmentUri `protobuf:"bytes,4,rep,name=segments,proto3" json:"segments"`
	NowMillisecond        uint32                `protobuf:"varint,5,opt,name=now_millisecond,json=nowMillisecond,proto3" json:"now_millisecond"`
	SegmentEndMillisecond uint32                `protobuf:"varint,6,opt,name=segment_end_millisecond,json=segmentEndMillisecond,proto3" json:"segment_end_millisecond"`
}

func (x *ResGameLiveLeftSegment) Reset() {
	*x = ResGameLiveLeftSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameLiveLeftSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameLiveLeftSegment) ProtoMessage() {}

func (x *ResGameLiveLeftSegment) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameLiveLeftSegment.ProtoReflect.Descriptor instead.
func (*ResGameLiveLeftSegment) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{311}
}

func (x *ResGameLiveLeftSegment) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResGameLiveLeftSegment) GetLiveState() uint32 {
	if x != nil {
		return x.LiveState
	}
	return 0
}

func (x *ResGameLiveLeftSegment) GetSegments() []*GameLiveSegmentUri {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *ResGameLiveLeftSegment) GetNowMillisecond() uint32 {
	if x != nil {
		return x.NowMillisecond
	}
	return 0
}

func (x *ResGameLiveLeftSegment) GetSegmentEndMillisecond() uint32 {
	if x != nil {
		return x.SegmentEndMillisecond
	}
	return 0
}

type ReqGameLiveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterId uint32 `protobuf:"varint,1,opt,name=filter_id,json=filterId,proto3" json:"filter_id"`
}

func (x *ReqGameLiveList) Reset() {
	*x = ReqGameLiveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameLiveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameLiveList) ProtoMessage() {}

func (x *ReqGameLiveList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameLiveList.ProtoReflect.Descriptor instead.
func (*ReqGameLiveList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{312}
}

func (x *ReqGameLiveList) GetFilterId() uint32 {
	if x != nil {
		return x.FilterId
	}
	return 0
}

type ResGameLiveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	LiveList []*GameLiveHead `protobuf:"bytes,2,rep,name=live_list,json=liveList,proto3" json:"live_list"`
}

func (x *ResGameLiveList) Reset() {
	*x = ResGameLiveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameLiveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameLiveList) ProtoMessage() {}

func (x *ResGameLiveList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameLiveList.ProtoReflect.Descriptor instead.
func (*ResGameLiveList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{313}
}

func (x *ResGameLiveList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResGameLiveList) GetLiveList() []*GameLiveHead {
	if x != nil {
		return x.LiveList
	}
	return nil
}

type ResCommentSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	CommentAllow uint32 `protobuf:"varint,2,opt,name=comment_allow,json=commentAllow,proto3" json:"comment_allow"`
}

func (x *ResCommentSetting) Reset() {
	*x = ResCommentSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCommentSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCommentSetting) ProtoMessage() {}

func (x *ResCommentSetting) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCommentSetting.ProtoReflect.Descriptor instead.
func (*ResCommentSetting) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{314}
}

func (x *ResCommentSetting) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCommentSetting) GetCommentAllow() uint32 {
	if x != nil {
		return x.CommentAllow
	}
	return 0
}

type ReqUpdateCommentSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentAllow uint32 `protobuf:"varint,1,opt,name=comment_allow,json=commentAllow,proto3" json:"comment_allow"`
}

func (x *ReqUpdateCommentSetting) Reset() {
	*x = ReqUpdateCommentSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateCommentSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateCommentSetting) ProtoMessage() {}

func (x *ReqUpdateCommentSetting) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateCommentSetting.ProtoReflect.Descriptor instead.
func (*ReqUpdateCommentSetting) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{315}
}

func (x *ReqUpdateCommentSetting) GetCommentAllow() uint32 {
	if x != nil {
		return x.CommentAllow
	}
	return 0
}

type ReqFetchCommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
}

func (x *ReqFetchCommentList) Reset() {
	*x = ReqFetchCommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCommentList) ProtoMessage() {}

func (x *ReqFetchCommentList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCommentList.ProtoReflect.Descriptor instead.
func (*ReqFetchCommentList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{316}
}

func (x *ReqFetchCommentList) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type ResFetchCommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	CommentAllow  uint32   `protobuf:"varint,2,opt,name=comment_allow,json=commentAllow,proto3" json:"comment_allow"`
	CommentIdList []uint32 `protobuf:"varint,3,rep,packed,name=comment_id_list,json=commentIdList,proto3" json:"comment_id_list"`
	LastReadId    uint32   `protobuf:"varint,4,opt,name=last_read_id,json=lastReadId,proto3" json:"last_read_id"`
}

func (x *ResFetchCommentList) Reset() {
	*x = ResFetchCommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCommentList) ProtoMessage() {}

func (x *ResFetchCommentList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCommentList.ProtoReflect.Descriptor instead.
func (*ResFetchCommentList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{317}
}

func (x *ResFetchCommentList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCommentList) GetCommentAllow() uint32 {
	if x != nil {
		return x.CommentAllow
	}
	return 0
}

func (x *ResFetchCommentList) GetCommentIdList() []uint32 {
	if x != nil {
		return x.CommentIdList
	}
	return nil
}

func (x *ResFetchCommentList) GetLastReadId() uint32 {
	if x != nil {
		return x.LastReadId
	}
	return 0
}

type ReqFetchCommentContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId      uint32   `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
	CommentIdList []uint32 `protobuf:"varint,2,rep,packed,name=comment_id_list,json=commentIdList,proto3" json:"comment_id_list"`
}

func (x *ReqFetchCommentContent) Reset() {
	*x = ReqFetchCommentContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCommentContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCommentContent) ProtoMessage() {}

func (x *ReqFetchCommentContent) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCommentContent.ProtoReflect.Descriptor instead.
func (*ReqFetchCommentContent) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{318}
}

func (x *ReqFetchCommentContent) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ReqFetchCommentContent) GetCommentIdList() []uint32 {
	if x != nil {
		return x.CommentIdList
	}
	return nil
}

type ResFetchCommentContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error         `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Comments []*CommentItem `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments"`
}

func (x *ResFetchCommentContent) Reset() {
	*x = ResFetchCommentContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCommentContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCommentContent) ProtoMessage() {}

func (x *ResFetchCommentContent) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCommentContent.ProtoReflect.Descriptor instead.
func (*ResFetchCommentContent) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{319}
}

func (x *ResFetchCommentContent) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCommentContent) GetComments() []*CommentItem {
	if x != nil {
		return x.Comments
	}
	return nil
}

type ReqLeaveComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
	Content  string `protobuf:"bytes,2,opt,name=content,proto3" json:"content"`
}

func (x *ReqLeaveComment) Reset() {
	*x = ReqLeaveComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLeaveComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLeaveComment) ProtoMessage() {}

func (x *ReqLeaveComment) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLeaveComment.ProtoReflect.Descriptor instead.
func (*ReqLeaveComment) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{320}
}

func (x *ReqLeaveComment) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ReqLeaveComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ReqDeleteComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId   uint32   `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id"`
	DeleteList []uint32 `protobuf:"varint,2,rep,packed,name=delete_list,json=deleteList,proto3" json:"delete_list"`
}

func (x *ReqDeleteComment) Reset() {
	*x = ReqDeleteComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteComment) ProtoMessage() {}

func (x *ReqDeleteComment) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteComment.ProtoReflect.Descriptor instead.
func (*ReqDeleteComment) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{321}
}

func (x *ReqDeleteComment) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ReqDeleteComment) GetDeleteList() []uint32 {
	if x != nil {
		return x.DeleteList
	}
	return nil
}

type ReqUpdateReadComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId uint32 `protobuf:"varint,1,opt,name=read_id,json=readId,proto3" json:"read_id"`
}

func (x *ReqUpdateReadComment) Reset() {
	*x = ReqUpdateReadComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateReadComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateReadComment) ProtoMessage() {}

func (x *ReqUpdateReadComment) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateReadComment.ProtoReflect.Descriptor instead.
func (*ReqUpdateReadComment) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{322}
}

func (x *ReqUpdateReadComment) GetReadId() uint32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

type ReqRollingNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice []*RollingNotice `protobuf:"bytes,1,rep,name=notice,proto3" json:"notice"`
}

func (x *ReqRollingNotice) Reset() {
	*x = ReqRollingNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRollingNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRollingNotice) ProtoMessage() {}

func (x *ReqRollingNotice) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRollingNotice.ProtoReflect.Descriptor instead.
func (*ReqRollingNotice) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{323}
}

func (x *ReqRollingNotice) GetNotice() []*RollingNotice {
	if x != nil {
		return x.Notice
	}
	return nil
}

type ResServerTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime uint32 `protobuf:"varint,1,opt,name=server_time,json=serverTime,proto3" json:"server_time"`
}

func (x *ResServerTime) Reset() {
	*x = ResServerTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResServerTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResServerTime) ProtoMessage() {}

func (x *ResServerTime) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResServerTime.ProtoReflect.Descriptor instead.
func (*ResServerTime) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{324}
}

func (x *ResServerTime) GetServerTime() uint32 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

type ReqPlatformBillingProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShelvesId uint32 `protobuf:"varint,1,opt,name=shelves_id,json=shelvesId,proto3" json:"shelves_id"`
}

func (x *ReqPlatformBillingProducts) Reset() {
	*x = ReqPlatformBillingProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPlatformBillingProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPlatformBillingProducts) ProtoMessage() {}

func (x *ReqPlatformBillingProducts) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPlatformBillingProducts.ProtoReflect.Descriptor instead.
func (*ReqPlatformBillingProducts) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{325}
}

func (x *ReqPlatformBillingProducts) GetShelvesId() uint32 {
	if x != nil {
		return x.ShelvesId
	}
	return 0
}

type ResPlatformBillingProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error            `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Products []*BillingProduct `protobuf:"bytes,2,rep,name=products,proto3" json:"products"`
}

func (x *ResPlatformBillingProducts) Reset() {
	*x = ResPlatformBillingProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPlatformBillingProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPlatformBillingProducts) ProtoMessage() {}

func (x *ResPlatformBillingProducts) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPlatformBillingProducts.ProtoReflect.Descriptor instead.
func (*ResPlatformBillingProducts) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{326}
}

func (x *ResPlatformBillingProducts) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResPlatformBillingProducts) GetProducts() []*BillingProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type ReqCreateBillingOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	PaymentPlatform     uint32 `protobuf:"varint,2,opt,name=payment_platform,json=paymentPlatform,proto3" json:"payment_platform"`
	ClientType          uint32 `protobuf:"varint,3,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ClientVersionString string `protobuf:"bytes,5,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateBillingOrder) Reset() {
	*x = ReqCreateBillingOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateBillingOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateBillingOrder) ProtoMessage() {}

func (x *ReqCreateBillingOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateBillingOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateBillingOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{327}
}

func (x *ReqCreateBillingOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateBillingOrder) GetPaymentPlatform() uint32 {
	if x != nil {
		return x.PaymentPlatform
	}
	return 0
}

func (x *ReqCreateBillingOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateBillingOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateBillingOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateBillingOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateBillingOrder) Reset() {
	*x = ResCreateBillingOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateBillingOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateBillingOrder) ProtoMessage() {}

func (x *ResCreateBillingOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateBillingOrder.ProtoReflect.Descriptor instead.
func (*ResCreateBillingOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{328}
}

func (x *ResCreateBillingOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateBillingOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqSolveGooglePlayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InappPurchaseData  string `protobuf:"bytes,2,opt,name=inapp_purchase_data,json=inappPurchaseData,proto3" json:"inapp_purchase_data"`
	InappDataSignature string `protobuf:"bytes,3,opt,name=inapp_data_signature,json=inappDataSignature,proto3" json:"inapp_data_signature"`
}

func (x *ReqSolveGooglePlayOrder) Reset() {
	*x = ReqSolveGooglePlayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSolveGooglePlayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSolveGooglePlayOrder) ProtoMessage() {}

func (x *ReqSolveGooglePlayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSolveGooglePlayOrder.ProtoReflect.Descriptor instead.
func (*ReqSolveGooglePlayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{329}
}

func (x *ReqSolveGooglePlayOrder) GetInappPurchaseData() string {
	if x != nil {
		return x.InappPurchaseData
	}
	return ""
}

func (x *ReqSolveGooglePlayOrder) GetInappDataSignature() string {
	if x != nil {
		return x.InappDataSignature
	}
	return ""
}

type ReqSolveGooglePlayOrderV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id"`
	Token         string `protobuf:"bytes,3,opt,name=token,proto3" json:"token"`
	AccountId     uint32 `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqSolveGooglePlayOrderV3) Reset() {
	*x = ReqSolveGooglePlayOrderV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSolveGooglePlayOrderV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSolveGooglePlayOrderV3) ProtoMessage() {}

func (x *ReqSolveGooglePlayOrderV3) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSolveGooglePlayOrderV3.ProtoReflect.Descriptor instead.
func (*ReqSolveGooglePlayOrderV3) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{330}
}

func (x *ReqSolveGooglePlayOrderV3) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReqSolveGooglePlayOrderV3) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ReqSolveGooglePlayOrderV3) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReqSolveGooglePlayOrderV3) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ReqCancelGooglePlayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ReqCancelGooglePlayOrder) Reset() {
	*x = ReqCancelGooglePlayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCancelGooglePlayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCancelGooglePlayOrder) ProtoMessage() {}

func (x *ReqCancelGooglePlayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCancelGooglePlayOrder.ProtoReflect.Descriptor instead.
func (*ReqCancelGooglePlayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{331}
}

func (x *ReqCancelGooglePlayOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateWechatNativeOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	AccountIp           string `protobuf:"bytes,4,opt,name=account_ip,json=accountIp,proto3" json:"account_ip"`
	ClientVersionString string `protobuf:"bytes,5,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateWechatNativeOrder) Reset() {
	*x = ReqCreateWechatNativeOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[332]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateWechatNativeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateWechatNativeOrder) ProtoMessage() {}

func (x *ReqCreateWechatNativeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[332]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateWechatNativeOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateWechatNativeOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{332}
}

func (x *ReqCreateWechatNativeOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateWechatNativeOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateWechatNativeOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateWechatNativeOrder) GetAccountIp() string {
	if x != nil {
		return x.AccountIp
	}
	return ""
}

func (x *ReqCreateWechatNativeOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateWechatNativeOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	QrcodeBuffer string `protobuf:"bytes,2,opt,name=qrcode_buffer,json=qrcodeBuffer,proto3" json:"qrcode_buffer"`
	OrderId      string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateWechatNativeOrder) Reset() {
	*x = ResCreateWechatNativeOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[333]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateWechatNativeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateWechatNativeOrder) ProtoMessage() {}

func (x *ResCreateWechatNativeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[333]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateWechatNativeOrder.ProtoReflect.Descriptor instead.
func (*ResCreateWechatNativeOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{333}
}

func (x *ResCreateWechatNativeOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateWechatNativeOrder) GetQrcodeBuffer() string {
	if x != nil {
		return x.QrcodeBuffer
	}
	return ""
}

func (x *ResCreateWechatNativeOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateWechatAppOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	AccountIp           string `protobuf:"bytes,4,opt,name=account_ip,json=accountIp,proto3" json:"account_ip"`
	ClientVersionString string `protobuf:"bytes,5,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateWechatAppOrder) Reset() {
	*x = ReqCreateWechatAppOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateWechatAppOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateWechatAppOrder) ProtoMessage() {}

func (x *ReqCreateWechatAppOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateWechatAppOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateWechatAppOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{334}
}

func (x *ReqCreateWechatAppOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateWechatAppOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateWechatAppOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateWechatAppOrder) GetAccountIp() string {
	if x != nil {
		return x.AccountIp
	}
	return ""
}

func (x *ReqCreateWechatAppOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateWechatAppOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error              *Error                                      `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	CallWechatAppParam *ResCreateWechatAppOrder_CallWechatAppParam `protobuf:"bytes,2,opt,name=call_wechat_app_param,json=callWechatAppParam,proto3" json:"call_wechat_app_param"`
}

func (x *ResCreateWechatAppOrder) Reset() {
	*x = ResCreateWechatAppOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[335]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateWechatAppOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateWechatAppOrder) ProtoMessage() {}

func (x *ResCreateWechatAppOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[335]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateWechatAppOrder.ProtoReflect.Descriptor instead.
func (*ResCreateWechatAppOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{335}
}

func (x *ResCreateWechatAppOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateWechatAppOrder) GetCallWechatAppParam() *ResCreateWechatAppOrder_CallWechatAppParam {
	if x != nil {
		return x.CallWechatAppParam
	}
	return nil
}

type ReqCreateAlipayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	AlipayTradeType     string `protobuf:"bytes,4,opt,name=alipay_trade_type,json=alipayTradeType,proto3" json:"alipay_trade_type"`
	ReturnUrl           string `protobuf:"bytes,5,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateAlipayOrder) Reset() {
	*x = ReqCreateAlipayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[336]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateAlipayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateAlipayOrder) ProtoMessage() {}

func (x *ReqCreateAlipayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[336]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateAlipayOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateAlipayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{336}
}

func (x *ReqCreateAlipayOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateAlipayOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateAlipayOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateAlipayOrder) GetAlipayTradeType() string {
	if x != nil {
		return x.AlipayTradeType
	}
	return ""
}

func (x *ReqCreateAlipayOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateAlipayOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateAlipayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	AlipayUrl string `protobuf:"bytes,2,opt,name=alipay_url,json=alipayUrl,proto3" json:"alipay_url"`
}

func (x *ResCreateAlipayOrder) Reset() {
	*x = ResCreateAlipayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateAlipayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateAlipayOrder) ProtoMessage() {}

func (x *ResCreateAlipayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateAlipayOrder.ProtoReflect.Descriptor instead.
func (*ResCreateAlipayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{337}
}

func (x *ResCreateAlipayOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateAlipayOrder) GetAlipayUrl() string {
	if x != nil {
		return x.AlipayUrl
	}
	return ""
}

type ReqCreateAlipayScanOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ClientVersionString string `protobuf:"bytes,4,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateAlipayScanOrder) Reset() {
	*x = ReqCreateAlipayScanOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateAlipayScanOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateAlipayScanOrder) ProtoMessage() {}

func (x *ReqCreateAlipayScanOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateAlipayScanOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateAlipayScanOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{338}
}

func (x *ReqCreateAlipayScanOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateAlipayScanOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateAlipayScanOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateAlipayScanOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateAlipayScanOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	QrcodeBuffer string `protobuf:"bytes,2,opt,name=qrcode_buffer,json=qrcodeBuffer,proto3" json:"qrcode_buffer"`
	OrderId      string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	QrCode       string `protobuf:"bytes,4,opt,name=qr_code,json=qrCode,proto3" json:"qr_code"`
}

func (x *ResCreateAlipayScanOrder) Reset() {
	*x = ResCreateAlipayScanOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateAlipayScanOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateAlipayScanOrder) ProtoMessage() {}

func (x *ResCreateAlipayScanOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateAlipayScanOrder.ProtoReflect.Descriptor instead.
func (*ResCreateAlipayScanOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{339}
}

func (x *ResCreateAlipayScanOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateAlipayScanOrder) GetQrcodeBuffer() string {
	if x != nil {
		return x.QrcodeBuffer
	}
	return ""
}

func (x *ResCreateAlipayScanOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ResCreateAlipayScanOrder) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

type ReqCreateAlipayAppOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ClientVersionString string `protobuf:"bytes,4,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateAlipayAppOrder) Reset() {
	*x = ReqCreateAlipayAppOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateAlipayAppOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateAlipayAppOrder) ProtoMessage() {}

func (x *ReqCreateAlipayAppOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateAlipayAppOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateAlipayAppOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{340}
}

func (x *ReqCreateAlipayAppOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateAlipayAppOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateAlipayAppOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateAlipayAppOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateAlipayAppOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	AlipayUrl string `protobuf:"bytes,2,opt,name=alipay_url,json=alipayUrl,proto3" json:"alipay_url"`
}

func (x *ResCreateAlipayAppOrder) Reset() {
	*x = ResCreateAlipayAppOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateAlipayAppOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateAlipayAppOrder) ProtoMessage() {}

func (x *ResCreateAlipayAppOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateAlipayAppOrder.ProtoReflect.Descriptor instead.
func (*ResCreateAlipayAppOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{341}
}

func (x *ResCreateAlipayAppOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateAlipayAppOrder) GetAlipayUrl() string {
	if x != nil {
		return x.AlipayUrl
	}
	return ""
}

type ReqCreateJPCreditCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateJPCreditCardOrder) Reset() {
	*x = ReqCreateJPCreditCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateJPCreditCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateJPCreditCardOrder) ProtoMessage() {}

func (x *ReqCreateJPCreditCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateJPCreditCardOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateJPCreditCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{342}
}

func (x *ReqCreateJPCreditCardOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateJPCreditCardOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateJPCreditCardOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateJPCreditCardOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateJPCreditCardOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateJPCreditCardOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateJPCreditCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateJPCreditCardOrder) Reset() {
	*x = ResCreateJPCreditCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateJPCreditCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateJPCreditCardOrder) ProtoMessage() {}

func (x *ResCreateJPCreditCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateJPCreditCardOrder.ProtoReflect.Descriptor instead.
func (*ResCreateJPCreditCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{343}
}

func (x *ResCreateJPCreditCardOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateJPCreditCardOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateJPPaypalOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateJPPaypalOrder) Reset() {
	*x = ReqCreateJPPaypalOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateJPPaypalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateJPPaypalOrder) ProtoMessage() {}

func (x *ReqCreateJPPaypalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateJPPaypalOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateJPPaypalOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{344}
}

func (x *ReqCreateJPPaypalOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateJPPaypalOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateJPPaypalOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateJPPaypalOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateJPPaypalOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateJPPaypalOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateJPPaypalOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateJPPaypalOrder) Reset() {
	*x = ResCreateJPPaypalOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateJPPaypalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateJPPaypalOrder) ProtoMessage() {}

func (x *ResCreateJPPaypalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateJPPaypalOrder.ProtoReflect.Descriptor instead.
func (*ResCreateJPPaypalOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{345}
}

func (x *ResCreateJPPaypalOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateJPPaypalOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateJPAuOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateJPAuOrder) Reset() {
	*x = ReqCreateJPAuOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateJPAuOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateJPAuOrder) ProtoMessage() {}

func (x *ReqCreateJPAuOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateJPAuOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateJPAuOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{346}
}

func (x *ReqCreateJPAuOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateJPAuOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateJPAuOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateJPAuOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateJPAuOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateJPAuOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateJPAuOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateJPAuOrder) Reset() {
	*x = ResCreateJPAuOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateJPAuOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateJPAuOrder) ProtoMessage() {}

func (x *ResCreateJPAuOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateJPAuOrder.ProtoReflect.Descriptor instead.
func (*ResCreateJPAuOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{347}
}

func (x *ResCreateJPAuOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateJPAuOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateJPDocomoOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateJPDocomoOrder) Reset() {
	*x = ReqCreateJPDocomoOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateJPDocomoOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateJPDocomoOrder) ProtoMessage() {}

func (x *ReqCreateJPDocomoOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateJPDocomoOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateJPDocomoOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{348}
}

func (x *ReqCreateJPDocomoOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateJPDocomoOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateJPDocomoOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateJPDocomoOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateJPDocomoOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateJPDocomoOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateJPDocomoOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateJPDocomoOrder) Reset() {
	*x = ResCreateJPDocomoOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateJPDocomoOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateJPDocomoOrder) ProtoMessage() {}

func (x *ResCreateJPDocomoOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateJPDocomoOrder.ProtoReflect.Descriptor instead.
func (*ResCreateJPDocomoOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{349}
}

func (x *ResCreateJPDocomoOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateJPDocomoOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateJPWebMoneyOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateJPWebMoneyOrder) Reset() {
	*x = ReqCreateJPWebMoneyOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateJPWebMoneyOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateJPWebMoneyOrder) ProtoMessage() {}

func (x *ReqCreateJPWebMoneyOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateJPWebMoneyOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateJPWebMoneyOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{350}
}

func (x *ReqCreateJPWebMoneyOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateJPWebMoneyOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateJPWebMoneyOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateJPWebMoneyOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateJPWebMoneyOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateJPWebMoneyOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateJPWebMoneyOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateJPWebMoneyOrder) Reset() {
	*x = ResCreateJPWebMoneyOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateJPWebMoneyOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateJPWebMoneyOrder) ProtoMessage() {}

func (x *ResCreateJPWebMoneyOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateJPWebMoneyOrder.ProtoReflect.Descriptor instead.
func (*ResCreateJPWebMoneyOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{351}
}

func (x *ResCreateJPWebMoneyOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateJPWebMoneyOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateJPSoftbankOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateJPSoftbankOrder) Reset() {
	*x = ReqCreateJPSoftbankOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateJPSoftbankOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateJPSoftbankOrder) ProtoMessage() {}

func (x *ReqCreateJPSoftbankOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateJPSoftbankOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateJPSoftbankOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{352}
}

func (x *ReqCreateJPSoftbankOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateJPSoftbankOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateJPSoftbankOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateJPSoftbankOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateJPSoftbankOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateJPSoftbankOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateJPSoftbankOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateJPSoftbankOrder) Reset() {
	*x = ResCreateJPSoftbankOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateJPSoftbankOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateJPSoftbankOrder) ProtoMessage() {}

func (x *ResCreateJPSoftbankOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateJPSoftbankOrder.ProtoReflect.Descriptor instead.
func (*ResCreateJPSoftbankOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{353}
}

func (x *ResCreateJPSoftbankOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateJPSoftbankOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateJPPayPayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateJPPayPayOrder) Reset() {
	*x = ReqCreateJPPayPayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateJPPayPayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateJPPayPayOrder) ProtoMessage() {}

func (x *ReqCreateJPPayPayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateJPPayPayOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateJPPayPayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{354}
}

func (x *ReqCreateJPPayPayOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateJPPayPayOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateJPPayPayOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateJPPayPayOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateJPPayPayOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateJPPayPayOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateJPPayPayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateJPPayPayOrder) Reset() {
	*x = ResCreateJPPayPayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateJPPayPayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateJPPayPayOrder) ProtoMessage() {}

func (x *ResCreateJPPayPayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateJPPayPayOrder.ProtoReflect.Descriptor instead.
func (*ResCreateJPPayPayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{355}
}

func (x *ResCreateJPPayPayOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateJPPayPayOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqFetchJPCommonCreditCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	AccountId uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqFetchJPCommonCreditCardOrder) Reset() {
	*x = ReqFetchJPCommonCreditCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[356]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchJPCommonCreditCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchJPCommonCreditCardOrder) ProtoMessage() {}

func (x *ReqFetchJPCommonCreditCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[356]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchJPCommonCreditCardOrder.ProtoReflect.Descriptor instead.
func (*ReqFetchJPCommonCreditCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{356}
}

func (x *ReqFetchJPCommonCreditCardOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReqFetchJPCommonCreditCardOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ResFetchJPCommonCreditCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResFetchJPCommonCreditCardOrder) Reset() {
	*x = ResFetchJPCommonCreditCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchJPCommonCreditCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchJPCommonCreditCardOrder) ProtoMessage() {}

func (x *ResFetchJPCommonCreditCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchJPCommonCreditCardOrder.ProtoReflect.Descriptor instead.
func (*ResFetchJPCommonCreditCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{357}
}

func (x *ResFetchJPCommonCreditCardOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqCreateYostarOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	OrderType           uint32 `protobuf:"varint,4,opt,name=order_type,json=orderType,proto3" json:"order_type"`
	ClientVersionString string `protobuf:"bytes,5,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateYostarOrder) Reset() {
	*x = ReqCreateYostarOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateYostarOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateYostarOrder) ProtoMessage() {}

func (x *ReqCreateYostarOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateYostarOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateYostarOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{358}
}

func (x *ReqCreateYostarOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateYostarOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateYostarOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateYostarOrder) GetOrderType() uint32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *ReqCreateYostarOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateYostarOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateYostarOrder) Reset() {
	*x = ResCreateYostarOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateYostarOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateYostarOrder) ProtoMessage() {}

func (x *ResCreateYostarOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateYostarOrder.ProtoReflect.Descriptor instead.
func (*ResCreateYostarOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{359}
}

func (x *ResCreateYostarOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateYostarOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateENPaypalOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateENPaypalOrder) Reset() {
	*x = ReqCreateENPaypalOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateENPaypalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateENPaypalOrder) ProtoMessage() {}

func (x *ReqCreateENPaypalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateENPaypalOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateENPaypalOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{360}
}

func (x *ReqCreateENPaypalOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateENPaypalOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateENPaypalOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateENPaypalOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateENPaypalOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateENPaypalOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateENPaypalOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateENPaypalOrder) Reset() {
	*x = ResCreateENPaypalOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateENPaypalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateENPaypalOrder) ProtoMessage() {}

func (x *ResCreateENPaypalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateENPaypalOrder.ProtoReflect.Descriptor instead.
func (*ResCreateENPaypalOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{361}
}

func (x *ResCreateENPaypalOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateENPaypalOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateENJCBOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateENJCBOrder) Reset() {
	*x = ReqCreateENJCBOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateENJCBOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateENJCBOrder) ProtoMessage() {}

func (x *ReqCreateENJCBOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateENJCBOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateENJCBOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{362}
}

func (x *ReqCreateENJCBOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateENJCBOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateENJCBOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateENJCBOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateENJCBOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateENJCBOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateENJCBOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateENJCBOrder) Reset() {
	*x = ResCreateENJCBOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateENJCBOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateENJCBOrder) ProtoMessage() {}

func (x *ResCreateENJCBOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateENJCBOrder.ProtoReflect.Descriptor instead.
func (*ResCreateENJCBOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{363}
}

func (x *ResCreateENJCBOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateENJCBOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateENMasterCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateENMasterCardOrder) Reset() {
	*x = ReqCreateENMasterCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateENMasterCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateENMasterCardOrder) ProtoMessage() {}

func (x *ReqCreateENMasterCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateENMasterCardOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateENMasterCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{364}
}

func (x *ReqCreateENMasterCardOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateENMasterCardOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateENMasterCardOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateENMasterCardOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateENMasterCardOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateENMasterCardOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateENMasterCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateENMasterCardOrder) Reset() {
	*x = ResCreateENMasterCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[365]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateENMasterCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateENMasterCardOrder) ProtoMessage() {}

func (x *ResCreateENMasterCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[365]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateENMasterCardOrder.ProtoReflect.Descriptor instead.
func (*ResCreateENMasterCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{365}
}

func (x *ResCreateENMasterCardOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateENMasterCardOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateENVisaOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateENVisaOrder) Reset() {
	*x = ReqCreateENVisaOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[366]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateENVisaOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateENVisaOrder) ProtoMessage() {}

func (x *ReqCreateENVisaOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[366]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateENVisaOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateENVisaOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{366}
}

func (x *ReqCreateENVisaOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateENVisaOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateENVisaOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateENVisaOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateENVisaOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateENVisaOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateENVisaOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateENVisaOrder) Reset() {
	*x = ResCreateENVisaOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[367]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateENVisaOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateENVisaOrder) ProtoMessage() {}

func (x *ResCreateENVisaOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[367]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateENVisaOrder.ProtoReflect.Descriptor instead.
func (*ResCreateENVisaOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{367}
}

func (x *ResCreateENVisaOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateENVisaOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateENAlipayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateENAlipayOrder) Reset() {
	*x = ReqCreateENAlipayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[368]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateENAlipayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateENAlipayOrder) ProtoMessage() {}

func (x *ReqCreateENAlipayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[368]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateENAlipayOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateENAlipayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{368}
}

func (x *ReqCreateENAlipayOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateENAlipayOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateENAlipayOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateENAlipayOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateENAlipayOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateENAlipayOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateENAlipayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateENAlipayOrder) Reset() {
	*x = ResCreateENAlipayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[369]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateENAlipayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateENAlipayOrder) ProtoMessage() {}

func (x *ResCreateENAlipayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[369]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateENAlipayOrder.ProtoReflect.Descriptor instead.
func (*ResCreateENAlipayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{369}
}

func (x *ResCreateENAlipayOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateENAlipayOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateKRPaypalOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateKRPaypalOrder) Reset() {
	*x = ReqCreateKRPaypalOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[370]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateKRPaypalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateKRPaypalOrder) ProtoMessage() {}

func (x *ReqCreateKRPaypalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[370]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateKRPaypalOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateKRPaypalOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{370}
}

func (x *ReqCreateKRPaypalOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateKRPaypalOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateKRPaypalOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateKRPaypalOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateKRPaypalOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateKRPaypalOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateKRPaypalOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateKRPaypalOrder) Reset() {
	*x = ResCreateKRPaypalOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[371]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateKRPaypalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateKRPaypalOrder) ProtoMessage() {}

func (x *ResCreateKRPaypalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[371]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateKRPaypalOrder.ProtoReflect.Descriptor instead.
func (*ResCreateKRPaypalOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{371}
}

func (x *ResCreateKRPaypalOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateKRPaypalOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateKRJCBOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateKRJCBOrder) Reset() {
	*x = ReqCreateKRJCBOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[372]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateKRJCBOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateKRJCBOrder) ProtoMessage() {}

func (x *ReqCreateKRJCBOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[372]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateKRJCBOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateKRJCBOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{372}
}

func (x *ReqCreateKRJCBOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateKRJCBOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateKRJCBOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateKRJCBOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateKRJCBOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateKRJCBOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateKRJCBOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateKRJCBOrder) Reset() {
	*x = ResCreateKRJCBOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[373]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateKRJCBOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateKRJCBOrder) ProtoMessage() {}

func (x *ResCreateKRJCBOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[373]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateKRJCBOrder.ProtoReflect.Descriptor instead.
func (*ResCreateKRJCBOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{373}
}

func (x *ResCreateKRJCBOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateKRJCBOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateKRMasterCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateKRMasterCardOrder) Reset() {
	*x = ReqCreateKRMasterCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[374]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateKRMasterCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateKRMasterCardOrder) ProtoMessage() {}

func (x *ReqCreateKRMasterCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[374]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateKRMasterCardOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateKRMasterCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{374}
}

func (x *ReqCreateKRMasterCardOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateKRMasterCardOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateKRMasterCardOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateKRMasterCardOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateKRMasterCardOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateKRMasterCardOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateKRMasterCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateKRMasterCardOrder) Reset() {
	*x = ResCreateKRMasterCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[375]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateKRMasterCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateKRMasterCardOrder) ProtoMessage() {}

func (x *ResCreateKRMasterCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[375]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateKRMasterCardOrder.ProtoReflect.Descriptor instead.
func (*ResCreateKRMasterCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{375}
}

func (x *ResCreateKRMasterCardOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateKRMasterCardOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateKRVisaOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateKRVisaOrder) Reset() {
	*x = ReqCreateKRVisaOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[376]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateKRVisaOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateKRVisaOrder) ProtoMessage() {}

func (x *ReqCreateKRVisaOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[376]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateKRVisaOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateKRVisaOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{376}
}

func (x *ReqCreateKRVisaOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateKRVisaOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateKRVisaOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateKRVisaOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateKRVisaOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateKRVisaOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateKRVisaOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateKRVisaOrder) Reset() {
	*x = ResCreateKRVisaOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[377]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateKRVisaOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateKRVisaOrder) ProtoMessage() {}

func (x *ResCreateKRVisaOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[377]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateKRVisaOrder.ProtoReflect.Descriptor instead.
func (*ResCreateKRVisaOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{377}
}

func (x *ResCreateKRVisaOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateKRVisaOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateKRAlipayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ReturnUrl           string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	AccessToken         string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateKRAlipayOrder) Reset() {
	*x = ReqCreateKRAlipayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[378]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateKRAlipayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateKRAlipayOrder) ProtoMessage() {}

func (x *ReqCreateKRAlipayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[378]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateKRAlipayOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateKRAlipayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{378}
}

func (x *ReqCreateKRAlipayOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateKRAlipayOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateKRAlipayOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateKRAlipayOrder) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ReqCreateKRAlipayOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateKRAlipayOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateKRAlipayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateKRAlipayOrder) Reset() {
	*x = ResCreateKRAlipayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[379]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateKRAlipayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateKRAlipayOrder) ProtoMessage() {}

func (x *ResCreateKRAlipayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[379]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateKRAlipayOrder.ProtoReflect.Descriptor instead.
func (*ResCreateKRAlipayOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{379}
}

func (x *ResCreateKRAlipayOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateKRAlipayOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqCreateDMMOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	AccountId           uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ClientType          uint32 `protobuf:"varint,3,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	ClientVersionString string `protobuf:"bytes,4,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateDMMOrder) Reset() {
	*x = ReqCreateDMMOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[380]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateDMMOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateDMMOrder) ProtoMessage() {}

func (x *ReqCreateDMMOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[380]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateDMMOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateDMMOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{380}
}

func (x *ReqCreateDMMOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateDMMOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateDMMOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateDMMOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateDmmOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId       string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	TransactionId string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id"`
	DmmUserId     string `protobuf:"bytes,4,opt,name=dmm_user_id,json=dmmUserId,proto3" json:"dmm_user_id"`
	Token         string `protobuf:"bytes,5,opt,name=token,proto3" json:"token"`
	CallbackUrl   string `protobuf:"bytes,6,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url"`
	RequestTime   string `protobuf:"bytes,9,opt,name=request_time,json=requestTime,proto3" json:"request_time"`
	DmmAppId      string `protobuf:"bytes,10,opt,name=dmm_app_id,json=dmmAppId,proto3" json:"dmm_app_id"`
}

func (x *ResCreateDmmOrder) Reset() {
	*x = ResCreateDmmOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[381]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateDmmOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateDmmOrder) ProtoMessage() {}

func (x *ResCreateDmmOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[381]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateDmmOrder.ProtoReflect.Descriptor instead.
func (*ResCreateDmmOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{381}
}

func (x *ResCreateDmmOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateDmmOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ResCreateDmmOrder) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ResCreateDmmOrder) GetDmmUserId() string {
	if x != nil {
		return x.DmmUserId
	}
	return ""
}

func (x *ResCreateDmmOrder) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResCreateDmmOrder) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *ResCreateDmmOrder) GetRequestTime() string {
	if x != nil {
		return x.RequestTime
	}
	return ""
}

func (x *ResCreateDmmOrder) GetDmmAppId() string {
	if x != nil {
		return x.DmmAppId
	}
	return ""
}

type ReqCreateIAPOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	AccessToken         string `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token"`
	DebtOrderId         string `protobuf:"bytes,5,opt,name=debt_order_id,json=debtOrderId,proto3" json:"debt_order_id"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateIAPOrder) Reset() {
	*x = ReqCreateIAPOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[382]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateIAPOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateIAPOrder) ProtoMessage() {}

func (x *ReqCreateIAPOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[382]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateIAPOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateIAPOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{382}
}

func (x *ReqCreateIAPOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateIAPOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateIAPOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateIAPOrder) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqCreateIAPOrder) GetDebtOrderId() string {
	if x != nil {
		return x.DebtOrderId
	}
	return ""
}

func (x *ReqCreateIAPOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateIAPOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateIAPOrder) Reset() {
	*x = ResCreateIAPOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[383]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateIAPOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateIAPOrder) ProtoMessage() {}

func (x *ResCreateIAPOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[383]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateIAPOrder.ProtoReflect.Descriptor instead.
func (*ResCreateIAPOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{383}
}

func (x *ResCreateIAPOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateIAPOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqVerificationIAPOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id"`
	ReceiptData   string `protobuf:"bytes,3,opt,name=receipt_data,json=receiptData,proto3" json:"receipt_data"`
	AccountId     uint32 `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqVerificationIAPOrder) Reset() {
	*x = ReqVerificationIAPOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[384]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqVerificationIAPOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqVerificationIAPOrder) ProtoMessage() {}

func (x *ReqVerificationIAPOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[384]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqVerificationIAPOrder.ProtoReflect.Descriptor instead.
func (*ReqVerificationIAPOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{384}
}

func (x *ReqVerificationIAPOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReqVerificationIAPOrder) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ReqVerificationIAPOrder) GetReceiptData() string {
	if x != nil {
		return x.ReceiptData
	}
	return ""
}

func (x *ReqVerificationIAPOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ResVerificationIAPOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
}

func (x *ResVerificationIAPOrder) Reset() {
	*x = ResVerificationIAPOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[385]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResVerificationIAPOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResVerificationIAPOrder) ProtoMessage() {}

func (x *ResVerificationIAPOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[385]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResVerificationIAPOrder.ProtoReflect.Descriptor instead.
func (*ResVerificationIAPOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{385}
}

func (x *ResVerificationIAPOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqCreateSteamOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language            string `protobuf:"bytes,1,opt,name=language,proto3" json:"language"`
	AccountId           uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ClientType          uint32 `protobuf:"varint,3,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	GoodsId             uint32 `protobuf:"varint,4,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	SteamId             string `protobuf:"bytes,5,opt,name=steam_id,json=steamId,proto3" json:"steam_id"`
	DebtOrderId         string `protobuf:"bytes,6,opt,name=debt_order_id,json=debtOrderId,proto3" json:"debt_order_id"`
	ClientVersionString string `protobuf:"bytes,7,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateSteamOrder) Reset() {
	*x = ReqCreateSteamOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[386]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateSteamOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateSteamOrder) ProtoMessage() {}

func (x *ReqCreateSteamOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[386]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateSteamOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateSteamOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{386}
}

func (x *ReqCreateSteamOrder) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ReqCreateSteamOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateSteamOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateSteamOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateSteamOrder) GetSteamId() string {
	if x != nil {
		return x.SteamId
	}
	return ""
}

func (x *ReqCreateSteamOrder) GetDebtOrderId() string {
	if x != nil {
		return x.DebtOrderId
	}
	return ""
}

func (x *ReqCreateSteamOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateSteamOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId         string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	PlatformOrderId string `protobuf:"bytes,3,opt,name=platform_order_id,json=platformOrderId,proto3" json:"platform_order_id"`
}

func (x *ResCreateSteamOrder) Reset() {
	*x = ResCreateSteamOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[387]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateSteamOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateSteamOrder) ProtoMessage() {}

func (x *ResCreateSteamOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[387]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateSteamOrder.ProtoReflect.Descriptor instead.
func (*ResCreateSteamOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{387}
}

func (x *ResCreateSteamOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateSteamOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ResCreateSteamOrder) GetPlatformOrderId() string {
	if x != nil {
		return x.PlatformOrderId
	}
	return ""
}

type ReqVerifySteamOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	AccountId uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqVerifySteamOrder) Reset() {
	*x = ReqVerifySteamOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[388]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqVerifySteamOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqVerifySteamOrder) ProtoMessage() {}

func (x *ReqVerifySteamOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[388]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqVerifySteamOrder.ProtoReflect.Descriptor instead.
func (*ReqVerifySteamOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{388}
}

func (x *ReqVerifySteamOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReqVerifySteamOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ReqCreateMyCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	DebtOrderId         string `protobuf:"bytes,4,opt,name=debt_order_id,json=debtOrderId,proto3" json:"debt_order_id"`
	ClientVersionString string `protobuf:"bytes,5,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateMyCardOrder) Reset() {
	*x = ReqCreateMyCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[389]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateMyCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateMyCardOrder) ProtoMessage() {}

func (x *ReqCreateMyCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[389]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateMyCardOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateMyCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{389}
}

func (x *ReqCreateMyCardOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateMyCardOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateMyCardOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateMyCardOrder) GetDebtOrderId() string {
	if x != nil {
		return x.DebtOrderId
	}
	return ""
}

func (x *ReqCreateMyCardOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateMyCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	AuthCode string `protobuf:"bytes,2,opt,name=auth_code,json=authCode,proto3" json:"auth_code"`
	OrderId  string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResCreateMyCardOrder) Reset() {
	*x = ResCreateMyCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[390]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateMyCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateMyCardOrder) ProtoMessage() {}

func (x *ResCreateMyCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[390]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateMyCardOrder.ProtoReflect.Descriptor instead.
func (*ResCreateMyCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{390}
}

func (x *ResCreateMyCardOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateMyCardOrder) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

func (x *ResCreateMyCardOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ReqVerifyMyCardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	AccountId uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
}

func (x *ReqVerifyMyCardOrder) Reset() {
	*x = ReqVerifyMyCardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[391]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqVerifyMyCardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqVerifyMyCardOrder) ProtoMessage() {}

func (x *ReqVerifyMyCardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[391]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqVerifyMyCardOrder.ProtoReflect.Descriptor instead.
func (*ReqVerifyMyCardOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{391}
}

func (x *ReqVerifyMyCardOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReqVerifyMyCardOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ReqCreatePaypalOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	DebtOrderId         string `protobuf:"bytes,4,opt,name=debt_order_id,json=debtOrderId,proto3" json:"debt_order_id"`
	ClientVersionString string `protobuf:"bytes,5,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreatePaypalOrder) Reset() {
	*x = ReqCreatePaypalOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[392]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreatePaypalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreatePaypalOrder) ProtoMessage() {}

func (x *ReqCreatePaypalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[392]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreatePaypalOrder.ProtoReflect.Descriptor instead.
func (*ReqCreatePaypalOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{392}
}

func (x *ReqCreatePaypalOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreatePaypalOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreatePaypalOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreatePaypalOrder) GetDebtOrderId() string {
	if x != nil {
		return x.DebtOrderId
	}
	return ""
}

func (x *ReqCreatePaypalOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreatePaypalOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	Url     string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
}

func (x *ResCreatePaypalOrder) Reset() {
	*x = ResCreatePaypalOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[393]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreatePaypalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreatePaypalOrder) ProtoMessage() {}

func (x *ResCreatePaypalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[393]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreatePaypalOrder.ProtoReflect.Descriptor instead.
func (*ResCreatePaypalOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{393}
}

func (x *ResCreatePaypalOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreatePaypalOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ResCreatePaypalOrder) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ReqCreateXsollaOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId             uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	ClientType          uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	AccountId           uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	PaymentMethod       uint32 `protobuf:"varint,4,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method"`
	DebtOrderId         string `protobuf:"bytes,5,opt,name=debt_order_id,json=debtOrderId,proto3" json:"debt_order_id"`
	ClientVersionString string `protobuf:"bytes,6,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqCreateXsollaOrder) Reset() {
	*x = ReqCreateXsollaOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[394]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateXsollaOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateXsollaOrder) ProtoMessage() {}

func (x *ReqCreateXsollaOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[394]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateXsollaOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateXsollaOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{394}
}

func (x *ReqCreateXsollaOrder) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqCreateXsollaOrder) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ReqCreateXsollaOrder) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateXsollaOrder) GetPaymentMethod() uint32 {
	if x != nil {
		return x.PaymentMethod
	}
	return 0
}

func (x *ReqCreateXsollaOrder) GetDebtOrderId() string {
	if x != nil {
		return x.DebtOrderId
	}
	return ""
}

func (x *ReqCreateXsollaOrder) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ResCreateXsollaOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	Url     string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
}

func (x *ResCreateXsollaOrder) Reset() {
	*x = ResCreateXsollaOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[395]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateXsollaOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateXsollaOrder) ProtoMessage() {}

func (x *ResCreateXsollaOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[395]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateXsollaOrder.ProtoReflect.Descriptor instead.
func (*ResCreateXsollaOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{395}
}

func (x *ResCreateXsollaOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateXsollaOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ResCreateXsollaOrder) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ReqDeliverAA32Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	NsaId     string `protobuf:"bytes,2,opt,name=nsa_id,json=nsaId,proto3" json:"nsa_id"`
	NsaToken  string `protobuf:"bytes,3,opt,name=nsa_token,json=nsaToken,proto3" json:"nsa_token"`
}

func (x *ReqDeliverAA32Order) Reset() {
	*x = ReqDeliverAA32Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[396]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeliverAA32Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeliverAA32Order) ProtoMessage() {}

func (x *ReqDeliverAA32Order) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[396]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeliverAA32Order.ProtoReflect.Descriptor instead.
func (*ReqDeliverAA32Order) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{396}
}

func (x *ReqDeliverAA32Order) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqDeliverAA32Order) GetNsaId() string {
	if x != nil {
		return x.NsaId
	}
	return ""
}

func (x *ReqDeliverAA32Order) GetNsaToken() string {
	if x != nil {
		return x.NsaToken
	}
	return ""
}

type ReqOpenChest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChestId   uint32 `protobuf:"varint,1,opt,name=chest_id,json=chestId,proto3" json:"chest_id"`
	Count     uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	UseTicket bool   `protobuf:"varint,3,opt,name=use_ticket,json=useTicket,proto3" json:"use_ticket"`
}

func (x *ReqOpenChest) Reset() {
	*x = ReqOpenChest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[397]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOpenChest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOpenChest) ProtoMessage() {}

func (x *ReqOpenChest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[397]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOpenChest.ProtoReflect.Descriptor instead.
func (*ReqOpenChest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{397}
}

func (x *ReqOpenChest) GetChestId() uint32 {
	if x != nil {
		return x.ChestId
	}
	return 0
}

func (x *ReqOpenChest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqOpenChest) GetUseTicket() bool {
	if x != nil {
		return x.UseTicket
	}
	return false
}

type ResOpenChest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error                                `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Results        []*OpenResult                         `protobuf:"bytes,2,rep,name=results,proto3" json:"results"`
	TotalOpenCount uint32                                `protobuf:"varint,3,opt,name=total_open_count,json=totalOpenCount,proto3" json:"total_open_count"`
	FaithCount     uint32                                `protobuf:"varint,4,opt,name=faith_count,json=faithCount,proto3" json:"faith_count"`
	ChestReplaceUp []*ResOpenChest_ChestReplaceCountData `protobuf:"bytes,5,rep,name=chest_replace_up,json=chestReplaceUp,proto3" json:"chest_replace_up"`
}

func (x *ResOpenChest) Reset() {
	*x = ResOpenChest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[398]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOpenChest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOpenChest) ProtoMessage() {}

func (x *ResOpenChest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[398]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOpenChest.ProtoReflect.Descriptor instead.
func (*ResOpenChest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{398}
}

func (x *ResOpenChest) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResOpenChest) GetResults() []*OpenResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ResOpenChest) GetTotalOpenCount() uint32 {
	if x != nil {
		return x.TotalOpenCount
	}
	return 0
}

func (x *ResOpenChest) GetFaithCount() uint32 {
	if x != nil {
		return x.FaithCount
	}
	return 0
}

func (x *ResOpenChest) GetChestReplaceUp() []*ResOpenChest_ChestReplaceCountData {
	if x != nil {
		return x.ChestReplaceUp
	}
	return nil
}

type ReqBuyFromChestShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	Count   uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqBuyFromChestShop) Reset() {
	*x = ReqBuyFromChestShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[399]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBuyFromChestShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBuyFromChestShop) ProtoMessage() {}

func (x *ReqBuyFromChestShop) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[399]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBuyFromChestShop.ProtoReflect.Descriptor instead.
func (*ReqBuyFromChestShop) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{399}
}

func (x *ReqBuyFromChestShop) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqBuyFromChestShop) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResBuyFromChestShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ChestId      uint32 `protobuf:"varint,2,opt,name=chest_id,json=chestId,proto3" json:"chest_id"`
	ConsumeCount uint32 `protobuf:"varint,3,opt,name=consume_count,json=consumeCount,proto3" json:"consume_count"`
	FaithCount   int32  `protobuf:"varint,4,opt,name=faith_count,json=faithCount,proto3" json:"faith_count"`
}

func (x *ResBuyFromChestShop) Reset() {
	*x = ResBuyFromChestShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[400]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResBuyFromChestShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResBuyFromChestShop) ProtoMessage() {}

func (x *ResBuyFromChestShop) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[400]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResBuyFromChestShop.ProtoReflect.Descriptor instead.
func (*ResBuyFromChestShop) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{400}
}

func (x *ResBuyFromChestShop) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResBuyFromChestShop) GetChestId() uint32 {
	if x != nil {
		return x.ChestId
	}
	return 0
}

func (x *ResBuyFromChestShop) GetConsumeCount() uint32 {
	if x != nil {
		return x.ConsumeCount
	}
	return 0
}

func (x *ResBuyFromChestShop) GetFaithCount() int32 {
	if x != nil {
		return x.FaithCount
	}
	return 0
}

type ResDailySignInInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	SignInDays uint32 `protobuf:"varint,2,opt,name=sign_in_days,json=signInDays,proto3" json:"sign_in_days"`
}

func (x *ResDailySignInInfo) Reset() {
	*x = ResDailySignInInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[401]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDailySignInInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDailySignInInfo) ProtoMessage() {}

func (x *ResDailySignInInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[401]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDailySignInInfo.ProtoReflect.Descriptor instead.
func (*ResDailySignInInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{401}
}

func (x *ResDailySignInInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResDailySignInInfo) GetSignInDays() uint32 {
	if x != nil {
		return x.SignInDays
	}
	return 0
}

type ReqDoActivitySignIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqDoActivitySignIn) Reset() {
	*x = ReqDoActivitySignIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[402]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDoActivitySignIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDoActivitySignIn) ProtoMessage() {}

func (x *ReqDoActivitySignIn) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[402]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDoActivitySignIn.ProtoReflect.Descriptor instead.
func (*ReqDoActivitySignIn) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{402}
}

func (x *ReqDoActivitySignIn) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResDoActivitySignIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error                            `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rewards     []*ResDoActivitySignIn_RewardData `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
	SignInCount uint32                            `protobuf:"varint,3,opt,name=sign_in_count,json=signInCount,proto3" json:"sign_in_count"`
}

func (x *ResDoActivitySignIn) Reset() {
	*x = ResDoActivitySignIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[403]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDoActivitySignIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDoActivitySignIn) ProtoMessage() {}

func (x *ResDoActivitySignIn) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[403]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDoActivitySignIn.ProtoReflect.Descriptor instead.
func (*ResDoActivitySignIn) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{403}
}

func (x *ResDoActivitySignIn) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResDoActivitySignIn) GetRewards() []*ResDoActivitySignIn_RewardData {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ResDoActivitySignIn) GetSignInCount() uint32 {
	if x != nil {
		return x.SignInCount
	}
	return 0
}

type ResCharacterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error            *Error       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Characters       []*Character `protobuf:"bytes,2,rep,name=characters,proto3" json:"characters"`
	Skins            []uint32     `protobuf:"varint,3,rep,packed,name=skins,proto3" json:"skins"`
	MainCharacterId  uint32       `protobuf:"varint,4,opt,name=main_character_id,json=mainCharacterId,proto3" json:"main_character_id"`
	SendGiftCount    uint32       `protobuf:"varint,5,opt,name=send_gift_count,json=sendGiftCount,proto3" json:"send_gift_count"`
	SendGiftLimit    uint32       `protobuf:"varint,6,opt,name=send_gift_limit,json=sendGiftLimit,proto3" json:"send_gift_limit"`
	FinishedEndings  []uint32     `protobuf:"varint,7,rep,packed,name=finished_endings,json=finishedEndings,proto3" json:"finished_endings"`
	RewardedEndings  []uint32     `protobuf:"varint,8,rep,packed,name=rewarded_endings,json=rewardedEndings,proto3" json:"rewarded_endings"`
	CharacterSort    []uint32     `protobuf:"varint,9,rep,packed,name=character_sort,json=characterSort,proto3" json:"character_sort"`
	HiddenCharacters []uint32     `protobuf:"varint,10,rep,packed,name=hidden_characters,json=hiddenCharacters,proto3" json:"hidden_characters"`
}

func (x *ResCharacterInfo) Reset() {
	*x = ResCharacterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[404]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCharacterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCharacterInfo) ProtoMessage() {}

func (x *ResCharacterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[404]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCharacterInfo.ProtoReflect.Descriptor instead.
func (*ResCharacterInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{404}
}

func (x *ResCharacterInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCharacterInfo) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *ResCharacterInfo) GetSkins() []uint32 {
	if x != nil {
		return x.Skins
	}
	return nil
}

func (x *ResCharacterInfo) GetMainCharacterId() uint32 {
	if x != nil {
		return x.MainCharacterId
	}
	return 0
}

func (x *ResCharacterInfo) GetSendGiftCount() uint32 {
	if x != nil {
		return x.SendGiftCount
	}
	return 0
}

func (x *ResCharacterInfo) GetSendGiftLimit() uint32 {
	if x != nil {
		return x.SendGiftLimit
	}
	return 0
}

func (x *ResCharacterInfo) GetFinishedEndings() []uint32 {
	if x != nil {
		return x.FinishedEndings
	}
	return nil
}

func (x *ResCharacterInfo) GetRewardedEndings() []uint32 {
	if x != nil {
		return x.RewardedEndings
	}
	return nil
}

func (x *ResCharacterInfo) GetCharacterSort() []uint32 {
	if x != nil {
		return x.CharacterSort
	}
	return nil
}

func (x *ResCharacterInfo) GetHiddenCharacters() []uint32 {
	if x != nil {
		return x.HiddenCharacters
	}
	return nil
}

type ReqUpdateCharacterSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sort []uint32 `protobuf:"varint,1,rep,packed,name=sort,proto3" json:"sort"`
}

func (x *ReqUpdateCharacterSort) Reset() {
	*x = ReqUpdateCharacterSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[405]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateCharacterSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateCharacterSort) ProtoMessage() {}

func (x *ReqUpdateCharacterSort) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[405]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateCharacterSort.ProtoReflect.Descriptor instead.
func (*ReqUpdateCharacterSort) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{405}
}

func (x *ReqUpdateCharacterSort) GetSort() []uint32 {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ReqChangeMainCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id"`
}

func (x *ReqChangeMainCharacter) Reset() {
	*x = ReqChangeMainCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[406]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqChangeMainCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqChangeMainCharacter) ProtoMessage() {}

func (x *ReqChangeMainCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[406]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqChangeMainCharacter.ProtoReflect.Descriptor instead.
func (*ReqChangeMainCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{406}
}

func (x *ReqChangeMainCharacter) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

type ReqChangeCharacterSkin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id"`
	Skin        uint32 `protobuf:"varint,2,opt,name=skin,proto3" json:"skin"`
}

func (x *ReqChangeCharacterSkin) Reset() {
	*x = ReqChangeCharacterSkin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[407]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqChangeCharacterSkin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqChangeCharacterSkin) ProtoMessage() {}

func (x *ReqChangeCharacterSkin) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[407]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqChangeCharacterSkin.ProtoReflect.Descriptor instead.
func (*ReqChangeCharacterSkin) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{407}
}

func (x *ReqChangeCharacterSkin) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *ReqChangeCharacterSkin) GetSkin() uint32 {
	if x != nil {
		return x.Skin
	}
	return 0
}

type ReqChangeCharacterView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id"`
	Slot        uint32 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot"`
	ItemId      uint32 `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id"`
}

func (x *ReqChangeCharacterView) Reset() {
	*x = ReqChangeCharacterView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[408]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqChangeCharacterView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqChangeCharacterView) ProtoMessage() {}

func (x *ReqChangeCharacterView) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[408]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqChangeCharacterView.ProtoReflect.Descriptor instead.
func (*ReqChangeCharacterView) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{408}
}

func (x *ReqChangeCharacterView) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *ReqChangeCharacterView) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ReqChangeCharacterView) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type ReqSetHiddenCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharaList []uint32 `protobuf:"varint,1,rep,packed,name=chara_list,json=charaList,proto3" json:"chara_list"`
}

func (x *ReqSetHiddenCharacter) Reset() {
	*x = ReqSetHiddenCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[409]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSetHiddenCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSetHiddenCharacter) ProtoMessage() {}

func (x *ReqSetHiddenCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[409]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSetHiddenCharacter.ProtoReflect.Descriptor instead.
func (*ReqSetHiddenCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{409}
}

func (x *ReqSetHiddenCharacter) GetCharaList() []uint32 {
	if x != nil {
		return x.CharaList
	}
	return nil
}

type ResSetHiddenCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error            *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	HiddenCharacters []uint32 `protobuf:"varint,2,rep,packed,name=hidden_characters,json=hiddenCharacters,proto3" json:"hidden_characters"`
}

func (x *ResSetHiddenCharacter) Reset() {
	*x = ResSetHiddenCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[410]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSetHiddenCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSetHiddenCharacter) ProtoMessage() {}

func (x *ResSetHiddenCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[410]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSetHiddenCharacter.ProtoReflect.Descriptor instead.
func (*ResSetHiddenCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{410}
}

func (x *ResSetHiddenCharacter) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSetHiddenCharacter) GetHiddenCharacters() []uint32 {
	if x != nil {
		return x.HiddenCharacters
	}
	return nil
}

type ReqSendGiftToCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32                         `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id"`
	Gifts       []*ReqSendGiftToCharacter_Gift `protobuf:"bytes,2,rep,name=gifts,proto3" json:"gifts"`
}

func (x *ReqSendGiftToCharacter) Reset() {
	*x = ReqSendGiftToCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[411]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSendGiftToCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSendGiftToCharacter) ProtoMessage() {}

func (x *ReqSendGiftToCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[411]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSendGiftToCharacter.ProtoReflect.Descriptor instead.
func (*ReqSendGiftToCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{411}
}

func (x *ReqSendGiftToCharacter) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *ReqSendGiftToCharacter) GetGifts() []*ReqSendGiftToCharacter_Gift {
	if x != nil {
		return x.Gifts
	}
	return nil
}

type ResSendGiftToCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Level uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	Exp   uint32 `protobuf:"varint,3,opt,name=exp,proto3" json:"exp"`
}

func (x *ResSendGiftToCharacter) Reset() {
	*x = ResSendGiftToCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[412]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSendGiftToCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSendGiftToCharacter) ProtoMessage() {}

func (x *ResSendGiftToCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[412]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSendGiftToCharacter.ProtoReflect.Descriptor instead.
func (*ResSendGiftToCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{412}
}

func (x *ResSendGiftToCharacter) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSendGiftToCharacter) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ResSendGiftToCharacter) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

type ReqSellItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sells []*ReqSellItem_Item `protobuf:"bytes,1,rep,name=sells,proto3" json:"sells"`
}

func (x *ReqSellItem) Reset() {
	*x = ReqSellItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[413]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSellItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSellItem) ProtoMessage() {}

func (x *ReqSellItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[413]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSellItem.ProtoReflect.Descriptor instead.
func (*ReqSellItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{413}
}

func (x *ReqSellItem) GetSells() []*ReqSellItem_Item {
	if x != nil {
		return x.Sells
	}
	return nil
}

type ResCommonView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error                `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Slots []*ResCommonView_Slot `protobuf:"bytes,2,rep,name=slots,proto3" json:"slots"`
}

func (x *ResCommonView) Reset() {
	*x = ResCommonView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[414]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCommonView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCommonView) ProtoMessage() {}

func (x *ResCommonView) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[414]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCommonView.ProtoReflect.Descriptor instead.
func (*ResCommonView) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{414}
}

func (x *ResCommonView) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCommonView) GetSlots() []*ResCommonView_Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type ReqChangeCommonView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot  uint32 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value"`
}

func (x *ReqChangeCommonView) Reset() {
	*x = ReqChangeCommonView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[415]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqChangeCommonView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqChangeCommonView) ProtoMessage() {}

func (x *ReqChangeCommonView) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[415]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqChangeCommonView.ProtoReflect.Descriptor instead.
func (*ReqChangeCommonView) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{415}
}

func (x *ReqChangeCommonView) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ReqChangeCommonView) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ReqSaveCommonViews struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Views     []*ViewSlot `protobuf:"bytes,1,rep,name=views,proto3" json:"views"`
	SaveIndex uint32      `protobuf:"varint,2,opt,name=save_index,json=saveIndex,proto3" json:"save_index"`
	IsUse     uint32      `protobuf:"varint,3,opt,name=is_use,json=isUse,proto3" json:"is_use"`
}

func (x *ReqSaveCommonViews) Reset() {
	*x = ReqSaveCommonViews{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[416]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSaveCommonViews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSaveCommonViews) ProtoMessage() {}

func (x *ReqSaveCommonViews) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[416]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSaveCommonViews.ProtoReflect.Descriptor instead.
func (*ReqSaveCommonViews) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{416}
}

func (x *ReqSaveCommonViews) GetViews() []*ViewSlot {
	if x != nil {
		return x.Views
	}
	return nil
}

func (x *ReqSaveCommonViews) GetSaveIndex() uint32 {
	if x != nil {
		return x.SaveIndex
	}
	return 0
}

func (x *ReqSaveCommonViews) GetIsUse() uint32 {
	if x != nil {
		return x.IsUse
	}
	return 0
}

type ReqCommonViews struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index"`
}

func (x *ReqCommonViews) Reset() {
	*x = ReqCommonViews{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[417]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCommonViews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCommonViews) ProtoMessage() {}

func (x *ReqCommonViews) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[417]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCommonViews.ProtoReflect.Descriptor instead.
func (*ReqCommonViews) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{417}
}

func (x *ReqCommonViews) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ResCommonViews struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	Views []*ViewSlot `protobuf:"bytes,1,rep,name=views,proto3" json:"views"`
}

func (x *ResCommonViews) Reset() {
	*x = ResCommonViews{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[418]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCommonViews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCommonViews) ProtoMessage() {}

func (x *ResCommonViews) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[418]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCommonViews.ProtoReflect.Descriptor instead.
func (*ResCommonViews) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{418}
}

func (x *ResCommonViews) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCommonViews) GetViews() []*ViewSlot {
	if x != nil {
		return x.Views
	}
	return nil
}

type ResAllcommonViews struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Views []*ResAllcommonViews_Views `protobuf:"bytes,1,rep,name=views,proto3" json:"views"`
	Use   uint32                     `protobuf:"varint,2,opt,name=use,proto3" json:"use"`
	Error *Error                     `protobuf:"bytes,3,opt,name=error,proto3" json:"error"`
}

func (x *ResAllcommonViews) Reset() {
	*x = ResAllcommonViews{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[419]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAllcommonViews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAllcommonViews) ProtoMessage() {}

func (x *ResAllcommonViews) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[419]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAllcommonViews.ProtoReflect.Descriptor instead.
func (*ResAllcommonViews) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{419}
}

func (x *ResAllcommonViews) GetViews() []*ResAllcommonViews_Views {
	if x != nil {
		return x.Views
	}
	return nil
}

func (x *ResAllcommonViews) GetUse() uint32 {
	if x != nil {
		return x.Use
	}
	return 0
}

func (x *ResAllcommonViews) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqUseCommonView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32 `protobuf:"varint,3,opt,name=index,proto3" json:"index"`
}

func (x *ReqUseCommonView) Reset() {
	*x = ReqUseCommonView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[420]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUseCommonView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUseCommonView) ProtoMessage() {}

func (x *ReqUseCommonView) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[420]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUseCommonView.ProtoReflect.Descriptor instead.
func (*ReqUseCommonView) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{420}
}

func (x *ReqUseCommonView) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ReqUpgradeCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id"`
}

func (x *ReqUpgradeCharacter) Reset() {
	*x = ReqUpgradeCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[421]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpgradeCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpgradeCharacter) ProtoMessage() {}

func (x *ReqUpgradeCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[421]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpgradeCharacter.ProtoReflect.Descriptor instead.
func (*ReqUpgradeCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{421}
}

func (x *ReqUpgradeCharacter) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

type ResUpgradeCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Character *Character `protobuf:"bytes,2,opt,name=character,proto3" json:"character"`
}

func (x *ResUpgradeCharacter) Reset() {
	*x = ResUpgradeCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[422]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpgradeCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpgradeCharacter) ProtoMessage() {}

func (x *ResUpgradeCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[422]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpgradeCharacter.ProtoReflect.Descriptor instead.
func (*ResUpgradeCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{422}
}

func (x *ResUpgradeCharacter) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResUpgradeCharacter) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

type ReqFinishedEnding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id"`
	StoryId     uint32 `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id"`
	EndingId    uint32 `protobuf:"varint,3,opt,name=ending_id,json=endingId,proto3" json:"ending_id"`
}

func (x *ReqFinishedEnding) Reset() {
	*x = ReqFinishedEnding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[423]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFinishedEnding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFinishedEnding) ProtoMessage() {}

func (x *ReqFinishedEnding) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[423]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFinishedEnding.ProtoReflect.Descriptor instead.
func (*ReqFinishedEnding) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{423}
}

func (x *ReqFinishedEnding) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *ReqFinishedEnding) GetStoryId() uint32 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *ReqFinishedEnding) GetEndingId() uint32 {
	if x != nil {
		return x.EndingId
	}
	return 0
}

type ReqGMCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command"`
}

func (x *ReqGMCommand) Reset() {
	*x = ReqGMCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[424]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGMCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGMCommand) ProtoMessage() {}

func (x *ReqGMCommand) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[424]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGMCommand.ProtoReflect.Descriptor instead.
func (*ReqGMCommand) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{424}
}

func (x *ReqGMCommand) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type ResShopInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error    `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ShopInfo *ShopInfo `protobuf:"bytes,2,opt,name=shop_info,json=shopInfo,proto3" json:"shop_info"`
}

func (x *ResShopInfo) Reset() {
	*x = ResShopInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[425]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResShopInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResShopInfo) ProtoMessage() {}

func (x *ResShopInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[425]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResShopInfo.ProtoReflect.Descriptor instead.
func (*ResShopInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{425}
}

func (x *ResShopInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResShopInfo) GetShopInfo() *ShopInfo {
	if x != nil {
		return x.ShopInfo
	}
	return nil
}

type ReqBuyFromShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId  uint32                 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	Count    uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	VerPrice []*ReqBuyFromShop_Item `protobuf:"bytes,3,rep,name=ver_price,json=verPrice,proto3" json:"ver_price"`
	VerGoods []*ReqBuyFromShop_Item `protobuf:"bytes,4,rep,name=ver_goods,json=verGoods,proto3" json:"ver_goods"`
}

func (x *ReqBuyFromShop) Reset() {
	*x = ReqBuyFromShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[426]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBuyFromShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBuyFromShop) ProtoMessage() {}

func (x *ReqBuyFromShop) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[426]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBuyFromShop.ProtoReflect.Descriptor instead.
func (*ReqBuyFromShop) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{426}
}

func (x *ReqBuyFromShop) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqBuyFromShop) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqBuyFromShop) GetVerPrice() []*ReqBuyFromShop_Item {
	if x != nil {
		return x.VerPrice
	}
	return nil
}

func (x *ReqBuyFromShop) GetVerGoods() []*ReqBuyFromShop_Item {
	if x != nil {
		return x.VerGoods
	}
	return nil
}

type ResBuyFromShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rewards []*RewardSlot `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
}

func (x *ResBuyFromShop) Reset() {
	*x = ResBuyFromShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[427]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResBuyFromShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResBuyFromShop) ProtoMessage() {}

func (x *ResBuyFromShop) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[427]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResBuyFromShop.ProtoReflect.Descriptor instead.
func (*ResBuyFromShop) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{427}
}

func (x *ResBuyFromShop) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResBuyFromShop) GetRewards() []*RewardSlot {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ReqBuyFromZHP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	Count   uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqBuyFromZHP) Reset() {
	*x = ReqBuyFromZHP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[428]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBuyFromZHP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBuyFromZHP) ProtoMessage() {}

func (x *ReqBuyFromZHP) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[428]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBuyFromZHP.ProtoReflect.Descriptor instead.
func (*ReqBuyFromZHP) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{428}
}

func (x *ReqBuyFromZHP) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ReqBuyFromZHP) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReqPayMonthTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId uint32 `protobuf:"varint,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id"`
}

func (x *ReqPayMonthTicket) Reset() {
	*x = ReqPayMonthTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[429]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPayMonthTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPayMonthTicket) ProtoMessage() {}

func (x *ReqPayMonthTicket) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[429]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPayMonthTicket.ProtoReflect.Descriptor instead.
func (*ReqPayMonthTicket) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{429}
}

func (x *ReqPayMonthTicket) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

type ResPayMonthTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ResourceId    uint32 `protobuf:"varint,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id"`
	ResourceCount uint32 `protobuf:"varint,3,opt,name=resource_count,json=resourceCount,proto3" json:"resource_count"`
}

func (x *ResPayMonthTicket) Reset() {
	*x = ResPayMonthTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[430]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPayMonthTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPayMonthTicket) ProtoMessage() {}

func (x *ResPayMonthTicket) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[430]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPayMonthTicket.ProtoReflect.Descriptor instead.
func (*ResPayMonthTicket) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{430}
}

func (x *ResPayMonthTicket) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResPayMonthTicket) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *ResPayMonthTicket) GetResourceCount() uint32 {
	if x != nil {
		return x.ResourceCount
	}
	return 0
}

type ReqReshZHPShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeRefresh uint32 `protobuf:"varint,1,opt,name=free_refresh,json=freeRefresh,proto3" json:"free_refresh"`
	CostRefresh uint32 `protobuf:"varint,2,opt,name=cost_refresh,json=costRefresh,proto3" json:"cost_refresh"`
}

func (x *ReqReshZHPShop) Reset() {
	*x = ReqReshZHPShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[431]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReshZHPShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReshZHPShop) ProtoMessage() {}

func (x *ReqReshZHPShop) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[431]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReshZHPShop.ProtoReflect.Descriptor instead.
func (*ReqReshZHPShop) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{431}
}

func (x *ReqReshZHPShop) GetFreeRefresh() uint32 {
	if x != nil {
		return x.FreeRefresh
	}
	return 0
}

func (x *ReqReshZHPShop) GetCostRefresh() uint32 {
	if x != nil {
		return x.CostRefresh
	}
	return 0
}

type ResRefreshZHPShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Zhp   *ZHPShop `protobuf:"bytes,2,opt,name=zhp,proto3" json:"zhp"`
}

func (x *ResRefreshZHPShop) Reset() {
	*x = ResRefreshZHPShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[432]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRefreshZHPShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRefreshZHPShop) ProtoMessage() {}

func (x *ResRefreshZHPShop) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[432]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRefreshZHPShop.ProtoReflect.Descriptor instead.
func (*ResRefreshZHPShop) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{432}
}

func (x *ResRefreshZHPShop) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResRefreshZHPShop) GetZhp() *ZHPShop {
	if x != nil {
		return x.Zhp
	}
	return nil
}

type ResMonthTicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error             `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	MonthTicketInfo []*MonthTicketInfo `protobuf:"bytes,1,rep,name=month_ticket_info,json=monthTicketInfo,proto3" json:"month_ticket_info"`
}

func (x *ResMonthTicketInfo) Reset() {
	*x = ResMonthTicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[433]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMonthTicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMonthTicketInfo) ProtoMessage() {}

func (x *ResMonthTicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[433]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMonthTicketInfo.ProtoReflect.Descriptor instead.
func (*ResMonthTicketInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{433}
}

func (x *ResMonthTicketInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResMonthTicketInfo) GetMonthTicketInfo() []*MonthTicketInfo {
	if x != nil {
		return x.MonthTicketInfo
	}
	return nil
}

type ReqExchangeCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqExchangeCurrency) Reset() {
	*x = ReqExchangeCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[434]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqExchangeCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqExchangeCurrency) ProtoMessage() {}

func (x *ReqExchangeCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[434]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqExchangeCurrency.ProtoReflect.Descriptor instead.
func (*ReqExchangeCurrency) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{434}
}

func (x *ReqExchangeCurrency) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqExchangeCurrency) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResServerSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error          `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	Settings *ServerSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings"`
}

func (x *ResServerSettings) Reset() {
	*x = ResServerSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[435]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResServerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResServerSettings) ProtoMessage() {}

func (x *ResServerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[435]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResServerSettings.ProtoReflect.Descriptor instead.
func (*ResServerSettings) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{435}
}

func (x *ResServerSettings) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResServerSettings) GetSettings() *ServerSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ResAccountSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error            `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Settings []*AccountSetting `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings"`
}

func (x *ResAccountSettings) Reset() {
	*x = ResAccountSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[436]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountSettings) ProtoMessage() {}

func (x *ResAccountSettings) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[436]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountSettings.ProtoReflect.Descriptor instead.
func (*ResAccountSettings) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{436}
}

func (x *ResAccountSettings) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountSettings) GetSettings() []*AccountSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ReqUpdateAccountSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setting *AccountSetting `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting"`
}

func (x *ReqUpdateAccountSettings) Reset() {
	*x = ReqUpdateAccountSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[437]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateAccountSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateAccountSettings) ProtoMessage() {}

func (x *ReqUpdateAccountSettings) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[437]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateAccountSettings.ProtoReflect.Descriptor instead.
func (*ReqUpdateAccountSettings) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{437}
}

func (x *ReqUpdateAccountSettings) GetSetting() *AccountSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type ResModNicknameTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	LastModTime uint32 `protobuf:"varint,1,opt,name=last_mod_time,json=lastModTime,proto3" json:"last_mod_time"`
}

func (x *ResModNicknameTime) Reset() {
	*x = ResModNicknameTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[438]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResModNicknameTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResModNicknameTime) ProtoMessage() {}

func (x *ResModNicknameTime) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[438]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResModNicknameTime.ProtoReflect.Descriptor instead.
func (*ResModNicknameTime) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{438}
}

func (x *ResModNicknameTime) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResModNicknameTime) GetLastModTime() uint32 {
	if x != nil {
		return x.LastModTime
	}
	return 0
}

type ResMisc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error                   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	RechargedList []uint32                 `protobuf:"varint,2,rep,packed,name=recharged_list,json=rechargedList,proto3" json:"recharged_list"`
	Faiths        []*ResMisc_MiscFaithData `protobuf:"bytes,3,rep,name=faiths,proto3" json:"faiths"`
}

func (x *ResMisc) Reset() {
	*x = ResMisc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[439]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMisc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMisc) ProtoMessage() {}

func (x *ResMisc) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[439]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMisc.ProtoReflect.Descriptor instead.
func (*ResMisc) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{439}
}

func (x *ResMisc) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResMisc) GetRechargedList() []uint32 {
	if x != nil {
		return x.RechargedList
	}
	return nil
}

func (x *ResMisc) GetFaiths() []*ResMisc_MiscFaithData {
	if x != nil {
		return x.Faiths
	}
	return nil
}

type ReqModifySignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature"`
}

func (x *ReqModifySignature) Reset() {
	*x = ReqModifySignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[440]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqModifySignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqModifySignature) ProtoMessage() {}

func (x *ReqModifySignature) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[440]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqModifySignature.ProtoReflect.Descriptor instead.
func (*ReqModifySignature) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{440}
}

func (x *ReqModifySignature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type ResIDCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	IsAuthed bool   `protobuf:"varint,2,opt,name=is_authed,json=isAuthed,proto3" json:"is_authed"`
	Country  string `protobuf:"bytes,3,opt,name=country,proto3" json:"country"`
}

func (x *ResIDCardInfo) Reset() {
	*x = ResIDCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[441]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIDCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIDCardInfo) ProtoMessage() {}

func (x *ResIDCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[441]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIDCardInfo.ProtoReflect.Descriptor instead.
func (*ResIDCardInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{441}
}

func (x *ResIDCardInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResIDCardInfo) GetIsAuthed() bool {
	if x != nil {
		return x.IsAuthed
	}
	return false
}

func (x *ResIDCardInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type ReqUpdateIDCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname string `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname"`
	CardNo   string `protobuf:"bytes,2,opt,name=card_no,json=cardNo,proto3" json:"card_no"`
}

func (x *ReqUpdateIDCardInfo) Reset() {
	*x = ReqUpdateIDCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[442]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateIDCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateIDCardInfo) ProtoMessage() {}

func (x *ReqUpdateIDCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[442]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateIDCardInfo.ProtoReflect.Descriptor instead.
func (*ReqUpdateIDCardInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{442}
}

func (x *ReqUpdateIDCardInfo) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *ReqUpdateIDCardInfo) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

type ResVipReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	GainedVipLevels []uint32 `protobuf:"varint,2,rep,packed,name=gained_vip_levels,json=gainedVipLevels,proto3" json:"gained_vip_levels"`
}

func (x *ResVipReward) Reset() {
	*x = ResVipReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[443]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResVipReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResVipReward) ProtoMessage() {}

func (x *ResVipReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[443]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResVipReward.ProtoReflect.Descriptor instead.
func (*ResVipReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{443}
}

func (x *ResVipReward) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResVipReward) GetGainedVipLevels() []uint32 {
	if x != nil {
		return x.GainedVipLevels
	}
	return nil
}

type ResFetchRefundOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error                           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Orders        []*ResFetchRefundOrder_OrderInfo `protobuf:"bytes,2,rep,name=orders,proto3" json:"orders"`
	ClearDeadline uint32                           `protobuf:"varint,3,opt,name=clear_deadline,json=clearDeadline,proto3" json:"clear_deadline"`
	Message       []*I18NContext                   `protobuf:"bytes,4,rep,name=message,proto3" json:"message"`
}

func (x *ResFetchRefundOrder) Reset() {
	*x = ResFetchRefundOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[444]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRefundOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRefundOrder) ProtoMessage() {}

func (x *ResFetchRefundOrder) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[444]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRefundOrder.ProtoReflect.Descriptor instead.
func (*ResFetchRefundOrder) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{444}
}

func (x *ResFetchRefundOrder) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchRefundOrder) GetOrders() []*ResFetchRefundOrder_OrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *ResFetchRefundOrder) GetClearDeadline() uint32 {
	if x != nil {
		return x.ClearDeadline
	}
	return 0
}

func (x *ResFetchRefundOrder) GetMessage() []*I18NContext {
	if x != nil {
		return x.Message
	}
	return nil
}

type ReqGainVipReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VipLevel uint32 `protobuf:"varint,1,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level"`
}

func (x *ReqGainVipReward) Reset() {
	*x = ReqGainVipReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[445]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGainVipReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGainVipReward) ProtoMessage() {}

func (x *ReqGainVipReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[445]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGainVipReward.ProtoReflect.Descriptor instead.
func (*ReqGainVipReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{445}
}

func (x *ReqGainVipReward) GetVipLevel() uint32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

type ReqFetchCustomizedContestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqFetchCustomizedContestList) Reset() {
	*x = ReqFetchCustomizedContestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[446]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCustomizedContestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCustomizedContestList) ProtoMessage() {}

func (x *ReqFetchCustomizedContestList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[446]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCustomizedContestList.ProtoReflect.Descriptor instead.
func (*ReqFetchCustomizedContestList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{446}
}

func (x *ReqFetchCustomizedContestList) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ReqFetchCustomizedContestList) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResFetchCustomizedContestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error                   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Contests       []*CustomizedContestBase `protobuf:"bytes,2,rep,name=contests,proto3" json:"contests"`
	FollowContests []*CustomizedContestBase `protobuf:"bytes,3,rep,name=follow_contests,json=followContests,proto3" json:"follow_contests"`
}

func (x *ResFetchCustomizedContestList) Reset() {
	*x = ResFetchCustomizedContestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[447]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestList) ProtoMessage() {}

func (x *ResFetchCustomizedContestList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[447]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestList.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{447}
}

func (x *ResFetchCustomizedContestList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestList) GetContests() []*CustomizedContestBase {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *ResFetchCustomizedContestList) GetFollowContests() []*CustomizedContestBase {
	if x != nil {
		return x.FollowContests
	}
	return nil
}

type ReqFetchCustomizedContestExtendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList []uint32 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list"`
}

func (x *ReqFetchCustomizedContestExtendInfo) Reset() {
	*x = ReqFetchCustomizedContestExtendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[448]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCustomizedContestExtendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCustomizedContestExtendInfo) ProtoMessage() {}

func (x *ReqFetchCustomizedContestExtendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[448]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCustomizedContestExtendInfo.ProtoReflect.Descriptor instead.
func (*ReqFetchCustomizedContestExtendInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{448}
}

func (x *ReqFetchCustomizedContestExtendInfo) GetUidList() []uint32 {
	if x != nil {
		return x.UidList
	}
	return nil
}

type ResFetchCustomizedContestExtendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ExtendList []*CustomizedContestExtend `protobuf:"bytes,2,rep,name=extend_list,json=extendList,proto3" json:"extend_list"`
}

func (x *ResFetchCustomizedContestExtendInfo) Reset() {
	*x = ResFetchCustomizedContestExtendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[449]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestExtendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestExtendInfo) ProtoMessage() {}

func (x *ResFetchCustomizedContestExtendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[449]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestExtendInfo.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestExtendInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{449}
}

func (x *ResFetchCustomizedContestExtendInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestExtendInfo) GetExtendList() []*CustomizedContestExtend {
	if x != nil {
		return x.ExtendList
	}
	return nil
}

type ReqFetchCustomizedContestAuthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
}

func (x *ReqFetchCustomizedContestAuthInfo) Reset() {
	*x = ReqFetchCustomizedContestAuthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[450]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCustomizedContestAuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCustomizedContestAuthInfo) ProtoMessage() {}

func (x *ReqFetchCustomizedContestAuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[450]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCustomizedContestAuthInfo.ProtoReflect.Descriptor instead.
func (*ReqFetchCustomizedContestAuthInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{450}
}

func (x *ReqFetchCustomizedContestAuthInfo) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResFetchCustomizedContestAuthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ObserverLevel uint32 `protobuf:"varint,2,opt,name=observer_level,json=observerLevel,proto3" json:"observer_level"`
}

func (x *ResFetchCustomizedContestAuthInfo) Reset() {
	*x = ResFetchCustomizedContestAuthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[451]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestAuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestAuthInfo) ProtoMessage() {}

func (x *ResFetchCustomizedContestAuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[451]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestAuthInfo.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestAuthInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{451}
}

func (x *ResFetchCustomizedContestAuthInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestAuthInfo) GetObserverLevel() uint32 {
	if x != nil {
		return x.ObserverLevel
	}
	return 0
}

type ReqEnterCustomizedContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
}

func (x *ReqEnterCustomizedContest) Reset() {
	*x = ReqEnterCustomizedContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[452]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEnterCustomizedContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEnterCustomizedContest) ProtoMessage() {}

func (x *ReqEnterCustomizedContest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[452]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEnterCustomizedContest.ProtoReflect.Descriptor instead.
func (*ReqEnterCustomizedContest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{452}
}

func (x *ReqEnterCustomizedContest) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResEnterCustomizedContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error                         `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	DetailInfo   *CustomizedContestDetail       `protobuf:"bytes,2,opt,name=detail_info,json=detailInfo,proto3" json:"detail_info"`
	PlayerReport *CustomizedContestPlayerReport `protobuf:"bytes,3,opt,name=player_report,json=playerReport,proto3" json:"player_report"`
	IsFollowed   bool                           `protobuf:"varint,4,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed"`
}

func (x *ResEnterCustomizedContest) Reset() {
	*x = ResEnterCustomizedContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[453]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResEnterCustomizedContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResEnterCustomizedContest) ProtoMessage() {}

func (x *ResEnterCustomizedContest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[453]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResEnterCustomizedContest.ProtoReflect.Descriptor instead.
func (*ResEnterCustomizedContest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{453}
}

func (x *ResEnterCustomizedContest) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResEnterCustomizedContest) GetDetailInfo() *CustomizedContestDetail {
	if x != nil {
		return x.DetailInfo
	}
	return nil
}

func (x *ResEnterCustomizedContest) GetPlayerReport() *CustomizedContestPlayerReport {
	if x != nil {
		return x.PlayerReport
	}
	return nil
}

func (x *ResEnterCustomizedContest) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

type ReqFetchCustomizedContestOnlineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
}

func (x *ReqFetchCustomizedContestOnlineInfo) Reset() {
	*x = ReqFetchCustomizedContestOnlineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[454]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCustomizedContestOnlineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCustomizedContestOnlineInfo) ProtoMessage() {}

func (x *ReqFetchCustomizedContestOnlineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[454]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCustomizedContestOnlineInfo.ProtoReflect.Descriptor instead.
func (*ReqFetchCustomizedContestOnlineInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{454}
}

func (x *ReqFetchCustomizedContestOnlineInfo) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResFetchCustomizedContestOnlineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	OnlinePlayer uint32 `protobuf:"varint,2,opt,name=online_player,json=onlinePlayer,proto3" json:"online_player"`
}

func (x *ResFetchCustomizedContestOnlineInfo) Reset() {
	*x = ResFetchCustomizedContestOnlineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[455]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestOnlineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestOnlineInfo) ProtoMessage() {}

func (x *ResFetchCustomizedContestOnlineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[455]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestOnlineInfo.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestOnlineInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{455}
}

func (x *ResFetchCustomizedContestOnlineInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestOnlineInfo) GetOnlinePlayer() uint32 {
	if x != nil {
		return x.OnlinePlayer
	}
	return 0
}

type ReqFetchCustomizedContestByContestId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId uint32 `protobuf:"varint,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id"`
}

func (x *ReqFetchCustomizedContestByContestId) Reset() {
	*x = ReqFetchCustomizedContestByContestId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[456]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCustomizedContestByContestId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCustomizedContestByContestId) ProtoMessage() {}

func (x *ReqFetchCustomizedContestByContestId) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[456]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCustomizedContestByContestId.ProtoReflect.Descriptor instead.
func (*ReqFetchCustomizedContestByContestId) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{456}
}

func (x *ReqFetchCustomizedContestByContestId) GetContestId() uint32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

type ResFetchCustomizedContestByContestId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ContestInfo *CustomizedContestAbstract `protobuf:"bytes,2,opt,name=contest_info,json=contestInfo,proto3" json:"contest_info"`
}

func (x *ResFetchCustomizedContestByContestId) Reset() {
	*x = ResFetchCustomizedContestByContestId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[457]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestByContestId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestByContestId) ProtoMessage() {}

func (x *ResFetchCustomizedContestByContestId) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[457]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestByContestId.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestByContestId) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{457}
}

func (x *ResFetchCustomizedContestByContestId) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestByContestId) GetContestInfo() *CustomizedContestAbstract {
	if x != nil {
		return x.ContestInfo
	}
	return nil
}

type ReqStartCustomizedContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId            uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	ClientVersionString string `protobuf:"bytes,2,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqStartCustomizedContest) Reset() {
	*x = ReqStartCustomizedContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[458]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqStartCustomizedContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqStartCustomizedContest) ProtoMessage() {}

func (x *ReqStartCustomizedContest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[458]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqStartCustomizedContest.ProtoReflect.Descriptor instead.
func (*ReqStartCustomizedContest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{458}
}

func (x *ReqStartCustomizedContest) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *ReqStartCustomizedContest) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ReqJoinCustomizedContestChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
}

func (x *ReqJoinCustomizedContestChatRoom) Reset() {
	*x = ReqJoinCustomizedContestChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[459]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqJoinCustomizedContestChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqJoinCustomizedContestChatRoom) ProtoMessage() {}

func (x *ReqJoinCustomizedContestChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[459]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqJoinCustomizedContestChatRoom.ProtoReflect.Descriptor instead.
func (*ReqJoinCustomizedContestChatRoom) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{459}
}

func (x *ReqJoinCustomizedContestChatRoom) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResJoinCustomizedContestChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ChatHistory [][]byte `protobuf:"bytes,2,rep,name=chat_history,json=chatHistory,proto3" json:"chat_history"`
}

func (x *ResJoinCustomizedContestChatRoom) Reset() {
	*x = ResJoinCustomizedContestChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[460]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResJoinCustomizedContestChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResJoinCustomizedContestChatRoom) ProtoMessage() {}

func (x *ResJoinCustomizedContestChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[460]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResJoinCustomizedContestChatRoom.ProtoReflect.Descriptor instead.
func (*ResJoinCustomizedContestChatRoom) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{460}
}

func (x *ResJoinCustomizedContestChatRoom) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResJoinCustomizedContestChatRoom) GetChatHistory() [][]byte {
	if x != nil {
		return x.ChatHistory
	}
	return nil
}

type ReqSayChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content"`
}

func (x *ReqSayChatMessage) Reset() {
	*x = ReqSayChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[461]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSayChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSayChatMessage) ProtoMessage() {}

func (x *ReqSayChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[461]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSayChatMessage.ProtoReflect.Descriptor instead.
func (*ReqSayChatMessage) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{461}
}

func (x *ReqSayChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ReqFetchCustomizedContestGameLiveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
}

func (x *ReqFetchCustomizedContestGameLiveList) Reset() {
	*x = ReqFetchCustomizedContestGameLiveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[462]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCustomizedContestGameLiveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCustomizedContestGameLiveList) ProtoMessage() {}

func (x *ReqFetchCustomizedContestGameLiveList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[462]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCustomizedContestGameLiveList.ProtoReflect.Descriptor instead.
func (*ReqFetchCustomizedContestGameLiveList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{462}
}

func (x *ReqFetchCustomizedContestGameLiveList) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResFetchCustomizedContestGameLiveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	LiveList []*GameLiveHead `protobuf:"bytes,2,rep,name=live_list,json=liveList,proto3" json:"live_list"`
}

func (x *ResFetchCustomizedContestGameLiveList) Reset() {
	*x = ResFetchCustomizedContestGameLiveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[463]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestGameLiveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestGameLiveList) ProtoMessage() {}

func (x *ResFetchCustomizedContestGameLiveList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[463]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestGameLiveList.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestGameLiveList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{463}
}

func (x *ResFetchCustomizedContestGameLiveList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestGameLiveList) GetLiveList() []*GameLiveHead {
	if x != nil {
		return x.LiveList
	}
	return nil
}

type ReqFetchCustomizedContestGameRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId  uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	LastIndex uint32 `protobuf:"varint,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index"`
}

func (x *ReqFetchCustomizedContestGameRecords) Reset() {
	*x = ReqFetchCustomizedContestGameRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[464]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCustomizedContestGameRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCustomizedContestGameRecords) ProtoMessage() {}

func (x *ReqFetchCustomizedContestGameRecords) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[464]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCustomizedContestGameRecords.ProtoReflect.Descriptor instead.
func (*ReqFetchCustomizedContestGameRecords) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{464}
}

func (x *ReqFetchCustomizedContestGameRecords) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *ReqFetchCustomizedContestGameRecords) GetLastIndex() uint32 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

type ResFetchCustomizedContestGameRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	NextIndex  uint32        `protobuf:"varint,2,opt,name=next_index,json=nextIndex,proto3" json:"next_index"`
	RecordList []*RecordGame `protobuf:"bytes,3,rep,name=record_list,json=recordList,proto3" json:"record_list"`
}

func (x *ResFetchCustomizedContestGameRecords) Reset() {
	*x = ResFetchCustomizedContestGameRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[465]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestGameRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestGameRecords) ProtoMessage() {}

func (x *ResFetchCustomizedContestGameRecords) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[465]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestGameRecords.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestGameRecords) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{465}
}

func (x *ResFetchCustomizedContestGameRecords) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestGameRecords) GetNextIndex() uint32 {
	if x != nil {
		return x.NextIndex
	}
	return 0
}

func (x *ResFetchCustomizedContestGameRecords) GetRecordList() []*RecordGame {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type ReqTargetCustomizedContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
}

func (x *ReqTargetCustomizedContest) Reset() {
	*x = ReqTargetCustomizedContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[466]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTargetCustomizedContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTargetCustomizedContest) ProtoMessage() {}

func (x *ReqTargetCustomizedContest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[466]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTargetCustomizedContest.ProtoReflect.Descriptor instead.
func (*ReqTargetCustomizedContest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{466}
}

func (x *ReqTargetCustomizedContest) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResActivityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error      `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Activities []*Activity `protobuf:"bytes,2,rep,name=activities,proto3" json:"activities"`
}

func (x *ResActivityList) Reset() {
	*x = ResActivityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[467]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResActivityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResActivityList) ProtoMessage() {}

func (x *ResActivityList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[467]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResActivityList.ProtoReflect.Descriptor instead.
func (*ResActivityList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{467}
}

func (x *ResActivityList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResActivityList) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

type ResAccountActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error                   *Error                                        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ExchangeRecords         []*ExchangeRecord                             `protobuf:"bytes,2,rep,name=exchange_records,json=exchangeRecords,proto3" json:"exchange_records"`
	TaskProgressList        []*TaskProgress                               `protobuf:"bytes,3,rep,name=task_progress_list,json=taskProgressList,proto3" json:"task_progress_list"`
	AccumulatedPointList    []*ActivityAccumulatedPointData               `protobuf:"bytes,4,rep,name=accumulated_point_list,json=accumulatedPointList,proto3" json:"accumulated_point_list"`
	RankDataList            []*ActivityRankPointData                      `protobuf:"bytes,5,rep,name=rank_data_list,json=rankDataList,proto3" json:"rank_data_list"`
	FlipTaskProgressList    []*TaskProgress                               `protobuf:"bytes,6,rep,name=flip_task_progress_list,json=flipTaskProgressList,proto3" json:"flip_task_progress_list"`
	SignInData              []*ResAccountActivityData_ActivitySignInData  `protobuf:"bytes,7,rep,name=sign_in_data,json=signInData,proto3" json:"sign_in_data"`
	RichmanData             []*ResAccountActivityData_ActivityRichmanData `protobuf:"bytes,8,rep,name=richman_data,json=richmanData,proto3" json:"richman_data"`
	PeriodTaskProgressList  []*TaskProgress                               `protobuf:"bytes,9,rep,name=period_task_progress_list,json=periodTaskProgressList,proto3" json:"period_task_progress_list"`
	RandomTaskProgressList  []*TaskProgress                               `protobuf:"bytes,10,rep,name=random_task_progress_list,json=randomTaskProgressList,proto3" json:"random_task_progress_list"`
	ChestUpData             []*ResAccountActivityData_ChestUpData         `protobuf:"bytes,11,rep,name=chest_up_data,json=chestUpData,proto3" json:"chest_up_data"`
	SnsData                 *ResAccountActivityData_ActivitySNSData       `protobuf:"bytes,12,opt,name=sns_data,json=snsData,proto3" json:"sns_data"`
	MineData                []*MineActivityData                           `protobuf:"bytes,13,rep,name=mine_data,json=mineData,proto3" json:"mine_data"`
	RpgData                 []*RPGActivity                                `protobuf:"bytes,14,rep,name=rpg_data,json=rpgData,proto3" json:"rpg_data"`
	ArenaData               []*ActivityArenaData                          `protobuf:"bytes,15,rep,name=arena_data,json=arenaData,proto3" json:"arena_data"`
	FeedData                []*FeedActivityData                           `protobuf:"bytes,16,rep,name=feed_data,json=feedData,proto3" json:"feed_data"`
	SegmentTaskProgressList []*SegmentTaskProgress                        `protobuf:"bytes,17,rep,name=segment_task_progress_list,json=segmentTaskProgressList,proto3" json:"segment_task_progress_list"`
	VoteRecords             []*VoteData                                   `protobuf:"bytes,18,rep,name=vote_records,json=voteRecords,proto3" json:"vote_records"`
	SpotData                []*ActivitySpotData                           `protobuf:"bytes,19,rep,name=spot_data,json=spotData,proto3" json:"spot_data"`
	FriendGiftData          []*ActivityFriendGiftData                     `protobuf:"bytes,20,rep,name=friend_gift_data,json=friendGiftData,proto3" json:"friend_gift_data"`
	UpgradeData             []*ActivityUpgradeData                        `protobuf:"bytes,21,rep,name=upgrade_data,json=upgradeData,proto3" json:"upgrade_data"`
	GachaData               []*ActivityGachaUpdateData                    `protobuf:"bytes,22,rep,name=gacha_data,json=gachaData,proto3" json:"gacha_data"`
}

func (x *ResAccountActivityData) Reset() {
	*x = ResAccountActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[468]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountActivityData) ProtoMessage() {}

func (x *ResAccountActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[468]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountActivityData.ProtoReflect.Descriptor instead.
func (*ResAccountActivityData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{468}
}

func (x *ResAccountActivityData) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountActivityData) GetExchangeRecords() []*ExchangeRecord {
	if x != nil {
		return x.ExchangeRecords
	}
	return nil
}

func (x *ResAccountActivityData) GetTaskProgressList() []*TaskProgress {
	if x != nil {
		return x.TaskProgressList
	}
	return nil
}

func (x *ResAccountActivityData) GetAccumulatedPointList() []*ActivityAccumulatedPointData {
	if x != nil {
		return x.AccumulatedPointList
	}
	return nil
}

func (x *ResAccountActivityData) GetRankDataList() []*ActivityRankPointData {
	if x != nil {
		return x.RankDataList
	}
	return nil
}

func (x *ResAccountActivityData) GetFlipTaskProgressList() []*TaskProgress {
	if x != nil {
		return x.FlipTaskProgressList
	}
	return nil
}

func (x *ResAccountActivityData) GetSignInData() []*ResAccountActivityData_ActivitySignInData {
	if x != nil {
		return x.SignInData
	}
	return nil
}

func (x *ResAccountActivityData) GetRichmanData() []*ResAccountActivityData_ActivityRichmanData {
	if x != nil {
		return x.RichmanData
	}
	return nil
}

func (x *ResAccountActivityData) GetPeriodTaskProgressList() []*TaskProgress {
	if x != nil {
		return x.PeriodTaskProgressList
	}
	return nil
}

func (x *ResAccountActivityData) GetRandomTaskProgressList() []*TaskProgress {
	if x != nil {
		return x.RandomTaskProgressList
	}
	return nil
}

func (x *ResAccountActivityData) GetChestUpData() []*ResAccountActivityData_ChestUpData {
	if x != nil {
		return x.ChestUpData
	}
	return nil
}

func (x *ResAccountActivityData) GetSnsData() *ResAccountActivityData_ActivitySNSData {
	if x != nil {
		return x.SnsData
	}
	return nil
}

func (x *ResAccountActivityData) GetMineData() []*MineActivityData {
	if x != nil {
		return x.MineData
	}
	return nil
}

func (x *ResAccountActivityData) GetRpgData() []*RPGActivity {
	if x != nil {
		return x.RpgData
	}
	return nil
}

func (x *ResAccountActivityData) GetArenaData() []*ActivityArenaData {
	if x != nil {
		return x.ArenaData
	}
	return nil
}

func (x *ResAccountActivityData) GetFeedData() []*FeedActivityData {
	if x != nil {
		return x.FeedData
	}
	return nil
}

func (x *ResAccountActivityData) GetSegmentTaskProgressList() []*SegmentTaskProgress {
	if x != nil {
		return x.SegmentTaskProgressList
	}
	return nil
}

func (x *ResAccountActivityData) GetVoteRecords() []*VoteData {
	if x != nil {
		return x.VoteRecords
	}
	return nil
}

func (x *ResAccountActivityData) GetSpotData() []*ActivitySpotData {
	if x != nil {
		return x.SpotData
	}
	return nil
}

func (x *ResAccountActivityData) GetFriendGiftData() []*ActivityFriendGiftData {
	if x != nil {
		return x.FriendGiftData
	}
	return nil
}

func (x *ResAccountActivityData) GetUpgradeData() []*ActivityUpgradeData {
	if x != nil {
		return x.UpgradeData
	}
	return nil
}

func (x *ResAccountActivityData) GetGachaData() []*ActivityGachaUpdateData {
	if x != nil {
		return x.GachaData
	}
	return nil
}

type SNSBlog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ReadTime uint32 `protobuf:"varint,2,opt,name=read_time,json=readTime,proto3" json:"read_time"`
}

func (x *SNSBlog) Reset() {
	*x = SNSBlog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[469]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SNSBlog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SNSBlog) ProtoMessage() {}

func (x *SNSBlog) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[469]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SNSBlog.ProtoReflect.Descriptor instead.
func (*SNSBlog) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{469}
}

func (x *SNSBlog) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SNSBlog) GetReadTime() uint32 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

type SNSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ReplyTime uint32 `protobuf:"varint,2,opt,name=reply_time,json=replyTime,proto3" json:"reply_time"`
}

func (x *SNSReply) Reset() {
	*x = SNSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[470]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SNSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SNSReply) ProtoMessage() {}

func (x *SNSReply) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[470]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SNSReply.ProtoReflect.Descriptor instead.
func (*SNSReply) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{470}
}

func (x *SNSReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SNSReply) GetReplyTime() uint32 {
	if x != nil {
		return x.ReplyTime
	}
	return 0
}

type ReqExchangeActivityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeId uint32 `protobuf:"varint,1,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqExchangeActivityItem) Reset() {
	*x = ReqExchangeActivityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[471]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqExchangeActivityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqExchangeActivityItem) ProtoMessage() {}

func (x *ReqExchangeActivityItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[471]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqExchangeActivityItem.ProtoReflect.Descriptor instead.
func (*ReqExchangeActivityItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{471}
}

func (x *ReqExchangeActivityItem) GetExchangeId() uint32 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *ReqExchangeActivityItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResExchangeActivityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ExecuteReward []*ExecuteReward `protobuf:"bytes,2,rep,name=execute_reward,json=executeReward,proto3" json:"execute_reward"`
}

func (x *ResExchangeActivityItem) Reset() {
	*x = ResExchangeActivityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[472]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResExchangeActivityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResExchangeActivityItem) ProtoMessage() {}

func (x *ResExchangeActivityItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[472]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResExchangeActivityItem.ProtoReflect.Descriptor instead.
func (*ResExchangeActivityItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{472}
}

func (x *ResExchangeActivityItem) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResExchangeActivityItem) GetExecuteReward() []*ExecuteReward {
	if x != nil {
		return x.ExecuteReward
	}
	return nil
}

type ReqCompleteActivityTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id"`
}

func (x *ReqCompleteActivityTask) Reset() {
	*x = ReqCompleteActivityTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[473]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCompleteActivityTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCompleteActivityTask) ProtoMessage() {}

func (x *ReqCompleteActivityTask) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[473]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCompleteActivityTask.ProtoReflect.Descriptor instead.
func (*ReqCompleteActivityTask) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{473}
}

func (x *ReqCompleteActivityTask) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ReqCompletePeriodActivityTaskBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskList []uint32 `protobuf:"varint,1,rep,packed,name=task_list,json=taskList,proto3" json:"task_list"`
}

func (x *ReqCompletePeriodActivityTaskBatch) Reset() {
	*x = ReqCompletePeriodActivityTaskBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[474]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCompletePeriodActivityTaskBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCompletePeriodActivityTaskBatch) ProtoMessage() {}

func (x *ReqCompletePeriodActivityTaskBatch) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[474]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCompletePeriodActivityTaskBatch.ProtoReflect.Descriptor instead.
func (*ReqCompletePeriodActivityTaskBatch) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{474}
}

func (x *ReqCompletePeriodActivityTaskBatch) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type ReqReceiveActivityFlipTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id"`
}

func (x *ReqReceiveActivityFlipTask) Reset() {
	*x = ReqReceiveActivityFlipTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[475]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveActivityFlipTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveActivityFlipTask) ProtoMessage() {}

func (x *ReqReceiveActivityFlipTask) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[475]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveActivityFlipTask.ProtoReflect.Descriptor instead.
func (*ReqReceiveActivityFlipTask) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{475}
}

func (x *ReqReceiveActivityFlipTask) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ResReceiveActivityFlipTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ResReceiveActivityFlipTask) Reset() {
	*x = ResReceiveActivityFlipTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[476]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveActivityFlipTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveActivityFlipTask) ProtoMessage() {}

func (x *ResReceiveActivityFlipTask) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[476]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveActivityFlipTask.ProtoReflect.Descriptor instead.
func (*ResReceiveActivityFlipTask) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{476}
}

func (x *ResReceiveActivityFlipTask) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ResReceiveActivityFlipTask) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqCompleteSegmentTaskReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id"`
	Count  uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqCompleteSegmentTaskReward) Reset() {
	*x = ReqCompleteSegmentTaskReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[477]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCompleteSegmentTaskReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCompleteSegmentTaskReward) ProtoMessage() {}

func (x *ReqCompleteSegmentTaskReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[477]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCompleteSegmentTaskReward.ProtoReflect.Descriptor instead.
func (*ReqCompleteSegmentTaskReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{477}
}

func (x *ReqCompleteSegmentTaskReward) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ReqCompleteSegmentTaskReward) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResCompleteSegmentTaskReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rewards []*ExecuteReward `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
}

func (x *ResCompleteSegmentTaskReward) Reset() {
	*x = ResCompleteSegmentTaskReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[478]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCompleteSegmentTaskReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCompleteSegmentTaskReward) ProtoMessage() {}

func (x *ResCompleteSegmentTaskReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[478]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCompleteSegmentTaskReward.ProtoReflect.Descriptor instead.
func (*ResCompleteSegmentTaskReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{478}
}

func (x *ResCompleteSegmentTaskReward) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCompleteSegmentTaskReward) GetRewards() []*ExecuteReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ReqFetchActivityFlipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqFetchActivityFlipInfo) Reset() {
	*x = ReqFetchActivityFlipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[479]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchActivityFlipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchActivityFlipInfo) ProtoMessage() {}

func (x *ReqFetchActivityFlipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[479]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchActivityFlipInfo.ProtoReflect.Descriptor instead.
func (*ReqFetchActivityFlipInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{479}
}

func (x *ReqFetchActivityFlipInfo) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResFetchActivityFlipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []uint32 `protobuf:"varint,1,rep,packed,name=rewards,proto3" json:"rewards"`
	Count   uint32   `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	Error   *Error   `protobuf:"bytes,3,opt,name=error,proto3" json:"error"`
}

func (x *ResFetchActivityFlipInfo) Reset() {
	*x = ResFetchActivityFlipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[480]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchActivityFlipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchActivityFlipInfo) ProtoMessage() {}

func (x *ResFetchActivityFlipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[480]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchActivityFlipInfo.ProtoReflect.Descriptor instead.
func (*ResFetchActivityFlipInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{480}
}

func (x *ResFetchActivityFlipInfo) GetRewards() []uint32 {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ResFetchActivityFlipInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ResFetchActivityFlipInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqGainAccumulatedPointActivityReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	RewardId   uint32 `protobuf:"varint,2,opt,name=reward_id,json=rewardId,proto3" json:"reward_id"`
}

func (x *ReqGainAccumulatedPointActivityReward) Reset() {
	*x = ReqGainAccumulatedPointActivityReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[481]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGainAccumulatedPointActivityReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGainAccumulatedPointActivityReward) ProtoMessage() {}

func (x *ReqGainAccumulatedPointActivityReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[481]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGainAccumulatedPointActivityReward.ProtoReflect.Descriptor instead.
func (*ReqGainAccumulatedPointActivityReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{481}
}

func (x *ReqGainAccumulatedPointActivityReward) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqGainAccumulatedPointActivityReward) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

type ReqGainMultiPointActivityReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   uint32   `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	RewardIdList []uint32 `protobuf:"varint,2,rep,packed,name=reward_id_list,json=rewardIdList,proto3" json:"reward_id_list"`
}

func (x *ReqGainMultiPointActivityReward) Reset() {
	*x = ReqGainMultiPointActivityReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[482]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGainMultiPointActivityReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGainMultiPointActivityReward) ProtoMessage() {}

func (x *ReqGainMultiPointActivityReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[482]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGainMultiPointActivityReward.ProtoReflect.Descriptor instead.
func (*ReqGainMultiPointActivityReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{482}
}

func (x *ReqGainMultiPointActivityReward) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqGainMultiPointActivityReward) GetRewardIdList() []uint32 {
	if x != nil {
		return x.RewardIdList
	}
	return nil
}

type ReqFetchRankPointLeaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId,proto3" json:"leaderboard_id"`
}

func (x *ReqFetchRankPointLeaderboard) Reset() {
	*x = ReqFetchRankPointLeaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[483]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchRankPointLeaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchRankPointLeaderboard) ProtoMessage() {}

func (x *ReqFetchRankPointLeaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[483]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchRankPointLeaderboard.ProtoReflect.Descriptor instead.
func (*ReqFetchRankPointLeaderboard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{483}
}

func (x *ReqFetchRankPointLeaderboard) GetLeaderboardId() uint32 {
	if x != nil {
		return x.LeaderboardId
	}
	return 0
}

type ResFetchRankPointLeaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error                               `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items           []*ResFetchRankPointLeaderboard_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	LastRefreshTime uint32                               `protobuf:"varint,3,opt,name=last_refresh_time,json=lastRefreshTime,proto3" json:"last_refresh_time"`
}

func (x *ResFetchRankPointLeaderboard) Reset() {
	*x = ResFetchRankPointLeaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[484]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRankPointLeaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRankPointLeaderboard) ProtoMessage() {}

func (x *ResFetchRankPointLeaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[484]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRankPointLeaderboard.ProtoReflect.Descriptor instead.
func (*ResFetchRankPointLeaderboard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{484}
}

func (x *ResFetchRankPointLeaderboard) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchRankPointLeaderboard) GetItems() []*ResFetchRankPointLeaderboard_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResFetchRankPointLeaderboard) GetLastRefreshTime() uint32 {
	if x != nil {
		return x.LastRefreshTime
	}
	return 0
}

type ReqGainRankPointReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId,proto3" json:"leaderboard_id"`
	ActivityId    uint32 `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqGainRankPointReward) Reset() {
	*x = ReqGainRankPointReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[485]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGainRankPointReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGainRankPointReward) ProtoMessage() {}

func (x *ReqGainRankPointReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[485]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGainRankPointReward.ProtoReflect.Descriptor instead.
func (*ReqGainRankPointReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{485}
}

func (x *ReqGainRankPointReward) GetLeaderboardId() uint32 {
	if x != nil {
		return x.LeaderboardId
	}
	return 0
}

func (x *ReqGainRankPointReward) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ReqRichmanNextMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqRichmanNextMove) Reset() {
	*x = ReqRichmanNextMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[486]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRichmanNextMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRichmanNextMove) ProtoMessage() {}

func (x *ReqRichmanNextMove) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[486]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRichmanNextMove.ProtoReflect.Descriptor instead.
func (*ReqRichmanNextMove) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{486}
}

func (x *ReqRichmanNextMove) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResRichmanNextMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths         []*ResRichmanNextMove_PathData `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths"`
	Dice          uint32                         `protobuf:"varint,2,opt,name=dice,proto3" json:"dice"`
	Location      uint32                         `protobuf:"varint,3,opt,name=location,proto3" json:"location"`
	FinishedCount uint32                         `protobuf:"varint,4,opt,name=finished_count,json=finishedCount,proto3" json:"finished_count"`
	Step          uint32                         `protobuf:"varint,5,opt,name=step,proto3" json:"step"`
	Buff          []*ResRichmanNextMove_BuffData `protobuf:"bytes,6,rep,name=buff,proto3" json:"buff"`
	BankSave      uint32                         `protobuf:"varint,7,opt,name=bank_save,json=bankSave,proto3" json:"bank_save"`
	ChestPosition uint32                         `protobuf:"varint,8,opt,name=chest_position,json=chestPosition,proto3" json:"chest_position"`
	Exp           uint32                         `protobuf:"varint,9,opt,name=exp,proto3" json:"exp"`
	BankSaveAdd   uint32                         `protobuf:"varint,10,opt,name=bank_save_add,json=bankSaveAdd,proto3" json:"bank_save_add"`
	Error         *Error                         `protobuf:"bytes,11,opt,name=error,proto3" json:"error"`
}

func (x *ResRichmanNextMove) Reset() {
	*x = ResRichmanNextMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[487]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRichmanNextMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRichmanNextMove) ProtoMessage() {}

func (x *ResRichmanNextMove) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[487]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRichmanNextMove.ProtoReflect.Descriptor instead.
func (*ResRichmanNextMove) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{487}
}

func (x *ResRichmanNextMove) GetPaths() []*ResRichmanNextMove_PathData {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *ResRichmanNextMove) GetDice() uint32 {
	if x != nil {
		return x.Dice
	}
	return 0
}

func (x *ResRichmanNextMove) GetLocation() uint32 {
	if x != nil {
		return x.Location
	}
	return 0
}

func (x *ResRichmanNextMove) GetFinishedCount() uint32 {
	if x != nil {
		return x.FinishedCount
	}
	return 0
}

func (x *ResRichmanNextMove) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ResRichmanNextMove) GetBuff() []*ResRichmanNextMove_BuffData {
	if x != nil {
		return x.Buff
	}
	return nil
}

func (x *ResRichmanNextMove) GetBankSave() uint32 {
	if x != nil {
		return x.BankSave
	}
	return 0
}

func (x *ResRichmanNextMove) GetChestPosition() uint32 {
	if x != nil {
		return x.ChestPosition
	}
	return 0
}

func (x *ResRichmanNextMove) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *ResRichmanNextMove) GetBankSaveAdd() uint32 {
	if x != nil {
		return x.BankSaveAdd
	}
	return 0
}

func (x *ResRichmanNextMove) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqRichmanSpecialMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Step       uint32 `protobuf:"varint,2,opt,name=step,proto3" json:"step"`
}

func (x *ReqRichmanSpecialMove) Reset() {
	*x = ReqRichmanSpecialMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[488]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRichmanSpecialMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRichmanSpecialMove) ProtoMessage() {}

func (x *ReqRichmanSpecialMove) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[488]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRichmanSpecialMove.ProtoReflect.Descriptor instead.
func (*ReqRichmanSpecialMove) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{488}
}

func (x *ReqRichmanSpecialMove) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqRichmanSpecialMove) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

type ReqRichmanChestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqRichmanChestInfo) Reset() {
	*x = ReqRichmanChestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[489]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRichmanChestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRichmanChestInfo) ProtoMessage() {}

func (x *ReqRichmanChestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[489]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRichmanChestInfo.ProtoReflect.Descriptor instead.
func (*ReqRichmanChestInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{489}
}

func (x *ReqRichmanChestInfo) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResRichmanChestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ResRichmanChestInfo_ItemData `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
	Error *Error                          `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ResRichmanChestInfo) Reset() {
	*x = ResRichmanChestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[490]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRichmanChestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRichmanChestInfo) ProtoMessage() {}

func (x *ResRichmanChestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[490]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRichmanChestInfo.ProtoReflect.Descriptor instead.
func (*ResRichmanChestInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{490}
}

func (x *ResRichmanChestInfo) GetItems() []*ResRichmanChestInfo_ItemData {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResRichmanChestInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqCreateGameObserveAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUuid string `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
}

func (x *ReqCreateGameObserveAuth) Reset() {
	*x = ReqCreateGameObserveAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[491]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateGameObserveAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateGameObserveAuth) ProtoMessage() {}

func (x *ReqCreateGameObserveAuth) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[491]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateGameObserveAuth.ProtoReflect.Descriptor instead.
func (*ReqCreateGameObserveAuth) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{491}
}

func (x *ReqCreateGameObserveAuth) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

type ResCreateGameObserveAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location"`
}

func (x *ResCreateGameObserveAuth) Reset() {
	*x = ResCreateGameObserveAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[492]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateGameObserveAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateGameObserveAuth) ProtoMessage() {}

func (x *ResCreateGameObserveAuth) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[492]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateGameObserveAuth.ProtoReflect.Descriptor instead.
func (*ResCreateGameObserveAuth) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{492}
}

func (x *ResCreateGameObserveAuth) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateGameObserveAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResCreateGameObserveAuth) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type ReqRefreshGameObserveAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
}

func (x *ReqRefreshGameObserveAuth) Reset() {
	*x = ReqRefreshGameObserveAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[493]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRefreshGameObserveAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRefreshGameObserveAuth) ProtoMessage() {}

func (x *ReqRefreshGameObserveAuth) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[493]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRefreshGameObserveAuth.ProtoReflect.Descriptor instead.
func (*ReqRefreshGameObserveAuth) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{493}
}

func (x *ReqRefreshGameObserveAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ResRefreshGameObserveAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Ttl   uint32 `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl"`
}

func (x *ResRefreshGameObserveAuth) Reset() {
	*x = ResRefreshGameObserveAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[494]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRefreshGameObserveAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRefreshGameObserveAuth) ProtoMessage() {}

func (x *ResRefreshGameObserveAuth) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[494]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRefreshGameObserveAuth.ProtoReflect.Descriptor instead.
func (*ResRefreshGameObserveAuth) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{494}
}

func (x *ResRefreshGameObserveAuth) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResRefreshGameObserveAuth) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type ResActivityBuff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error              `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	BuffList []*ActivityBuffData `protobuf:"bytes,2,rep,name=buff_list,json=buffList,proto3" json:"buff_list"`
}

func (x *ResActivityBuff) Reset() {
	*x = ResActivityBuff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[495]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResActivityBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResActivityBuff) ProtoMessage() {}

func (x *ResActivityBuff) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[495]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResActivityBuff.ProtoReflect.Descriptor instead.
func (*ResActivityBuff) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{495}
}

func (x *ResActivityBuff) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResActivityBuff) GetBuffList() []*ActivityBuffData {
	if x != nil {
		return x.BuffList
	}
	return nil
}

type ReqUpgradeActivityBuff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuffId uint32 `protobuf:"varint,1,opt,name=buff_id,json=buffId,proto3" json:"buff_id"`
}

func (x *ReqUpgradeActivityBuff) Reset() {
	*x = ReqUpgradeActivityBuff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[496]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpgradeActivityBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpgradeActivityBuff) ProtoMessage() {}

func (x *ReqUpgradeActivityBuff) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[496]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpgradeActivityBuff.ProtoReflect.Descriptor instead.
func (*ReqUpgradeActivityBuff) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{496}
}

func (x *ReqUpgradeActivityBuff) GetBuffId() uint32 {
	if x != nil {
		return x.BuffId
	}
	return 0
}

type ReqUpgradeActivityLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Group      uint32 `protobuf:"varint,2,opt,name=group,proto3" json:"group"`
	Count      uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
}

func (x *ReqUpgradeActivityLevel) Reset() {
	*x = ReqUpgradeActivityLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[497]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpgradeActivityLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpgradeActivityLevel) ProtoMessage() {}

func (x *ReqUpgradeActivityLevel) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[497]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpgradeActivityLevel.ProtoReflect.Descriptor instead.
func (*ReqUpgradeActivityLevel) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{497}
}

func (x *ReqUpgradeActivityLevel) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqUpgradeActivityLevel) GetGroup() uint32 {
	if x != nil {
		return x.Group
	}
	return 0
}

func (x *ReqUpgradeActivityLevel) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResUpgradeActivityLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rewards []*ExecuteReward `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
}

func (x *ResUpgradeActivityLevel) Reset() {
	*x = ResUpgradeActivityLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[498]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpgradeActivityLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpgradeActivityLevel) ProtoMessage() {}

func (x *ResUpgradeActivityLevel) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[498]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpgradeActivityLevel.ProtoReflect.Descriptor instead.
func (*ResUpgradeActivityLevel) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{498}
}

func (x *ResUpgradeActivityLevel) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResUpgradeActivityLevel) GetRewards() []*ExecuteReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ReqReceiveUpgradeActivityReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqReceiveUpgradeActivityReward) Reset() {
	*x = ReqReceiveUpgradeActivityReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[499]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveUpgradeActivityReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveUpgradeActivityReward) ProtoMessage() {}

func (x *ReqReceiveUpgradeActivityReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[499]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveUpgradeActivityReward.ProtoReflect.Descriptor instead.
func (*ReqReceiveUpgradeActivityReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{499}
}

func (x *ReqReceiveUpgradeActivityReward) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResReceiveUpgradeActivityReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rewards []*ExecuteReward `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
}

func (x *ResReceiveUpgradeActivityReward) Reset() {
	*x = ResReceiveUpgradeActivityReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[500]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveUpgradeActivityReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveUpgradeActivityReward) ProtoMessage() {}

func (x *ResReceiveUpgradeActivityReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[500]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveUpgradeActivityReward.ProtoReflect.Descriptor instead.
func (*ResReceiveUpgradeActivityReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{500}
}

func (x *ResReceiveUpgradeActivityReward) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReceiveUpgradeActivityReward) GetRewards() []*ExecuteReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ReqReceiveAllActivityGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqReceiveAllActivityGift) Reset() {
	*x = ReqReceiveAllActivityGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[501]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveAllActivityGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveAllActivityGift) ProtoMessage() {}

func (x *ReqReceiveAllActivityGift) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[501]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveAllActivityGift.ProtoReflect.Descriptor instead.
func (*ReqReceiveAllActivityGift) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{501}
}

func (x *ReqReceiveAllActivityGift) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResReceiveAllActivityGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error                                      `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rewards     []*ExecuteReward                            `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
	ReceiveGift []*ResReceiveAllActivityGift_ReceiveRewards `protobuf:"bytes,3,rep,name=receive_gift,json=receiveGift,proto3" json:"receive_gift"`
}

func (x *ResReceiveAllActivityGift) Reset() {
	*x = ResReceiveAllActivityGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[502]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveAllActivityGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveAllActivityGift) ProtoMessage() {}

func (x *ResReceiveAllActivityGift) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[502]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveAllActivityGift.ProtoReflect.Descriptor instead.
func (*ResReceiveAllActivityGift) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{502}
}

func (x *ResReceiveAllActivityGift) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReceiveAllActivityGift) GetRewards() []*ExecuteReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ResReceiveAllActivityGift) GetReceiveGift() []*ResReceiveAllActivityGift_ReceiveRewards {
	if x != nil {
		return x.ReceiveGift
	}
	return nil
}

type ResUpgradeChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	TaskProgress []*TaskProgress `protobuf:"bytes,2,rep,name=task_progress,json=taskProgress,proto3" json:"task_progress"`
	RefreshCount uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count"`
	Level        uint32          `protobuf:"varint,4,opt,name=level,proto3" json:"level"`
	MatchCount   uint32          `protobuf:"varint,5,opt,name=match_count,json=matchCount,proto3" json:"match_count"`
	TicketId     uint32          `protobuf:"varint,6,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id"`
}

func (x *ResUpgradeChallenge) Reset() {
	*x = ResUpgradeChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[503]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpgradeChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpgradeChallenge) ProtoMessage() {}

func (x *ResUpgradeChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[503]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpgradeChallenge.ProtoReflect.Descriptor instead.
func (*ResUpgradeChallenge) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{503}
}

func (x *ResUpgradeChallenge) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResUpgradeChallenge) GetTaskProgress() []*TaskProgress {
	if x != nil {
		return x.TaskProgress
	}
	return nil
}

func (x *ResUpgradeChallenge) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

func (x *ResUpgradeChallenge) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ResUpgradeChallenge) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *ResUpgradeChallenge) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

type ResRefreshChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	TaskProgress []*TaskProgress `protobuf:"bytes,2,rep,name=task_progress,json=taskProgress,proto3" json:"task_progress"`
	RefreshCount uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count"`
	Level        uint32          `protobuf:"varint,4,opt,name=level,proto3" json:"level"`
	MatchCount   uint32          `protobuf:"varint,5,opt,name=match_count,json=matchCount,proto3" json:"match_count"`
	TicketId     uint32          `protobuf:"varint,6,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id"`
}

func (x *ResRefreshChallenge) Reset() {
	*x = ResRefreshChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[504]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRefreshChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRefreshChallenge) ProtoMessage() {}

func (x *ResRefreshChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[504]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRefreshChallenge.ProtoReflect.Descriptor instead.
func (*ResRefreshChallenge) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{504}
}

func (x *ResRefreshChallenge) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResRefreshChallenge) GetTaskProgress() []*TaskProgress {
	if x != nil {
		return x.TaskProgress
	}
	return nil
}

func (x *ResRefreshChallenge) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

func (x *ResRefreshChallenge) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ResRefreshChallenge) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *ResRefreshChallenge) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

type ResFetchChallengeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	TaskProgress   []*TaskProgress `protobuf:"bytes,2,rep,name=task_progress,json=taskProgress,proto3" json:"task_progress"`
	RefreshCount   uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count"`
	Level          uint32          `protobuf:"varint,4,opt,name=level,proto3" json:"level"`
	MatchCount     uint32          `protobuf:"varint,5,opt,name=match_count,json=matchCount,proto3" json:"match_count"`
	TicketId       uint32          `protobuf:"varint,6,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id"`
	RewardedSeason []uint32        `protobuf:"varint,7,rep,packed,name=rewarded_season,json=rewardedSeason,proto3" json:"rewarded_season"`
}

func (x *ResFetchChallengeInfo) Reset() {
	*x = ResFetchChallengeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[505]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchChallengeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchChallengeInfo) ProtoMessage() {}

func (x *ResFetchChallengeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[505]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchChallengeInfo.ProtoReflect.Descriptor instead.
func (*ResFetchChallengeInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{505}
}

func (x *ResFetchChallengeInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchChallengeInfo) GetTaskProgress() []*TaskProgress {
	if x != nil {
		return x.TaskProgress
	}
	return nil
}

func (x *ResFetchChallengeInfo) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

func (x *ResFetchChallengeInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ResFetchChallengeInfo) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *ResFetchChallengeInfo) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *ResFetchChallengeInfo) GetRewardedSeason() []uint32 {
	if x != nil {
		return x.RewardedSeason
	}
	return nil
}

type ReqForceCompleteChallengeTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id"`
}

func (x *ReqForceCompleteChallengeTask) Reset() {
	*x = ReqForceCompleteChallengeTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[506]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqForceCompleteChallengeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqForceCompleteChallengeTask) ProtoMessage() {}

func (x *ReqForceCompleteChallengeTask) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[506]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqForceCompleteChallengeTask.ProtoReflect.Descriptor instead.
func (*ReqForceCompleteChallengeTask) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{506}
}

func (x *ReqForceCompleteChallengeTask) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ResFetchABMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error                        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	MatchId       uint32                        `protobuf:"varint,2,opt,name=match_id,json=matchId,proto3" json:"match_id"`
	MatchCount    uint32                        `protobuf:"varint,3,opt,name=match_count,json=matchCount,proto3" json:"match_count"`
	BuyInCount    uint32                        `protobuf:"varint,4,opt,name=buy_in_count,json=buyInCount,proto3" json:"buy_in_count"`
	Point         uint32                        `protobuf:"varint,5,opt,name=point,proto3" json:"point"`
	Rewarded      bool                          `protobuf:"varint,6,opt,name=rewarded,proto3" json:"rewarded"`
	MatchMaxPoint []*ResFetchABMatch_MatchPoint `protobuf:"bytes,7,rep,name=match_max_point,json=matchMaxPoint,proto3" json:"match_max_point"`
	Quit          bool                          `protobuf:"varint,8,opt,name=quit,proto3" json:"quit"`
}

func (x *ResFetchABMatch) Reset() {
	*x = ResFetchABMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[507]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchABMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchABMatch) ProtoMessage() {}

func (x *ResFetchABMatch) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[507]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchABMatch.ProtoReflect.Descriptor instead.
func (*ResFetchABMatch) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{507}
}

func (x *ResFetchABMatch) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchABMatch) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *ResFetchABMatch) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *ResFetchABMatch) GetBuyInCount() uint32 {
	if x != nil {
		return x.BuyInCount
	}
	return 0
}

func (x *ResFetchABMatch) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *ResFetchABMatch) GetRewarded() bool {
	if x != nil {
		return x.Rewarded
	}
	return false
}

func (x *ResFetchABMatch) GetMatchMaxPoint() []*ResFetchABMatch_MatchPoint {
	if x != nil {
		return x.MatchMaxPoint
	}
	return nil
}

func (x *ResFetchABMatch) GetQuit() bool {
	if x != nil {
		return x.Quit
	}
	return false
}

type ReqStartUnifiedMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchSid            string `protobuf:"bytes,1,opt,name=match_sid,json=matchSid,proto3" json:"match_sid"`
	ClientVersionString string `protobuf:"bytes,2,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
}

func (x *ReqStartUnifiedMatch) Reset() {
	*x = ReqStartUnifiedMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[508]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqStartUnifiedMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqStartUnifiedMatch) ProtoMessage() {}

func (x *ReqStartUnifiedMatch) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[508]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqStartUnifiedMatch.ProtoReflect.Descriptor instead.
func (*ReqStartUnifiedMatch) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{508}
}

func (x *ReqStartUnifiedMatch) GetMatchSid() string {
	if x != nil {
		return x.MatchSid
	}
	return ""
}

func (x *ReqStartUnifiedMatch) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

type ReqCancelUnifiedMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchSid string `protobuf:"bytes,1,opt,name=match_sid,json=matchSid,proto3" json:"match_sid"`
}

func (x *ReqCancelUnifiedMatch) Reset() {
	*x = ReqCancelUnifiedMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[509]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCancelUnifiedMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCancelUnifiedMatch) ProtoMessage() {}

func (x *ReqCancelUnifiedMatch) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[509]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCancelUnifiedMatch.ProtoReflect.Descriptor instead.
func (*ReqCancelUnifiedMatch) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{509}
}

func (x *ReqCancelUnifiedMatch) GetMatchSid() string {
	if x != nil {
		return x.MatchSid
	}
	return ""
}

type ResChallengeSeasonInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error               *Error                                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	ChallengeSeasonList []*ResChallengeSeasonInfo_ChallengeInfo `protobuf:"bytes,1,rep,name=challenge_season_list,json=challengeSeasonList,proto3" json:"challenge_season_list"`
}

func (x *ResChallengeSeasonInfo) Reset() {
	*x = ResChallengeSeasonInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[510]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResChallengeSeasonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResChallengeSeasonInfo) ProtoMessage() {}

func (x *ResChallengeSeasonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[510]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResChallengeSeasonInfo.ProtoReflect.Descriptor instead.
func (*ResChallengeSeasonInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{510}
}

func (x *ResChallengeSeasonInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResChallengeSeasonInfo) GetChallengeSeasonList() []*ResChallengeSeasonInfo_ChallengeInfo {
	if x != nil {
		return x.ChallengeSeasonList
	}
	return nil
}

type ReqReceiveChallengeRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId uint32 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id"`
}

func (x *ReqReceiveChallengeRankReward) Reset() {
	*x = ReqReceiveChallengeRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[511]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveChallengeRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveChallengeRankReward) ProtoMessage() {}

func (x *ReqReceiveChallengeRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[511]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveChallengeRankReward.ProtoReflect.Descriptor instead.
func (*ReqReceiveChallengeRankReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{511}
}

func (x *ReqReceiveChallengeRankReward) GetSeasonId() uint32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type ResReceiveChallengeRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error                                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	Rewards []*ResReceiveChallengeRankReward_Reward `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards"`
}

func (x *ResReceiveChallengeRankReward) Reset() {
	*x = ResReceiveChallengeRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[512]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveChallengeRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveChallengeRankReward) ProtoMessage() {}

func (x *ResReceiveChallengeRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[512]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveChallengeRankReward.ProtoReflect.Descriptor instead.
func (*ResReceiveChallengeRankReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{512}
}

func (x *ResReceiveChallengeRankReward) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReceiveChallengeRankReward) GetRewards() []*ResReceiveChallengeRankReward_Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ReqBuyInABMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId uint32 `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id"`
}

func (x *ReqBuyInABMatch) Reset() {
	*x = ReqBuyInABMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[513]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBuyInABMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBuyInABMatch) ProtoMessage() {}

func (x *ReqBuyInABMatch) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[513]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBuyInABMatch.ProtoReflect.Descriptor instead.
func (*ReqBuyInABMatch) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{513}
}

func (x *ReqBuyInABMatch) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

type ReqGamePointRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqGamePointRank) Reset() {
	*x = ReqGamePointRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[514]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGamePointRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGamePointRank) ProtoMessage() {}

func (x *ReqGamePointRank) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[514]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGamePointRank.ProtoReflect.Descriptor instead.
func (*ReqGamePointRank) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{514}
}

func (x *ReqGamePointRank) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResGamePointRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error                       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Rank     []*ResGamePointRank_RankInfo `protobuf:"bytes,2,rep,name=rank,proto3" json:"rank"`
	SelfRank uint32                       `protobuf:"varint,3,opt,name=self_rank,json=selfRank,proto3" json:"self_rank"`
}

func (x *ResGamePointRank) Reset() {
	*x = ResGamePointRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[515]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGamePointRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGamePointRank) ProtoMessage() {}

func (x *ResGamePointRank) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[515]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGamePointRank.ProtoReflect.Descriptor instead.
func (*ResGamePointRank) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{515}
}

func (x *ResGamePointRank) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResGamePointRank) GetRank() []*ResGamePointRank_RankInfo {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *ResGamePointRank) GetSelfRank() uint32 {
	if x != nil {
		return x.SelfRank
	}
	return 0
}

type ResFetchSelfGamePointRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	SelfRate uint32 `protobuf:"varint,2,opt,name=self_rate,json=selfRate,proto3" json:"self_rate"`
}

func (x *ResFetchSelfGamePointRank) Reset() {
	*x = ResFetchSelfGamePointRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[516]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchSelfGamePointRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchSelfGamePointRank) ProtoMessage() {}

func (x *ResFetchSelfGamePointRank) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[516]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchSelfGamePointRank.ProtoReflect.Descriptor instead.
func (*ResFetchSelfGamePointRank) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{516}
}

func (x *ResFetchSelfGamePointRank) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchSelfGamePointRank) GetSelfRate() uint32 {
	if x != nil {
		return x.SelfRate
	}
	return 0
}

type ReqReadSNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *ReqReadSNS) Reset() {
	*x = ReqReadSNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[517]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReadSNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReadSNS) ProtoMessage() {}

func (x *ReqReadSNS) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[517]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReadSNS.ProtoReflect.Descriptor instead.
func (*ReqReadSNS) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{517}
}

func (x *ReqReadSNS) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResReadSNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	SnsContent *SNSBlog `protobuf:"bytes,2,opt,name=sns_content,json=snsContent,proto3" json:"sns_content"`
}

func (x *ResReadSNS) Reset() {
	*x = ResReadSNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[518]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReadSNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReadSNS) ProtoMessage() {}

func (x *ResReadSNS) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[518]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReadSNS.ProtoReflect.Descriptor instead.
func (*ResReadSNS) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{518}
}

func (x *ResReadSNS) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReadSNS) GetSnsContent() *SNSBlog {
	if x != nil {
		return x.SnsContent
	}
	return nil
}

type ReqReplySNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *ReqReplySNS) Reset() {
	*x = ReqReplySNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[519]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReplySNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReplySNS) ProtoMessage() {}

func (x *ReqReplySNS) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[519]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReplySNS.ProtoReflect.Descriptor instead.
func (*ReqReplySNS) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{519}
}

func (x *ReqReplySNS) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResReplySNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error    `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	SnsReply *SNSReply `protobuf:"bytes,2,opt,name=sns_reply,json=snsReply,proto3" json:"sns_reply"`
}

func (x *ResReplySNS) Reset() {
	*x = ResReplySNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[520]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReplySNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReplySNS) ProtoMessage() {}

func (x *ResReplySNS) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[520]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReplySNS.ProtoReflect.Descriptor instead.
func (*ResReplySNS) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{520}
}

func (x *ResReplySNS) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReplySNS) GetSnsReply() *SNSReply {
	if x != nil {
		return x.SnsReply
	}
	return nil
}

type ReqLikeSNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *ReqLikeSNS) Reset() {
	*x = ReqLikeSNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[521]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLikeSNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLikeSNS) ProtoMessage() {}

func (x *ReqLikeSNS) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[521]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLikeSNS.ProtoReflect.Descriptor instead.
func (*ReqLikeSNS) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{521}
}

func (x *ReqLikeSNS) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResLikeSNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	IsLiked uint32 `protobuf:"varint,2,opt,name=is_liked,json=isLiked,proto3" json:"is_liked"`
}

func (x *ResLikeSNS) Reset() {
	*x = ResLikeSNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[522]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResLikeSNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResLikeSNS) ProtoMessage() {}

func (x *ResLikeSNS) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[522]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResLikeSNS.ProtoReflect.Descriptor instead.
func (*ResLikeSNS) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{522}
}

func (x *ResLikeSNS) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResLikeSNS) GetIsLiked() uint32 {
	if x != nil {
		return x.IsLiked
	}
	return 0
}

type ReqDigMine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Point      *Point `protobuf:"bytes,2,opt,name=point,proto3" json:"point"`
}

func (x *ReqDigMine) Reset() {
	*x = ReqDigMine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[523]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDigMine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDigMine) ProtoMessage() {}

func (x *ReqDigMine) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[523]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDigMine.ProtoReflect.Descriptor instead.
func (*ReqDigMine) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{523}
}

func (x *ReqDigMine) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqDigMine) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

type ResDigMine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Map    []*MineReward `protobuf:"bytes,2,rep,name=map,proto3" json:"map"`
	Reward []*RewardSlot `protobuf:"bytes,3,rep,name=reward,proto3" json:"reward"`
}

func (x *ResDigMine) Reset() {
	*x = ResDigMine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[524]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDigMine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDigMine) ProtoMessage() {}

func (x *ResDigMine) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[524]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDigMine.ProtoReflect.Descriptor instead.
func (*ResDigMine) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{524}
}

func (x *ResDigMine) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResDigMine) GetMap() []*MineReward {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *ResDigMine) GetReward() []*RewardSlot {
	if x != nil {
		return x.Reward
	}
	return nil
}

type ReqFetchLastPrivacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type []uint32 `protobuf:"varint,1,rep,packed,name=type,proto3" json:"type"`
}

func (x *ReqFetchLastPrivacy) Reset() {
	*x = ReqFetchLastPrivacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[525]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchLastPrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchLastPrivacy) ProtoMessage() {}

func (x *ReqFetchLastPrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[525]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchLastPrivacy.ProtoReflect.Descriptor instead.
func (*ReqFetchLastPrivacy) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{525}
}

func (x *ReqFetchLastPrivacy) GetType() []uint32 {
	if x != nil {
		return x.Type
	}
	return nil
}

type ResFetchLastPrivacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error                             `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Privacy []*ResFetchLastPrivacy_PrivacyInfo `protobuf:"bytes,2,rep,name=privacy,proto3" json:"privacy"`
}

func (x *ResFetchLastPrivacy) Reset() {
	*x = ResFetchLastPrivacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[526]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchLastPrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchLastPrivacy) ProtoMessage() {}

func (x *ResFetchLastPrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[526]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchLastPrivacy.ProtoReflect.Descriptor instead.
func (*ResFetchLastPrivacy) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{526}
}

func (x *ResFetchLastPrivacy) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchLastPrivacy) GetPrivacy() []*ResFetchLastPrivacy_PrivacyInfo {
	if x != nil {
		return x.Privacy
	}
	return nil
}

type ReqCheckPrivacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceType string                      `protobuf:"bytes,1,opt,name=device_type,json=deviceType,proto3" json:"device_type"`
	Versions   []*ReqCheckPrivacy_Versions `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions"`
}

func (x *ReqCheckPrivacy) Reset() {
	*x = ReqCheckPrivacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[527]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCheckPrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCheckPrivacy) ProtoMessage() {}

func (x *ReqCheckPrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[527]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCheckPrivacy.ProtoReflect.Descriptor instead.
func (*ReqCheckPrivacy) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{527}
}

func (x *ReqCheckPrivacy) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *ReqCheckPrivacy) GetVersions() []*ReqCheckPrivacy_Versions {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ReqResponseCaptcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckId             uint32 `protobuf:"varint,1,opt,name=check_id,json=checkId,proto3" json:"check_id"`
	CheckTime           uint32 `protobuf:"varint,2,opt,name=check_time,json=checkTime,proto3" json:"check_time"`
	Result              string `protobuf:"bytes,3,opt,name=result,proto3" json:"result"`
	ClientVersionString string `protobuf:"bytes,4,opt,name=client_version_string,json=clientVersionString,proto3" json:"client_version_string"`
	Type                uint32 `protobuf:"varint,5,opt,name=type,proto3" json:"type"`
}

func (x *ReqResponseCaptcha) Reset() {
	*x = ReqResponseCaptcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[528]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqResponseCaptcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqResponseCaptcha) ProtoMessage() {}

func (x *ReqResponseCaptcha) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[528]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqResponseCaptcha.ProtoReflect.Descriptor instead.
func (*ReqResponseCaptcha) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{528}
}

func (x *ReqResponseCaptcha) GetCheckId() uint32 {
	if x != nil {
		return x.CheckId
	}
	return 0
}

func (x *ReqResponseCaptcha) GetCheckTime() uint32 {
	if x != nil {
		return x.CheckTime
	}
	return 0
}

func (x *ReqResponseCaptcha) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ReqResponseCaptcha) GetClientVersionString() string {
	if x != nil {
		return x.ClientVersionString
	}
	return ""
}

func (x *ReqResponseCaptcha) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ReqFetchRPGBattleHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqFetchRPGBattleHistory) Reset() {
	*x = ReqFetchRPGBattleHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[529]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchRPGBattleHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchRPGBattleHistory) ProtoMessage() {}

func (x *ReqFetchRPGBattleHistory) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[529]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchRPGBattleHistory.ProtoReflect.Descriptor instead.
func (*ReqFetchRPGBattleHistory) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{529}
}

func (x *ReqFetchRPGBattleHistory) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResFetchRPGBattleHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error                                   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	BattleResult []*ResFetchRPGBattleHistory_BattleResult `protobuf:"bytes,2,rep,name=battle_result,json=battleResult,proto3" json:"battle_result"`
	StartState   *RPGState                                `protobuf:"bytes,3,opt,name=start_state,json=startState,proto3" json:"start_state"`
	CurrentState *RPGState                                `protobuf:"bytes,4,opt,name=current_state,json=currentState,proto3" json:"current_state"`
}

func (x *ResFetchRPGBattleHistory) Reset() {
	*x = ResFetchRPGBattleHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[530]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRPGBattleHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRPGBattleHistory) ProtoMessage() {}

func (x *ResFetchRPGBattleHistory) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[530]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRPGBattleHistory.ProtoReflect.Descriptor instead.
func (*ResFetchRPGBattleHistory) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{530}
}

func (x *ResFetchRPGBattleHistory) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchRPGBattleHistory) GetBattleResult() []*ResFetchRPGBattleHistory_BattleResult {
	if x != nil {
		return x.BattleResult
	}
	return nil
}

func (x *ResFetchRPGBattleHistory) GetStartState() *RPGState {
	if x != nil {
		return x.StartState
	}
	return nil
}

func (x *ResFetchRPGBattleHistory) GetCurrentState() *RPGState {
	if x != nil {
		return x.CurrentState
	}
	return nil
}

type ResFetchRPGBattleHistoryV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error              *Error                                       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	BattleResult       []*ResFetchRPGBattleHistoryV2_BattleResultV2 `protobuf:"bytes,2,rep,name=battle_result,json=battleResult,proto3" json:"battle_result"`
	StartState         *RPGState                                    `protobuf:"bytes,3,opt,name=start_state,json=startState,proto3" json:"start_state"`
	CurrentState       *RPGState                                    `protobuf:"bytes,4,opt,name=current_state,json=currentState,proto3" json:"current_state"`
	RecentBattleResult []*ResFetchRPGBattleHistoryV2_BattleResultV2 `protobuf:"bytes,5,rep,name=recent_battle_result,json=recentBattleResult,proto3" json:"recent_battle_result"`
}

func (x *ResFetchRPGBattleHistoryV2) Reset() {
	*x = ResFetchRPGBattleHistoryV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[531]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRPGBattleHistoryV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRPGBattleHistoryV2) ProtoMessage() {}

func (x *ResFetchRPGBattleHistoryV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[531]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRPGBattleHistoryV2.ProtoReflect.Descriptor instead.
func (*ResFetchRPGBattleHistoryV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{531}
}

func (x *ResFetchRPGBattleHistoryV2) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchRPGBattleHistoryV2) GetBattleResult() []*ResFetchRPGBattleHistoryV2_BattleResultV2 {
	if x != nil {
		return x.BattleResult
	}
	return nil
}

func (x *ResFetchRPGBattleHistoryV2) GetStartState() *RPGState {
	if x != nil {
		return x.StartState
	}
	return nil
}

func (x *ResFetchRPGBattleHistoryV2) GetCurrentState() *RPGState {
	if x != nil {
		return x.CurrentState
	}
	return nil
}

func (x *ResFetchRPGBattleHistoryV2) GetRecentBattleResult() []*ResFetchRPGBattleHistoryV2_BattleResultV2 {
	if x != nil {
		return x.RecentBattleResult
	}
	return nil
}

type ReqBuyArenaTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqBuyArenaTicket) Reset() {
	*x = ReqBuyArenaTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[532]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBuyArenaTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBuyArenaTicket) ProtoMessage() {}

func (x *ReqBuyArenaTicket) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[532]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBuyArenaTicket.ProtoReflect.Descriptor instead.
func (*ReqBuyArenaTicket) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{532}
}

func (x *ReqBuyArenaTicket) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ReqArenaReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqArenaReward) Reset() {
	*x = ReqArenaReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[533]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqArenaReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqArenaReward) ProtoMessage() {}

func (x *ReqArenaReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[533]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqArenaReward.ProtoReflect.Descriptor instead.
func (*ReqArenaReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{533}
}

func (x *ReqArenaReward) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ReqEnterArena struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqEnterArena) Reset() {
	*x = ReqEnterArena{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[534]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEnterArena) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEnterArena) ProtoMessage() {}

func (x *ReqEnterArena) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[534]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEnterArena.ProtoReflect.Descriptor instead.
func (*ReqEnterArena) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{534}
}

func (x *ReqEnterArena) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResArenaReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error                       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items []*ResArenaReward_RewardItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *ResArenaReward) Reset() {
	*x = ResArenaReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[535]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResArenaReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResArenaReward) ProtoMessage() {}

func (x *ResArenaReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[535]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResArenaReward.ProtoReflect.Descriptor instead.
func (*ResArenaReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{535}
}

func (x *ResArenaReward) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResArenaReward) GetItems() []*ResArenaReward_RewardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReqReceiveRPGRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqReceiveRPGRewards) Reset() {
	*x = ReqReceiveRPGRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[536]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveRPGRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveRPGRewards) ProtoMessage() {}

func (x *ReqReceiveRPGRewards) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[536]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveRPGRewards.ProtoReflect.Descriptor instead.
func (*ReqReceiveRPGRewards) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{536}
}

func (x *ReqReceiveRPGRewards) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ReqReceiveRPGReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	MonsterSeq uint32 `protobuf:"varint,2,opt,name=monster_seq,json=monsterSeq,proto3" json:"monster_seq"`
}

func (x *ReqReceiveRPGReward) Reset() {
	*x = ReqReceiveRPGReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[537]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveRPGReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveRPGReward) ProtoMessage() {}

func (x *ReqReceiveRPGReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[537]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveRPGReward.ProtoReflect.Descriptor instead.
func (*ReqReceiveRPGReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{537}
}

func (x *ReqReceiveRPGReward) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqReceiveRPGReward) GetMonsterSeq() uint32 {
	if x != nil {
		return x.MonsterSeq
	}
	return 0
}

type ResReceiveRPGRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error                             `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items []*ResReceiveRPGRewards_RewardItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *ResReceiveRPGRewards) Reset() {
	*x = ResReceiveRPGRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[538]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveRPGRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveRPGRewards) ProtoMessage() {}

func (x *ResReceiveRPGRewards) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[538]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveRPGRewards.ProtoReflect.Descriptor instead.
func (*ResReceiveRPGRewards) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{538}
}

func (x *ResReceiveRPGRewards) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReceiveRPGRewards) GetItems() []*ResReceiveRPGRewards_RewardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReqFetchOBToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
}

func (x *ReqFetchOBToken) Reset() {
	*x = ReqFetchOBToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[539]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchOBToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchOBToken) ProtoMessage() {}

func (x *ReqFetchOBToken) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[539]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchOBToken.ProtoReflect.Descriptor instead.
func (*ReqFetchOBToken) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{539}
}

func (x *ReqFetchOBToken) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ResFetchOBToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
	CreateTime uint32 `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	Delay      uint32 `protobuf:"varint,4,opt,name=delay,proto3" json:"delay"`
	StartTime  uint32 `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time"`
}

func (x *ResFetchOBToken) Reset() {
	*x = ResFetchOBToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[540]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchOBToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchOBToken) ProtoMessage() {}

func (x *ResFetchOBToken) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[540]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchOBToken.ProtoReflect.Descriptor instead.
func (*ResFetchOBToken) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{540}
}

func (x *ResFetchOBToken) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchOBToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResFetchOBToken) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ResFetchOBToken) GetDelay() uint32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *ResFetchOBToken) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type ReqReceiveCharacterRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id"`
	Level       uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
}

func (x *ReqReceiveCharacterRewards) Reset() {
	*x = ReqReceiveCharacterRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[541]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveCharacterRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveCharacterRewards) ProtoMessage() {}

func (x *ReqReceiveCharacterRewards) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[541]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveCharacterRewards.ProtoReflect.Descriptor instead.
func (*ReqReceiveCharacterRewards) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{541}
}

func (x *ReqReceiveCharacterRewards) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *ReqReceiveCharacterRewards) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ResReceiveCharacterRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error                                   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items []*ResReceiveCharacterRewards_RewardItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *ResReceiveCharacterRewards) Reset() {
	*x = ResReceiveCharacterRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[542]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveCharacterRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveCharacterRewards) ProtoMessage() {}

func (x *ResReceiveCharacterRewards) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[542]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveCharacterRewards.ProtoReflect.Descriptor instead.
func (*ResReceiveCharacterRewards) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{542}
}

func (x *ResReceiveCharacterRewards) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReceiveCharacterRewards) GetItems() []*ResReceiveCharacterRewards_RewardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReqFeedActivityFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqFeedActivityFeed) Reset() {
	*x = ReqFeedActivityFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[543]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFeedActivityFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFeedActivityFeed) ProtoMessage() {}

func (x *ReqFeedActivityFeed) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[543]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFeedActivityFeed.ProtoReflect.Descriptor instead.
func (*ReqFeedActivityFeed) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{543}
}

func (x *ReqFeedActivityFeed) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqFeedActivityFeed) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResFeedActivityFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error                            `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items     []*ResFeedActivityFeed_RewardItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	FeedCount uint32                            `protobuf:"varint,3,opt,name=feed_count,json=feedCount,proto3" json:"feed_count"`
}

func (x *ResFeedActivityFeed) Reset() {
	*x = ResFeedActivityFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[544]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFeedActivityFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFeedActivityFeed) ProtoMessage() {}

func (x *ResFeedActivityFeed) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[544]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFeedActivityFeed.ProtoReflect.Descriptor instead.
func (*ResFeedActivityFeed) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{544}
}

func (x *ResFeedActivityFeed) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFeedActivityFeed) GetItems() []*ResFeedActivityFeed_RewardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResFeedActivityFeed) GetFeedCount() uint32 {
	if x != nil {
		return x.FeedCount
	}
	return 0
}

type ReqSendActivityGiftToFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	ItemId     uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	TargetId   uint32 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id"`
}

func (x *ReqSendActivityGiftToFriend) Reset() {
	*x = ReqSendActivityGiftToFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[545]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSendActivityGiftToFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSendActivityGiftToFriend) ProtoMessage() {}

func (x *ReqSendActivityGiftToFriend) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[545]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSendActivityGiftToFriend.ProtoReflect.Descriptor instead.
func (*ReqSendActivityGiftToFriend) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{545}
}

func (x *ReqSendActivityGiftToFriend) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqSendActivityGiftToFriend) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ReqSendActivityGiftToFriend) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type ResSendActivityGiftToFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	SendGiftCount uint32 `protobuf:"varint,2,opt,name=send_gift_count,json=sendGiftCount,proto3" json:"send_gift_count"`
}

func (x *ResSendActivityGiftToFriend) Reset() {
	*x = ResSendActivityGiftToFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[546]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSendActivityGiftToFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSendActivityGiftToFriend) ProtoMessage() {}

func (x *ResSendActivityGiftToFriend) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[546]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSendActivityGiftToFriend.ProtoReflect.Descriptor instead.
func (*ResSendActivityGiftToFriend) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{546}
}

func (x *ResSendActivityGiftToFriend) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSendActivityGiftToFriend) GetSendGiftCount() uint32 {
	if x != nil {
		return x.SendGiftCount
	}
	return 0
}

type ReqReceiveActivityGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Id         uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id"`
}

func (x *ReqReceiveActivityGift) Reset() {
	*x = ReqReceiveActivityGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[547]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveActivityGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveActivityGift) ProtoMessage() {}

func (x *ReqReceiveActivityGift) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[547]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveActivityGift.ProtoReflect.Descriptor instead.
func (*ReqReceiveActivityGift) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{547}
}

func (x *ReqReceiveActivityGift) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqReceiveActivityGift) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReqFetchFriendGiftActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  uint32   `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	AccountList []uint32 `protobuf:"varint,2,rep,packed,name=account_list,json=accountList,proto3" json:"account_list"`
}

func (x *ReqFetchFriendGiftActivityData) Reset() {
	*x = ReqFetchFriendGiftActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[548]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchFriendGiftActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchFriendGiftActivityData) ProtoMessage() {}

func (x *ReqFetchFriendGiftActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[548]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchFriendGiftActivityData.ProtoReflect.Descriptor instead.
func (*ReqFetchFriendGiftActivityData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{548}
}

func (x *ReqFetchFriendGiftActivityData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqFetchFriendGiftActivityData) GetAccountList() []uint32 {
	if x != nil {
		return x.AccountList
	}
	return nil
}

type ResFetchFriendGiftActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error                                       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	List  []*ResFetchFriendGiftActivityData_FriendData `protobuf:"bytes,2,rep,name=list,proto3" json:"list"`
}

func (x *ResFetchFriendGiftActivityData) Reset() {
	*x = ResFetchFriendGiftActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[549]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchFriendGiftActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchFriendGiftActivityData) ProtoMessage() {}

func (x *ResFetchFriendGiftActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[549]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchFriendGiftActivityData.ProtoReflect.Descriptor instead.
func (*ResFetchFriendGiftActivityData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{549}
}

func (x *ResFetchFriendGiftActivityData) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchFriendGiftActivityData) GetList() []*ResFetchFriendGiftActivityData_FriendData {
	if x != nil {
		return x.List
	}
	return nil
}

type ReqOpenPreChestItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	PoolId uint32 `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id"`
}

func (x *ReqOpenPreChestItem) Reset() {
	*x = ReqOpenPreChestItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[550]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOpenPreChestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOpenPreChestItem) ProtoMessage() {}

func (x *ReqOpenPreChestItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[550]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOpenPreChestItem.ProtoReflect.Descriptor instead.
func (*ReqOpenPreChestItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{550}
}

func (x *ReqOpenPreChestItem) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ReqOpenPreChestItem) GetPoolId() uint32 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

type ResOpenPreChestItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error        `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Results []*OpenResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results"`
}

func (x *ResOpenPreChestItem) Reset() {
	*x = ResOpenPreChestItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[551]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOpenPreChestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOpenPreChestItem) ProtoMessage() {}

func (x *ResOpenPreChestItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[551]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOpenPreChestItem.ProtoReflect.Descriptor instead.
func (*ResOpenPreChestItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{551}
}

func (x *ResOpenPreChestItem) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResOpenPreChestItem) GetResults() []*OpenResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReqFetchVoteActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqFetchVoteActivity) Reset() {
	*x = ReqFetchVoteActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[552]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchVoteActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchVoteActivity) ProtoMessage() {}

func (x *ReqFetchVoteActivity) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[552]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchVoteActivity.ProtoReflect.Descriptor instead.
func (*ReqFetchVoteActivity) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{552}
}

func (x *ReqFetchVoteActivity) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResFetchVoteActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	VoteRank   []uint32 `protobuf:"varint,2,rep,packed,name=vote_rank,json=voteRank,proto3" json:"vote_rank"`
	UpdateTime uint32   `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time"`
}

func (x *ResFetchVoteActivity) Reset() {
	*x = ResFetchVoteActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[553]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchVoteActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchVoteActivity) ProtoMessage() {}

func (x *ResFetchVoteActivity) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[553]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchVoteActivity.ProtoReflect.Descriptor instead.
func (*ResFetchVoteActivity) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{553}
}

func (x *ResFetchVoteActivity) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchVoteActivity) GetVoteRank() []uint32 {
	if x != nil {
		return x.VoteRank
	}
	return nil
}

func (x *ResFetchVoteActivity) GetUpdateTime() uint32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type ReqVoteActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote       uint32 `protobuf:"varint,1,opt,name=vote,proto3" json:"vote"`
	ActivityId uint32 `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
}

func (x *ReqVoteActivity) Reset() {
	*x = ReqVoteActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[554]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqVoteActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqVoteActivity) ProtoMessage() {}

func (x *ReqVoteActivity) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[554]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqVoteActivity.ProtoReflect.Descriptor instead.
func (*ReqVoteActivity) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{554}
}

func (x *ReqVoteActivity) GetVote() uint32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

func (x *ReqVoteActivity) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ResVoteActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error      `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	VoteRecords []*VoteData `protobuf:"bytes,2,rep,name=vote_records,json=voteRecords,proto3" json:"vote_records"`
}

func (x *ResVoteActivity) Reset() {
	*x = ResVoteActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[555]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResVoteActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResVoteActivity) ProtoMessage() {}

func (x *ResVoteActivity) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[555]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResVoteActivity.ProtoReflect.Descriptor instead.
func (*ResVoteActivity) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{555}
}

func (x *ResVoteActivity) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResVoteActivity) GetVoteRecords() []*VoteData {
	if x != nil {
		return x.VoteRecords
	}
	return nil
}

type ReqUnlockActivitySpot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	EndingId uint32 `protobuf:"varint,2,opt,name=ending_id,json=endingId,proto3" json:"ending_id"`
}

func (x *ReqUnlockActivitySpot) Reset() {
	*x = ReqUnlockActivitySpot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[556]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUnlockActivitySpot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUnlockActivitySpot) ProtoMessage() {}

func (x *ReqUnlockActivitySpot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[556]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUnlockActivitySpot.ProtoReflect.Descriptor instead.
func (*ReqUnlockActivitySpot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{556}
}

func (x *ReqUnlockActivitySpot) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *ReqUnlockActivitySpot) GetEndingId() uint32 {
	if x != nil {
		return x.EndingId
	}
	return 0
}

type ReqReceiveActivitySpotReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
}

func (x *ReqReceiveActivitySpotReward) Reset() {
	*x = ReqReceiveActivitySpotReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[557]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReceiveActivitySpotReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReceiveActivitySpotReward) ProtoMessage() {}

func (x *ReqReceiveActivitySpotReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[557]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReceiveActivitySpotReward.ProtoReflect.Descriptor instead.
func (*ReqReceiveActivitySpotReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{557}
}

func (x *ReqReceiveActivitySpotReward) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResReceiveActivitySpotReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error                                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Items []*ResReceiveActivitySpotReward_RewardItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *ResReceiveActivitySpotReward) Reset() {
	*x = ResReceiveActivitySpotReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[558]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveActivitySpotReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveActivitySpotReward) ProtoMessage() {}

func (x *ResReceiveActivitySpotReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[558]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveActivitySpotReward.ProtoReflect.Descriptor instead.
func (*ResReceiveActivitySpotReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{558}
}

func (x *ResReceiveActivitySpotReward) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResReceiveActivitySpotReward) GetItems() []*ResReceiveActivitySpotReward_RewardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReqLogReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success uint32 `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	Failed  uint32 `protobuf:"varint,2,opt,name=failed,proto3" json:"failed"`
}

func (x *ReqLogReport) Reset() {
	*x = ReqLogReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[559]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLogReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLogReport) ProtoMessage() {}

func (x *ReqLogReport) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[559]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLogReport.ProtoReflect.Descriptor instead.
func (*ReqLogReport) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{559}
}

func (x *ReqLogReport) GetSuccess() uint32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *ReqLogReport) GetFailed() uint32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type ReqBindOauth2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
}

func (x *ReqBindOauth2) Reset() {
	*x = ReqBindOauth2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[560]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBindOauth2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBindOauth2) ProtoMessage() {}

func (x *ReqBindOauth2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[560]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBindOauth2.ProtoReflect.Descriptor instead.
func (*ReqBindOauth2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{560}
}

func (x *ReqBindOauth2) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqBindOauth2) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ReqFetchOauth2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
}

func (x *ReqFetchOauth2) Reset() {
	*x = ReqFetchOauth2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[561]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchOauth2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchOauth2) ProtoMessage() {}

func (x *ReqFetchOauth2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[561]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchOauth2.ProtoReflect.Descriptor instead.
func (*ReqFetchOauth2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{561}
}

func (x *ReqFetchOauth2) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResFetchOauth2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Openid string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid"`
}

func (x *ResFetchOauth2) Reset() {
	*x = ResFetchOauth2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[562]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchOauth2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchOauth2) ProtoMessage() {}

func (x *ResFetchOauth2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[562]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchOauth2.ProtoReflect.Descriptor instead.
func (*ResFetchOauth2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{562}
}

func (x *ResFetchOauth2) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchOauth2) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type ResDeleteAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	DeleteTime uint32 `protobuf:"varint,2,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time"`
}

func (x *ResDeleteAccount) Reset() {
	*x = ResDeleteAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[563]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDeleteAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDeleteAccount) ProtoMessage() {}

func (x *ResDeleteAccount) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[563]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDeleteAccount.ProtoReflect.Descriptor instead.
func (*ResDeleteAccount) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{563}
}

func (x *ResDeleteAccount) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResDeleteAccount) GetDeleteTime() uint32 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

type ReqSetLoadingImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []uint32 `protobuf:"varint,1,rep,packed,name=images,proto3" json:"images"`
}

func (x *ReqSetLoadingImage) Reset() {
	*x = ReqSetLoadingImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[564]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSetLoadingImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSetLoadingImage) ProtoMessage() {}

func (x *ReqSetLoadingImage) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[564]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSetLoadingImage.ProtoReflect.Descriptor instead.
func (*ReqSetLoadingImage) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{564}
}

func (x *ReqSetLoadingImage) GetImages() []uint32 {
	if x != nil {
		return x.Images
	}
	return nil
}

type ResFetchShopInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error                               `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Result []*ResFetchShopInterval_ShopInterval `protobuf:"bytes,2,rep,name=result,proto3" json:"result"`
}

func (x *ResFetchShopInterval) Reset() {
	*x = ResFetchShopInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[565]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchShopInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchShopInterval) ProtoMessage() {}

func (x *ResFetchShopInterval) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[565]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchShopInterval.ProtoReflect.Descriptor instead.
func (*ResFetchShopInterval) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{565}
}

func (x *ResFetchShopInterval) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchShopInterval) GetResult() []*ResFetchShopInterval_ShopInterval {
	if x != nil {
		return x.Result
	}
	return nil
}

type ResFetchActivityInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error                                       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Result []*ResFetchActivityInterval_ActivityInterval `protobuf:"bytes,2,rep,name=result,proto3" json:"result"`
}

func (x *ResFetchActivityInterval) Reset() {
	*x = ResFetchActivityInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[566]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchActivityInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchActivityInterval) ProtoMessage() {}

func (x *ResFetchActivityInterval) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[566]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchActivityInterval.ProtoReflect.Descriptor instead.
func (*ResFetchActivityInterval) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{566}
}

func (x *ResFetchActivityInterval) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchActivityInterval) GetResult() []*ResFetchActivityInterval_ActivityInterval {
	if x != nil {
		return x.Result
	}
	return nil
}

type ResFetchrecentFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	AccountList []uint32 `protobuf:"varint,2,rep,packed,name=account_list,json=accountList,proto3" json:"account_list"`
}

func (x *ResFetchrecentFriend) Reset() {
	*x = ResFetchrecentFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[567]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchrecentFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchrecentFriend) ProtoMessage() {}

func (x *ResFetchrecentFriend) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[567]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchrecentFriend.ProtoReflect.Descriptor instead.
func (*ResFetchrecentFriend) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{567}
}

func (x *ResFetchrecentFriend) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchrecentFriend) GetAccountList() []uint32 {
	if x != nil {
		return x.AccountList
	}
	return nil
}

type ReqOpenGacha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqOpenGacha) Reset() {
	*x = ReqOpenGacha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[568]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOpenGacha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOpenGacha) ProtoMessage() {}

func (x *ReqOpenGacha) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[568]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOpenGacha.ProtoReflect.Descriptor instead.
func (*ReqOpenGacha) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{568}
}

func (x *ReqOpenGacha) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ReqOpenGacha) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResOpenGacha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	ResultList    []uint32         `protobuf:"varint,2,rep,packed,name=result_list,json=resultList,proto3" json:"result_list"`
	RewardItems   []*ExecuteReward `protobuf:"bytes,3,rep,name=reward_items,json=rewardItems,proto3" json:"reward_items"`
	SpRewardItems []*ExecuteReward `protobuf:"bytes,4,rep,name=sp_reward_items,json=spRewardItems,proto3" json:"sp_reward_items"`
	RemainCount   uint32           `protobuf:"varint,5,opt,name=remain_count,json=remainCount,proto3" json:"remain_count"`
}

func (x *ResOpenGacha) Reset() {
	*x = ResOpenGacha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[569]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOpenGacha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOpenGacha) ProtoMessage() {}

func (x *ResOpenGacha) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[569]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOpenGacha.ProtoReflect.Descriptor instead.
func (*ResOpenGacha) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{569}
}

func (x *ResOpenGacha) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResOpenGacha) GetResultList() []uint32 {
	if x != nil {
		return x.ResultList
	}
	return nil
}

func (x *ResOpenGacha) GetRewardItems() []*ExecuteReward {
	if x != nil {
		return x.RewardItems
	}
	return nil
}

func (x *ResOpenGacha) GetSpRewardItems() []*ExecuteReward {
	if x != nil {
		return x.SpRewardItems
	}
	return nil
}

func (x *ResOpenGacha) GetRemainCount() uint32 {
	if x != nil {
		return x.RemainCount
	}
	return 0
}

type ReqTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []uint32 `protobuf:"varint,1,rep,packed,name=params,proto3" json:"params"`
}

func (x *ReqTaskRequest) Reset() {
	*x = ReqTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[570]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTaskRequest) ProtoMessage() {}

func (x *ReqTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[570]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTaskRequest.ProtoReflect.Descriptor instead.
func (*ReqTaskRequest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{570}
}

func (x *ReqTaskRequest) GetParams() []uint32 {
	if x != nil {
		return x.Params
	}
	return nil
}

type ActionMJStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActionMJStart) Reset() {
	*x = ActionMJStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[571]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionMJStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionMJStart) ProtoMessage() {}

func (x *ActionMJStart) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[571]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionMJStart.ProtoReflect.Descriptor instead.
func (*ActionMJStart) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{571}
}

type NewRoundOpenedTiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat  uint32   `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Tiles []string `protobuf:"bytes,2,rep,name=tiles,proto3" json:"tiles"`
	Count []uint32 `protobuf:"varint,3,rep,packed,name=count,proto3" json:"count"`
}

func (x *NewRoundOpenedTiles) Reset() {
	*x = NewRoundOpenedTiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[572]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRoundOpenedTiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRoundOpenedTiles) ProtoMessage() {}

func (x *NewRoundOpenedTiles) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[572]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRoundOpenedTiles.ProtoReflect.Descriptor instead.
func (*NewRoundOpenedTiles) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{572}
}

func (x *NewRoundOpenedTiles) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *NewRoundOpenedTiles) GetTiles() []string {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *NewRoundOpenedTiles) GetCount() []uint32 {
	if x != nil {
		return x.Count
	}
	return nil
}

type MuyuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat     uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Count    uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	CountMax uint32 `protobuf:"varint,3,opt,name=count_max,json=countMax,proto3" json:"count_max"`
	Id       uint32 `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
}

func (x *MuyuInfo) Reset() {
	*x = MuyuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[573]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuyuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuyuInfo) ProtoMessage() {}

func (x *MuyuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[573]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuyuInfo.ProtoReflect.Descriptor instead.
func (*MuyuInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{573}
}

func (x *MuyuInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *MuyuInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MuyuInfo) GetCountMax() uint32 {
	if x != nil {
		return x.CountMax
	}
	return 0
}

func (x *MuyuInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ChuanmaGang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldScores    []int32     `protobuf:"varint,1,rep,packed,name=old_scores,json=oldScores,proto3" json:"old_scores"`
	DeltaScores  []int32     `protobuf:"varint,2,rep,packed,name=delta_scores,json=deltaScores,proto3" json:"delta_scores"`
	Scores       []int32     `protobuf:"varint,3,rep,packed,name=scores,proto3" json:"scores"`
	Gameend      *GameEnd    `protobuf:"bytes,4,opt,name=gameend,proto3" json:"gameend"`
	HulesHistory []*HuleInfo `protobuf:"bytes,5,rep,name=hules_history,json=hulesHistory,proto3" json:"hules_history"`
}

func (x *ChuanmaGang) Reset() {
	*x = ChuanmaGang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[574]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChuanmaGang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChuanmaGang) ProtoMessage() {}

func (x *ChuanmaGang) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[574]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChuanmaGang.ProtoReflect.Descriptor instead.
func (*ChuanmaGang) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{574}
}

func (x *ChuanmaGang) GetOldScores() []int32 {
	if x != nil {
		return x.OldScores
	}
	return nil
}

func (x *ChuanmaGang) GetDeltaScores() []int32 {
	if x != nil {
		return x.DeltaScores
	}
	return nil
}

func (x *ChuanmaGang) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ChuanmaGang) GetGameend() *GameEnd {
	if x != nil {
		return x.Gameend
	}
	return nil
}

func (x *ChuanmaGang) GetHulesHistory() []*HuleInfo {
	if x != nil {
		return x.HulesHistory
	}
	return nil
}

type ActionNewCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldSpell uint32 `protobuf:"varint,1,opt,name=field_spell,json=fieldSpell,proto3" json:"field_spell"`
}

func (x *ActionNewCard) Reset() {
	*x = ActionNewCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[575]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionNewCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionNewCard) ProtoMessage() {}

func (x *ActionNewCard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[575]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionNewCard.ProtoReflect.Descriptor instead.
func (*ActionNewCard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{575}
}

func (x *ActionNewCard) GetFieldSpell() uint32 {
	if x != nil {
		return x.FieldSpell
	}
	return 0
}

type RecordNewCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldSpell uint32 `protobuf:"varint,1,opt,name=field_spell,json=fieldSpell,proto3" json:"field_spell"`
}

func (x *RecordNewCard) Reset() {
	*x = RecordNewCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[576]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNewCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNewCard) ProtoMessage() {}

func (x *RecordNewCard) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[576]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNewCard.ProtoReflect.Descriptor instead.
func (*RecordNewCard) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{576}
}

func (x *RecordNewCard) GetFieldSpell() uint32 {
	if x != nil {
		return x.FieldSpell
	}
	return 0
}

type ActionNewRound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chang         uint32                 `protobuf:"varint,1,opt,name=chang,proto3" json:"chang"`
	Ju            uint32                 `protobuf:"varint,2,opt,name=ju,proto3" json:"ju"`
	Ben           uint32                 `protobuf:"varint,3,opt,name=ben,proto3" json:"ben"`
	Tiles         []string               `protobuf:"bytes,4,rep,name=tiles,proto3" json:"tiles"`
	Dora          string                 `protobuf:"bytes,5,opt,name=dora,proto3" json:"dora"`
	Scores        []int32                `protobuf:"varint,6,rep,packed,name=scores,proto3" json:"scores"`
	Operation     *OptionalOperationList `protobuf:"bytes,7,opt,name=operation,proto3" json:"operation"`
	Liqibang      uint32                 `protobuf:"varint,8,opt,name=liqibang,proto3" json:"liqibang"`
	Tingpais0     []*TingPaiDiscardInfo  `protobuf:"bytes,9,rep,name=tingpais0,proto3" json:"tingpais0"`
	Tingpais1     []*TingPaiInfo         `protobuf:"bytes,10,rep,name=tingpais1,proto3" json:"tingpais1"`
	Al            bool                   `protobuf:"varint,11,opt,name=al,proto3" json:"al"`
	Md5           string                 `protobuf:"bytes,12,opt,name=md5,proto3" json:"md5"`
	LeftTileCount uint32                 `protobuf:"varint,13,opt,name=left_tile_count,json=leftTileCount,proto3" json:"left_tile_count"`
	Doras         []string               `protobuf:"bytes,14,rep,name=doras,proto3" json:"doras"`
	Opens         []*NewRoundOpenedTiles `protobuf:"bytes,15,rep,name=opens,proto3" json:"opens"`
	Muyu          *MuyuInfo              `protobuf:"bytes,16,opt,name=muyu,proto3" json:"muyu"`
	JuCount       uint32                 `protobuf:"varint,17,opt,name=ju_count,json=juCount,proto3" json:"ju_count"`
	FieldSpell    uint32                 `protobuf:"varint,18,opt,name=field_spell,json=fieldSpell,proto3" json:"field_spell"`
	Sha256        string                 `protobuf:"bytes,19,opt,name=sha256,proto3" json:"sha256"`
}

func (x *ActionNewRound) Reset() {
	*x = ActionNewRound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[577]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionNewRound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionNewRound) ProtoMessage() {}

func (x *ActionNewRound) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[577]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionNewRound.ProtoReflect.Descriptor instead.
func (*ActionNewRound) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{577}
}

func (x *ActionNewRound) GetChang() uint32 {
	if x != nil {
		return x.Chang
	}
	return 0
}

func (x *ActionNewRound) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *ActionNewRound) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *ActionNewRound) GetTiles() []string {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *ActionNewRound) GetDora() string {
	if x != nil {
		return x.Dora
	}
	return ""
}

func (x *ActionNewRound) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionNewRound) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionNewRound) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *ActionNewRound) GetTingpais0() []*TingPaiDiscardInfo {
	if x != nil {
		return x.Tingpais0
	}
	return nil
}

func (x *ActionNewRound) GetTingpais1() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais1
	}
	return nil
}

func (x *ActionNewRound) GetAl() bool {
	if x != nil {
		return x.Al
	}
	return false
}

func (x *ActionNewRound) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ActionNewRound) GetLeftTileCount() uint32 {
	if x != nil {
		return x.LeftTileCount
	}
	return 0
}

func (x *ActionNewRound) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionNewRound) GetOpens() []*NewRoundOpenedTiles {
	if x != nil {
		return x.Opens
	}
	return nil
}

func (x *ActionNewRound) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionNewRound) GetJuCount() uint32 {
	if x != nil {
		return x.JuCount
	}
	return 0
}

func (x *ActionNewRound) GetFieldSpell() uint32 {
	if x != nil {
		return x.FieldSpell
	}
	return 0
}

func (x *ActionNewRound) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

type RecordNewRound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chang         uint32                    `protobuf:"varint,1,opt,name=chang,proto3" json:"chang"`
	Ju            uint32                    `protobuf:"varint,2,opt,name=ju,proto3" json:"ju"`
	Ben           uint32                    `protobuf:"varint,3,opt,name=ben,proto3" json:"ben"`
	Dora          string                    `protobuf:"bytes,4,opt,name=dora,proto3" json:"dora"`
	Scores        []int32                   `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang      uint32                    `protobuf:"varint,6,opt,name=liqibang,proto3" json:"liqibang"`
	Tiles0        []string                  `protobuf:"bytes,7,rep,name=tiles0,proto3" json:"tiles0"`
	Tiles1        []string                  `protobuf:"bytes,8,rep,name=tiles1,proto3" json:"tiles1"`
	Tiles2        []string                  `protobuf:"bytes,9,rep,name=tiles2,proto3" json:"tiles2"`
	Tiles3        []string                  `protobuf:"bytes,10,rep,name=tiles3,proto3" json:"tiles3"`
	Tingpai       []*RecordNewRound_TingPai `protobuf:"bytes,11,rep,name=tingpai,proto3" json:"tingpai"`
	Operation     *OptionalOperationList    `protobuf:"bytes,12,opt,name=operation,proto3" json:"operation"`
	Md5           string                    `protobuf:"bytes,13,opt,name=md5,proto3" json:"md5"`
	Paishan       string                    `protobuf:"bytes,14,opt,name=paishan,proto3" json:"paishan"`
	LeftTileCount uint32                    `protobuf:"varint,15,opt,name=left_tile_count,json=leftTileCount,proto3" json:"left_tile_count"`
	Doras         []string                  `protobuf:"bytes,16,rep,name=doras,proto3" json:"doras"`
	Opens         []*NewRoundOpenedTiles    `protobuf:"bytes,17,rep,name=opens,proto3" json:"opens"`
	Muyu          *MuyuInfo                 `protobuf:"bytes,18,opt,name=muyu,proto3" json:"muyu"`
	Operations    []*OptionalOperationList  `protobuf:"bytes,19,rep,name=operations,proto3" json:"operations"`
	JuCount       uint32                    `protobuf:"varint,20,opt,name=ju_count,json=juCount,proto3" json:"ju_count"`
	FieldSpell    uint32                    `protobuf:"varint,21,opt,name=field_spell,json=fieldSpell,proto3" json:"field_spell"`
	Sha256        string                    `protobuf:"bytes,22,opt,name=sha256,proto3" json:"sha256"`
}

func (x *RecordNewRound) Reset() {
	*x = RecordNewRound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[578]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNewRound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNewRound) ProtoMessage() {}

func (x *RecordNewRound) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[578]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNewRound.ProtoReflect.Descriptor instead.
func (*RecordNewRound) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{578}
}

func (x *RecordNewRound) GetChang() uint32 {
	if x != nil {
		return x.Chang
	}
	return 0
}

func (x *RecordNewRound) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *RecordNewRound) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *RecordNewRound) GetDora() string {
	if x != nil {
		return x.Dora
	}
	return ""
}

func (x *RecordNewRound) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordNewRound) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *RecordNewRound) GetTiles0() []string {
	if x != nil {
		return x.Tiles0
	}
	return nil
}

func (x *RecordNewRound) GetTiles1() []string {
	if x != nil {
		return x.Tiles1
	}
	return nil
}

func (x *RecordNewRound) GetTiles2() []string {
	if x != nil {
		return x.Tiles2
	}
	return nil
}

func (x *RecordNewRound) GetTiles3() []string {
	if x != nil {
		return x.Tiles3
	}
	return nil
}

func (x *RecordNewRound) GetTingpai() []*RecordNewRound_TingPai {
	if x != nil {
		return x.Tingpai
	}
	return nil
}

func (x *RecordNewRound) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *RecordNewRound) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *RecordNewRound) GetPaishan() string {
	if x != nil {
		return x.Paishan
	}
	return ""
}

func (x *RecordNewRound) GetLeftTileCount() uint32 {
	if x != nil {
		return x.LeftTileCount
	}
	return 0
}

func (x *RecordNewRound) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordNewRound) GetOpens() []*NewRoundOpenedTiles {
	if x != nil {
		return x.Opens
	}
	return nil
}

func (x *RecordNewRound) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *RecordNewRound) GetOperations() []*OptionalOperationList {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *RecordNewRound) GetJuCount() uint32 {
	if x != nil {
		return x.JuCount
	}
	return 0
}

func (x *RecordNewRound) GetFieldSpell() uint32 {
	if x != nil {
		return x.FieldSpell
	}
	return 0
}

func (x *RecordNewRound) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

type GameSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chang         uint32                         `protobuf:"varint,1,opt,name=chang,proto3" json:"chang"`
	Ju            uint32                         `protobuf:"varint,2,opt,name=ju,proto3" json:"ju"`
	Ben           uint32                         `protobuf:"varint,3,opt,name=ben,proto3" json:"ben"`
	IndexPlayer   uint32                         `protobuf:"varint,4,opt,name=index_player,json=indexPlayer,proto3" json:"index_player"`
	LeftTileCount uint32                         `protobuf:"varint,5,opt,name=left_tile_count,json=leftTileCount,proto3" json:"left_tile_count"`
	Hands         []string                       `protobuf:"bytes,6,rep,name=hands,proto3" json:"hands"`
	Doras         []string                       `protobuf:"bytes,7,rep,name=doras,proto3" json:"doras"`
	Liqibang      uint32                         `protobuf:"varint,8,opt,name=liqibang,proto3" json:"liqibang"`
	Players       []*GameSnapshot_PlayerSnapshot `protobuf:"bytes,9,rep,name=players,proto3" json:"players"`
	Zhenting      bool                           `protobuf:"varint,10,opt,name=zhenting,proto3" json:"zhenting"`
}

func (x *GameSnapshot) Reset() {
	*x = GameSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[579]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSnapshot) ProtoMessage() {}

func (x *GameSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[579]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSnapshot.ProtoReflect.Descriptor instead.
func (*GameSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{579}
}

func (x *GameSnapshot) GetChang() uint32 {
	if x != nil {
		return x.Chang
	}
	return 0
}

func (x *GameSnapshot) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *GameSnapshot) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *GameSnapshot) GetIndexPlayer() uint32 {
	if x != nil {
		return x.IndexPlayer
	}
	return 0
}

func (x *GameSnapshot) GetLeftTileCount() uint32 {
	if x != nil {
		return x.LeftTileCount
	}
	return 0
}

func (x *GameSnapshot) GetHands() []string {
	if x != nil {
		return x.Hands
	}
	return nil
}

func (x *GameSnapshot) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *GameSnapshot) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *GameSnapshot) GetPlayers() []*GameSnapshot_PlayerSnapshot {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameSnapshot) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

type ActionPrototype struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step uint32 `protobuf:"varint,1,opt,name=step,proto3" json:"step"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *ActionPrototype) Reset() {
	*x = ActionPrototype{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[580]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionPrototype) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionPrototype) ProtoMessage() {}

func (x *ActionPrototype) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[580]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionPrototype.ProtoReflect.Descriptor instead.
func (*ActionPrototype) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{580}
}

func (x *ActionPrototype) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ActionPrototype) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionPrototype) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameDetailRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records [][]byte      `protobuf:"bytes,1,rep,name=records,proto3" json:"records"`
	Version uint32        `protobuf:"varint,2,opt,name=version,proto3" json:"version"`
	Actions []*GameAction `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions"`
	Bar     []byte        `protobuf:"bytes,4,opt,name=bar,proto3" json:"bar"`
}

func (x *GameDetailRecords) Reset() {
	*x = GameDetailRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[581]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDetailRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailRecords) ProtoMessage() {}

func (x *GameDetailRecords) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[581]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailRecords.ProtoReflect.Descriptor instead.
func (*GameDetailRecords) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{581}
}

func (x *GameDetailRecords) GetRecords() [][]byte {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *GameDetailRecords) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GameDetailRecords) GetActions() []*GameAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *GameDetailRecords) GetBar() []byte {
	if x != nil {
		return x.Bar
	}
	return nil
}

type GameSelfOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Index           uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index"`
	Tile            string   `protobuf:"bytes,3,opt,name=tile,proto3" json:"tile"`
	CancelOperation bool     `protobuf:"varint,4,opt,name=cancel_operation,json=cancelOperation,proto3" json:"cancel_operation"`
	Moqie           bool     `protobuf:"varint,5,opt,name=moqie,proto3" json:"moqie"`
	Timeuse         uint32   `protobuf:"varint,6,opt,name=timeuse,proto3" json:"timeuse"`
	TileState       int32    `protobuf:"varint,7,opt,name=tile_state,json=tileState,proto3" json:"tile_state"`
	ChangeTiles     []string `protobuf:"bytes,8,rep,name=change_tiles,json=changeTiles,proto3" json:"change_tiles"`
	TileStates      []int32  `protobuf:"varint,9,rep,packed,name=tile_states,json=tileStates,proto3" json:"tile_states"`
	GapType         uint32   `protobuf:"varint,10,opt,name=gap_type,json=gapType,proto3" json:"gap_type"`
}

func (x *GameSelfOperation) Reset() {
	*x = GameSelfOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[582]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSelfOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSelfOperation) ProtoMessage() {}

func (x *GameSelfOperation) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[582]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSelfOperation.ProtoReflect.Descriptor instead.
func (*GameSelfOperation) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{582}
}

func (x *GameSelfOperation) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameSelfOperation) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GameSelfOperation) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *GameSelfOperation) GetCancelOperation() bool {
	if x != nil {
		return x.CancelOperation
	}
	return false
}

func (x *GameSelfOperation) GetMoqie() bool {
	if x != nil {
		return x.Moqie
	}
	return false
}

func (x *GameSelfOperation) GetTimeuse() uint32 {
	if x != nil {
		return x.Timeuse
	}
	return 0
}

func (x *GameSelfOperation) GetTileState() int32 {
	if x != nil {
		return x.TileState
	}
	return 0
}

func (x *GameSelfOperation) GetChangeTiles() []string {
	if x != nil {
		return x.ChangeTiles
	}
	return nil
}

func (x *GameSelfOperation) GetTileStates() []int32 {
	if x != nil {
		return x.TileStates
	}
	return nil
}

func (x *GameSelfOperation) GetGapType() uint32 {
	if x != nil {
		return x.GapType
	}
	return 0
}

type GameChiPengGang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Index           uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index"`
	CancelOperation bool   `protobuf:"varint,3,opt,name=cancel_operation,json=cancelOperation,proto3" json:"cancel_operation"`
	Timeuse         uint32 `protobuf:"varint,6,opt,name=timeuse,proto3" json:"timeuse"`
}

func (x *GameChiPengGang) Reset() {
	*x = GameChiPengGang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[583]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameChiPengGang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameChiPengGang) ProtoMessage() {}

func (x *GameChiPengGang) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[583]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameChiPengGang.ProtoReflect.Descriptor instead.
func (*GameChiPengGang) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{583}
}

func (x *GameChiPengGang) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameChiPengGang) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GameChiPengGang) GetCancelOperation() bool {
	if x != nil {
		return x.CancelOperation
	}
	return false
}

func (x *GameChiPengGang) GetTimeuse() uint32 {
	if x != nil {
		return x.Timeuse
	}
	return 0
}

type GameVoteGameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yes bool `protobuf:"varint,1,opt,name=yes,proto3" json:"yes"`
}

func (x *GameVoteGameEnd) Reset() {
	*x = GameVoteGameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[584]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameVoteGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameVoteGameEnd) ProtoMessage() {}

func (x *GameVoteGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[584]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameVoteGameEnd.ProtoReflect.Descriptor instead.
func (*GameVoteGameEnd) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{584}
}

func (x *GameVoteGameEnd) GetYes() bool {
	if x != nil {
		return x.Yes
	}
	return false
}

type GameUserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32             `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Type      uint32             `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Emo       uint32             `protobuf:"varint,3,opt,name=emo,proto3" json:"emo"`
	Operation *GameSelfOperation `protobuf:"bytes,10,opt,name=operation,proto3" json:"operation"`
	Cpg       *GameChiPengGang   `protobuf:"bytes,11,opt,name=cpg,proto3" json:"cpg"`
	Vote      *GameVoteGameEnd   `protobuf:"bytes,12,opt,name=vote,proto3" json:"vote"`
}

func (x *GameUserInput) Reset() {
	*x = GameUserInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[585]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserInput) ProtoMessage() {}

func (x *GameUserInput) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[585]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserInput.ProtoReflect.Descriptor instead.
func (*GameUserInput) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{585}
}

func (x *GameUserInput) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameUserInput) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameUserInput) GetEmo() uint32 {
	if x != nil {
		return x.Emo
	}
	return 0
}

func (x *GameUserInput) GetOperation() *GameSelfOperation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *GameUserInput) GetCpg() *GameChiPengGang {
	if x != nil {
		return x.Cpg
	}
	return nil
}

func (x *GameUserInput) GetVote() *GameVoteGameEnd {
	if x != nil {
		return x.Vote
	}
	return nil
}

type GameUserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Type uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
}

func (x *GameUserEvent) Reset() {
	*x = GameUserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[586]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserEvent) ProtoMessage() {}

func (x *GameUserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[586]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserEvent.ProtoReflect.Descriptor instead.
func (*GameUserEvent) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{586}
}

func (x *GameUserEvent) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameUserEvent) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GameAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passed    uint32         `protobuf:"varint,1,opt,name=passed,proto3" json:"passed"`
	Type      uint32         `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Result    []byte         `protobuf:"bytes,3,opt,name=result,proto3" json:"result"`
	UserInput *GameUserInput `protobuf:"bytes,4,opt,name=user_input,json=userInput,proto3" json:"user_input"`
	UserEvent *GameUserEvent `protobuf:"bytes,5,opt,name=user_event,json=userEvent,proto3" json:"user_event"`
	GameEvent uint32         `protobuf:"varint,6,opt,name=game_event,json=gameEvent,proto3" json:"game_event"`
}

func (x *GameAction) Reset() {
	*x = GameAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[587]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAction) ProtoMessage() {}

func (x *GameAction) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[587]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAction.ProtoReflect.Descriptor instead.
func (*GameAction) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{587}
}

func (x *GameAction) GetPassed() uint32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *GameAction) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameAction) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GameAction) GetUserInput() *GameUserInput {
	if x != nil {
		return x.UserInput
	}
	return nil
}

func (x *GameAction) GetUserEvent() *GameUserEvent {
	if x != nil {
		return x.UserEvent
	}
	return nil
}

func (x *GameAction) GetGameEvent() uint32 {
	if x != nil {
		return x.GameEvent
	}
	return 0
}

type OptionalOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Combination      []string `protobuf:"bytes,2,rep,name=combination,proto3" json:"combination"`
	ChangeTiles      []string `protobuf:"bytes,3,rep,name=change_tiles,json=changeTiles,proto3" json:"change_tiles"`
	ChangeTileStates []int32  `protobuf:"varint,4,rep,packed,name=change_tile_states,json=changeTileStates,proto3" json:"change_tile_states"`
	GapType          uint32   `protobuf:"varint,5,opt,name=gap_type,json=gapType,proto3" json:"gap_type"`
}

func (x *OptionalOperation) Reset() {
	*x = OptionalOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[588]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalOperation) ProtoMessage() {}

func (x *OptionalOperation) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[588]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalOperation.ProtoReflect.Descriptor instead.
func (*OptionalOperation) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{588}
}

func (x *OptionalOperation) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OptionalOperation) GetCombination() []string {
	if x != nil {
		return x.Combination
	}
	return nil
}

func (x *OptionalOperation) GetChangeTiles() []string {
	if x != nil {
		return x.ChangeTiles
	}
	return nil
}

func (x *OptionalOperation) GetChangeTileStates() []int32 {
	if x != nil {
		return x.ChangeTileStates
	}
	return nil
}

func (x *OptionalOperation) GetGapType() uint32 {
	if x != nil {
		return x.GapType
	}
	return 0
}

type OptionalOperationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat          uint32               `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	OperationList []*OptionalOperation `protobuf:"bytes,2,rep,name=operation_list,json=operationList,proto3" json:"operation_list"`
	TimeAdd       uint32               `protobuf:"varint,4,opt,name=time_add,json=timeAdd,proto3" json:"time_add"`
	TimeFixed     uint32               `protobuf:"varint,5,opt,name=time_fixed,json=timeFixed,proto3" json:"time_fixed"`
}

func (x *OptionalOperationList) Reset() {
	*x = OptionalOperationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[589]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalOperationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalOperationList) ProtoMessage() {}

func (x *OptionalOperationList) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[589]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalOperationList.ProtoReflect.Descriptor instead.
func (*OptionalOperationList) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{589}
}

func (x *OptionalOperationList) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *OptionalOperationList) GetOperationList() []*OptionalOperation {
	if x != nil {
		return x.OperationList
	}
	return nil
}

func (x *OptionalOperationList) GetTimeAdd() uint32 {
	if x != nil {
		return x.TimeAdd
	}
	return 0
}

func (x *OptionalOperationList) GetTimeFixed() uint32 {
	if x != nil {
		return x.TimeFixed
	}
	return 0
}

type LiQiSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat     uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Score    int32  `protobuf:"varint,2,opt,name=score,proto3" json:"score"`
	Liqibang uint32 `protobuf:"varint,3,opt,name=liqibang,proto3" json:"liqibang"`
	Failed   bool   `protobuf:"varint,4,opt,name=failed,proto3" json:"failed"`
}

func (x *LiQiSuccess) Reset() {
	*x = LiQiSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[590]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiQiSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiQiSuccess) ProtoMessage() {}

func (x *LiQiSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[590]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiQiSuccess.ProtoReflect.Descriptor instead.
func (*LiQiSuccess) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{590}
}

func (x *LiQiSuccess) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *LiQiSuccess) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *LiQiSuccess) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *LiQiSuccess) GetFailed() bool {
	if x != nil {
		return x.Failed
	}
	return false
}

type FanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Val  uint32 `protobuf:"varint,2,opt,name=val,proto3" json:"val"`
	Id   uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
}

func (x *FanInfo) Reset() {
	*x = FanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[591]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FanInfo) ProtoMessage() {}

func (x *FanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[591]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FanInfo.ProtoReflect.Descriptor instead.
func (*FanInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{591}
}

func (x *FanInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FanInfo) GetVal() uint32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *FanInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type HuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hand          []string   `protobuf:"bytes,1,rep,name=hand,proto3" json:"hand"`
	Ming          []string   `protobuf:"bytes,2,rep,name=ming,proto3" json:"ming"`
	HuTile        string     `protobuf:"bytes,3,opt,name=hu_tile,json=huTile,proto3" json:"hu_tile"`
	Seat          uint32     `protobuf:"varint,4,opt,name=seat,proto3" json:"seat"`
	Zimo          bool       `protobuf:"varint,5,opt,name=zimo,proto3" json:"zimo"`
	Qinjia        bool       `protobuf:"varint,6,opt,name=qinjia,proto3" json:"qinjia"`
	Liqi          bool       `protobuf:"varint,7,opt,name=liqi,proto3" json:"liqi"`
	Doras         []string   `protobuf:"bytes,8,rep,name=doras,proto3" json:"doras"`
	LiDoras       []string   `protobuf:"bytes,9,rep,name=li_doras,json=liDoras,proto3" json:"li_doras"`
	Yiman         bool       `protobuf:"varint,10,opt,name=yiman,proto3" json:"yiman"`
	Count         uint32     `protobuf:"varint,11,opt,name=count,proto3" json:"count"`
	Fans          []*FanInfo `protobuf:"bytes,12,rep,name=fans,proto3" json:"fans"`
	Fu            uint32     `protobuf:"varint,13,opt,name=fu,proto3" json:"fu"`
	Title         string     `protobuf:"bytes,14,opt,name=title,proto3" json:"title"`
	PointRong     uint32     `protobuf:"varint,15,opt,name=point_rong,json=pointRong,proto3" json:"point_rong"`
	PointZimoQin  uint32     `protobuf:"varint,16,opt,name=point_zimo_qin,json=pointZimoQin,proto3" json:"point_zimo_qin"`
	PointZimoXian uint32     `protobuf:"varint,17,opt,name=point_zimo_xian,json=pointZimoXian,proto3" json:"point_zimo_xian"`
	TitleId       uint32     `protobuf:"varint,18,opt,name=title_id,json=titleId,proto3" json:"title_id"`
	PointSum      uint32     `protobuf:"varint,19,opt,name=point_sum,json=pointSum,proto3" json:"point_sum"`
	Dadian        uint32     `protobuf:"varint,20,opt,name=dadian,proto3" json:"dadian"`
	Baopai        uint32     `protobuf:"varint,21,opt,name=baopai,proto3" json:"baopai"`
	BaopaiSeats   []uint32   `protobuf:"varint,22,rep,packed,name=baopai_seats,json=baopaiSeats,proto3" json:"baopai_seats"`
	Lines         []string   `protobuf:"bytes,23,rep,name=lines,proto3" json:"lines"`
	TianmingBonus uint32     `protobuf:"varint,24,opt,name=tianming_bonus,json=tianmingBonus,proto3" json:"tianming_bonus"`
}

func (x *HuleInfo) Reset() {
	*x = HuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[592]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuleInfo) ProtoMessage() {}

func (x *HuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[592]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuleInfo.ProtoReflect.Descriptor instead.
func (*HuleInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{592}
}

func (x *HuleInfo) GetHand() []string {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *HuleInfo) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *HuleInfo) GetHuTile() string {
	if x != nil {
		return x.HuTile
	}
	return ""
}

func (x *HuleInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *HuleInfo) GetZimo() bool {
	if x != nil {
		return x.Zimo
	}
	return false
}

func (x *HuleInfo) GetQinjia() bool {
	if x != nil {
		return x.Qinjia
	}
	return false
}

func (x *HuleInfo) GetLiqi() bool {
	if x != nil {
		return x.Liqi
	}
	return false
}

func (x *HuleInfo) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *HuleInfo) GetLiDoras() []string {
	if x != nil {
		return x.LiDoras
	}
	return nil
}

func (x *HuleInfo) GetYiman() bool {
	if x != nil {
		return x.Yiman
	}
	return false
}

func (x *HuleInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HuleInfo) GetFans() []*FanInfo {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *HuleInfo) GetFu() uint32 {
	if x != nil {
		return x.Fu
	}
	return 0
}

func (x *HuleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HuleInfo) GetPointRong() uint32 {
	if x != nil {
		return x.PointRong
	}
	return 0
}

func (x *HuleInfo) GetPointZimoQin() uint32 {
	if x != nil {
		return x.PointZimoQin
	}
	return 0
}

func (x *HuleInfo) GetPointZimoXian() uint32 {
	if x != nil {
		return x.PointZimoXian
	}
	return 0
}

func (x *HuleInfo) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *HuleInfo) GetPointSum() uint32 {
	if x != nil {
		return x.PointSum
	}
	return 0
}

func (x *HuleInfo) GetDadian() uint32 {
	if x != nil {
		return x.Dadian
	}
	return 0
}

func (x *HuleInfo) GetBaopai() uint32 {
	if x != nil {
		return x.Baopai
	}
	return 0
}

func (x *HuleInfo) GetBaopaiSeats() []uint32 {
	if x != nil {
		return x.BaopaiSeats
	}
	return nil
}

func (x *HuleInfo) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *HuleInfo) GetTianmingBonus() uint32 {
	if x != nil {
		return x.TianmingBonus
	}
	return 0
}

type TingPaiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tile          string `protobuf:"bytes,1,opt,name=tile,proto3" json:"tile"`
	Haveyi        bool   `protobuf:"varint,2,opt,name=haveyi,proto3" json:"haveyi"`
	Yiman         bool   `protobuf:"varint,3,opt,name=yiman,proto3" json:"yiman"`
	Count         uint32 `protobuf:"varint,4,opt,name=count,proto3" json:"count"`
	Fu            uint32 `protobuf:"varint,5,opt,name=fu,proto3" json:"fu"`
	BiaoDoraCount uint32 `protobuf:"varint,6,opt,name=biao_dora_count,json=biaoDoraCount,proto3" json:"biao_dora_count"`
	YimanZimo     bool   `protobuf:"varint,7,opt,name=yiman_zimo,json=yimanZimo,proto3" json:"yiman_zimo"`
	CountZimo     uint32 `protobuf:"varint,8,opt,name=count_zimo,json=countZimo,proto3" json:"count_zimo"`
	FuZimo        uint32 `protobuf:"varint,9,opt,name=fu_zimo,json=fuZimo,proto3" json:"fu_zimo"`
}

func (x *TingPaiInfo) Reset() {
	*x = TingPaiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[593]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TingPaiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TingPaiInfo) ProtoMessage() {}

func (x *TingPaiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[593]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TingPaiInfo.ProtoReflect.Descriptor instead.
func (*TingPaiInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{593}
}

func (x *TingPaiInfo) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *TingPaiInfo) GetHaveyi() bool {
	if x != nil {
		return x.Haveyi
	}
	return false
}

func (x *TingPaiInfo) GetYiman() bool {
	if x != nil {
		return x.Yiman
	}
	return false
}

func (x *TingPaiInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TingPaiInfo) GetFu() uint32 {
	if x != nil {
		return x.Fu
	}
	return 0
}

func (x *TingPaiInfo) GetBiaoDoraCount() uint32 {
	if x != nil {
		return x.BiaoDoraCount
	}
	return 0
}

func (x *TingPaiInfo) GetYimanZimo() bool {
	if x != nil {
		return x.YimanZimo
	}
	return false
}

func (x *TingPaiInfo) GetCountZimo() uint32 {
	if x != nil {
		return x.CountZimo
	}
	return 0
}

func (x *TingPaiInfo) GetFuZimo() uint32 {
	if x != nil {
		return x.FuZimo
	}
	return 0
}

type TingPaiDiscardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tile     string         `protobuf:"bytes,1,opt,name=tile,proto3" json:"tile"`
	Zhenting bool           `protobuf:"varint,2,opt,name=zhenting,proto3" json:"zhenting"`
	Infos    []*TingPaiInfo `protobuf:"bytes,3,rep,name=infos,proto3" json:"infos"`
}

func (x *TingPaiDiscardInfo) Reset() {
	*x = TingPaiDiscardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[594]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TingPaiDiscardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TingPaiDiscardInfo) ProtoMessage() {}

func (x *TingPaiDiscardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[594]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TingPaiDiscardInfo.ProtoReflect.Descriptor instead.
func (*TingPaiDiscardInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{594}
}

func (x *TingPaiDiscardInfo) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *TingPaiDiscardInfo) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

func (x *TingPaiDiscardInfo) GetInfos() []*TingPaiInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores []int32 `protobuf:"varint,1,rep,packed,name=scores,proto3" json:"scores"`
}

func (x *GameEnd) Reset() {
	*x = GameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[595]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEnd) ProtoMessage() {}

func (x *GameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[595]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEnd.ProtoReflect.Descriptor instead.
func (*GameEnd) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{595}
}

func (x *GameEnd) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

type ActionSelectGap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GapTypes  []uint32               `protobuf:"varint,1,rep,packed,name=gap_types,json=gapTypes,proto3" json:"gap_types"`
	Tingpais0 []*TingPaiDiscardInfo  `protobuf:"bytes,2,rep,name=tingpais0,proto3" json:"tingpais0"`
	Tingpais1 []*TingPaiInfo         `protobuf:"bytes,3,rep,name=tingpais1,proto3" json:"tingpais1"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation"`
}

func (x *ActionSelectGap) Reset() {
	*x = ActionSelectGap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[596]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionSelectGap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSelectGap) ProtoMessage() {}

func (x *ActionSelectGap) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[596]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionSelectGap.ProtoReflect.Descriptor instead.
func (*ActionSelectGap) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{596}
}

func (x *ActionSelectGap) GetGapTypes() []uint32 {
	if x != nil {
		return x.GapTypes
	}
	return nil
}

func (x *ActionSelectGap) GetTingpais0() []*TingPaiDiscardInfo {
	if x != nil {
		return x.Tingpais0
	}
	return nil
}

func (x *ActionSelectGap) GetTingpais1() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais1
	}
	return nil
}

func (x *ActionSelectGap) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

type RecordSelectGap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GapTypes  []uint32                   `protobuf:"varint,1,rep,packed,name=gap_types,json=gapTypes,proto3" json:"gap_types"`
	Tingpai   []*RecordSelectGap_TingPai `protobuf:"bytes,2,rep,name=tingpai,proto3" json:"tingpai"`
	Operation *OptionalOperationList     `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation"`
}

func (x *RecordSelectGap) Reset() {
	*x = RecordSelectGap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[597]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordSelectGap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordSelectGap) ProtoMessage() {}

func (x *RecordSelectGap) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[597]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordSelectGap.ProtoReflect.Descriptor instead.
func (*RecordSelectGap) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{597}
}

func (x *RecordSelectGap) GetGapTypes() []uint32 {
	if x != nil {
		return x.GapTypes
	}
	return nil
}

func (x *RecordSelectGap) GetTingpai() []*RecordSelectGap_TingPai {
	if x != nil {
		return x.Tingpai
	}
	return nil
}

func (x *RecordSelectGap) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ActionChangeTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InTiles       []string               `protobuf:"bytes,1,rep,name=in_tiles,json=inTiles,proto3" json:"in_tiles"`
	InTileStates  []int32                `protobuf:"varint,2,rep,packed,name=in_tile_states,json=inTileStates,proto3" json:"in_tile_states"`
	OutTiles      []string               `protobuf:"bytes,3,rep,name=out_tiles,json=outTiles,proto3" json:"out_tiles"`
	OutTileStates []int32                `protobuf:"varint,4,rep,packed,name=out_tile_states,json=outTileStates,proto3" json:"out_tile_states"`
	Doras         []string               `protobuf:"bytes,5,rep,name=doras,proto3" json:"doras"`
	Tingpais0     []*TingPaiDiscardInfo  `protobuf:"bytes,6,rep,name=tingpais0,proto3" json:"tingpais0"`
	Tingpais1     []*TingPaiInfo         `protobuf:"bytes,7,rep,name=tingpais1,proto3" json:"tingpais1"`
	Operation     *OptionalOperationList `protobuf:"bytes,8,opt,name=operation,proto3" json:"operation"`
	ChangeType    uint32                 `protobuf:"varint,9,opt,name=change_type,json=changeType,proto3" json:"change_type"`
}

func (x *ActionChangeTile) Reset() {
	*x = ActionChangeTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[598]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionChangeTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionChangeTile) ProtoMessage() {}

func (x *ActionChangeTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[598]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionChangeTile.ProtoReflect.Descriptor instead.
func (*ActionChangeTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{598}
}

func (x *ActionChangeTile) GetInTiles() []string {
	if x != nil {
		return x.InTiles
	}
	return nil
}

func (x *ActionChangeTile) GetInTileStates() []int32 {
	if x != nil {
		return x.InTileStates
	}
	return nil
}

func (x *ActionChangeTile) GetOutTiles() []string {
	if x != nil {
		return x.OutTiles
	}
	return nil
}

func (x *ActionChangeTile) GetOutTileStates() []int32 {
	if x != nil {
		return x.OutTileStates
	}
	return nil
}

func (x *ActionChangeTile) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionChangeTile) GetTingpais0() []*TingPaiDiscardInfo {
	if x != nil {
		return x.Tingpais0
	}
	return nil
}

func (x *ActionChangeTile) GetTingpais1() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais1
	}
	return nil
}

func (x *ActionChangeTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionChangeTile) GetChangeType() uint32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

type RecordChangeTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doras           []string                       `protobuf:"bytes,1,rep,name=doras,proto3" json:"doras"`
	Tingpai         []*RecordChangeTile_TingPai    `protobuf:"bytes,2,rep,name=tingpai,proto3" json:"tingpai"`
	ChangeTileInfos []*RecordChangeTile_ChangeTile `protobuf:"bytes,3,rep,name=change_tile_infos,json=changeTileInfos,proto3" json:"change_tile_infos"`
	Operation       *OptionalOperationList         `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation"`
	ChangeType      uint32                         `protobuf:"varint,5,opt,name=change_type,json=changeType,proto3" json:"change_type"`
	Operations      []*OptionalOperationList       `protobuf:"bytes,6,rep,name=operations,proto3" json:"operations"`
}

func (x *RecordChangeTile) Reset() {
	*x = RecordChangeTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[599]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordChangeTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordChangeTile) ProtoMessage() {}

func (x *RecordChangeTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[599]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordChangeTile.ProtoReflect.Descriptor instead.
func (*RecordChangeTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{599}
}

func (x *RecordChangeTile) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordChangeTile) GetTingpai() []*RecordChangeTile_TingPai {
	if x != nil {
		return x.Tingpai
	}
	return nil
}

func (x *RecordChangeTile) GetChangeTileInfos() []*RecordChangeTile_ChangeTile {
	if x != nil {
		return x.ChangeTileInfos
	}
	return nil
}

func (x *RecordChangeTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *RecordChangeTile) GetChangeType() uint32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *RecordChangeTile) GetOperations() []*OptionalOperationList {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ActionRevealTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	IsLiqi    bool                   `protobuf:"varint,2,opt,name=is_liqi,json=isLiqi,proto3" json:"is_liqi"`
	IsWliqi   bool                   `protobuf:"varint,3,opt,name=is_wliqi,json=isWliqi,proto3" json:"is_wliqi"`
	Moqie     bool                   `protobuf:"varint,4,opt,name=moqie,proto3" json:"moqie"`
	Scores    []int32                `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang  uint32                 `protobuf:"varint,6,opt,name=liqibang,proto3" json:"liqibang"`
	Operation *OptionalOperationList `protobuf:"bytes,7,opt,name=operation,proto3" json:"operation"`
	Tingpais  []*TingPaiInfo         `protobuf:"bytes,8,rep,name=tingpais,proto3" json:"tingpais"`
	Tile      string                 `protobuf:"bytes,9,opt,name=tile,proto3" json:"tile"`
	Zhenting  bool                   `protobuf:"varint,10,opt,name=zhenting,proto3" json:"zhenting"`
}

func (x *ActionRevealTile) Reset() {
	*x = ActionRevealTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[600]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionRevealTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionRevealTile) ProtoMessage() {}

func (x *ActionRevealTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[600]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionRevealTile.ProtoReflect.Descriptor instead.
func (*ActionRevealTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{600}
}

func (x *ActionRevealTile) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionRevealTile) GetIsLiqi() bool {
	if x != nil {
		return x.IsLiqi
	}
	return false
}

func (x *ActionRevealTile) GetIsWliqi() bool {
	if x != nil {
		return x.IsWliqi
	}
	return false
}

func (x *ActionRevealTile) GetMoqie() bool {
	if x != nil {
		return x.Moqie
	}
	return false
}

func (x *ActionRevealTile) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionRevealTile) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *ActionRevealTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionRevealTile) GetTingpais() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *ActionRevealTile) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *ActionRevealTile) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

type RecordRevealTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat       uint32                   `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	IsLiqi     bool                     `protobuf:"varint,2,opt,name=is_liqi,json=isLiqi,proto3" json:"is_liqi"`
	IsWliqi    bool                     `protobuf:"varint,3,opt,name=is_wliqi,json=isWliqi,proto3" json:"is_wliqi"`
	Moqie      bool                     `protobuf:"varint,4,opt,name=moqie,proto3" json:"moqie"`
	Scores     []int32                  `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang   uint32                   `protobuf:"varint,6,opt,name=liqibang,proto3" json:"liqibang"`
	Operations []*OptionalOperationList `protobuf:"bytes,7,rep,name=operations,proto3" json:"operations"`
	Tingpais   []*TingPaiInfo           `protobuf:"bytes,8,rep,name=tingpais,proto3" json:"tingpais"`
	Tile       string                   `protobuf:"bytes,9,opt,name=tile,proto3" json:"tile"`
	Zhenting   []bool                   `protobuf:"varint,10,rep,packed,name=zhenting,proto3" json:"zhenting"`
}

func (x *RecordRevealTile) Reset() {
	*x = RecordRevealTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[601]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordRevealTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRevealTile) ProtoMessage() {}

func (x *RecordRevealTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[601]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRevealTile.ProtoReflect.Descriptor instead.
func (*RecordRevealTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{601}
}

func (x *RecordRevealTile) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordRevealTile) GetIsLiqi() bool {
	if x != nil {
		return x.IsLiqi
	}
	return false
}

func (x *RecordRevealTile) GetIsWliqi() bool {
	if x != nil {
		return x.IsWliqi
	}
	return false
}

func (x *RecordRevealTile) GetMoqie() bool {
	if x != nil {
		return x.Moqie
	}
	return false
}

func (x *RecordRevealTile) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordRevealTile) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *RecordRevealTile) GetOperations() []*OptionalOperationList {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *RecordRevealTile) GetTingpais() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *RecordRevealTile) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *RecordRevealTile) GetZhenting() []bool {
	if x != nil {
		return x.Zhenting
	}
	return nil
}

type ActionUnveilTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      int32                  `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Scores    []int32                `protobuf:"varint,2,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang  uint32                 `protobuf:"varint,3,opt,name=liqibang,proto3" json:"liqibang"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation"`
}

func (x *ActionUnveilTile) Reset() {
	*x = ActionUnveilTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[602]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionUnveilTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionUnveilTile) ProtoMessage() {}

func (x *ActionUnveilTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[602]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionUnveilTile.ProtoReflect.Descriptor instead.
func (*ActionUnveilTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{602}
}

func (x *ActionUnveilTile) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionUnveilTile) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionUnveilTile) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *ActionUnveilTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

type RecordUnveilTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      int32                  `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Scores    []int32                `protobuf:"varint,2,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang  uint32                 `protobuf:"varint,3,opt,name=liqibang,proto3" json:"liqibang"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation"`
}

func (x *RecordUnveilTile) Reset() {
	*x = RecordUnveilTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[603]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordUnveilTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordUnveilTile) ProtoMessage() {}

func (x *RecordUnveilTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[603]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordUnveilTile.ProtoReflect.Descriptor instead.
func (*RecordUnveilTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{603}
}

func (x *RecordUnveilTile) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordUnveilTile) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordUnveilTile) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *RecordUnveilTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ActionLockTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Scores    []int32                `protobuf:"varint,2,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang  uint32                 `protobuf:"varint,3,opt,name=liqibang,proto3" json:"liqibang"`
	Tile      string                 `protobuf:"bytes,4,opt,name=tile,proto3" json:"tile"`
	Operation *OptionalOperationList `protobuf:"bytes,5,opt,name=operation,proto3" json:"operation"`
	Zhenting  bool                   `protobuf:"varint,6,opt,name=zhenting,proto3" json:"zhenting"`
	Tingpais  []*TingPaiInfo         `protobuf:"bytes,7,rep,name=tingpais,proto3" json:"tingpais"`
	Doras     []string               `protobuf:"bytes,8,rep,name=doras,proto3" json:"doras"`
	LockState int32                  `protobuf:"varint,9,opt,name=lock_state,json=lockState,proto3" json:"lock_state"`
}

func (x *ActionLockTile) Reset() {
	*x = ActionLockTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[604]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionLockTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionLockTile) ProtoMessage() {}

func (x *ActionLockTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[604]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionLockTile.ProtoReflect.Descriptor instead.
func (*ActionLockTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{604}
}

func (x *ActionLockTile) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionLockTile) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionLockTile) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *ActionLockTile) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *ActionLockTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionLockTile) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

func (x *ActionLockTile) GetTingpais() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *ActionLockTile) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionLockTile) GetLockState() int32 {
	if x != nil {
		return x.LockState
	}
	return 0
}

type RecordLockTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32                   `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Scores    []int32                  `protobuf:"varint,2,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang  uint32                   `protobuf:"varint,3,opt,name=liqibang,proto3" json:"liqibang"`
	Tile      string                   `protobuf:"bytes,4,opt,name=tile,proto3" json:"tile"`
	Operation []*OptionalOperationList `protobuf:"bytes,5,rep,name=operation,proto3" json:"operation"`
	Zhentings []bool                   `protobuf:"varint,6,rep,packed,name=zhentings,proto3" json:"zhentings"`
	Tingpais  []*TingPaiInfo           `protobuf:"bytes,7,rep,name=tingpais,proto3" json:"tingpais"`
	Doras     []string                 `protobuf:"bytes,8,rep,name=doras,proto3" json:"doras"`
	LockState int32                    `protobuf:"varint,9,opt,name=lock_state,json=lockState,proto3" json:"lock_state"`
}

func (x *RecordLockTile) Reset() {
	*x = RecordLockTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[605]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordLockTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordLockTile) ProtoMessage() {}

func (x *RecordLockTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[605]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordLockTile.ProtoReflect.Descriptor instead.
func (*RecordLockTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{605}
}

func (x *RecordLockTile) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordLockTile) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordLockTile) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

func (x *RecordLockTile) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *RecordLockTile) GetOperation() []*OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *RecordLockTile) GetZhentings() []bool {
	if x != nil {
		return x.Zhentings
	}
	return nil
}

func (x *RecordLockTile) GetTingpais() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *RecordLockTile) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordLockTile) GetLockState() int32 {
	if x != nil {
		return x.LockState
	}
	return 0
}

type ActionDiscardTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Tile      string                 `protobuf:"bytes,2,opt,name=tile,proto3" json:"tile"`
	IsLiqi    bool                   `protobuf:"varint,3,opt,name=is_liqi,json=isLiqi,proto3" json:"is_liqi"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation"`
	Moqie     bool                   `protobuf:"varint,5,opt,name=moqie,proto3" json:"moqie"`
	Zhenting  bool                   `protobuf:"varint,6,opt,name=zhenting,proto3" json:"zhenting"`
	Tingpais  []*TingPaiInfo         `protobuf:"bytes,7,rep,name=tingpais,proto3" json:"tingpais"`
	Doras     []string               `protobuf:"bytes,8,rep,name=doras,proto3" json:"doras"`
	IsWliqi   bool                   `protobuf:"varint,9,opt,name=is_wliqi,json=isWliqi,proto3" json:"is_wliqi"`
	TileState uint32                 `protobuf:"varint,10,opt,name=tile_state,json=tileState,proto3" json:"tile_state"`
	Muyu      *MuyuInfo              `protobuf:"bytes,11,opt,name=muyu,proto3" json:"muyu"`
	Revealed  bool                   `protobuf:"varint,12,opt,name=revealed,proto3" json:"revealed"`
	Scores    []int32                `protobuf:"varint,13,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang  uint32                 `protobuf:"varint,14,opt,name=liqibang,proto3" json:"liqibang"`
}

func (x *ActionDiscardTile) Reset() {
	*x = ActionDiscardTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[606]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionDiscardTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDiscardTile) ProtoMessage() {}

func (x *ActionDiscardTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[606]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDiscardTile.ProtoReflect.Descriptor instead.
func (*ActionDiscardTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{606}
}

func (x *ActionDiscardTile) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionDiscardTile) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *ActionDiscardTile) GetIsLiqi() bool {
	if x != nil {
		return x.IsLiqi
	}
	return false
}

func (x *ActionDiscardTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionDiscardTile) GetMoqie() bool {
	if x != nil {
		return x.Moqie
	}
	return false
}

func (x *ActionDiscardTile) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

func (x *ActionDiscardTile) GetTingpais() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *ActionDiscardTile) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionDiscardTile) GetIsWliqi() bool {
	if x != nil {
		return x.IsWliqi
	}
	return false
}

func (x *ActionDiscardTile) GetTileState() uint32 {
	if x != nil {
		return x.TileState
	}
	return 0
}

func (x *ActionDiscardTile) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionDiscardTile) GetRevealed() bool {
	if x != nil {
		return x.Revealed
	}
	return false
}

func (x *ActionDiscardTile) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionDiscardTile) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

type RecordDiscardTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat       uint32                   `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Tile       string                   `protobuf:"bytes,2,opt,name=tile,proto3" json:"tile"`
	IsLiqi     bool                     `protobuf:"varint,3,opt,name=is_liqi,json=isLiqi,proto3" json:"is_liqi"`
	Moqie      bool                     `protobuf:"varint,5,opt,name=moqie,proto3" json:"moqie"`
	Zhenting   []bool                   `protobuf:"varint,6,rep,packed,name=zhenting,proto3" json:"zhenting"`
	Tingpais   []*TingPaiInfo           `protobuf:"bytes,7,rep,name=tingpais,proto3" json:"tingpais"`
	Doras      []string                 `protobuf:"bytes,8,rep,name=doras,proto3" json:"doras"`
	IsWliqi    bool                     `protobuf:"varint,9,opt,name=is_wliqi,json=isWliqi,proto3" json:"is_wliqi"`
	Operations []*OptionalOperationList `protobuf:"bytes,10,rep,name=operations,proto3" json:"operations"`
	TileState  uint32                   `protobuf:"varint,11,opt,name=tile_state,json=tileState,proto3" json:"tile_state"`
	Muyu       *MuyuInfo                `protobuf:"bytes,12,opt,name=muyu,proto3" json:"muyu"`
}

func (x *RecordDiscardTile) Reset() {
	*x = RecordDiscardTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[607]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordDiscardTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordDiscardTile) ProtoMessage() {}

func (x *RecordDiscardTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[607]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordDiscardTile.ProtoReflect.Descriptor instead.
func (*RecordDiscardTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{607}
}

func (x *RecordDiscardTile) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordDiscardTile) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *RecordDiscardTile) GetIsLiqi() bool {
	if x != nil {
		return x.IsLiqi
	}
	return false
}

func (x *RecordDiscardTile) GetMoqie() bool {
	if x != nil {
		return x.Moqie
	}
	return false
}

func (x *RecordDiscardTile) GetZhenting() []bool {
	if x != nil {
		return x.Zhenting
	}
	return nil
}

func (x *RecordDiscardTile) GetTingpais() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *RecordDiscardTile) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordDiscardTile) GetIsWliqi() bool {
	if x != nil {
		return x.IsWliqi
	}
	return false
}

func (x *RecordDiscardTile) GetOperations() []*OptionalOperationList {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *RecordDiscardTile) GetTileState() uint32 {
	if x != nil {
		return x.TileState
	}
	return 0
}

func (x *RecordDiscardTile) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

type ActionDealTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat          uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Tile          string                 `protobuf:"bytes,2,opt,name=tile,proto3" json:"tile"`
	LeftTileCount uint32                 `protobuf:"varint,3,opt,name=left_tile_count,json=leftTileCount,proto3" json:"left_tile_count"`
	Operation     *OptionalOperationList `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation"`
	Liqi          *LiQiSuccess           `protobuf:"bytes,5,opt,name=liqi,proto3" json:"liqi"`
	Doras         []string               `protobuf:"bytes,6,rep,name=doras,proto3" json:"doras"`
	Zhenting      bool                   `protobuf:"varint,7,opt,name=zhenting,proto3" json:"zhenting"`
	Tingpais      []*TingPaiDiscardInfo  `protobuf:"bytes,8,rep,name=tingpais,proto3" json:"tingpais"`
	TileState     uint32                 `protobuf:"varint,9,opt,name=tile_state,json=tileState,proto3" json:"tile_state"`
	Muyu          *MuyuInfo              `protobuf:"bytes,10,opt,name=muyu,proto3" json:"muyu"`
	TileIndex     uint32                 `protobuf:"varint,11,opt,name=tile_index,json=tileIndex,proto3" json:"tile_index"`
}

func (x *ActionDealTile) Reset() {
	*x = ActionDealTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[608]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionDealTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDealTile) ProtoMessage() {}

func (x *ActionDealTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[608]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDealTile.ProtoReflect.Descriptor instead.
func (*ActionDealTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{608}
}

func (x *ActionDealTile) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionDealTile) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *ActionDealTile) GetLeftTileCount() uint32 {
	if x != nil {
		return x.LeftTileCount
	}
	return 0
}

func (x *ActionDealTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionDealTile) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

func (x *ActionDealTile) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionDealTile) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

func (x *ActionDealTile) GetTingpais() []*TingPaiDiscardInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *ActionDealTile) GetTileState() uint32 {
	if x != nil {
		return x.TileState
	}
	return 0
}

func (x *ActionDealTile) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionDealTile) GetTileIndex() uint32 {
	if x != nil {
		return x.TileIndex
	}
	return 0
}

type RecordDealTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat          uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Tile          string                 `protobuf:"bytes,2,opt,name=tile,proto3" json:"tile"`
	LeftTileCount uint32                 `protobuf:"varint,3,opt,name=left_tile_count,json=leftTileCount,proto3" json:"left_tile_count"`
	Liqi          *LiQiSuccess           `protobuf:"bytes,5,opt,name=liqi,proto3" json:"liqi"`
	Doras         []string               `protobuf:"bytes,6,rep,name=doras,proto3" json:"doras"`
	Zhenting      []bool                 `protobuf:"varint,7,rep,packed,name=zhenting,proto3" json:"zhenting"`
	Operation     *OptionalOperationList `protobuf:"bytes,8,opt,name=operation,proto3" json:"operation"`
	TileState     uint32                 `protobuf:"varint,9,opt,name=tile_state,json=tileState,proto3" json:"tile_state"`
	Muyu          *MuyuInfo              `protobuf:"bytes,11,opt,name=muyu,proto3" json:"muyu"`
	TileIndex     uint32                 `protobuf:"varint,12,opt,name=tile_index,json=tileIndex,proto3" json:"tile_index"`
}

func (x *RecordDealTile) Reset() {
	*x = RecordDealTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[609]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordDealTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordDealTile) ProtoMessage() {}

func (x *RecordDealTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[609]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordDealTile.ProtoReflect.Descriptor instead.
func (*RecordDealTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{609}
}

func (x *RecordDealTile) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordDealTile) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *RecordDealTile) GetLeftTileCount() uint32 {
	if x != nil {
		return x.LeftTileCount
	}
	return 0
}

func (x *RecordDealTile) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

func (x *RecordDealTile) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordDealTile) GetZhenting() []bool {
	if x != nil {
		return x.Zhenting
	}
	return nil
}

func (x *RecordDealTile) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *RecordDealTile) GetTileState() uint32 {
	if x != nil {
		return x.TileState
	}
	return 0
}

func (x *RecordDealTile) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *RecordDealTile) GetTileIndex() uint32 {
	if x != nil {
		return x.TileIndex
	}
	return 0
}

type ActionFillAwaitingTiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwaitingTiles []string               `protobuf:"bytes,1,rep,name=awaiting_tiles,json=awaitingTiles,proto3" json:"awaiting_tiles"`
	LeftTileCount uint32                 `protobuf:"varint,2,opt,name=left_tile_count,json=leftTileCount,proto3" json:"left_tile_count"`
	Operation     *OptionalOperationList `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation"`
	Liqi          *LiQiSuccess           `protobuf:"bytes,4,opt,name=liqi,proto3" json:"liqi"`
}

func (x *ActionFillAwaitingTiles) Reset() {
	*x = ActionFillAwaitingTiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[610]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionFillAwaitingTiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionFillAwaitingTiles) ProtoMessage() {}

func (x *ActionFillAwaitingTiles) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[610]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionFillAwaitingTiles.ProtoReflect.Descriptor instead.
func (*ActionFillAwaitingTiles) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{610}
}

func (x *ActionFillAwaitingTiles) GetAwaitingTiles() []string {
	if x != nil {
		return x.AwaitingTiles
	}
	return nil
}

func (x *ActionFillAwaitingTiles) GetLeftTileCount() uint32 {
	if x != nil {
		return x.LeftTileCount
	}
	return 0
}

func (x *ActionFillAwaitingTiles) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionFillAwaitingTiles) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

type RecordFillAwaitingTiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwaitingTiles []string               `protobuf:"bytes,1,rep,name=awaiting_tiles,json=awaitingTiles,proto3" json:"awaiting_tiles"`
	LeftTileCount uint32                 `protobuf:"varint,2,opt,name=left_tile_count,json=leftTileCount,proto3" json:"left_tile_count"`
	Operation     *OptionalOperationList `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation"`
	Liqi          *LiQiSuccess           `protobuf:"bytes,4,opt,name=liqi,proto3" json:"liqi"`
}

func (x *RecordFillAwaitingTiles) Reset() {
	*x = RecordFillAwaitingTiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[611]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordFillAwaitingTiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordFillAwaitingTiles) ProtoMessage() {}

func (x *RecordFillAwaitingTiles) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[611]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordFillAwaitingTiles.ProtoReflect.Descriptor instead.
func (*RecordFillAwaitingTiles) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{611}
}

func (x *RecordFillAwaitingTiles) GetAwaitingTiles() []string {
	if x != nil {
		return x.AwaitingTiles
	}
	return nil
}

func (x *RecordFillAwaitingTiles) GetLeftTileCount() uint32 {
	if x != nil {
		return x.LeftTileCount
	}
	return 0
}

func (x *RecordFillAwaitingTiles) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *RecordFillAwaitingTiles) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

type ActionChiPengGang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat       uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Type       uint32                 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Tiles      []string               `protobuf:"bytes,3,rep,name=tiles,proto3" json:"tiles"`
	Froms      []uint32               `protobuf:"varint,4,rep,packed,name=froms,proto3" json:"froms"`
	Liqi       *LiQiSuccess           `protobuf:"bytes,5,opt,name=liqi,proto3" json:"liqi"`
	Operation  *OptionalOperationList `protobuf:"bytes,6,opt,name=operation,proto3" json:"operation"`
	Zhenting   bool                   `protobuf:"varint,7,opt,name=zhenting,proto3" json:"zhenting"`
	Tingpais   []*TingPaiDiscardInfo  `protobuf:"bytes,8,rep,name=tingpais,proto3" json:"tingpais"`
	TileStates []uint32               `protobuf:"varint,9,rep,packed,name=tile_states,json=tileStates,proto3" json:"tile_states"`
	Muyu       *MuyuInfo              `protobuf:"bytes,10,opt,name=muyu,proto3" json:"muyu"`
	Scores     []int32                `protobuf:"varint,11,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang   uint32                 `protobuf:"varint,12,opt,name=liqibang,proto3" json:"liqibang"`
}

func (x *ActionChiPengGang) Reset() {
	*x = ActionChiPengGang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[612]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionChiPengGang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionChiPengGang) ProtoMessage() {}

func (x *ActionChiPengGang) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[612]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionChiPengGang.ProtoReflect.Descriptor instead.
func (*ActionChiPengGang) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{612}
}

func (x *ActionChiPengGang) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionChiPengGang) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ActionChiPengGang) GetTiles() []string {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *ActionChiPengGang) GetFroms() []uint32 {
	if x != nil {
		return x.Froms
	}
	return nil
}

func (x *ActionChiPengGang) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

func (x *ActionChiPengGang) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionChiPengGang) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

func (x *ActionChiPengGang) GetTingpais() []*TingPaiDiscardInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *ActionChiPengGang) GetTileStates() []uint32 {
	if x != nil {
		return x.TileStates
	}
	return nil
}

func (x *ActionChiPengGang) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionChiPengGang) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionChiPengGang) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

type RecordChiPengGang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat       uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Type       uint32                 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Tiles      []string               `protobuf:"bytes,3,rep,name=tiles,proto3" json:"tiles"`
	Froms      []uint32               `protobuf:"varint,4,rep,packed,name=froms,proto3" json:"froms"`
	Liqi       *LiQiSuccess           `protobuf:"bytes,5,opt,name=liqi,proto3" json:"liqi"`
	Zhenting   []bool                 `protobuf:"varint,7,rep,packed,name=zhenting,proto3" json:"zhenting"`
	Operation  *OptionalOperationList `protobuf:"bytes,8,opt,name=operation,proto3" json:"operation"`
	TileStates []uint32               `protobuf:"varint,9,rep,packed,name=tile_states,json=tileStates,proto3" json:"tile_states"`
	Muyu       *MuyuInfo              `protobuf:"bytes,10,opt,name=muyu,proto3" json:"muyu"`
	Scores     []int32                `protobuf:"varint,11,rep,packed,name=scores,proto3" json:"scores"`
	Liqibang   uint32                 `protobuf:"varint,12,opt,name=liqibang,proto3" json:"liqibang"`
}

func (x *RecordChiPengGang) Reset() {
	*x = RecordChiPengGang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[613]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordChiPengGang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordChiPengGang) ProtoMessage() {}

func (x *RecordChiPengGang) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[613]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordChiPengGang.ProtoReflect.Descriptor instead.
func (*RecordChiPengGang) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{613}
}

func (x *RecordChiPengGang) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordChiPengGang) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RecordChiPengGang) GetTiles() []string {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *RecordChiPengGang) GetFroms() []uint32 {
	if x != nil {
		return x.Froms
	}
	return nil
}

func (x *RecordChiPengGang) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

func (x *RecordChiPengGang) GetZhenting() []bool {
	if x != nil {
		return x.Zhenting
	}
	return nil
}

func (x *RecordChiPengGang) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *RecordChiPengGang) GetTileStates() []uint32 {
	if x != nil {
		return x.TileStates
	}
	return nil
}

func (x *RecordChiPengGang) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *RecordChiPengGang) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordChiPengGang) GetLiqibang() uint32 {
	if x != nil {
		return x.Liqibang
	}
	return 0
}

type ActionGangResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GangInfos *ChuanmaGang `protobuf:"bytes,1,opt,name=gang_infos,json=gangInfos,proto3" json:"gang_infos"`
}

func (x *ActionGangResult) Reset() {
	*x = ActionGangResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[614]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionGangResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGangResult) ProtoMessage() {}

func (x *ActionGangResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[614]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGangResult.ProtoReflect.Descriptor instead.
func (*ActionGangResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{614}
}

func (x *ActionGangResult) GetGangInfos() *ChuanmaGang {
	if x != nil {
		return x.GangInfos
	}
	return nil
}

type RecordGangResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GangInfos *ChuanmaGang `protobuf:"bytes,1,opt,name=gang_infos,json=gangInfos,proto3" json:"gang_infos"`
}

func (x *RecordGangResult) Reset() {
	*x = RecordGangResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[615]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGangResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGangResult) ProtoMessage() {}

func (x *RecordGangResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[615]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGangResult.ProtoReflect.Descriptor instead.
func (*RecordGangResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{615}
}

func (x *RecordGangResult) GetGangInfos() *ChuanmaGang {
	if x != nil {
		return x.GangInfos
	}
	return nil
}

type ActionGangResultEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GangInfos *ChuanmaGang `protobuf:"bytes,1,opt,name=gang_infos,json=gangInfos,proto3" json:"gang_infos"`
}

func (x *ActionGangResultEnd) Reset() {
	*x = ActionGangResultEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[616]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionGangResultEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGangResultEnd) ProtoMessage() {}

func (x *ActionGangResultEnd) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[616]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGangResultEnd.ProtoReflect.Descriptor instead.
func (*ActionGangResultEnd) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{616}
}

func (x *ActionGangResultEnd) GetGangInfos() *ChuanmaGang {
	if x != nil {
		return x.GangInfos
	}
	return nil
}

type RecordGangResultEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GangInfos *ChuanmaGang `protobuf:"bytes,1,opt,name=gang_infos,json=gangInfos,proto3" json:"gang_infos"`
}

func (x *RecordGangResultEnd) Reset() {
	*x = RecordGangResultEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[617]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGangResultEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGangResultEnd) ProtoMessage() {}

func (x *RecordGangResultEnd) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[617]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGangResultEnd.ProtoReflect.Descriptor instead.
func (*RecordGangResultEnd) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{617}
}

func (x *RecordGangResultEnd) GetGangInfos() *ChuanmaGang {
	if x != nil {
		return x.GangInfos
	}
	return nil
}

type ActionAnGangAddGang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Type      uint32                 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Tiles     string                 `protobuf:"bytes,3,opt,name=tiles,proto3" json:"tiles"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation"`
	Doras     []string               `protobuf:"bytes,6,rep,name=doras,proto3" json:"doras"`
	Zhenting  bool                   `protobuf:"varint,7,opt,name=zhenting,proto3" json:"zhenting"`
	Tingpais  []*TingPaiInfo         `protobuf:"bytes,8,rep,name=tingpais,proto3" json:"tingpais"`
	Muyu      *MuyuInfo              `protobuf:"bytes,9,opt,name=muyu,proto3" json:"muyu"`
}

func (x *ActionAnGangAddGang) Reset() {
	*x = ActionAnGangAddGang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[618]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionAnGangAddGang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionAnGangAddGang) ProtoMessage() {}

func (x *ActionAnGangAddGang) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[618]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionAnGangAddGang.ProtoReflect.Descriptor instead.
func (*ActionAnGangAddGang) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{618}
}

func (x *ActionAnGangAddGang) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionAnGangAddGang) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ActionAnGangAddGang) GetTiles() string {
	if x != nil {
		return x.Tiles
	}
	return ""
}

func (x *ActionAnGangAddGang) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionAnGangAddGang) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionAnGangAddGang) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

func (x *ActionAnGangAddGang) GetTingpais() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *ActionAnGangAddGang) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

type RecordAnGangAddGang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat       uint32                   `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Type       uint32                   `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Tiles      string                   `protobuf:"bytes,3,opt,name=tiles,proto3" json:"tiles"`
	Doras      []string                 `protobuf:"bytes,6,rep,name=doras,proto3" json:"doras"`
	Operations []*OptionalOperationList `protobuf:"bytes,7,rep,name=operations,proto3" json:"operations"`
	Muyu       *MuyuInfo                `protobuf:"bytes,8,opt,name=muyu,proto3" json:"muyu"`
}

func (x *RecordAnGangAddGang) Reset() {
	*x = RecordAnGangAddGang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[619]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordAnGangAddGang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordAnGangAddGang) ProtoMessage() {}

func (x *RecordAnGangAddGang) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[619]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordAnGangAddGang.ProtoReflect.Descriptor instead.
func (*RecordAnGangAddGang) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{619}
}

func (x *RecordAnGangAddGang) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordAnGangAddGang) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RecordAnGangAddGang) GetTiles() string {
	if x != nil {
		return x.Tiles
	}
	return ""
}

func (x *RecordAnGangAddGang) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordAnGangAddGang) GetOperations() []*OptionalOperationList {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *RecordAnGangAddGang) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

type ActionBaBei struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32                 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation"`
	Doras     []string               `protobuf:"bytes,6,rep,name=doras,proto3" json:"doras"`
	Zhenting  bool                   `protobuf:"varint,7,opt,name=zhenting,proto3" json:"zhenting"`
	Tingpais  []*TingPaiInfo         `protobuf:"bytes,8,rep,name=tingpais,proto3" json:"tingpais"`
	Moqie     bool                   `protobuf:"varint,9,opt,name=moqie,proto3" json:"moqie"`
	TileState uint32                 `protobuf:"varint,10,opt,name=tile_state,json=tileState,proto3" json:"tile_state"`
	Muyu      *MuyuInfo              `protobuf:"bytes,11,opt,name=muyu,proto3" json:"muyu"`
}

func (x *ActionBaBei) Reset() {
	*x = ActionBaBei{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[620]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionBaBei) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionBaBei) ProtoMessage() {}

func (x *ActionBaBei) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[620]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionBaBei.ProtoReflect.Descriptor instead.
func (*ActionBaBei) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{620}
}

func (x *ActionBaBei) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionBaBei) GetOperation() *OptionalOperationList {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ActionBaBei) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionBaBei) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

func (x *ActionBaBei) GetTingpais() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais
	}
	return nil
}

func (x *ActionBaBei) GetMoqie() bool {
	if x != nil {
		return x.Moqie
	}
	return false
}

func (x *ActionBaBei) GetTileState() uint32 {
	if x != nil {
		return x.TileState
	}
	return 0
}

func (x *ActionBaBei) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

type RecordBaBei struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat       uint32                   `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Doras      []string                 `protobuf:"bytes,6,rep,name=doras,proto3" json:"doras"`
	Operations []*OptionalOperationList `protobuf:"bytes,7,rep,name=operations,proto3" json:"operations"`
	Moqie      bool                     `protobuf:"varint,8,opt,name=moqie,proto3" json:"moqie"`
	TileState  uint32                   `protobuf:"varint,10,opt,name=tile_state,json=tileState,proto3" json:"tile_state"`
	Muyu       *MuyuInfo                `protobuf:"bytes,11,opt,name=muyu,proto3" json:"muyu"`
}

func (x *RecordBaBei) Reset() {
	*x = RecordBaBei{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[621]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordBaBei) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordBaBei) ProtoMessage() {}

func (x *RecordBaBei) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[621]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordBaBei.ProtoReflect.Descriptor instead.
func (*RecordBaBei) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{621}
}

func (x *RecordBaBei) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordBaBei) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordBaBei) GetOperations() []*OptionalOperationList {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *RecordBaBei) GetMoqie() bool {
	if x != nil {
		return x.Moqie
	}
	return false
}

func (x *RecordBaBei) GetTileState() uint32 {
	if x != nil {
		return x.TileState
	}
	return 0
}

func (x *RecordBaBei) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

type ActionHule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hules       []*HuleInfo `protobuf:"bytes,1,rep,name=hules,proto3" json:"hules"`
	OldScores   []int32     `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores,proto3" json:"old_scores"`
	DeltaScores []int32     `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores,proto3" json:"delta_scores"`
	WaitTimeout uint32      `protobuf:"varint,4,opt,name=wait_timeout,json=waitTimeout,proto3" json:"wait_timeout"`
	Scores      []int32     `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores"`
	Gameend     *GameEnd    `protobuf:"bytes,6,opt,name=gameend,proto3" json:"gameend"`
	Doras       []string    `protobuf:"bytes,7,rep,name=doras,proto3" json:"doras"`
	Muyu        *MuyuInfo   `protobuf:"bytes,8,opt,name=muyu,proto3" json:"muyu"`
	Baopai      int32       `protobuf:"varint,9,opt,name=baopai,proto3" json:"baopai"`
}

func (x *ActionHule) Reset() {
	*x = ActionHule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[622]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionHule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionHule) ProtoMessage() {}

func (x *ActionHule) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[622]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionHule.ProtoReflect.Descriptor instead.
func (*ActionHule) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{622}
}

func (x *ActionHule) GetHules() []*HuleInfo {
	if x != nil {
		return x.Hules
	}
	return nil
}

func (x *ActionHule) GetOldScores() []int32 {
	if x != nil {
		return x.OldScores
	}
	return nil
}

func (x *ActionHule) GetDeltaScores() []int32 {
	if x != nil {
		return x.DeltaScores
	}
	return nil
}

func (x *ActionHule) GetWaitTimeout() uint32 {
	if x != nil {
		return x.WaitTimeout
	}
	return 0
}

func (x *ActionHule) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionHule) GetGameend() *GameEnd {
	if x != nil {
		return x.Gameend
	}
	return nil
}

func (x *ActionHule) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionHule) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionHule) GetBaopai() int32 {
	if x != nil {
		return x.Baopai
	}
	return 0
}

type RecordHule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hules       []*HuleInfo `protobuf:"bytes,1,rep,name=hules,proto3" json:"hules"`
	OldScores   []int32     `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores,proto3" json:"old_scores"`
	DeltaScores []int32     `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores,proto3" json:"delta_scores"`
	WaitTimeout uint32      `protobuf:"varint,4,opt,name=wait_timeout,json=waitTimeout,proto3" json:"wait_timeout"`
	Scores      []int32     `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores"`
	Gameend     *GameEnd    `protobuf:"bytes,6,opt,name=gameend,proto3" json:"gameend"`
	Doras       []string    `protobuf:"bytes,7,rep,name=doras,proto3" json:"doras"`
	Muyu        *MuyuInfo   `protobuf:"bytes,8,opt,name=muyu,proto3" json:"muyu"`
	Baopai      int32       `protobuf:"varint,9,opt,name=baopai,proto3" json:"baopai"`
}

func (x *RecordHule) Reset() {
	*x = RecordHule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[623]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHule) ProtoMessage() {}

func (x *RecordHule) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[623]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHule.ProtoReflect.Descriptor instead.
func (*RecordHule) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{623}
}

func (x *RecordHule) GetHules() []*HuleInfo {
	if x != nil {
		return x.Hules
	}
	return nil
}

func (x *RecordHule) GetOldScores() []int32 {
	if x != nil {
		return x.OldScores
	}
	return nil
}

func (x *RecordHule) GetDeltaScores() []int32 {
	if x != nil {
		return x.DeltaScores
	}
	return nil
}

func (x *RecordHule) GetWaitTimeout() uint32 {
	if x != nil {
		return x.WaitTimeout
	}
	return 0
}

func (x *RecordHule) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordHule) GetGameend() *GameEnd {
	if x != nil {
		return x.Gameend
	}
	return nil
}

func (x *RecordHule) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordHule) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *RecordHule) GetBaopai() int32 {
	if x != nil {
		return x.Baopai
	}
	return 0
}

type HuInfoXueZhanMid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32     `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	HandCount uint32     `protobuf:"varint,2,opt,name=hand_count,json=handCount,proto3" json:"hand_count"`
	Hand      []string   `protobuf:"bytes,3,rep,name=hand,proto3" json:"hand"`
	Ming      []string   `protobuf:"bytes,4,rep,name=ming,proto3" json:"ming"`
	HuTile    string     `protobuf:"bytes,5,opt,name=hu_tile,json=huTile,proto3" json:"hu_tile"`
	Zimo      bool       `protobuf:"varint,6,opt,name=zimo,proto3" json:"zimo"`
	Yiman     bool       `protobuf:"varint,7,opt,name=yiman,proto3" json:"yiman"`
	Count     uint32     `protobuf:"varint,8,opt,name=count,proto3" json:"count"`
	Fans      []*FanInfo `protobuf:"bytes,9,rep,name=fans,proto3" json:"fans"`
	Fu        uint32     `protobuf:"varint,10,opt,name=fu,proto3" json:"fu"`
	TitleId   uint32     `protobuf:"varint,11,opt,name=title_id,json=titleId,proto3" json:"title_id"`
}

func (x *HuInfoXueZhanMid) Reset() {
	*x = HuInfoXueZhanMid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[624]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuInfoXueZhanMid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuInfoXueZhanMid) ProtoMessage() {}

func (x *HuInfoXueZhanMid) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[624]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuInfoXueZhanMid.ProtoReflect.Descriptor instead.
func (*HuInfoXueZhanMid) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{624}
}

func (x *HuInfoXueZhanMid) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *HuInfoXueZhanMid) GetHandCount() uint32 {
	if x != nil {
		return x.HandCount
	}
	return 0
}

func (x *HuInfoXueZhanMid) GetHand() []string {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *HuInfoXueZhanMid) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *HuInfoXueZhanMid) GetHuTile() string {
	if x != nil {
		return x.HuTile
	}
	return ""
}

func (x *HuInfoXueZhanMid) GetZimo() bool {
	if x != nil {
		return x.Zimo
	}
	return false
}

func (x *HuInfoXueZhanMid) GetYiman() bool {
	if x != nil {
		return x.Yiman
	}
	return false
}

func (x *HuInfoXueZhanMid) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HuInfoXueZhanMid) GetFans() []*FanInfo {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *HuInfoXueZhanMid) GetFu() uint32 {
	if x != nil {
		return x.Fu
	}
	return 0
}

func (x *HuInfoXueZhanMid) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

type ActionHuleXueZhanMid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hules       []*HuInfoXueZhanMid `protobuf:"bytes,1,rep,name=hules,proto3" json:"hules"`
	OldScores   []int32             `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores,proto3" json:"old_scores"`
	DeltaScores []int32             `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores,proto3" json:"delta_scores"`
	Scores      []int32             `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores"`
	Doras       []string            `protobuf:"bytes,7,rep,name=doras,proto3" json:"doras"`
	Muyu        *MuyuInfo           `protobuf:"bytes,8,opt,name=muyu,proto3" json:"muyu"`
	Liqi        *LiQiSuccess        `protobuf:"bytes,9,opt,name=liqi,proto3" json:"liqi"`
	Zhenting    bool                `protobuf:"varint,10,opt,name=zhenting,proto3" json:"zhenting"`
}

func (x *ActionHuleXueZhanMid) Reset() {
	*x = ActionHuleXueZhanMid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[625]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionHuleXueZhanMid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionHuleXueZhanMid) ProtoMessage() {}

func (x *ActionHuleXueZhanMid) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[625]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionHuleXueZhanMid.ProtoReflect.Descriptor instead.
func (*ActionHuleXueZhanMid) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{625}
}

func (x *ActionHuleXueZhanMid) GetHules() []*HuInfoXueZhanMid {
	if x != nil {
		return x.Hules
	}
	return nil
}

func (x *ActionHuleXueZhanMid) GetOldScores() []int32 {
	if x != nil {
		return x.OldScores
	}
	return nil
}

func (x *ActionHuleXueZhanMid) GetDeltaScores() []int32 {
	if x != nil {
		return x.DeltaScores
	}
	return nil
}

func (x *ActionHuleXueZhanMid) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionHuleXueZhanMid) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionHuleXueZhanMid) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionHuleXueZhanMid) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

func (x *ActionHuleXueZhanMid) GetZhenting() bool {
	if x != nil {
		return x.Zhenting
	}
	return false
}

type RecordHuleXueZhanMid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hules       []*HuInfoXueZhanMid `protobuf:"bytes,1,rep,name=hules,proto3" json:"hules"`
	OldScores   []int32             `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores,proto3" json:"old_scores"`
	DeltaScores []int32             `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores,proto3" json:"delta_scores"`
	Scores      []int32             `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores"`
	Doras       []string            `protobuf:"bytes,7,rep,name=doras,proto3" json:"doras"`
	Muyu        *MuyuInfo           `protobuf:"bytes,8,opt,name=muyu,proto3" json:"muyu"`
	Liqi        *LiQiSuccess        `protobuf:"bytes,9,opt,name=liqi,proto3" json:"liqi"`
	Zhenting    []bool              `protobuf:"varint,10,rep,packed,name=zhenting,proto3" json:"zhenting"`
}

func (x *RecordHuleXueZhanMid) Reset() {
	*x = RecordHuleXueZhanMid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[626]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHuleXueZhanMid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHuleXueZhanMid) ProtoMessage() {}

func (x *RecordHuleXueZhanMid) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[626]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHuleXueZhanMid.ProtoReflect.Descriptor instead.
func (*RecordHuleXueZhanMid) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{626}
}

func (x *RecordHuleXueZhanMid) GetHules() []*HuInfoXueZhanMid {
	if x != nil {
		return x.Hules
	}
	return nil
}

func (x *RecordHuleXueZhanMid) GetOldScores() []int32 {
	if x != nil {
		return x.OldScores
	}
	return nil
}

func (x *RecordHuleXueZhanMid) GetDeltaScores() []int32 {
	if x != nil {
		return x.DeltaScores
	}
	return nil
}

func (x *RecordHuleXueZhanMid) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordHuleXueZhanMid) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordHuleXueZhanMid) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *RecordHuleXueZhanMid) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

func (x *RecordHuleXueZhanMid) GetZhenting() []bool {
	if x != nil {
		return x.Zhenting
	}
	return nil
}

type ActionHuleXueZhanEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hules        []*HuInfoXueZhanMid `protobuf:"bytes,1,rep,name=hules,proto3" json:"hules"`
	OldScores    []int32             `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores,proto3" json:"old_scores"`
	DeltaScores  []int32             `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores,proto3" json:"delta_scores"`
	Scores       []int32             `protobuf:"varint,4,rep,packed,name=scores,proto3" json:"scores"`
	WaitTimeout  uint32              `protobuf:"varint,5,opt,name=wait_timeout,json=waitTimeout,proto3" json:"wait_timeout"`
	Gameend      *GameEnd            `protobuf:"bytes,6,opt,name=gameend,proto3" json:"gameend"`
	Doras        []string            `protobuf:"bytes,7,rep,name=doras,proto3" json:"doras"`
	Muyu         *MuyuInfo           `protobuf:"bytes,8,opt,name=muyu,proto3" json:"muyu"`
	HulesHistory []*HuleInfo         `protobuf:"bytes,9,rep,name=hules_history,json=hulesHistory,proto3" json:"hules_history"`
}

func (x *ActionHuleXueZhanEnd) Reset() {
	*x = ActionHuleXueZhanEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[627]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionHuleXueZhanEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionHuleXueZhanEnd) ProtoMessage() {}

func (x *ActionHuleXueZhanEnd) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[627]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionHuleXueZhanEnd.ProtoReflect.Descriptor instead.
func (*ActionHuleXueZhanEnd) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{627}
}

func (x *ActionHuleXueZhanEnd) GetHules() []*HuInfoXueZhanMid {
	if x != nil {
		return x.Hules
	}
	return nil
}

func (x *ActionHuleXueZhanEnd) GetOldScores() []int32 {
	if x != nil {
		return x.OldScores
	}
	return nil
}

func (x *ActionHuleXueZhanEnd) GetDeltaScores() []int32 {
	if x != nil {
		return x.DeltaScores
	}
	return nil
}

func (x *ActionHuleXueZhanEnd) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionHuleXueZhanEnd) GetWaitTimeout() uint32 {
	if x != nil {
		return x.WaitTimeout
	}
	return 0
}

func (x *ActionHuleXueZhanEnd) GetGameend() *GameEnd {
	if x != nil {
		return x.Gameend
	}
	return nil
}

func (x *ActionHuleXueZhanEnd) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *ActionHuleXueZhanEnd) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionHuleXueZhanEnd) GetHulesHistory() []*HuleInfo {
	if x != nil {
		return x.HulesHistory
	}
	return nil
}

type RecordHuleXueZhanEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hules        []*HuInfoXueZhanMid `protobuf:"bytes,1,rep,name=hules,proto3" json:"hules"`
	OldScores    []int32             `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores,proto3" json:"old_scores"`
	DeltaScores  []int32             `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores,proto3" json:"delta_scores"`
	Scores       []int32             `protobuf:"varint,4,rep,packed,name=scores,proto3" json:"scores"`
	WaitTimeout  uint32              `protobuf:"varint,5,opt,name=wait_timeout,json=waitTimeout,proto3" json:"wait_timeout"`
	Gameend      *GameEnd            `protobuf:"bytes,6,opt,name=gameend,proto3" json:"gameend"`
	Doras        []string            `protobuf:"bytes,7,rep,name=doras,proto3" json:"doras"`
	Muyu         *MuyuInfo           `protobuf:"bytes,8,opt,name=muyu,proto3" json:"muyu"`
	HulesHistory []*HuleInfo         `protobuf:"bytes,9,rep,name=hules_history,json=hulesHistory,proto3" json:"hules_history"`
}

func (x *RecordHuleXueZhanEnd) Reset() {
	*x = RecordHuleXueZhanEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[628]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHuleXueZhanEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHuleXueZhanEnd) ProtoMessage() {}

func (x *RecordHuleXueZhanEnd) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[628]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHuleXueZhanEnd.ProtoReflect.Descriptor instead.
func (*RecordHuleXueZhanEnd) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{628}
}

func (x *RecordHuleXueZhanEnd) GetHules() []*HuInfoXueZhanMid {
	if x != nil {
		return x.Hules
	}
	return nil
}

func (x *RecordHuleXueZhanEnd) GetOldScores() []int32 {
	if x != nil {
		return x.OldScores
	}
	return nil
}

func (x *RecordHuleXueZhanEnd) GetDeltaScores() []int32 {
	if x != nil {
		return x.DeltaScores
	}
	return nil
}

func (x *RecordHuleXueZhanEnd) GetScores() []int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordHuleXueZhanEnd) GetWaitTimeout() uint32 {
	if x != nil {
		return x.WaitTimeout
	}
	return 0
}

func (x *RecordHuleXueZhanEnd) GetGameend() *GameEnd {
	if x != nil {
		return x.Gameend
	}
	return nil
}

func (x *RecordHuleXueZhanEnd) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordHuleXueZhanEnd) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *RecordHuleXueZhanEnd) GetHulesHistory() []*HuleInfo {
	if x != nil {
		return x.HulesHistory
	}
	return nil
}

type ActionLiuJu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           uint32       `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Gameend        *GameEnd     `protobuf:"bytes,2,opt,name=gameend,proto3" json:"gameend"`
	Seat           uint32       `protobuf:"varint,3,opt,name=seat,proto3" json:"seat"`
	Tiles          []string     `protobuf:"bytes,4,rep,name=tiles,proto3" json:"tiles"`
	Liqi           *LiQiSuccess `protobuf:"bytes,5,opt,name=liqi,proto3" json:"liqi"`
	Allplayertiles []string     `protobuf:"bytes,6,rep,name=allplayertiles,proto3" json:"allplayertiles"`
	Muyu           *MuyuInfo    `protobuf:"bytes,7,opt,name=muyu,proto3" json:"muyu"`
	HulesHistory   []*HuleInfo  `protobuf:"bytes,9,rep,name=hules_history,json=hulesHistory,proto3" json:"hules_history"`
}

func (x *ActionLiuJu) Reset() {
	*x = ActionLiuJu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[629]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionLiuJu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionLiuJu) ProtoMessage() {}

func (x *ActionLiuJu) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[629]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionLiuJu.ProtoReflect.Descriptor instead.
func (*ActionLiuJu) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{629}
}

func (x *ActionLiuJu) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ActionLiuJu) GetGameend() *GameEnd {
	if x != nil {
		return x.Gameend
	}
	return nil
}

func (x *ActionLiuJu) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *ActionLiuJu) GetTiles() []string {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *ActionLiuJu) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

func (x *ActionLiuJu) GetAllplayertiles() []string {
	if x != nil {
		return x.Allplayertiles
	}
	return nil
}

func (x *ActionLiuJu) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionLiuJu) GetHulesHistory() []*HuleInfo {
	if x != nil {
		return x.HulesHistory
	}
	return nil
}

type RecordLiuJu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           uint32       `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Gameend        *GameEnd     `protobuf:"bytes,2,opt,name=gameend,proto3" json:"gameend"`
	Seat           uint32       `protobuf:"varint,3,opt,name=seat,proto3" json:"seat"`
	Tiles          []string     `protobuf:"bytes,4,rep,name=tiles,proto3" json:"tiles"`
	Liqi           *LiQiSuccess `protobuf:"bytes,5,opt,name=liqi,proto3" json:"liqi"`
	Allplayertiles []string     `protobuf:"bytes,6,rep,name=allplayertiles,proto3" json:"allplayertiles"`
	Muyu           *MuyuInfo    `protobuf:"bytes,7,opt,name=muyu,proto3" json:"muyu"`
	HulesHistory   []*HuleInfo  `protobuf:"bytes,9,rep,name=hules_history,json=hulesHistory,proto3" json:"hules_history"`
}

func (x *RecordLiuJu) Reset() {
	*x = RecordLiuJu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[630]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordLiuJu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordLiuJu) ProtoMessage() {}

func (x *RecordLiuJu) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[630]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordLiuJu.ProtoReflect.Descriptor instead.
func (*RecordLiuJu) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{630}
}

func (x *RecordLiuJu) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RecordLiuJu) GetGameend() *GameEnd {
	if x != nil {
		return x.Gameend
	}
	return nil
}

func (x *RecordLiuJu) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordLiuJu) GetTiles() []string {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *RecordLiuJu) GetLiqi() *LiQiSuccess {
	if x != nil {
		return x.Liqi
	}
	return nil
}

func (x *RecordLiuJu) GetAllplayertiles() []string {
	if x != nil {
		return x.Allplayertiles
	}
	return nil
}

func (x *RecordLiuJu) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *RecordLiuJu) GetHulesHistory() []*HuleInfo {
	if x != nil {
		return x.HulesHistory
	}
	return nil
}

type NoTilePlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tingpai     bool           `protobuf:"varint,3,opt,name=tingpai,proto3" json:"tingpai"`
	Hand        []string       `protobuf:"bytes,4,rep,name=hand,proto3" json:"hand"`
	Tings       []*TingPaiInfo `protobuf:"bytes,5,rep,name=tings,proto3" json:"tings"`
	AlreadyHule bool           `protobuf:"varint,6,opt,name=already_hule,json=alreadyHule,proto3" json:"already_hule"`
}

func (x *NoTilePlayerInfo) Reset() {
	*x = NoTilePlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[631]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoTilePlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoTilePlayerInfo) ProtoMessage() {}

func (x *NoTilePlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[631]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoTilePlayerInfo.ProtoReflect.Descriptor instead.
func (*NoTilePlayerInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{631}
}

func (x *NoTilePlayerInfo) GetTingpai() bool {
	if x != nil {
		return x.Tingpai
	}
	return false
}

func (x *NoTilePlayerInfo) GetHand() []string {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *NoTilePlayerInfo) GetTings() []*TingPaiInfo {
	if x != nil {
		return x.Tings
	}
	return nil
}

func (x *NoTilePlayerInfo) GetAlreadyHule() bool {
	if x != nil {
		return x.AlreadyHule
	}
	return false
}

type NoTileScoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat        uint32   `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	OldScores   []int32  `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores,proto3" json:"old_scores"`
	DeltaScores []int32  `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores,proto3" json:"delta_scores"`
	Hand        []string `protobuf:"bytes,4,rep,name=hand,proto3" json:"hand"`
	Ming        []string `protobuf:"bytes,5,rep,name=ming,proto3" json:"ming"`
	Doras       []string `protobuf:"bytes,6,rep,name=doras,proto3" json:"doras"`
	Score       uint32   `protobuf:"varint,7,opt,name=score,proto3" json:"score"`
	Taxes       []int32  `protobuf:"varint,8,rep,packed,name=taxes,proto3" json:"taxes"`
	Lines       []string `protobuf:"bytes,9,rep,name=lines,proto3" json:"lines"`
}

func (x *NoTileScoreInfo) Reset() {
	*x = NoTileScoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[632]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoTileScoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoTileScoreInfo) ProtoMessage() {}

func (x *NoTileScoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[632]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoTileScoreInfo.ProtoReflect.Descriptor instead.
func (*NoTileScoreInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{632}
}

func (x *NoTileScoreInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *NoTileScoreInfo) GetOldScores() []int32 {
	if x != nil {
		return x.OldScores
	}
	return nil
}

func (x *NoTileScoreInfo) GetDeltaScores() []int32 {
	if x != nil {
		return x.DeltaScores
	}
	return nil
}

func (x *NoTileScoreInfo) GetHand() []string {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *NoTileScoreInfo) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *NoTileScoreInfo) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *NoTileScoreInfo) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *NoTileScoreInfo) GetTaxes() []int32 {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *NoTileScoreInfo) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

type ActionNoTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Liujumanguan bool                `protobuf:"varint,1,opt,name=liujumanguan,proto3" json:"liujumanguan"`
	Players      []*NoTilePlayerInfo `protobuf:"bytes,2,rep,name=players,proto3" json:"players"`
	Scores       []*NoTileScoreInfo  `protobuf:"bytes,3,rep,name=scores,proto3" json:"scores"`
	Gameend      bool                `protobuf:"varint,4,opt,name=gameend,proto3" json:"gameend"`
	Muyu         *MuyuInfo           `protobuf:"bytes,5,opt,name=muyu,proto3" json:"muyu"`
	HulesHistory []*HuleInfo         `protobuf:"bytes,9,rep,name=hules_history,json=hulesHistory,proto3" json:"hules_history"`
}

func (x *ActionNoTile) Reset() {
	*x = ActionNoTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[633]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionNoTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionNoTile) ProtoMessage() {}

func (x *ActionNoTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[633]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionNoTile.ProtoReflect.Descriptor instead.
func (*ActionNoTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{633}
}

func (x *ActionNoTile) GetLiujumanguan() bool {
	if x != nil {
		return x.Liujumanguan
	}
	return false
}

func (x *ActionNoTile) GetPlayers() []*NoTilePlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *ActionNoTile) GetScores() []*NoTileScoreInfo {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ActionNoTile) GetGameend() bool {
	if x != nil {
		return x.Gameend
	}
	return false
}

func (x *ActionNoTile) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *ActionNoTile) GetHulesHistory() []*HuleInfo {
	if x != nil {
		return x.HulesHistory
	}
	return nil
}

type RecordNoTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Liujumanguan bool                `protobuf:"varint,1,opt,name=liujumanguan,proto3" json:"liujumanguan"`
	Players      []*NoTilePlayerInfo `protobuf:"bytes,2,rep,name=players,proto3" json:"players"`
	Scores       []*NoTileScoreInfo  `protobuf:"bytes,3,rep,name=scores,proto3" json:"scores"`
	Gameend      bool                `protobuf:"varint,4,opt,name=gameend,proto3" json:"gameend"`
	Muyu         *MuyuInfo           `protobuf:"bytes,5,opt,name=muyu,proto3" json:"muyu"`
	HulesHistory []*HuleInfo         `protobuf:"bytes,9,rep,name=hules_history,json=hulesHistory,proto3" json:"hules_history"`
}

func (x *RecordNoTile) Reset() {
	*x = RecordNoTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[634]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNoTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNoTile) ProtoMessage() {}

func (x *RecordNoTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[634]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNoTile.ProtoReflect.Descriptor instead.
func (*RecordNoTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{634}
}

func (x *RecordNoTile) GetLiujumanguan() bool {
	if x != nil {
		return x.Liujumanguan
	}
	return false
}

func (x *RecordNoTile) GetPlayers() []*NoTilePlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *RecordNoTile) GetScores() []*NoTileScoreInfo {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordNoTile) GetGameend() bool {
	if x != nil {
		return x.Gameend
	}
	return false
}

func (x *RecordNoTile) GetMuyu() *MuyuInfo {
	if x != nil {
		return x.Muyu
	}
	return nil
}

func (x *RecordNoTile) GetHulesHistory() []*HuleInfo {
	if x != nil {
		return x.HulesHistory
	}
	return nil
}

type PlayerLeaving struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
}

func (x *PlayerLeaving) Reset() {
	*x = PlayerLeaving{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[635]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLeaving) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLeaving) ProtoMessage() {}

func (x *PlayerLeaving) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[635]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLeaving.ProtoReflect.Descriptor instead.
func (*PlayerLeaving) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{635}
}

func (x *PlayerLeaving) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

type ReqAuthGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
	GameUuid  string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
	Session   string `protobuf:"bytes,4,opt,name=session,proto3" json:"session"`
	Gift      string `protobuf:"bytes,5,opt,name=gift,proto3" json:"gift"`
	Vs        uint32 `protobuf:"varint,6,opt,name=vs,proto3" json:"vs"`
}

func (x *ReqAuthGame) Reset() {
	*x = ReqAuthGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[636]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAuthGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAuthGame) ProtoMessage() {}

func (x *ReqAuthGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[636]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAuthGame.ProtoReflect.Descriptor instead.
func (*ReqAuthGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{636}
}

func (x *ReqAuthGame) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqAuthGame) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReqAuthGame) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *ReqAuthGame) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *ReqAuthGame) GetGift() string {
	if x != nil {
		return x.Gift
	}
	return ""
}

func (x *ReqAuthGame) GetVs() uint32 {
	if x != nil {
		return x.Vs
	}
	return 0
}

type ResAuthGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error            `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Players     []*PlayerGameView `protobuf:"bytes,2,rep,name=players,proto3" json:"players"`
	SeatList    []uint32          `protobuf:"varint,3,rep,packed,name=seat_list,json=seatList,proto3" json:"seat_list"`
	IsGameStart bool              `protobuf:"varint,4,opt,name=is_game_start,json=isGameStart,proto3" json:"is_game_start"`
	GameConfig  *GameConfig       `protobuf:"bytes,5,opt,name=game_config,json=gameConfig,proto3" json:"game_config"`
	ReadyIdList []uint32          `protobuf:"varint,6,rep,packed,name=ready_id_list,json=readyIdList,proto3" json:"ready_id_list"`
}

func (x *ResAuthGame) Reset() {
	*x = ResAuthGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[637]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAuthGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAuthGame) ProtoMessage() {}

func (x *ResAuthGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[637]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAuthGame.ProtoReflect.Descriptor instead.
func (*ResAuthGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{637}
}

func (x *ResAuthGame) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAuthGame) GetPlayers() []*PlayerGameView {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *ResAuthGame) GetSeatList() []uint32 {
	if x != nil {
		return x.SeatList
	}
	return nil
}

func (x *ResAuthGame) GetIsGameStart() bool {
	if x != nil {
		return x.IsGameStart
	}
	return false
}

func (x *ResAuthGame) GetGameConfig() *GameConfig {
	if x != nil {
		return x.GameConfig
	}
	return nil
}

func (x *ResAuthGame) GetReadyIdList() []uint32 {
	if x != nil {
		return x.ReadyIdList
	}
	return nil
}

type GameRestore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot          *GameSnapshot      `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot"`
	Actions           []*ActionPrototype `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions"`
	PassedWaitingTime uint32             `protobuf:"varint,3,opt,name=passed_waiting_time,json=passedWaitingTime,proto3" json:"passed_waiting_time"`
	GameState         uint32             `protobuf:"varint,4,opt,name=game_state,json=gameState,proto3" json:"game_state"`
	StartTime         uint32             `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	LastPauseTimeMs   uint32             `protobuf:"varint,6,opt,name=last_pause_time_ms,json=lastPauseTimeMs,proto3" json:"last_pause_time_ms"`
}

func (x *GameRestore) Reset() {
	*x = GameRestore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[638]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRestore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRestore) ProtoMessage() {}

func (x *GameRestore) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[638]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRestore.ProtoReflect.Descriptor instead.
func (*GameRestore) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{638}
}

func (x *GameRestore) GetSnapshot() *GameSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *GameRestore) GetActions() []*ActionPrototype {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *GameRestore) GetPassedWaitingTime() uint32 {
	if x != nil {
		return x.PassedWaitingTime
	}
	return 0
}

func (x *GameRestore) GetGameState() uint32 {
	if x != nil {
		return x.GameState
	}
	return 0
}

func (x *GameRestore) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GameRestore) GetLastPauseTimeMs() uint32 {
	if x != nil {
		return x.LastPauseTimeMs
	}
	return 0
}

type ResEnterGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	IsEnd       bool         `protobuf:"varint,2,opt,name=is_end,json=isEnd,proto3" json:"is_end"`
	Step        uint32       `protobuf:"varint,3,opt,name=step,proto3" json:"step"`
	GameRestore *GameRestore `protobuf:"bytes,4,opt,name=game_restore,json=gameRestore,proto3" json:"game_restore"`
}

func (x *ResEnterGame) Reset() {
	*x = ResEnterGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[639]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResEnterGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResEnterGame) ProtoMessage() {}

func (x *ResEnterGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[639]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResEnterGame.ProtoReflect.Descriptor instead.
func (*ResEnterGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{639}
}

func (x *ResEnterGame) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResEnterGame) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *ResEnterGame) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ResEnterGame) GetGameRestore() *GameRestore {
	if x != nil {
		return x.GameRestore
	}
	return nil
}

type ReqSyncGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId string `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id"`
	Step    uint32 `protobuf:"varint,2,opt,name=step,proto3" json:"step"`
}

func (x *ReqSyncGame) Reset() {
	*x = ReqSyncGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[640]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSyncGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSyncGame) ProtoMessage() {}

func (x *ReqSyncGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[640]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSyncGame.ProtoReflect.Descriptor instead.
func (*ReqSyncGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{640}
}

func (x *ReqSyncGame) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *ReqSyncGame) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

type ResSyncGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error       `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	IsEnd       bool         `protobuf:"varint,2,opt,name=is_end,json=isEnd,proto3" json:"is_end"`
	Step        uint32       `protobuf:"varint,3,opt,name=step,proto3" json:"step"`
	GameRestore *GameRestore `protobuf:"bytes,4,opt,name=game_restore,json=gameRestore,proto3" json:"game_restore"`
}

func (x *ResSyncGame) Reset() {
	*x = ResSyncGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[641]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSyncGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSyncGame) ProtoMessage() {}

func (x *ResSyncGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[641]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSyncGame.ProtoReflect.Descriptor instead.
func (*ResSyncGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{641}
}

func (x *ResSyncGame) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSyncGame) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *ResSyncGame) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ResSyncGame) GetGameRestore() *GameRestore {
	if x != nil {
		return x.GameRestore
	}
	return nil
}

type ReqSelfOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Index           uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index"`
	Tile            string   `protobuf:"bytes,3,opt,name=tile,proto3" json:"tile"`
	CancelOperation bool     `protobuf:"varint,4,opt,name=cancel_operation,json=cancelOperation,proto3" json:"cancel_operation"`
	Moqie           bool     `protobuf:"varint,5,opt,name=moqie,proto3" json:"moqie"`
	Timeuse         uint32   `protobuf:"varint,6,opt,name=timeuse,proto3" json:"timeuse"`
	TileState       int32    `protobuf:"varint,7,opt,name=tile_state,json=tileState,proto3" json:"tile_state"`
	ChangeTiles     []string `protobuf:"bytes,8,rep,name=change_tiles,json=changeTiles,proto3" json:"change_tiles"`
	TileStates      []int32  `protobuf:"varint,9,rep,packed,name=tile_states,json=tileStates,proto3" json:"tile_states"`
	GapType         uint32   `protobuf:"varint,10,opt,name=gap_type,json=gapType,proto3" json:"gap_type"`
}

func (x *ReqSelfOperation) Reset() {
	*x = ReqSelfOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[642]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSelfOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSelfOperation) ProtoMessage() {}

func (x *ReqSelfOperation) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[642]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSelfOperation.ProtoReflect.Descriptor instead.
func (*ReqSelfOperation) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{642}
}

func (x *ReqSelfOperation) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqSelfOperation) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ReqSelfOperation) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *ReqSelfOperation) GetCancelOperation() bool {
	if x != nil {
		return x.CancelOperation
	}
	return false
}

func (x *ReqSelfOperation) GetMoqie() bool {
	if x != nil {
		return x.Moqie
	}
	return false
}

func (x *ReqSelfOperation) GetTimeuse() uint32 {
	if x != nil {
		return x.Timeuse
	}
	return 0
}

func (x *ReqSelfOperation) GetTileState() int32 {
	if x != nil {
		return x.TileState
	}
	return 0
}

func (x *ReqSelfOperation) GetChangeTiles() []string {
	if x != nil {
		return x.ChangeTiles
	}
	return nil
}

func (x *ReqSelfOperation) GetTileStates() []int32 {
	if x != nil {
		return x.TileStates
	}
	return nil
}

func (x *ReqSelfOperation) GetGapType() uint32 {
	if x != nil {
		return x.GapType
	}
	return 0
}

type ReqChiPengGang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Index           uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index"`
	CancelOperation bool   `protobuf:"varint,3,opt,name=cancel_operation,json=cancelOperation,proto3" json:"cancel_operation"`
	Timeuse         uint32 `protobuf:"varint,6,opt,name=timeuse,proto3" json:"timeuse"`
}

func (x *ReqChiPengGang) Reset() {
	*x = ReqChiPengGang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[643]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqChiPengGang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqChiPengGang) ProtoMessage() {}

func (x *ReqChiPengGang) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[643]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqChiPengGang.ProtoReflect.Descriptor instead.
func (*ReqChiPengGang) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{643}
}

func (x *ReqChiPengGang) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqChiPengGang) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ReqChiPengGang) GetCancelOperation() bool {
	if x != nil {
		return x.CancelOperation
	}
	return false
}

func (x *ReqChiPengGang) GetTimeuse() uint32 {
	if x != nil {
		return x.Timeuse
	}
	return 0
}

type ReqBroadcastInGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content    string `protobuf:"bytes,1,opt,name=content,proto3" json:"content"`
	ExceptSelf bool   `protobuf:"varint,2,opt,name=except_self,json=exceptSelf,proto3" json:"except_self"`
}

func (x *ReqBroadcastInGame) Reset() {
	*x = ReqBroadcastInGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[644]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBroadcastInGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBroadcastInGame) ProtoMessage() {}

func (x *ReqBroadcastInGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[644]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBroadcastInGame.ProtoReflect.Descriptor instead.
func (*ReqBroadcastInGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{644}
}

func (x *ReqBroadcastInGame) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReqBroadcastInGame) GetExceptSelf() bool {
	if x != nil {
		return x.ExceptSelf
	}
	return false
}

type ReqGMCommandInGaming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonData string `protobuf:"bytes,1,opt,name=json_data,json=jsonData,proto3" json:"json_data"`
}

func (x *ReqGMCommandInGaming) Reset() {
	*x = ReqGMCommandInGaming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[645]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGMCommandInGaming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGMCommandInGaming) ProtoMessage() {}

func (x *ReqGMCommandInGaming) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[645]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGMCommandInGaming.ProtoReflect.Descriptor instead.
func (*ReqGMCommandInGaming) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{645}
}

func (x *ReqGMCommandInGaming) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type ResGamePlayerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error            `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	StateList []GamePlayerState `protobuf:"varint,2,rep,packed,name=state_list,json=stateList,proto3,enum=lq.GamePlayerState" json:"state_list"`
}

func (x *ResGamePlayerState) Reset() {
	*x = ResGamePlayerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[646]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGamePlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGamePlayerState) ProtoMessage() {}

func (x *ResGamePlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[646]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGamePlayerState.ProtoReflect.Descriptor instead.
func (*ResGamePlayerState) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{646}
}

func (x *ResGamePlayerState) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResGamePlayerState) GetStateList() []GamePlayerState {
	if x != nil {
		return x.StateList
	}
	return nil
}

type ReqVoteGameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yes bool `protobuf:"varint,1,opt,name=yes,proto3" json:"yes"`
}

func (x *ReqVoteGameEnd) Reset() {
	*x = ReqVoteGameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[647]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqVoteGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqVoteGameEnd) ProtoMessage() {}

func (x *ReqVoteGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[647]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqVoteGameEnd.ProtoReflect.Descriptor instead.
func (*ReqVoteGameEnd) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{647}
}

func (x *ReqVoteGameEnd) GetYes() bool {
	if x != nil {
		return x.Yes
	}
	return false
}

type ResGameEndVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	VoteCdEndTime uint32 `protobuf:"varint,2,opt,name=vote_cd_end_time,json=voteCdEndTime,proto3" json:"vote_cd_end_time"`
	Error         *Error `protobuf:"bytes,3,opt,name=error,proto3" json:"error"`
}

func (x *ResGameEndVote) Reset() {
	*x = ResGameEndVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[648]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameEndVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameEndVote) ProtoMessage() {}

func (x *ResGameEndVote) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[648]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameEndVote.ProtoReflect.Descriptor instead.
func (*ResGameEndVote) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{648}
}

func (x *ResGameEndVote) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResGameEndVote) GetVoteCdEndTime() uint32 {
	if x != nil {
		return x.VoteCdEndTime
	}
	return 0
}

func (x *ResGameEndVote) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReqAuthObserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
}

func (x *ReqAuthObserve) Reset() {
	*x = ReqAuthObserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[649]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAuthObserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAuthObserve) ProtoMessage() {}

func (x *ReqAuthObserve) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[649]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAuthObserve.ProtoReflect.Descriptor instead.
func (*ReqAuthObserve) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{649}
}

func (x *ReqAuthObserve) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ResStartObserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head   *GameLiveHead    `protobuf:"bytes,1,opt,name=head,proto3" json:"head"`
	Passed *GameLiveSegment `protobuf:"bytes,2,opt,name=passed,proto3" json:"passed"`
}

func (x *ResStartObserve) Reset() {
	*x = ResStartObserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[650]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResStartObserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResStartObserve) ProtoMessage() {}

func (x *ResStartObserve) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[650]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResStartObserve.ProtoReflect.Descriptor instead.
func (*ResStartObserve) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{650}
}

func (x *ResStartObserve) GetHead() *GameLiveHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *ResStartObserve) GetPassed() *GameLiveSegment {
	if x != nil {
		return x.Passed
	}
	return nil
}

type NotifyNewGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUuid   string   `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid"`
	PlayerList []string `protobuf:"bytes,2,rep,name=player_list,json=playerList,proto3" json:"player_list"`
}

func (x *NotifyNewGame) Reset() {
	*x = NotifyNewGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[651]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNewGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNewGame) ProtoMessage() {}

func (x *NotifyNewGame) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[651]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNewGame.ProtoReflect.Descriptor instead.
func (*NotifyNewGame) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{651}
}

func (x *NotifyNewGame) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *NotifyNewGame) GetPlayerList() []string {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

type NotifyPlayerLoadGameReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadyIdList []uint32 `protobuf:"varint,1,rep,packed,name=ready_id_list,json=readyIdList,proto3" json:"ready_id_list"`
}

func (x *NotifyPlayerLoadGameReady) Reset() {
	*x = NotifyPlayerLoadGameReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[652]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPlayerLoadGameReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPlayerLoadGameReady) ProtoMessage() {}

func (x *NotifyPlayerLoadGameReady) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[652]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPlayerLoadGameReady.ProtoReflect.Descriptor instead.
func (*NotifyPlayerLoadGameReady) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{652}
}

func (x *NotifyPlayerLoadGameReady) GetReadyIdList() []uint32 {
	if x != nil {
		return x.ReadyIdList
	}
	return nil
}

type NotifyGameBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat    uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content"`
}

func (x *NotifyGameBroadcast) Reset() {
	*x = NotifyGameBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[653]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameBroadcast) ProtoMessage() {}

func (x *NotifyGameBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[653]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameBroadcast.ProtoReflect.Descriptor instead.
func (*NotifyGameBroadcast) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{653}
}

func (x *NotifyGameBroadcast) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *NotifyGameBroadcast) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type NotifyGameEndResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *GameEndResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
}

func (x *NotifyGameEndResult) Reset() {
	*x = NotifyGameEndResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[654]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameEndResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameEndResult) ProtoMessage() {}

func (x *NotifyGameEndResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[654]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameEndResult.ProtoReflect.Descriptor instead.
func (*NotifyGameEndResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{654}
}

func (x *NotifyGameEndResult) GetResult() *GameEndResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type NotifyGameTerminate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason"`
}

func (x *NotifyGameTerminate) Reset() {
	*x = NotifyGameTerminate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[655]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameTerminate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameTerminate) ProtoMessage() {}

func (x *NotifyGameTerminate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[655]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameTerminate.ProtoReflect.Descriptor instead.
func (*NotifyGameTerminate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{655}
}

func (x *NotifyGameTerminate) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type NotifyPlayerConnectionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat  uint32          `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	State GamePlayerState `protobuf:"varint,2,opt,name=state,proto3,enum=lq.GamePlayerState" json:"state"`
}

func (x *NotifyPlayerConnectionState) Reset() {
	*x = NotifyPlayerConnectionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[656]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPlayerConnectionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPlayerConnectionState) ProtoMessage() {}

func (x *NotifyPlayerConnectionState) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[656]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPlayerConnectionState.ProtoReflect.Descriptor instead.
func (*NotifyPlayerConnectionState) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{656}
}

func (x *NotifyPlayerConnectionState) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *NotifyPlayerConnectionState) GetState() GamePlayerState {
	if x != nil {
		return x.State
	}
	return GamePlayerState_NULL
}

type NotifyAccountLevelChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin *AccountLevel `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin"`
	Final  *AccountLevel `protobuf:"bytes,2,opt,name=final,proto3" json:"final"`
	Type   uint32        `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *NotifyAccountLevelChange) Reset() {
	*x = NotifyAccountLevelChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[657]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountLevelChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountLevelChange) ProtoMessage() {}

func (x *NotifyAccountLevelChange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[657]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountLevelChange.ProtoReflect.Descriptor instead.
func (*NotifyAccountLevelChange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{657}
}

func (x *NotifyAccountLevelChange) GetOrigin() *AccountLevel {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *NotifyAccountLevelChange) GetFinal() *AccountLevel {
	if x != nil {
		return x.Final
	}
	return nil
}

func (x *NotifyAccountLevelChange) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type NotifyGameFinishReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModeId        uint32                                `protobuf:"varint,1,opt,name=mode_id,json=modeId,proto3" json:"mode_id"`
	LevelChange   *NotifyGameFinishReward_LevelChange   `protobuf:"bytes,2,opt,name=level_change,json=levelChange,proto3" json:"level_change"`
	MatchChest    *NotifyGameFinishReward_MatchChest    `protobuf:"bytes,3,opt,name=match_chest,json=matchChest,proto3" json:"match_chest"`
	MainCharacter *NotifyGameFinishReward_MainCharacter `protobuf:"bytes,4,opt,name=main_character,json=mainCharacter,proto3" json:"main_character"`
	CharacterGift *NotifyGameFinishReward_CharacterGift `protobuf:"bytes,5,opt,name=character_gift,json=characterGift,proto3" json:"character_gift"`
}

func (x *NotifyGameFinishReward) Reset() {
	*x = NotifyGameFinishReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[658]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishReward) ProtoMessage() {}

func (x *NotifyGameFinishReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[658]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishReward.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{658}
}

func (x *NotifyGameFinishReward) GetModeId() uint32 {
	if x != nil {
		return x.ModeId
	}
	return 0
}

func (x *NotifyGameFinishReward) GetLevelChange() *NotifyGameFinishReward_LevelChange {
	if x != nil {
		return x.LevelChange
	}
	return nil
}

func (x *NotifyGameFinishReward) GetMatchChest() *NotifyGameFinishReward_MatchChest {
	if x != nil {
		return x.MatchChest
	}
	return nil
}

func (x *NotifyGameFinishReward) GetMainCharacter() *NotifyGameFinishReward_MainCharacter {
	if x != nil {
		return x.MainCharacter
	}
	return nil
}

func (x *NotifyGameFinishReward) GetCharacterGift() *NotifyGameFinishReward_CharacterGift {
	if x != nil {
		return x.CharacterGift
	}
	return nil
}

type NotifyActivityReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityReward []*NotifyActivityReward_ActivityReward `protobuf:"bytes,1,rep,name=activity_reward,json=activityReward,proto3" json:"activity_reward"`
}

func (x *NotifyActivityReward) Reset() {
	*x = NotifyActivityReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[659]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityReward) ProtoMessage() {}

func (x *NotifyActivityReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[659]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityReward.ProtoReflect.Descriptor instead.
func (*NotifyActivityReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{659}
}

func (x *NotifyActivityReward) GetActivityReward() []*NotifyActivityReward_ActivityReward {
	if x != nil {
		return x.ActivityReward
	}
	return nil
}

type NotifyActivityPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityPoints []*NotifyActivityPoint_ActivityPoint `protobuf:"bytes,1,rep,name=activity_points,json=activityPoints,proto3" json:"activity_points"`
}

func (x *NotifyActivityPoint) Reset() {
	*x = NotifyActivityPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[660]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityPoint) ProtoMessage() {}

func (x *NotifyActivityPoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[660]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityPoint.ProtoReflect.Descriptor instead.
func (*NotifyActivityPoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{660}
}

func (x *NotifyActivityPoint) GetActivityPoints() []*NotifyActivityPoint_ActivityPoint {
	if x != nil {
		return x.ActivityPoints
	}
	return nil
}

type NotifyLeaderboardPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderboardPoints []*NotifyLeaderboardPoint_LeaderboardPoint `protobuf:"bytes,1,rep,name=leaderboard_points,json=leaderboardPoints,proto3" json:"leaderboard_points"`
}

func (x *NotifyLeaderboardPoint) Reset() {
	*x = NotifyLeaderboardPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[661]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyLeaderboardPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyLeaderboardPoint) ProtoMessage() {}

func (x *NotifyLeaderboardPoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[661]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyLeaderboardPoint.ProtoReflect.Descriptor instead.
func (*NotifyLeaderboardPoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{661}
}

func (x *NotifyLeaderboardPoint) GetLeaderboardPoints() []*NotifyLeaderboardPoint_LeaderboardPoint {
	if x != nil {
		return x.LeaderboardPoints
	}
	return nil
}

type NotifyGamePause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paused bool `protobuf:"varint,1,opt,name=paused,proto3" json:"paused"`
}

func (x *NotifyGamePause) Reset() {
	*x = NotifyGamePause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[662]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGamePause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGamePause) ProtoMessage() {}

func (x *NotifyGamePause) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[662]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGamePause.ProtoReflect.Descriptor instead.
func (*NotifyGamePause) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{662}
}

func (x *NotifyGamePause) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

type NotifyEndGameVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results      []*NotifyEndGameVote_VoteResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results"`
	StartTime    uint32                          `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	DurationTime uint32                          `protobuf:"varint,3,opt,name=duration_time,json=durationTime,proto3" json:"duration_time"`
}

func (x *NotifyEndGameVote) Reset() {
	*x = NotifyEndGameVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[663]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyEndGameVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyEndGameVote) ProtoMessage() {}

func (x *NotifyEndGameVote) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[663]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyEndGameVote.ProtoReflect.Descriptor instead.
func (*NotifyEndGameVote) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{663}
}

func (x *NotifyEndGameVote) GetResults() []*NotifyEndGameVote_VoteResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *NotifyEndGameVote) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *NotifyEndGameVote) GetDurationTime() uint32 {
	if x != nil {
		return x.DurationTime
	}
	return 0
}

type NotifyObserveData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit *GameLiveUnit `protobuf:"bytes,1,opt,name=unit,proto3" json:"unit"`
}

func (x *NotifyObserveData) Reset() {
	*x = NotifyObserveData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[664]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyObserveData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyObserveData) ProtoMessage() {}

func (x *NotifyObserveData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[664]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyObserveData.ProtoReflect.Descriptor instead.
func (*NotifyObserveData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{664}
}

func (x *NotifyObserveData) GetUnit() *GameLiveUnit {
	if x != nil {
		return x.Unit
	}
	return nil
}

type NotifyRoomPlayerReady_AccountReadyState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Ready     bool   `protobuf:"varint,2,opt,name=ready,proto3" json:"ready"`
}

func (x *NotifyRoomPlayerReady_AccountReadyState) Reset() {
	*x = NotifyRoomPlayerReady_AccountReadyState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[665]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerReady_AccountReadyState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerReady_AccountReadyState) ProtoMessage() {}

func (x *NotifyRoomPlayerReady_AccountReadyState) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[665]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerReady_AccountReadyState.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerReady_AccountReadyState) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{3, 0}
}

func (x *NotifyRoomPlayerReady_AccountReadyState) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyRoomPlayerReady_AccountReadyState) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type NotifyRoomPlayerDressing_AccountDressingState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Dressing  bool   `protobuf:"varint,2,opt,name=dressing,proto3" json:"dressing"`
}

func (x *NotifyRoomPlayerDressing_AccountDressingState) Reset() {
	*x = NotifyRoomPlayerDressing_AccountDressingState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[666]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerDressing_AccountDressingState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerDressing_AccountDressingState) ProtoMessage() {}

func (x *NotifyRoomPlayerDressing_AccountDressingState) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[666]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerDressing_AccountDressingState.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerDressing_AccountDressingState) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{4, 0}
}

func (x *NotifyRoomPlayerDressing_AccountDressingState) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyRoomPlayerDressing_AccountDressingState) GetDressing() bool {
	if x != nil {
		return x.Dressing
	}
	return false
}

type NotifyAnnouncementUpdate_AnnouncementUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang     string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform"`
}

func (x *NotifyAnnouncementUpdate_AnnouncementUpdate) Reset() {
	*x = NotifyAnnouncementUpdate_AnnouncementUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[667]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAnnouncementUpdate_AnnouncementUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAnnouncementUpdate_AnnouncementUpdate) ProtoMessage() {}

func (x *NotifyAnnouncementUpdate_AnnouncementUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[667]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAnnouncementUpdate_AnnouncementUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAnnouncementUpdate_AnnouncementUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{15, 0}
}

func (x *NotifyAnnouncementUpdate_AnnouncementUpdate) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *NotifyAnnouncementUpdate_AnnouncementUpdate) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type NotifyActivityUpdate_FeedActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId        uint32                                                   `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	FeedCount         uint32                                                   `protobuf:"varint,2,opt,name=feed_count,json=feedCount,proto3" json:"feed_count"`
	FriendReceiveData *NotifyActivityUpdate_FeedActivityData_CountWithTimeData `protobuf:"bytes,3,opt,name=friend_receive_data,json=friendReceiveData,proto3" json:"friend_receive_data"`
	FriendSendData    *NotifyActivityUpdate_FeedActivityData_CountWithTimeData `protobuf:"bytes,4,opt,name=friend_send_data,json=friendSendData,proto3" json:"friend_send_data"`
	GiftInbox         []*NotifyActivityUpdate_FeedActivityData_GiftBoxData     `protobuf:"bytes,5,rep,name=gift_inbox,json=giftInbox,proto3" json:"gift_inbox"`
}

func (x *NotifyActivityUpdate_FeedActivityData) Reset() {
	*x = NotifyActivityUpdate_FeedActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[668]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityUpdate_FeedActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityUpdate_FeedActivityData) ProtoMessage() {}

func (x *NotifyActivityUpdate_FeedActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[668]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityUpdate_FeedActivityData.ProtoReflect.Descriptor instead.
func (*NotifyActivityUpdate_FeedActivityData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{24, 0}
}

func (x *NotifyActivityUpdate_FeedActivityData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotifyActivityUpdate_FeedActivityData) GetFeedCount() uint32 {
	if x != nil {
		return x.FeedCount
	}
	return 0
}

func (x *NotifyActivityUpdate_FeedActivityData) GetFriendReceiveData() *NotifyActivityUpdate_FeedActivityData_CountWithTimeData {
	if x != nil {
		return x.FriendReceiveData
	}
	return nil
}

func (x *NotifyActivityUpdate_FeedActivityData) GetFriendSendData() *NotifyActivityUpdate_FeedActivityData_CountWithTimeData {
	if x != nil {
		return x.FriendSendData
	}
	return nil
}

func (x *NotifyActivityUpdate_FeedActivityData) GetGiftInbox() []*NotifyActivityUpdate_FeedActivityData_GiftBoxData {
	if x != nil {
		return x.GiftInbox
	}
	return nil
}

type NotifyActivityUpdate_FeedActivityData_CountWithTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count          uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	LastUpdateTime uint32 `protobuf:"varint,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time"`
}

func (x *NotifyActivityUpdate_FeedActivityData_CountWithTimeData) Reset() {
	*x = NotifyActivityUpdate_FeedActivityData_CountWithTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[669]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityUpdate_FeedActivityData_CountWithTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityUpdate_FeedActivityData_CountWithTimeData) ProtoMessage() {}

func (x *NotifyActivityUpdate_FeedActivityData_CountWithTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[669]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityUpdate_FeedActivityData_CountWithTimeData.ProtoReflect.Descriptor instead.
func (*NotifyActivityUpdate_FeedActivityData_CountWithTimeData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{24, 0, 0}
}

func (x *NotifyActivityUpdate_FeedActivityData_CountWithTimeData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NotifyActivityUpdate_FeedActivityData_CountWithTimeData) GetLastUpdateTime() uint32 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

type NotifyActivityUpdate_FeedActivityData_GiftBoxData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId        uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count         uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
	FromAccountId uint32 `protobuf:"varint,4,opt,name=from_account_id,json=fromAccountId,proto3" json:"from_account_id"`
	Time          uint32 `protobuf:"varint,5,opt,name=time,proto3" json:"time"`
	Received      uint32 `protobuf:"varint,6,opt,name=received,proto3" json:"received"`
}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) Reset() {
	*x = NotifyActivityUpdate_FeedActivityData_GiftBoxData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[670]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityUpdate_FeedActivityData_GiftBoxData) ProtoMessage() {}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[670]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityUpdate_FeedActivityData_GiftBoxData.ProtoReflect.Descriptor instead.
func (*NotifyActivityUpdate_FeedActivityData_GiftBoxData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{24, 0, 1}
}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) GetFromAccountId() uint32 {
	if x != nil {
		return x.FromAccountId
	}
	return 0
}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *NotifyActivityUpdate_FeedActivityData_GiftBoxData) GetReceived() uint32 {
	if x != nil {
		return x.Received
	}
	return 0
}

type NotifyPayResult_ResourceModify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	Final uint32 `protobuf:"varint,3,opt,name=final,proto3" json:"final"`
}

func (x *NotifyPayResult_ResourceModify) Reset() {
	*x = NotifyPayResult_ResourceModify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[671]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPayResult_ResourceModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPayResult_ResourceModify) ProtoMessage() {}

func (x *NotifyPayResult_ResourceModify) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[671]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPayResult_ResourceModify.ProtoReflect.Descriptor instead.
func (*NotifyPayResult_ResourceModify) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{32, 0}
}

func (x *NotifyPayResult_ResourceModify) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyPayResult_ResourceModify) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NotifyPayResult_ResourceModify) GetFinal() uint32 {
	if x != nil {
		return x.Final
	}
	return 0
}

type NotifyGameFinishRewardV2_LevelChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin *AccountLevel `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin"`
	Final  *AccountLevel `protobuf:"bytes,2,opt,name=final,proto3" json:"final"`
	Type   uint32        `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *NotifyGameFinishRewardV2_LevelChange) Reset() {
	*x = NotifyGameFinishRewardV2_LevelChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[672]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishRewardV2_LevelChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishRewardV2_LevelChange) ProtoMessage() {}

func (x *NotifyGameFinishRewardV2_LevelChange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[672]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishRewardV2_LevelChange.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishRewardV2_LevelChange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{40, 0}
}

func (x *NotifyGameFinishRewardV2_LevelChange) GetOrigin() *AccountLevel {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *NotifyGameFinishRewardV2_LevelChange) GetFinal() *AccountLevel {
	if x != nil {
		return x.Final
	}
	return nil
}

func (x *NotifyGameFinishRewardV2_LevelChange) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type NotifyGameFinishRewardV2_MatchChest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChestId  uint32        `protobuf:"varint,1,opt,name=chest_id,json=chestId,proto3" json:"chest_id"`
	Origin   uint32        `protobuf:"varint,2,opt,name=origin,proto3" json:"origin"`
	Final    uint32        `protobuf:"varint,3,opt,name=final,proto3" json:"final"`
	IsGraded bool          `protobuf:"varint,4,opt,name=is_graded,json=isGraded,proto3" json:"is_graded"`
	Rewards  []*RewardSlot `protobuf:"bytes,5,rep,name=rewards,proto3" json:"rewards"`
}

func (x *NotifyGameFinishRewardV2_MatchChest) Reset() {
	*x = NotifyGameFinishRewardV2_MatchChest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[673]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishRewardV2_MatchChest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishRewardV2_MatchChest) ProtoMessage() {}

func (x *NotifyGameFinishRewardV2_MatchChest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[673]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishRewardV2_MatchChest.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishRewardV2_MatchChest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{40, 1}
}

func (x *NotifyGameFinishRewardV2_MatchChest) GetChestId() uint32 {
	if x != nil {
		return x.ChestId
	}
	return 0
}

func (x *NotifyGameFinishRewardV2_MatchChest) GetOrigin() uint32 {
	if x != nil {
		return x.Origin
	}
	return 0
}

func (x *NotifyGameFinishRewardV2_MatchChest) GetFinal() uint32 {
	if x != nil {
		return x.Final
	}
	return 0
}

func (x *NotifyGameFinishRewardV2_MatchChest) GetIsGraded() bool {
	if x != nil {
		return x.IsGraded
	}
	return false
}

func (x *NotifyGameFinishRewardV2_MatchChest) GetRewards() []*RewardSlot {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type NotifyGameFinishRewardV2_MainCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level uint32 `protobuf:"varint,1,opt,name=level,proto3" json:"level"`
	Exp   uint32 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp"`
	Add   uint32 `protobuf:"varint,3,opt,name=add,proto3" json:"add"`
}

func (x *NotifyGameFinishRewardV2_MainCharacter) Reset() {
	*x = NotifyGameFinishRewardV2_MainCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[674]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishRewardV2_MainCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishRewardV2_MainCharacter) ProtoMessage() {}

func (x *NotifyGameFinishRewardV2_MainCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[674]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishRewardV2_MainCharacter.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishRewardV2_MainCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{40, 2}
}

func (x *NotifyGameFinishRewardV2_MainCharacter) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *NotifyGameFinishRewardV2_MainCharacter) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *NotifyGameFinishRewardV2_MainCharacter) GetAdd() uint32 {
	if x != nil {
		return x.Add
	}
	return 0
}

type NotifyGameFinishRewardV2_CharacterGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin   uint32 `protobuf:"varint,1,opt,name=origin,proto3" json:"origin"`
	Final    uint32 `protobuf:"varint,2,opt,name=final,proto3" json:"final"`
	Add      uint32 `protobuf:"varint,3,opt,name=add,proto3" json:"add"`
	IsGraded bool   `protobuf:"varint,4,opt,name=is_graded,json=isGraded,proto3" json:"is_graded"`
}

func (x *NotifyGameFinishRewardV2_CharacterGift) Reset() {
	*x = NotifyGameFinishRewardV2_CharacterGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[675]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishRewardV2_CharacterGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishRewardV2_CharacterGift) ProtoMessage() {}

func (x *NotifyGameFinishRewardV2_CharacterGift) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[675]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishRewardV2_CharacterGift.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishRewardV2_CharacterGift) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{40, 3}
}

func (x *NotifyGameFinishRewardV2_CharacterGift) GetOrigin() uint32 {
	if x != nil {
		return x.Origin
	}
	return 0
}

func (x *NotifyGameFinishRewardV2_CharacterGift) GetFinal() uint32 {
	if x != nil {
		return x.Final
	}
	return 0
}

func (x *NotifyGameFinishRewardV2_CharacterGift) GetAdd() uint32 {
	if x != nil {
		return x.Add
	}
	return 0
}

func (x *NotifyGameFinishRewardV2_CharacterGift) GetIsGraded() bool {
	if x != nil {
		return x.IsGraded
	}
	return false
}

type NotifyActivityRewardV2_ActivityReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32        `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Rewards    []*RewardSlot `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
}

func (x *NotifyActivityRewardV2_ActivityReward) Reset() {
	*x = NotifyActivityRewardV2_ActivityReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[676]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityRewardV2_ActivityReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityRewardV2_ActivityReward) ProtoMessage() {}

func (x *NotifyActivityRewardV2_ActivityReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[676]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityRewardV2_ActivityReward.ProtoReflect.Descriptor instead.
func (*NotifyActivityRewardV2_ActivityReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{41, 0}
}

func (x *NotifyActivityRewardV2_ActivityReward) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotifyActivityRewardV2_ActivityReward) GetRewards() []*RewardSlot {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type NotifyActivityPointV2_ActivityPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Point      uint32 `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
}

func (x *NotifyActivityPointV2_ActivityPoint) Reset() {
	*x = NotifyActivityPointV2_ActivityPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[677]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityPointV2_ActivityPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityPointV2_ActivityPoint) ProtoMessage() {}

func (x *NotifyActivityPointV2_ActivityPoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[677]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityPointV2_ActivityPoint.ProtoReflect.Descriptor instead.
func (*NotifyActivityPointV2_ActivityPoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{42, 0}
}

func (x *NotifyActivityPointV2_ActivityPoint) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotifyActivityPointV2_ActivityPoint) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type NotifyLeaderboardPointV2_LeaderboardPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId,proto3" json:"leaderboard_id"`
	Point         uint32 `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
}

func (x *NotifyLeaderboardPointV2_LeaderboardPoint) Reset() {
	*x = NotifyLeaderboardPointV2_LeaderboardPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[678]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyLeaderboardPointV2_LeaderboardPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyLeaderboardPointV2_LeaderboardPoint) ProtoMessage() {}

func (x *NotifyLeaderboardPointV2_LeaderboardPoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[678]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyLeaderboardPointV2_LeaderboardPoint.ProtoReflect.Descriptor instead.
func (*NotifyLeaderboardPointV2_LeaderboardPoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{43, 0}
}

func (x *NotifyLeaderboardPointV2_LeaderboardPoint) GetLeaderboardId() uint32 {
	if x != nil {
		return x.LeaderboardId
	}
	return 0
}

func (x *NotifyLeaderboardPointV2_LeaderboardPoint) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type AccountMahjongStatistic_RoundSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count"`
	RongCount      uint32 `protobuf:"varint,2,opt,name=rong_count,json=rongCount,proto3" json:"rong_count"`
	ZimoCount      uint32 `protobuf:"varint,3,opt,name=zimo_count,json=zimoCount,proto3" json:"zimo_count"`
	FangchongCount uint32 `protobuf:"varint,4,opt,name=fangchong_count,json=fangchongCount,proto3" json:"fangchong_count"`
}

func (x *AccountMahjongStatistic_RoundSummary) Reset() {
	*x = AccountMahjongStatistic_RoundSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[679]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_RoundSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_RoundSummary) ProtoMessage() {}

func (x *AccountMahjongStatistic_RoundSummary) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[679]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_RoundSummary.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_RoundSummary) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{51, 0}
}

func (x *AccountMahjongStatistic_RoundSummary) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AccountMahjongStatistic_RoundSummary) GetRongCount() uint32 {
	if x != nil {
		return x.RongCount
	}
	return 0
}

func (x *AccountMahjongStatistic_RoundSummary) GetZimoCount() uint32 {
	if x != nil {
		return x.ZimoCount
	}
	return 0
}

func (x *AccountMahjongStatistic_RoundSummary) GetFangchongCount() uint32 {
	if x != nil {
		return x.FangchongCount
	}
	return 0
}

type AccountMahjongStatistic_HuSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count"`
	DoraRoundCount uint32 `protobuf:"varint,2,opt,name=dora_round_count,json=doraRoundCount,proto3" json:"dora_round_count"`
	TotalFan       uint32 `protobuf:"varint,3,opt,name=total_fan,json=totalFan,proto3" json:"total_fan"`
}

func (x *AccountMahjongStatistic_HuSummary) Reset() {
	*x = AccountMahjongStatistic_HuSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[680]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_HuSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_HuSummary) ProtoMessage() {}

func (x *AccountMahjongStatistic_HuSummary) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[680]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_HuSummary.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_HuSummary) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{51, 1}
}

func (x *AccountMahjongStatistic_HuSummary) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AccountMahjongStatistic_HuSummary) GetDoraRoundCount() uint32 {
	if x != nil {
		return x.DoraRoundCount
	}
	return 0
}

func (x *AccountMahjongStatistic_HuSummary) GetTotalFan() uint32 {
	if x != nil {
		return x.TotalFan
	}
	return 0
}

type AccountMahjongStatistic_HighestHuRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fanshu  uint32   `protobuf:"varint,1,opt,name=fanshu,proto3" json:"fanshu"`
	Doranum uint32   `protobuf:"varint,2,opt,name=doranum,proto3" json:"doranum"`
	Title   string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Hands   []string `protobuf:"bytes,4,rep,name=hands,proto3" json:"hands"`
	Ming    []string `protobuf:"bytes,5,rep,name=ming,proto3" json:"ming"`
	Hupai   string   `protobuf:"bytes,6,opt,name=hupai,proto3" json:"hupai"`
	TitleId uint32   `protobuf:"varint,7,opt,name=title_id,json=titleId,proto3" json:"title_id"`
}

func (x *AccountMahjongStatistic_HighestHuRecord) Reset() {
	*x = AccountMahjongStatistic_HighestHuRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[681]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_HighestHuRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_HighestHuRecord) ProtoMessage() {}

func (x *AccountMahjongStatistic_HighestHuRecord) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[681]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_HighestHuRecord.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_HighestHuRecord) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{51, 2}
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetFanshu() uint32 {
	if x != nil {
		return x.Fanshu
	}
	return 0
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetDoranum() uint32 {
	if x != nil {
		return x.Doranum
	}
	return 0
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetHands() []string {
	if x != nil {
		return x.Hands
	}
	return nil
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetHupai() string {
	if x != nil {
		return x.Hupai
	}
	return ""
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

type AccountMahjongStatistic_Liqi20Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount       uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count"`
	TotalLidoraCount uint32 `protobuf:"varint,2,opt,name=total_lidora_count,json=totalLidoraCount,proto3" json:"total_lidora_count"`
	AverageHuPoint   uint32 `protobuf:"varint,3,opt,name=average_hu_point,json=averageHuPoint,proto3" json:"average_hu_point"`
}

func (x *AccountMahjongStatistic_Liqi20Summary) Reset() {
	*x = AccountMahjongStatistic_Liqi20Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[682]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_Liqi20Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_Liqi20Summary) ProtoMessage() {}

func (x *AccountMahjongStatistic_Liqi20Summary) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[682]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_Liqi20Summary.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_Liqi20Summary) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{51, 3}
}

func (x *AccountMahjongStatistic_Liqi20Summary) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AccountMahjongStatistic_Liqi20Summary) GetTotalLidoraCount() uint32 {
	if x != nil {
		return x.TotalLidoraCount
	}
	return 0
}

func (x *AccountMahjongStatistic_Liqi20Summary) GetAverageHuPoint() uint32 {
	if x != nil {
		return x.AverageHuPoint
	}
	return 0
}

type AccountMahjongStatistic_LiQi10Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalXuanshang uint32 `protobuf:"varint,1,opt,name=total_xuanshang,json=totalXuanshang,proto3" json:"total_xuanshang"`
	TotalFanshu    uint32 `protobuf:"varint,2,opt,name=total_fanshu,json=totalFanshu,proto3" json:"total_fanshu"`
}

func (x *AccountMahjongStatistic_LiQi10Summary) Reset() {
	*x = AccountMahjongStatistic_LiQi10Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[683]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_LiQi10Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_LiQi10Summary) ProtoMessage() {}

func (x *AccountMahjongStatistic_LiQi10Summary) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[683]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_LiQi10Summary.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_LiQi10Summary) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{51, 4}
}

func (x *AccountMahjongStatistic_LiQi10Summary) GetTotalXuanshang() uint32 {
	if x != nil {
		return x.TotalXuanshang
	}
	return 0
}

func (x *AccountMahjongStatistic_LiQi10Summary) GetTotalFanshu() uint32 {
	if x != nil {
		return x.TotalFanshu
	}
	return 0
}

type AccountMahjongStatistic_GameResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank       uint32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank"`
	FinalPoint int32  `protobuf:"varint,2,opt,name=final_point,json=finalPoint,proto3" json:"final_point"`
}

func (x *AccountMahjongStatistic_GameResult) Reset() {
	*x = AccountMahjongStatistic_GameResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[684]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_GameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_GameResult) ProtoMessage() {}

func (x *AccountMahjongStatistic_GameResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[684]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_GameResult.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_GameResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{51, 5}
}

func (x *AccountMahjongStatistic_GameResult) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *AccountMahjongStatistic_GameResult) GetFinalPoint() int32 {
	if x != nil {
		return x.FinalPoint
	}
	return 0
}

type Account_PlatformDiamond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *Account_PlatformDiamond) Reset() {
	*x = Account_PlatformDiamond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[685]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_PlatformDiamond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_PlatformDiamond) ProtoMessage() {}

func (x *Account_PlatformDiamond) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[685]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_PlatformDiamond.ProtoReflect.Descriptor instead.
func (*Account_PlatformDiamond) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{55, 0}
}

func (x *Account_PlatformDiamond) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Account_PlatformDiamond) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Account_PlatformSkinTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *Account_PlatformSkinTicket) Reset() {
	*x = Account_PlatformSkinTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[686]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_PlatformSkinTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_PlatformSkinTicket) ProtoMessage() {}

func (x *Account_PlatformSkinTicket) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[686]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_PlatformSkinTicket.ProtoReflect.Descriptor instead.
func (*Account_PlatformSkinTicket) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{55, 1}
}

func (x *Account_PlatformSkinTicket) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Account_PlatformSkinTicket) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Account_ChallengeLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season uint32 `protobuf:"varint,1,opt,name=season,proto3" json:"season"`
	Level  uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	Rank   uint32 `protobuf:"varint,3,opt,name=rank,proto3" json:"rank"`
}

func (x *Account_ChallengeLevel) Reset() {
	*x = Account_ChallengeLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[687]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_ChallengeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_ChallengeLevel) ProtoMessage() {}

func (x *Account_ChallengeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[687]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_ChallengeLevel.ProtoReflect.Descriptor instead.
func (*Account_ChallengeLevel) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{55, 2}
}

func (x *Account_ChallengeLevel) GetSeason() uint32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *Account_ChallengeLevel) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Account_ChallengeLevel) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type Account_AchievementCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rare  uint32 `protobuf:"varint,1,opt,name=rare,proto3" json:"rare"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *Account_AchievementCount) Reset() {
	*x = Account_AchievementCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[688]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_AchievementCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_AchievementCount) ProtoMessage() {}

func (x *Account_AchievementCount) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[688]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_AchievementCount.ProtoReflect.Descriptor instead.
func (*Account_AchievementCount) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{55, 3}
}

func (x *Account_AchievementCount) GetRare() uint32 {
	if x != nil {
		return x.Rare
	}
	return 0
}

func (x *Account_AchievementCount) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AccountUpdate_NumericalUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Final uint32 `protobuf:"varint,3,opt,name=final,proto3" json:"final"`
}

func (x *AccountUpdate_NumericalUpdate) Reset() {
	*x = AccountUpdate_NumericalUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[689]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_NumericalUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_NumericalUpdate) ProtoMessage() {}

func (x *AccountUpdate_NumericalUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[689]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_NumericalUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_NumericalUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 0}
}

func (x *AccountUpdate_NumericalUpdate) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountUpdate_NumericalUpdate) GetFinal() uint32 {
	if x != nil {
		return x.Final
	}
	return 0
}

type AccountUpdate_CharacterUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters      []*Character `protobuf:"bytes,2,rep,name=characters,proto3" json:"characters"`
	Skins           []uint32     `protobuf:"varint,3,rep,packed,name=skins,proto3" json:"skins"`
	FinishedEndings []uint32     `protobuf:"varint,4,rep,packed,name=finished_endings,json=finishedEndings,proto3" json:"finished_endings"`
	RewardedEndings []uint32     `protobuf:"varint,5,rep,packed,name=rewarded_endings,json=rewardedEndings,proto3" json:"rewarded_endings"`
}

func (x *AccountUpdate_CharacterUpdate) Reset() {
	*x = AccountUpdate_CharacterUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[690]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_CharacterUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_CharacterUpdate) ProtoMessage() {}

func (x *AccountUpdate_CharacterUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[690]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_CharacterUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_CharacterUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 1}
}

func (x *AccountUpdate_CharacterUpdate) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *AccountUpdate_CharacterUpdate) GetSkins() []uint32 {
	if x != nil {
		return x.Skins
	}
	return nil
}

func (x *AccountUpdate_CharacterUpdate) GetFinishedEndings() []uint32 {
	if x != nil {
		return x.FinishedEndings
	}
	return nil
}

func (x *AccountUpdate_CharacterUpdate) GetRewardedEndings() []uint32 {
	if x != nil {
		return x.RewardedEndings
	}
	return nil
}

type AccountUpdate_AchievementUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses    []*AchievementProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
	RewardedGroup []uint32               `protobuf:"varint,2,rep,packed,name=rewarded_group,json=rewardedGroup,proto3" json:"rewarded_group"`
}

func (x *AccountUpdate_AchievementUpdate) Reset() {
	*x = AccountUpdate_AchievementUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[691]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_AchievementUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_AchievementUpdate) ProtoMessage() {}

func (x *AccountUpdate_AchievementUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[691]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_AchievementUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_AchievementUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 2}
}

func (x *AccountUpdate_AchievementUpdate) GetProgresses() []*AchievementProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_AchievementUpdate) GetRewardedGroup() []uint32 {
	if x != nil {
		return x.RewardedGroup
	}
	return nil
}

type AccountUpdate_DailyTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
	TaskList   []uint32        `protobuf:"varint,2,rep,packed,name=task_list,json=taskList,proto3" json:"task_list"`
}

func (x *AccountUpdate_DailyTaskUpdate) Reset() {
	*x = AccountUpdate_DailyTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[692]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_DailyTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_DailyTaskUpdate) ProtoMessage() {}

func (x *AccountUpdate_DailyTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[692]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_DailyTaskUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_DailyTaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 3}
}

func (x *AccountUpdate_DailyTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_DailyTaskUpdate) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type AccountUpdate_TitleUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewTitles    []uint32 `protobuf:"varint,1,rep,packed,name=new_titles,json=newTitles,proto3" json:"new_titles"`
	RemoveTitles []uint32 `protobuf:"varint,2,rep,packed,name=remove_titles,json=removeTitles,proto3" json:"remove_titles"`
}

func (x *AccountUpdate_TitleUpdate) Reset() {
	*x = AccountUpdate_TitleUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[693]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_TitleUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_TitleUpdate) ProtoMessage() {}

func (x *AccountUpdate_TitleUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[693]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_TitleUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_TitleUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 4}
}

func (x *AccountUpdate_TitleUpdate) GetNewTitles() []uint32 {
	if x != nil {
		return x.NewTitles
	}
	return nil
}

func (x *AccountUpdate_TitleUpdate) GetRemoveTitles() []uint32 {
	if x != nil {
		return x.RemoveTitles
	}
	return nil
}

type AccountUpdate_TaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
	TaskList   []uint32        `protobuf:"varint,2,rep,packed,name=task_list,json=taskList,proto3" json:"task_list"`
}

func (x *AccountUpdate_TaskUpdate) Reset() {
	*x = AccountUpdate_TaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[694]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_TaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_TaskUpdate) ProtoMessage() {}

func (x *AccountUpdate_TaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[694]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_TaskUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_TaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 5}
}

func (x *AccountUpdate_TaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_TaskUpdate) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type AccountUpdate_AccountChallengeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses     []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
	Level          uint32          `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	RefreshCount   uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count"`
	MatchCount     uint32          `protobuf:"varint,4,opt,name=match_count,json=matchCount,proto3" json:"match_count"`
	TicketId       uint32          `protobuf:"varint,5,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id"`
	TaskList       []uint32        `protobuf:"varint,6,rep,packed,name=task_list,json=taskList,proto3" json:"task_list"`
	RewardedSeason []uint32        `protobuf:"varint,7,rep,packed,name=rewarded_season,json=rewardedSeason,proto3" json:"rewarded_season"`
}

func (x *AccountUpdate_AccountChallengeUpdate) Reset() {
	*x = AccountUpdate_AccountChallengeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[695]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_AccountChallengeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_AccountChallengeUpdate) ProtoMessage() {}

func (x *AccountUpdate_AccountChallengeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[695]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_AccountChallengeUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_AccountChallengeUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 6}
}

func (x *AccountUpdate_AccountChallengeUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_AccountChallengeUpdate) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AccountUpdate_AccountChallengeUpdate) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

func (x *AccountUpdate_AccountChallengeUpdate) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *AccountUpdate_AccountChallengeUpdate) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *AccountUpdate_AccountChallengeUpdate) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

func (x *AccountUpdate_AccountChallengeUpdate) GetRewardedSeason() []uint32 {
	if x != nil {
		return x.RewardedSeason
	}
	return nil
}

type AccountUpdate_AccountABMatchUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId       uint32                                           `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id"`
	MatchCount    uint32                                           `protobuf:"varint,2,opt,name=match_count,json=matchCount,proto3" json:"match_count"`
	BuyInCount    uint32                                           `protobuf:"varint,3,opt,name=buy_in_count,json=buyInCount,proto3" json:"buy_in_count"`
	Point         uint32                                           `protobuf:"varint,4,opt,name=point,proto3" json:"point"`
	Rewarded      bool                                             `protobuf:"varint,5,opt,name=rewarded,proto3" json:"rewarded"`
	MatchMaxPoint []*AccountUpdate_AccountABMatchUpdate_MatchPoint `protobuf:"bytes,6,rep,name=match_max_point,json=matchMaxPoint,proto3" json:"match_max_point"`
	Quit          bool                                             `protobuf:"varint,7,opt,name=quit,proto3" json:"quit"`
}

func (x *AccountUpdate_AccountABMatchUpdate) Reset() {
	*x = AccountUpdate_AccountABMatchUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[696]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_AccountABMatchUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_AccountABMatchUpdate) ProtoMessage() {}

func (x *AccountUpdate_AccountABMatchUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[696]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_AccountABMatchUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_AccountABMatchUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 7}
}

func (x *AccountUpdate_AccountABMatchUpdate) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate) GetBuyInCount() uint32 {
	if x != nil {
		return x.BuyInCount
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate) GetRewarded() bool {
	if x != nil {
		return x.Rewarded
	}
	return false
}

func (x *AccountUpdate_AccountABMatchUpdate) GetMatchMaxPoint() []*AccountUpdate_AccountABMatchUpdate_MatchPoint {
	if x != nil {
		return x.MatchMaxPoint
	}
	return nil
}

func (x *AccountUpdate_AccountABMatchUpdate) GetQuit() bool {
	if x != nil {
		return x.Quit
	}
	return false
}

type AccountUpdate_SegmentTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*SegmentTaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses"`
	TaskList   []uint32               `protobuf:"varint,2,rep,packed,name=task_list,json=taskList,proto3" json:"task_list"`
}

func (x *AccountUpdate_SegmentTaskUpdate) Reset() {
	*x = AccountUpdate_SegmentTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[697]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_SegmentTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_SegmentTaskUpdate) ProtoMessage() {}

func (x *AccountUpdate_SegmentTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[697]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_SegmentTaskUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_SegmentTaskUpdate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 8}
}

func (x *AccountUpdate_SegmentTaskUpdate) GetProgresses() []*SegmentTaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_SegmentTaskUpdate) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type AccountUpdate_AccountABMatchUpdate_MatchPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId uint32 `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id"`
	Point   uint32 `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) Reset() {
	*x = AccountUpdate_AccountABMatchUpdate_MatchPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[698]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_AccountABMatchUpdate_MatchPoint) ProtoMessage() {}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[698]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_AccountABMatchUpdate_MatchPoint.ProtoReflect.Descriptor instead.
func (*AccountUpdate_AccountABMatchUpdate_MatchPoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{57, 7, 0}
}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type GameEndResult_PlayerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat         uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	TotalPoint   int32  `protobuf:"varint,2,opt,name=total_point,json=totalPoint,proto3" json:"total_point"`
	PartPoint_1  int32  `protobuf:"varint,3,opt,name=part_point_1,json=partPoint1,proto3" json:"part_point_1"`
	PartPoint_2  int32  `protobuf:"varint,4,opt,name=part_point_2,json=partPoint2,proto3" json:"part_point_2"`
	GradingScore int32  `protobuf:"varint,5,opt,name=grading_score,json=gradingScore,proto3" json:"grading_score"`
	Gold         int32  `protobuf:"varint,6,opt,name=gold,proto3" json:"gold"`
}

func (x *GameEndResult_PlayerItem) Reset() {
	*x = GameEndResult_PlayerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[699]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEndResult_PlayerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndResult_PlayerItem) ProtoMessage() {}

func (x *GameEndResult_PlayerItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[699]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndResult_PlayerItem.ProtoReflect.Descriptor instead.
func (*GameEndResult_PlayerItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{68, 0}
}

func (x *GameEndResult_PlayerItem) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetTotalPoint() int32 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetPartPoint_1() int32 {
	if x != nil {
		return x.PartPoint_1
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetPartPoint_2() int32 {
	if x != nil {
		return x.PartPoint_2
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetGradingScore() int32 {
	if x != nil {
		return x.GradingScore
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type RewardPlusResult_Exchange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count    uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	Exchange uint32 `protobuf:"varint,3,opt,name=exchange,proto3" json:"exchange"`
}

func (x *RewardPlusResult_Exchange) Reset() {
	*x = RewardPlusResult_Exchange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[700]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardPlusResult_Exchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardPlusResult_Exchange) ProtoMessage() {}

func (x *RewardPlusResult_Exchange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[700]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardPlusResult_Exchange.ProtoReflect.Descriptor instead.
func (*RewardPlusResult_Exchange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{78, 0}
}

func (x *RewardPlusResult_Exchange) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RewardPlusResult_Exchange) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RewardPlusResult_Exchange) GetExchange() uint32 {
	if x != nil {
		return x.Exchange
	}
	return 0
}

type AccountStatisticByGameMode_RoundEndData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Sum  uint32 `protobuf:"varint,2,opt,name=sum,proto3" json:"sum"`
}

func (x *AccountStatisticByGameMode_RoundEndData) Reset() {
	*x = AccountStatisticByGameMode_RoundEndData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[701]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticByGameMode_RoundEndData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticByGameMode_RoundEndData) ProtoMessage() {}

func (x *AccountStatisticByGameMode_RoundEndData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[701]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticByGameMode_RoundEndData.ProtoReflect.Descriptor instead.
func (*AccountStatisticByGameMode_RoundEndData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{83, 0}
}

func (x *AccountStatisticByGameMode_RoundEndData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AccountStatisticByGameMode_RoundEndData) GetSum() uint32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type AccountStatisticByGameMode_RankScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank     uint32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank"`
	ScoreSum int32  `protobuf:"varint,2,opt,name=score_sum,json=scoreSum,proto3" json:"score_sum"`
	Count    uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
}

func (x *AccountStatisticByGameMode_RankScore) Reset() {
	*x = AccountStatisticByGameMode_RankScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[702]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticByGameMode_RankScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticByGameMode_RankScore) ProtoMessage() {}

func (x *AccountStatisticByGameMode_RankScore) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[702]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticByGameMode_RankScore.ProtoReflect.Descriptor instead.
func (*AccountStatisticByGameMode_RankScore) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{83, 1}
}

func (x *AccountStatisticByGameMode_RankScore) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *AccountStatisticByGameMode_RankScore) GetScoreSum() int32 {
	if x != nil {
		return x.ScoreSum
	}
	return 0
}

func (x *AccountStatisticByGameMode_RankScore) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AccountDetailStatisticV2_RankStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalStatistic   *AccountDetailStatisticV2_RankStatistic_RankData `protobuf:"bytes,1,opt,name=total_statistic,json=totalStatistic,proto3" json:"total_statistic"`
	MonthStatistic   *AccountDetailStatisticV2_RankStatistic_RankData `protobuf:"bytes,2,opt,name=month_statistic,json=monthStatistic,proto3" json:"month_statistic"`
	MonthRefreshTime uint32                                           `protobuf:"varint,3,opt,name=month_refresh_time,json=monthRefreshTime,proto3" json:"month_refresh_time"`
}

func (x *AccountDetailStatisticV2_RankStatistic) Reset() {
	*x = AccountDetailStatisticV2_RankStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[703]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_RankStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_RankStatistic) ProtoMessage() {}

func (x *AccountDetailStatisticV2_RankStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[703]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_RankStatistic.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_RankStatistic) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{88, 0}
}

func (x *AccountDetailStatisticV2_RankStatistic) GetTotalStatistic() *AccountDetailStatisticV2_RankStatistic_RankData {
	if x != nil {
		return x.TotalStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_RankStatistic) GetMonthStatistic() *AccountDetailStatisticV2_RankStatistic_RankData {
	if x != nil {
		return x.MonthStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_RankStatistic) GetMonthRefreshTime() uint32 {
	if x != nil {
		return x.MonthRefreshTime
	}
	return 0
}

type AccountDetailStatisticV2_CustomizedContestStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalStatistic   *AccountDetailStatistic `protobuf:"bytes,1,opt,name=total_statistic,json=totalStatistic,proto3" json:"total_statistic"`
	MonthStatistic   *AccountDetailStatistic `protobuf:"bytes,2,opt,name=month_statistic,json=monthStatistic,proto3" json:"month_statistic"`
	MonthRefreshTime uint32                  `protobuf:"varint,3,opt,name=month_refresh_time,json=monthRefreshTime,proto3" json:"month_refresh_time"`
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) Reset() {
	*x = AccountDetailStatisticV2_CustomizedContestStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[704]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_CustomizedContestStatistic) ProtoMessage() {}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[704]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_CustomizedContestStatistic.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_CustomizedContestStatistic) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{88, 1}
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) GetTotalStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.TotalStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) GetMonthStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.MonthStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) GetMonthRefreshTime() uint32 {
	if x != nil {
		return x.MonthRefreshTime
	}
	return 0
}

type AccountDetailStatisticV2_ChallengeStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllSeason      *AccountDetailStatistic                                   `protobuf:"bytes,1,opt,name=all_season,json=allSeason,proto3" json:"all_season"`
	SeasonDataList []*AccountDetailStatisticV2_ChallengeStatistic_SeasonData `protobuf:"bytes,2,rep,name=season_data_list,json=seasonDataList,proto3" json:"season_data_list"`
}

func (x *AccountDetailStatisticV2_ChallengeStatistic) Reset() {
	*x = AccountDetailStatisticV2_ChallengeStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[705]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_ChallengeStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_ChallengeStatistic) ProtoMessage() {}

func (x *AccountDetailStatisticV2_ChallengeStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[705]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_ChallengeStatistic.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_ChallengeStatistic) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{88, 2}
}

func (x *AccountDetailStatisticV2_ChallengeStatistic) GetAllSeason() *AccountDetailStatistic {
	if x != nil {
		return x.AllSeason
	}
	return nil
}

func (x *AccountDetailStatisticV2_ChallengeStatistic) GetSeasonDataList() []*AccountDetailStatisticV2_ChallengeStatistic_SeasonData {
	if x != nil {
		return x.SeasonDataList
	}
	return nil
}

type AccountDetailStatisticV2_RankStatistic_RankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllLevelStatistic *AccountDetailStatistic                                          `protobuf:"bytes,1,opt,name=all_level_statistic,json=allLevelStatistic,proto3" json:"all_level_statistic"`
	LevelDataList     []*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData `protobuf:"bytes,2,rep,name=level_data_list,json=levelDataList,proto3" json:"level_data_list"`
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) Reset() {
	*x = AccountDetailStatisticV2_RankStatistic_RankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[706]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_RankStatistic_RankData) ProtoMessage() {}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[706]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_RankStatistic_RankData.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_RankStatistic_RankData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{88, 0, 0}
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) GetAllLevelStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.AllLevelStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) GetLevelDataList() []*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData {
	if x != nil {
		return x.LevelDataList
	}
	return nil
}

type AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankLevel uint32                  `protobuf:"varint,1,opt,name=rank_level,json=rankLevel,proto3" json:"rank_level"`
	Statistic *AccountDetailStatistic `protobuf:"bytes,2,opt,name=statistic,proto3" json:"statistic"`
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) Reset() {
	*x = AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[707]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) ProtoMessage() {}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[707]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{88, 0, 0, 0}
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) GetRankLevel() uint32 {
	if x != nil {
		return x.RankLevel
	}
	return 0
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) GetStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.Statistic
	}
	return nil
}

type AccountDetailStatisticV2_ChallengeStatistic_SeasonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId  uint32                  `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id"`
	Statistic *AccountDetailStatistic `protobuf:"bytes,2,opt,name=statistic,proto3" json:"statistic"`
}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) Reset() {
	*x = AccountDetailStatisticV2_ChallengeStatistic_SeasonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[708]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_ChallengeStatistic_SeasonData) ProtoMessage() {}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[708]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_ChallengeStatistic_SeasonData.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_ChallengeStatistic_SeasonData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{88, 2, 0}
}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) GetSeasonId() uint32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) GetStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.Statistic
	}
	return nil
}

type FeedActivityData_CountWithTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count          uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	LastUpdateTime uint32 `protobuf:"varint,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time"`
}

func (x *FeedActivityData_CountWithTimeData) Reset() {
	*x = FeedActivityData_CountWithTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[709]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedActivityData_CountWithTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedActivityData_CountWithTimeData) ProtoMessage() {}

func (x *FeedActivityData_CountWithTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[709]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedActivityData_CountWithTimeData.ProtoReflect.Descriptor instead.
func (*FeedActivityData_CountWithTimeData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{98, 0}
}

func (x *FeedActivityData_CountWithTimeData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FeedActivityData_CountWithTimeData) GetLastUpdateTime() uint32 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

type FeedActivityData_GiftBoxData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId        uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count         uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
	FromAccountId uint32 `protobuf:"varint,4,opt,name=from_account_id,json=fromAccountId,proto3" json:"from_account_id"`
	Time          uint32 `protobuf:"varint,5,opt,name=time,proto3" json:"time"`
	Received      uint32 `protobuf:"varint,6,opt,name=received,proto3" json:"received"`
}

func (x *FeedActivityData_GiftBoxData) Reset() {
	*x = FeedActivityData_GiftBoxData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[710]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedActivityData_GiftBoxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedActivityData_GiftBoxData) ProtoMessage() {}

func (x *FeedActivityData_GiftBoxData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[710]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedActivityData_GiftBoxData.ProtoReflect.Descriptor instead.
func (*FeedActivityData_GiftBoxData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{98, 1}
}

func (x *FeedActivityData_GiftBoxData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FeedActivityData_GiftBoxData) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *FeedActivityData_GiftBoxData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FeedActivityData_GiftBoxData) GetFromAccountId() uint32 {
	if x != nil {
		return x.FromAccountId
	}
	return 0
}

func (x *FeedActivityData_GiftBoxData) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *FeedActivityData_GiftBoxData) GetReceived() uint32 {
	if x != nil {
		return x.Received
	}
	return 0
}

type ActivityFeedData_CountWithTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count          uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	LastUpdateTime uint32 `protobuf:"varint,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time"`
}

func (x *ActivityFeedData_CountWithTimeData) Reset() {
	*x = ActivityFeedData_CountWithTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[711]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFeedData_CountWithTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFeedData_CountWithTimeData) ProtoMessage() {}

func (x *ActivityFeedData_CountWithTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[711]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFeedData_CountWithTimeData.ProtoReflect.Descriptor instead.
func (*ActivityFeedData_CountWithTimeData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{102, 0}
}

func (x *ActivityFeedData_CountWithTimeData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActivityFeedData_CountWithTimeData) GetLastUpdateTime() uint32 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

type ActivityFeedData_GiftBoxData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId        uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count         uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
	FromAccountId uint32 `protobuf:"varint,4,opt,name=from_account_id,json=fromAccountId,proto3" json:"from_account_id"`
	Time          uint32 `protobuf:"varint,5,opt,name=time,proto3" json:"time"`
	Received      uint32 `protobuf:"varint,6,opt,name=received,proto3" json:"received"`
}

func (x *ActivityFeedData_GiftBoxData) Reset() {
	*x = ActivityFeedData_GiftBoxData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[712]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFeedData_GiftBoxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFeedData_GiftBoxData) ProtoMessage() {}

func (x *ActivityFeedData_GiftBoxData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[712]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFeedData_GiftBoxData.ProtoReflect.Descriptor instead.
func (*ActivityFeedData_GiftBoxData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{102, 1}
}

func (x *ActivityFeedData_GiftBoxData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityFeedData_GiftBoxData) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ActivityFeedData_GiftBoxData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActivityFeedData_GiftBoxData) GetFromAccountId() uint32 {
	if x != nil {
		return x.FromAccountId
	}
	return 0
}

func (x *ActivityFeedData_GiftBoxData) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ActivityFeedData_GiftBoxData) GetReceived() uint32 {
	if x != nil {
		return x.Received
	}
	return 0
}

type ActivityFriendGiftData_CountWithTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count          uint32   `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	LastUpdateTime uint32   `protobuf:"varint,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time"`
	SendFriendId   []uint32 `protobuf:"varint,3,rep,packed,name=send_friend_id,json=sendFriendId,proto3" json:"send_friend_id"`
}

func (x *ActivityFriendGiftData_CountWithTimeData) Reset() {
	*x = ActivityFriendGiftData_CountWithTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[713]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFriendGiftData_CountWithTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFriendGiftData_CountWithTimeData) ProtoMessage() {}

func (x *ActivityFriendGiftData_CountWithTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[713]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFriendGiftData_CountWithTimeData.ProtoReflect.Descriptor instead.
func (*ActivityFriendGiftData_CountWithTimeData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{103, 0}
}

func (x *ActivityFriendGiftData_CountWithTimeData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActivityFriendGiftData_CountWithTimeData) GetLastUpdateTime() uint32 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

func (x *ActivityFriendGiftData_CountWithTimeData) GetSendFriendId() []uint32 {
	if x != nil {
		return x.SendFriendId
	}
	return nil
}

type ActivityFriendGiftData_GiftBoxData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId        uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count         uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
	FromAccountId uint32 `protobuf:"varint,4,opt,name=from_account_id,json=fromAccountId,proto3" json:"from_account_id"`
	Time          uint32 `protobuf:"varint,5,opt,name=time,proto3" json:"time"`
	Received      uint32 `protobuf:"varint,6,opt,name=received,proto3" json:"received"`
}

func (x *ActivityFriendGiftData_GiftBoxData) Reset() {
	*x = ActivityFriendGiftData_GiftBoxData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[714]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFriendGiftData_GiftBoxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFriendGiftData_GiftBoxData) ProtoMessage() {}

func (x *ActivityFriendGiftData_GiftBoxData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[714]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFriendGiftData_GiftBoxData.ProtoReflect.Descriptor instead.
func (*ActivityFriendGiftData_GiftBoxData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{103, 1}
}

func (x *ActivityFriendGiftData_GiftBoxData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityFriendGiftData_GiftBoxData) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ActivityFriendGiftData_GiftBoxData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActivityFriendGiftData_GiftBoxData) GetFromAccountId() uint32 {
	if x != nil {
		return x.FromAccountId
	}
	return 0
}

func (x *ActivityFriendGiftData_GiftBoxData) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ActivityFriendGiftData_GiftBoxData) GetReceived() uint32 {
	if x != nil {
		return x.Received
	}
	return 0
}

type ActivityUpgradeData_LevelGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id"`
	Level   uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
}

func (x *ActivityUpgradeData_LevelGroup) Reset() {
	*x = ActivityUpgradeData_LevelGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[715]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityUpgradeData_LevelGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityUpgradeData_LevelGroup) ProtoMessage() {}

func (x *ActivityUpgradeData_LevelGroup) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[715]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityUpgradeData_LevelGroup.ProtoReflect.Descriptor instead.
func (*ActivityUpgradeData_LevelGroup) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{104, 0}
}

func (x *ActivityUpgradeData_LevelGroup) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ActivityUpgradeData_LevelGroup) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ActivitySpotData_SpotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId       uint32   `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id"`
	Rewarded       uint32   `protobuf:"varint,2,opt,name=rewarded,proto3" json:"rewarded"`
	UnlockedEnding []uint32 `protobuf:"varint,3,rep,packed,name=unlocked_ending,json=unlockedEnding,proto3" json:"unlocked_ending"`
}

func (x *ActivitySpotData_SpotData) Reset() {
	*x = ActivitySpotData_SpotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[716]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivitySpotData_SpotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySpotData_SpotData) ProtoMessage() {}

func (x *ActivitySpotData_SpotData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[716]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySpotData_SpotData.ProtoReflect.Descriptor instead.
func (*ActivitySpotData_SpotData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{108, 0}
}

func (x *ActivitySpotData_SpotData) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *ActivitySpotData_SpotData) GetRewarded() uint32 {
	if x != nil {
		return x.Rewarded
	}
	return 0
}

func (x *ActivitySpotData_SpotData) GetUnlockedEnding() []uint32 {
	if x != nil {
		return x.UnlockedEnding
	}
	return nil
}

type ZHPShop_RefreshCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
}

func (x *ZHPShop_RefreshCount) Reset() {
	*x = ZHPShop_RefreshCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[717]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZHPShop_RefreshCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZHPShop_RefreshCount) ProtoMessage() {}

func (x *ZHPShop_RefreshCount) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[717]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZHPShop_RefreshCount.ProtoReflect.Descriptor instead.
func (*ZHPShop_RefreshCount) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{127, 0}
}

func (x *ZHPShop_RefreshCount) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ZHPShop_RefreshCount) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PaymentSettingV2_PaymentMaintain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime        uint32 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime          uint32 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	GoodsClickAction uint32 `protobuf:"varint,3,opt,name=goods_click_action,json=goodsClickAction,proto3" json:"goods_click_action"`
	GoodsClickText   string `protobuf:"bytes,4,opt,name=goods_click_text,json=goodsClickText,proto3" json:"goods_click_text"`
}

func (x *PaymentSettingV2_PaymentMaintain) Reset() {
	*x = PaymentSettingV2_PaymentMaintain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[718]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSettingV2_PaymentMaintain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSettingV2_PaymentMaintain) ProtoMessage() {}

func (x *PaymentSettingV2_PaymentMaintain) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[718]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSettingV2_PaymentMaintain.ProtoReflect.Descriptor instead.
func (*PaymentSettingV2_PaymentMaintain) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{133, 0}
}

func (x *PaymentSettingV2_PaymentMaintain) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PaymentSettingV2_PaymentMaintain) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PaymentSettingV2_PaymentMaintain) GetGoodsClickAction() uint32 {
	if x != nil {
		return x.GoodsClickAction
	}
	return 0
}

func (x *PaymentSettingV2_PaymentMaintain) GetGoodsClickText() string {
	if x != nil {
		return x.GoodsClickText
	}
	return ""
}

type PaymentSettingV2_PaymentSettingUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform               string                            `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform"`
	IsShow                 bool                              `protobuf:"varint,2,opt,name=is_show,json=isShow,proto3" json:"is_show"`
	GoodsClickAction       uint32                            `protobuf:"varint,3,opt,name=goods_click_action,json=goodsClickAction,proto3" json:"goods_click_action"`
	GoodsClickText         string                            `protobuf:"bytes,4,opt,name=goods_click_text,json=goodsClickText,proto3" json:"goods_click_text"`
	Maintain               *PaymentSettingV2_PaymentMaintain `protobuf:"bytes,5,opt,name=maintain,proto3" json:"maintain"`
	EnableForFrozenAccount bool                              `protobuf:"varint,6,opt,name=enable_for_frozen_account,json=enableForFrozenAccount,proto3" json:"enable_for_frozen_account"`
	ExtraData              string                            `protobuf:"bytes,7,opt,name=extra_data,json=extraData,proto3" json:"extra_data"`
}

func (x *PaymentSettingV2_PaymentSettingUnit) Reset() {
	*x = PaymentSettingV2_PaymentSettingUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[719]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSettingV2_PaymentSettingUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSettingV2_PaymentSettingUnit) ProtoMessage() {}

func (x *PaymentSettingV2_PaymentSettingUnit) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[719]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSettingV2_PaymentSettingUnit.ProtoReflect.Descriptor instead.
func (*PaymentSettingV2_PaymentSettingUnit) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{133, 1}
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetGoodsClickAction() uint32 {
	if x != nil {
		return x.GoodsClickAction
	}
	return 0
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetGoodsClickText() string {
	if x != nil {
		return x.GoodsClickText
	}
	return ""
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetMaintain() *PaymentSettingV2_PaymentMaintain {
	if x != nil {
		return x.Maintain
	}
	return nil
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetEnableForFrozenAccount() bool {
	if x != nil {
		return x.EnableForFrozenAccount
	}
	return false
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetExtraData() string {
	if x != nil {
		return x.ExtraData
	}
	return ""
}

type PaymentSetting_WechatData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableCreate         bool   `protobuf:"varint,1,opt,name=disable_create,json=disableCreate,proto3" json:"disable_create"`
	PaymentSourcePlatform uint32 `protobuf:"varint,2,opt,name=payment_source_platform,json=paymentSourcePlatform,proto3" json:"payment_source_platform"`
	EnableCredit          bool   `protobuf:"varint,3,opt,name=enable_credit,json=enableCredit,proto3" json:"enable_credit"`
}

func (x *PaymentSetting_WechatData) Reset() {
	*x = PaymentSetting_WechatData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[720]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSetting_WechatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSetting_WechatData) ProtoMessage() {}

func (x *PaymentSetting_WechatData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[720]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSetting_WechatData.ProtoReflect.Descriptor instead.
func (*PaymentSetting_WechatData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{134, 0}
}

func (x *PaymentSetting_WechatData) GetDisableCreate() bool {
	if x != nil {
		return x.DisableCreate
	}
	return false
}

func (x *PaymentSetting_WechatData) GetPaymentSourcePlatform() uint32 {
	if x != nil {
		return x.PaymentSourcePlatform
	}
	return 0
}

func (x *PaymentSetting_WechatData) GetEnableCredit() bool {
	if x != nil {
		return x.EnableCredit
	}
	return false
}

type PaymentSetting_AlipayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableCreate         bool   `protobuf:"varint,1,opt,name=disable_create,json=disableCreate,proto3" json:"disable_create"`
	PaymentSourcePlatform uint32 `protobuf:"varint,2,opt,name=payment_source_platform,json=paymentSourcePlatform,proto3" json:"payment_source_platform"`
}

func (x *PaymentSetting_AlipayData) Reset() {
	*x = PaymentSetting_AlipayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[721]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSetting_AlipayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSetting_AlipayData) ProtoMessage() {}

func (x *PaymentSetting_AlipayData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[721]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSetting_AlipayData.ProtoReflect.Descriptor instead.
func (*PaymentSetting_AlipayData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{134, 1}
}

func (x *PaymentSetting_AlipayData) GetDisableCreate() bool {
	if x != nil {
		return x.DisableCreate
	}
	return false
}

func (x *PaymentSetting_AlipayData) GetPaymentSourcePlatform() uint32 {
	if x != nil {
		return x.PaymentSourcePlatform
	}
	return 0
}

type RecordGame_AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Seat        uint32        `protobuf:"varint,2,opt,name=seat,proto3" json:"seat"`
	Nickname    string        `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
	AvatarId    uint32        `protobuf:"varint,4,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id"`
	Character   *Character    `protobuf:"bytes,5,opt,name=character,proto3" json:"character"`
	Title       uint32        `protobuf:"varint,6,opt,name=title,proto3" json:"title"`
	Level       *AccountLevel `protobuf:"bytes,7,opt,name=level,proto3" json:"level"`
	Level3      *AccountLevel `protobuf:"bytes,8,opt,name=level3,proto3" json:"level3"`
	AvatarFrame uint32        `protobuf:"varint,9,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame"`
	Verified    uint32        `protobuf:"varint,10,opt,name=verified,proto3" json:"verified"`
	Views       []*ViewSlot   `protobuf:"bytes,11,rep,name=views,proto3" json:"views"`
}

func (x *RecordGame_AccountInfo) Reset() {
	*x = RecordGame_AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[722]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGame_AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGame_AccountInfo) ProtoMessage() {}

func (x *RecordGame_AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[722]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGame_AccountInfo.ProtoReflect.Descriptor instead.
func (*RecordGame_AccountInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{144, 0}
}

func (x *RecordGame_AccountInfo) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RecordGame_AccountInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *RecordGame_AccountInfo) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *RecordGame_AccountInfo) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *RecordGame_AccountInfo) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetViews() []*ViewSlot {
	if x != nil {
		return x.Views
	}
	return nil
}

type CustomizedContestGameStart_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname"`
}

func (x *CustomizedContestGameStart_Item) Reset() {
	*x = CustomizedContestGameStart_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[723]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestGameStart_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestGameStart_Item) ProtoMessage() {}

func (x *CustomizedContestGameStart_Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[723]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestGameStart_Item.ProtoReflect.Descriptor instead.
func (*CustomizedContestGameStart_Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{145, 0}
}

func (x *CustomizedContestGameStart_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CustomizedContestGameStart_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type CustomizedContestGameEnd_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname"`
	TotalPoint int32  `protobuf:"varint,3,opt,name=total_point,json=totalPoint,proto3" json:"total_point"`
}

func (x *CustomizedContestGameEnd_Item) Reset() {
	*x = CustomizedContestGameEnd_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[724]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestGameEnd_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestGameEnd_Item) ProtoMessage() {}

func (x *CustomizedContestGameEnd_Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[724]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestGameEnd_Item.ProtoReflect.Descriptor instead.
func (*CustomizedContestGameEnd_Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{146, 0}
}

func (x *CustomizedContestGameEnd_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CustomizedContestGameEnd_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CustomizedContestGameEnd_Item) GetTotalPoint() int32 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

type GameRoundHuData_HuPai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tile string `protobuf:"bytes,1,opt,name=tile,proto3" json:"tile"`
	Seat uint32 `protobuf:"varint,2,opt,name=seat,proto3" json:"seat"`
	Liqi uint32 `protobuf:"varint,3,opt,name=liqi,proto3" json:"liqi"`
}

func (x *GameRoundHuData_HuPai) Reset() {
	*x = GameRoundHuData_HuPai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[725]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundHuData_HuPai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundHuData_HuPai) ProtoMessage() {}

func (x *GameRoundHuData_HuPai) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[725]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundHuData_HuPai.ProtoReflect.Descriptor instead.
func (*GameRoundHuData_HuPai) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{151, 0}
}

func (x *GameRoundHuData_HuPai) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *GameRoundHuData_HuPai) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameRoundHuData_HuPai) GetLiqi() uint32 {
	if x != nil {
		return x.Liqi
	}
	return 0
}

type GameRoundHuData_Fan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	Fan   uint32 `protobuf:"varint,3,opt,name=fan,proto3" json:"fan"`
}

func (x *GameRoundHuData_Fan) Reset() {
	*x = GameRoundHuData_Fan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[726]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundHuData_Fan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundHuData_Fan) ProtoMessage() {}

func (x *GameRoundHuData_Fan) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[726]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundHuData_Fan.ProtoReflect.Descriptor instead.
func (*GameRoundHuData_Fan) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{151, 1}
}

func (x *GameRoundHuData_Fan) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameRoundHuData_Fan) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GameRoundHuData_Fan) GetFan() uint32 {
	if x != nil {
		return x.Fan
	}
	return 0
}

type GameFinalSnapshot_CalculateParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitPoint        uint32  `protobuf:"varint,1,opt,name=init_point,json=initPoint,proto3" json:"init_point"`
	Jingsuanyuandian uint32  `protobuf:"varint,2,opt,name=jingsuanyuandian,proto3" json:"jingsuanyuandian"`
	RankPoints       []int32 `protobuf:"varint,3,rep,packed,name=rank_points,json=rankPoints,proto3" json:"rank_points"`
}

func (x *GameFinalSnapshot_CalculateParam) Reset() {
	*x = GameFinalSnapshot_CalculateParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[727]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot_CalculateParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot_CalculateParam) ProtoMessage() {}

func (x *GameFinalSnapshot_CalculateParam) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[727]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot_CalculateParam.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot_CalculateParam) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{155, 0}
}

func (x *GameFinalSnapshot_CalculateParam) GetInitPoint() uint32 {
	if x != nil {
		return x.InitPoint
	}
	return 0
}

func (x *GameFinalSnapshot_CalculateParam) GetJingsuanyuandian() uint32 {
	if x != nil {
		return x.Jingsuanyuandian
	}
	return 0
}

func (x *GameFinalSnapshot_CalculateParam) GetRankPoints() []int32 {
	if x != nil {
		return x.RankPoints
	}
	return nil
}

type GameFinalSnapshot_GameSeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           uint32           `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	AccountId      uint32           `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	NotifyEndpoint *NetworkEndpoint `protobuf:"bytes,3,opt,name=notify_endpoint,json=notifyEndpoint,proto3" json:"notify_endpoint"`
	ClientAddress  string           `protobuf:"bytes,4,opt,name=client_address,json=clientAddress,proto3" json:"client_address"`
	IsConnected    bool             `protobuf:"varint,5,opt,name=is_connected,json=isConnected,proto3" json:"is_connected"`
}

func (x *GameFinalSnapshot_GameSeat) Reset() {
	*x = GameFinalSnapshot_GameSeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[728]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot_GameSeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot_GameSeat) ProtoMessage() {}

func (x *GameFinalSnapshot_GameSeat) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[728]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot_GameSeat.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot_GameSeat) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{155, 1}
}

func (x *GameFinalSnapshot_GameSeat) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameFinalSnapshot_GameSeat) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GameFinalSnapshot_GameSeat) GetNotifyEndpoint() *NetworkEndpoint {
	if x != nil {
		return x.NotifyEndpoint
	}
	return nil
}

func (x *GameFinalSnapshot_GameSeat) GetClientAddress() string {
	if x != nil {
		return x.ClientAddress
	}
	return ""
}

func (x *GameFinalSnapshot_GameSeat) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

type GameFinalSnapshot_FinalPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat         uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	TotalPoint   int32  `protobuf:"varint,2,opt,name=total_point,json=totalPoint,proto3" json:"total_point"`
	PartPoint_1  int32  `protobuf:"varint,3,opt,name=part_point_1,json=partPoint1,proto3" json:"part_point_1"`
	PartPoint_2  int32  `protobuf:"varint,4,opt,name=part_point_2,json=partPoint2,proto3" json:"part_point_2"`
	GradingScore int32  `protobuf:"varint,5,opt,name=grading_score,json=gradingScore,proto3" json:"grading_score"`
	Gold         int32  `protobuf:"varint,6,opt,name=gold,proto3" json:"gold"`
}

func (x *GameFinalSnapshot_FinalPlayer) Reset() {
	*x = GameFinalSnapshot_FinalPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[729]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot_FinalPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot_FinalPlayer) ProtoMessage() {}

func (x *GameFinalSnapshot_FinalPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[729]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot_FinalPlayer.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot_FinalPlayer) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{155, 2}
}

func (x *GameFinalSnapshot_FinalPlayer) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetTotalPoint() int32 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetPartPoint_1() int32 {
	if x != nil {
		return x.PartPoint_1
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetPartPoint_2() int32 {
	if x != nil {
		return x.PartPoint_2
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetGradingScore() int32 {
	if x != nil {
		return x.GradingScore
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type GameFinalSnapshot_AFKInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DealTileCount uint32 `protobuf:"varint,1,opt,name=deal_tile_count,json=dealTileCount,proto3" json:"deal_tile_count"`
	MoqieCount    uint32 `protobuf:"varint,2,opt,name=moqie_count,json=moqieCount,proto3" json:"moqie_count"`
	Seat          uint32 `protobuf:"varint,3,opt,name=seat,proto3" json:"seat"`
}

func (x *GameFinalSnapshot_AFKInfo) Reset() {
	*x = GameFinalSnapshot_AFKInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[730]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot_AFKInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot_AFKInfo) ProtoMessage() {}

func (x *GameFinalSnapshot_AFKInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[730]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot_AFKInfo.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot_AFKInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{155, 3}
}

func (x *GameFinalSnapshot_AFKInfo) GetDealTileCount() uint32 {
	if x != nil {
		return x.DealTileCount
	}
	return 0
}

func (x *GameFinalSnapshot_AFKInfo) GetMoqieCount() uint32 {
	if x != nil {
		return x.MoqieCount
	}
	return 0
}

func (x *GameFinalSnapshot_AFKInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

type ContestDetailRuleV2_ExtraRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequiredLevel uint32 `protobuf:"varint,1,opt,name=required_level,json=requiredLevel,proto3" json:"required_level"`
	MaxGameCount  uint32 `protobuf:"varint,2,opt,name=max_game_count,json=maxGameCount,proto3" json:"max_game_count"`
}

func (x *ContestDetailRuleV2_ExtraRule) Reset() {
	*x = ContestDetailRuleV2_ExtraRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[731]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestDetailRuleV2_ExtraRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestDetailRuleV2_ExtraRule) ProtoMessage() {}

func (x *ContestDetailRuleV2_ExtraRule) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[731]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestDetailRuleV2_ExtraRule.ProtoReflect.Descriptor instead.
func (*ContestDetailRuleV2_ExtraRule) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{158, 0}
}

func (x *ContestDetailRuleV2_ExtraRule) GetRequiredLevel() uint32 {
	if x != nil {
		return x.RequiredLevel
	}
	return 0
}

func (x *ContestDetailRuleV2_ExtraRule) GetMaxGameCount() uint32 {
	if x != nil {
		return x.MaxGameCount
	}
	return 0
}

type RecordHuleInfo_RecordFanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val uint32 `protobuf:"varint,1,opt,name=val,proto3" json:"val"`
	Id  uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id"`
}

func (x *RecordHuleInfo_RecordFanInfo) Reset() {
	*x = RecordHuleInfo_RecordFanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[732]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHuleInfo_RecordFanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHuleInfo_RecordFanInfo) ProtoMessage() {}

func (x *RecordHuleInfo_RecordFanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[732]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHuleInfo_RecordFanInfo.ProtoReflect.Descriptor instead.
func (*RecordHuleInfo_RecordFanInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{162, 0}
}

func (x *RecordHuleInfo_RecordFanInfo) GetVal() uint32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *RecordHuleInfo_RecordFanInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AccountResourceSnapshot_BagItemSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      uint32 `protobuf:"varint,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id"`
	ResourceCount   uint32 `protobuf:"varint,2,opt,name=resource_count,json=resourceCount,proto3" json:"resource_count"`
	ResourceVersion uint32 `protobuf:"varint,3,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version"`
}

func (x *AccountResourceSnapshot_BagItemSnapshot) Reset() {
	*x = AccountResourceSnapshot_BagItemSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[733]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResourceSnapshot_BagItemSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResourceSnapshot_BagItemSnapshot) ProtoMessage() {}

func (x *AccountResourceSnapshot_BagItemSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[733]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResourceSnapshot_BagItemSnapshot.ProtoReflect.Descriptor instead.
func (*AccountResourceSnapshot_BagItemSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{174, 0}
}

func (x *AccountResourceSnapshot_BagItemSnapshot) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *AccountResourceSnapshot_BagItemSnapshot) GetResourceCount() uint32 {
	if x != nil {
		return x.ResourceCount
	}
	return 0
}

func (x *AccountResourceSnapshot_BagItemSnapshot) GetResourceVersion() uint32 {
	if x != nil {
		return x.ResourceVersion
	}
	return 0
}

type AccountResourceSnapshot_CurrencySnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyId    uint32 `protobuf:"varint,1,opt,name=currency_id,json=currencyId,proto3" json:"currency_id"`
	CurrencyCount uint32 `protobuf:"varint,2,opt,name=currency_count,json=currencyCount,proto3" json:"currency_count"`
}

func (x *AccountResourceSnapshot_CurrencySnapshot) Reset() {
	*x = AccountResourceSnapshot_CurrencySnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[734]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResourceSnapshot_CurrencySnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResourceSnapshot_CurrencySnapshot) ProtoMessage() {}

func (x *AccountResourceSnapshot_CurrencySnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[734]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResourceSnapshot_CurrencySnapshot.ProtoReflect.Descriptor instead.
func (*AccountResourceSnapshot_CurrencySnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{174, 1}
}

func (x *AccountResourceSnapshot_CurrencySnapshot) GetCurrencyId() uint32 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *AccountResourceSnapshot_CurrencySnapshot) GetCurrencyCount() uint32 {
	if x != nil {
		return x.CurrencyCount
	}
	return 0
}

type AccountResourceSnapshot_TitleSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleList []uint32 `protobuf:"varint,1,rep,packed,name=title_list,json=titleList,proto3" json:"title_list"`
}

func (x *AccountResourceSnapshot_TitleSnapshot) Reset() {
	*x = AccountResourceSnapshot_TitleSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[735]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResourceSnapshot_TitleSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResourceSnapshot_TitleSnapshot) ProtoMessage() {}

func (x *AccountResourceSnapshot_TitleSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[735]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResourceSnapshot_TitleSnapshot.ProtoReflect.Descriptor instead.
func (*AccountResourceSnapshot_TitleSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{174, 2}
}

func (x *AccountResourceSnapshot_TitleSnapshot) GetTitleList() []uint32 {
	if x != nil {
		return x.TitleList
	}
	return nil
}

type AccountResourceSnapshot_UsedTitleSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId uint32 `protobuf:"varint,1,opt,name=title_id,json=titleId,proto3" json:"title_id"`
}

func (x *AccountResourceSnapshot_UsedTitleSnapshot) Reset() {
	*x = AccountResourceSnapshot_UsedTitleSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[736]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResourceSnapshot_UsedTitleSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResourceSnapshot_UsedTitleSnapshot) ProtoMessage() {}

func (x *AccountResourceSnapshot_UsedTitleSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[736]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResourceSnapshot_UsedTitleSnapshot.ProtoReflect.Descriptor instead.
func (*AccountResourceSnapshot_UsedTitleSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{174, 3}
}

func (x *AccountResourceSnapshot_UsedTitleSnapshot) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

type AccountCharacterSnapshot_MainCharacterSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id"`
}

func (x *AccountCharacterSnapshot_MainCharacterSnapshot) Reset() {
	*x = AccountCharacterSnapshot_MainCharacterSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[737]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCharacterSnapshot_MainCharacterSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCharacterSnapshot_MainCharacterSnapshot) ProtoMessage() {}

func (x *AccountCharacterSnapshot_MainCharacterSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[737]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCharacterSnapshot_MainCharacterSnapshot.ProtoReflect.Descriptor instead.
func (*AccountCharacterSnapshot_MainCharacterSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{175, 0}
}

func (x *AccountCharacterSnapshot_MainCharacterSnapshot) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

type AccountCharacterSnapshot_SkinsSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkinList []uint32 `protobuf:"varint,1,rep,packed,name=skin_list,json=skinList,proto3" json:"skin_list"`
}

func (x *AccountCharacterSnapshot_SkinsSnapshot) Reset() {
	*x = AccountCharacterSnapshot_SkinsSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[738]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCharacterSnapshot_SkinsSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCharacterSnapshot_SkinsSnapshot) ProtoMessage() {}

func (x *AccountCharacterSnapshot_SkinsSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[738]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCharacterSnapshot_SkinsSnapshot.ProtoReflect.Descriptor instead.
func (*AccountCharacterSnapshot_SkinsSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{175, 1}
}

func (x *AccountCharacterSnapshot_SkinsSnapshot) GetSkinList() []uint32 {
	if x != nil {
		return x.SkinList
	}
	return nil
}

type AccountCharacterSnapshot_HiddenCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HiddenList []uint32 `protobuf:"varint,1,rep,packed,name=hidden_list,json=hiddenList,proto3" json:"hidden_list"`
}

func (x *AccountCharacterSnapshot_HiddenCharacter) Reset() {
	*x = AccountCharacterSnapshot_HiddenCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[739]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCharacterSnapshot_HiddenCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCharacterSnapshot_HiddenCharacter) ProtoMessage() {}

func (x *AccountCharacterSnapshot_HiddenCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[739]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCharacterSnapshot_HiddenCharacter.ProtoReflect.Descriptor instead.
func (*AccountCharacterSnapshot_HiddenCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{175, 2}
}

func (x *AccountCharacterSnapshot_HiddenCharacter) GetHiddenList() []uint32 {
	if x != nil {
		return x.HiddenList
	}
	return nil
}

type AccountMailRecord_MailSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId         uint32        `protobuf:"varint,1,opt,name=mail_id,json=mailId,proto3" json:"mail_id"`
	ReferenceId    uint32        `protobuf:"varint,2,opt,name=reference_id,json=referenceId,proto3" json:"reference_id"`
	CreateTime     uint32        `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	ExpireTime     uint32        `protobuf:"varint,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time"`
	TakeAttachment uint32        `protobuf:"varint,5,opt,name=take_attachment,json=takeAttachment,proto3" json:"take_attachment"`
	Attachments    []*RewardSlot `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments"`
}

func (x *AccountMailRecord_MailSnapshot) Reset() {
	*x = AccountMailRecord_MailSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[740]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMailRecord_MailSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMailRecord_MailSnapshot) ProtoMessage() {}

func (x *AccountMailRecord_MailSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[740]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMailRecord_MailSnapshot.ProtoReflect.Descriptor instead.
func (*AccountMailRecord_MailSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{176, 0}
}

func (x *AccountMailRecord_MailSnapshot) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

func (x *AccountMailRecord_MailSnapshot) GetReferenceId() uint32 {
	if x != nil {
		return x.ReferenceId
	}
	return 0
}

func (x *AccountMailRecord_MailSnapshot) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AccountMailRecord_MailSnapshot) GetExpireTime() uint32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *AccountMailRecord_MailSnapshot) GetTakeAttachment() uint32 {
	if x != nil {
		return x.TakeAttachment
	}
	return 0
}

func (x *AccountMailRecord_MailSnapshot) GetAttachments() []*RewardSlot {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type AccountAchievementSnapshot_RewardedGroupSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardedId uint32 `protobuf:"varint,1,opt,name=rewarded_id,json=rewardedId,proto3" json:"rewarded_id"`
}

func (x *AccountAchievementSnapshot_RewardedGroupSnapshot) Reset() {
	*x = AccountAchievementSnapshot_RewardedGroupSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[741]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAchievementSnapshot_RewardedGroupSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAchievementSnapshot_RewardedGroupSnapshot) ProtoMessage() {}

func (x *AccountAchievementSnapshot_RewardedGroupSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[741]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAchievementSnapshot_RewardedGroupSnapshot.ProtoReflect.Descriptor instead.
func (*AccountAchievementSnapshot_RewardedGroupSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{177, 0}
}

func (x *AccountAchievementSnapshot_RewardedGroupSnapshot) GetRewardedId() uint32 {
	if x != nil {
		return x.RewardedId
	}
	return 0
}

type AccountAchievementSnapshot_AchievementVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
}

func (x *AccountAchievementSnapshot_AchievementVersion) Reset() {
	*x = AccountAchievementSnapshot_AchievementVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[742]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAchievementSnapshot_AchievementVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAchievementSnapshot_AchievementVersion) ProtoMessage() {}

func (x *AccountAchievementSnapshot_AchievementVersion) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[742]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAchievementSnapshot_AchievementVersion.ProtoReflect.Descriptor instead.
func (*AccountAchievementSnapshot_AchievementVersion) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{177, 1}
}

func (x *AccountAchievementSnapshot_AchievementVersion) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AccountMiscSnapshot_AccountVIPRewardSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewarded []uint32 `protobuf:"varint,1,rep,packed,name=rewarded,proto3" json:"rewarded"`
}

func (x *AccountMiscSnapshot_AccountVIPRewardSnapshot) Reset() {
	*x = AccountMiscSnapshot_AccountVIPRewardSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[743]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMiscSnapshot_AccountVIPRewardSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMiscSnapshot_AccountVIPRewardSnapshot) ProtoMessage() {}

func (x *AccountMiscSnapshot_AccountVIPRewardSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[743]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMiscSnapshot_AccountVIPRewardSnapshot.ProtoReflect.Descriptor instead.
func (*AccountMiscSnapshot_AccountVIPRewardSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{178, 0}
}

func (x *AccountMiscSnapshot_AccountVIPRewardSnapshot) GetRewarded() []uint32 {
	if x != nil {
		return x.Rewarded
	}
	return nil
}

type AccountMiscSnapshot_MonthTicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	EndTime         uint32   `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	LastPayTime     uint32   `protobuf:"varint,3,opt,name=last_pay_time,json=lastPayTime,proto3" json:"last_pay_time"`
	RecordStartTime uint32   `protobuf:"varint,4,opt,name=record_start_time,json=recordStartTime,proto3" json:"record_start_time"`
	History         []uint32 `protobuf:"varint,5,rep,packed,name=history,proto3" json:"history"`
}

func (x *AccountMiscSnapshot_MonthTicketInfo) Reset() {
	*x = AccountMiscSnapshot_MonthTicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[744]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMiscSnapshot_MonthTicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMiscSnapshot_MonthTicketInfo) ProtoMessage() {}

func (x *AccountMiscSnapshot_MonthTicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[744]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMiscSnapshot_MonthTicketInfo.ProtoReflect.Descriptor instead.
func (*AccountMiscSnapshot_MonthTicketInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{178, 1}
}

func (x *AccountMiscSnapshot_MonthTicketInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountMiscSnapshot_MonthTicketInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AccountMiscSnapshot_MonthTicketInfo) GetLastPayTime() uint32 {
	if x != nil {
		return x.LastPayTime
	}
	return 0
}

func (x *AccountMiscSnapshot_MonthTicketInfo) GetRecordStartTime() uint32 {
	if x != nil {
		return x.RecordStartTime
	}
	return 0
}

func (x *AccountMiscSnapshot_MonthTicketInfo) GetHistory() []uint32 {
	if x != nil {
		return x.History
	}
	return nil
}

type AccountMiscSnapshot_AccountMonthTicketSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*AccountMiscSnapshot_MonthTicketInfo `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets"`
}

func (x *AccountMiscSnapshot_AccountMonthTicketSnapshot) Reset() {
	*x = AccountMiscSnapshot_AccountMonthTicketSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[745]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMiscSnapshot_AccountMonthTicketSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMiscSnapshot_AccountMonthTicketSnapshot) ProtoMessage() {}

func (x *AccountMiscSnapshot_AccountMonthTicketSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[745]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMiscSnapshot_AccountMonthTicketSnapshot.ProtoReflect.Descriptor instead.
func (*AccountMiscSnapshot_AccountMonthTicketSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{178, 2}
}

func (x *AccountMiscSnapshot_AccountMonthTicketSnapshot) GetTickets() []*AccountMiscSnapshot_MonthTicketInfo {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type AccountMiscSnapshot_AccountVIP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vip uint32 `protobuf:"varint,1,opt,name=vip,proto3" json:"vip"`
}

func (x *AccountMiscSnapshot_AccountVIP) Reset() {
	*x = AccountMiscSnapshot_AccountVIP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[746]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMiscSnapshot_AccountVIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMiscSnapshot_AccountVIP) ProtoMessage() {}

func (x *AccountMiscSnapshot_AccountVIP) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[746]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMiscSnapshot_AccountVIP.ProtoReflect.Descriptor instead.
func (*AccountMiscSnapshot_AccountVIP) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{178, 3}
}

func (x *AccountMiscSnapshot_AccountVIP) GetVip() uint32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

type AccountMiscSnapshot_AccountRechargeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level        uint32 `protobuf:"varint,1,opt,name=level,proto3" json:"level"`
	RechargeTime uint32 `protobuf:"varint,2,opt,name=recharge_time,json=rechargeTime,proto3" json:"recharge_time"`
}

func (x *AccountMiscSnapshot_AccountRechargeInfo) Reset() {
	*x = AccountMiscSnapshot_AccountRechargeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[747]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMiscSnapshot_AccountRechargeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMiscSnapshot_AccountRechargeInfo) ProtoMessage() {}

func (x *AccountMiscSnapshot_AccountRechargeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[747]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMiscSnapshot_AccountRechargeInfo.ProtoReflect.Descriptor instead.
func (*AccountMiscSnapshot_AccountRechargeInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{178, 4}
}

func (x *AccountMiscSnapshot_AccountRechargeInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AccountMiscSnapshot_AccountRechargeInfo) GetRechargeTime() uint32 {
	if x != nil {
		return x.RechargeTime
	}
	return 0
}

type ResAccountChallengeRankInfo_ChallengeRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season uint32 `protobuf:"varint,1,opt,name=season,proto3" json:"season"`
	Rank   uint32 `protobuf:"varint,2,opt,name=rank,proto3" json:"rank"`
	Level  uint32 `protobuf:"varint,3,opt,name=level,proto3" json:"level"`
}

func (x *ResAccountChallengeRankInfo_ChallengeRank) Reset() {
	*x = ResAccountChallengeRankInfo_ChallengeRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[748]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountChallengeRankInfo_ChallengeRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountChallengeRankInfo_ChallengeRank) ProtoMessage() {}

func (x *ResAccountChallengeRankInfo_ChallengeRank) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[748]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountChallengeRankInfo_ChallengeRank.ProtoReflect.Descriptor instead.
func (*ResAccountChallengeRankInfo_ChallengeRank) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{234, 0}
}

func (x *ResAccountChallengeRankInfo_ChallengeRank) GetSeason() uint32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *ResAccountChallengeRankInfo_ChallengeRank) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ResAccountChallengeRankInfo_ChallengeRank) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ResLevelLeaderboard_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Level     *AccountLevel `protobuf:"bytes,2,opt,name=level,proto3" json:"level"`
}

func (x *ResLevelLeaderboard_Item) Reset() {
	*x = ResLevelLeaderboard_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[749]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResLevelLeaderboard_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResLevelLeaderboard_Item) ProtoMessage() {}

func (x *ResLevelLeaderboard_Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[749]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResLevelLeaderboard_Item.ProtoReflect.Descriptor instead.
func (*ResLevelLeaderboard_Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{252, 0}
}

func (x *ResLevelLeaderboard_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResLevelLeaderboard_Item) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

type ResChallengeLeaderboard_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Level     uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	Nickname  string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
}

func (x *ResChallengeLeaderboard_Item) Reset() {
	*x = ResChallengeLeaderboard_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[750]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResChallengeLeaderboard_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResChallengeLeaderboard_Item) ProtoMessage() {}

func (x *ResChallengeLeaderboard_Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[750]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResChallengeLeaderboard_Item.ProtoReflect.Descriptor instead.
func (*ResChallengeLeaderboard_Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{254, 0}
}

func (x *ResChallengeLeaderboard_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResChallengeLeaderboard_Item) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ResChallengeLeaderboard_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ResMutiChallengeLevel_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Level     uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
}

func (x *ResMutiChallengeLevel_Item) Reset() {
	*x = ResMutiChallengeLevel_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[751]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMutiChallengeLevel_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMutiChallengeLevel_Item) ProtoMessage() {}

func (x *ResMutiChallengeLevel_Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[751]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMutiChallengeLevel_Item.ProtoReflect.Descriptor instead.
func (*ResMutiChallengeLevel_Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{256, 0}
}

func (x *ResMutiChallengeLevel_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResMutiChallengeLevel_Item) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ResFriendApplyList_FriendApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	ApplyTime uint32 `protobuf:"varint,2,opt,name=apply_time,json=applyTime,proto3" json:"apply_time"`
}

func (x *ResFriendApplyList_FriendApply) Reset() {
	*x = ResFriendApplyList_FriendApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[752]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFriendApplyList_FriendApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFriendApplyList_FriendApply) ProtoMessage() {}

func (x *ResFriendApplyList_FriendApply) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[752]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFriendApplyList_FriendApply.ProtoReflect.Descriptor instead.
func (*ResFriendApplyList_FriendApply) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{260, 0}
}

func (x *ResFriendApplyList_FriendApply) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResFriendApplyList_FriendApply) GetApplyTime() uint32 {
	if x != nil {
		return x.ApplyTime
	}
	return 0
}

type ResFetchAchievementRate_AchievementRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Rate uint32 `protobuf:"varint,2,opt,name=rate,proto3" json:"rate"`
}

func (x *ResFetchAchievementRate_AchievementRate) Reset() {
	*x = ResFetchAchievementRate_AchievementRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[753]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchAchievementRate_AchievementRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchAchievementRate_AchievementRate) ProtoMessage() {}

func (x *ResFetchAchievementRate_AchievementRate) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[753]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchAchievementRate_AchievementRate.ProtoReflect.Descriptor instead.
func (*ResFetchAchievementRate_AchievementRate) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{288, 0}
}

func (x *ResFetchAchievementRate_AchievementRate) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResFetchAchievementRate_AchievementRate) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type ResClientValue_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value"`
}

func (x *ResClientValue_Value) Reset() {
	*x = ResClientValue_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[754]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResClientValue_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResClientValue_Value) ProtoMessage() {}

func (x *ResClientValue_Value) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[754]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResClientValue_Value.ProtoReflect.Descriptor instead.
func (*ResClientValue_Value) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{294, 0}
}

func (x *ResClientValue_Value) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *ResClientValue_Value) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ResCurrentMatchInfo_CurrentMatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModeId       uint32 `protobuf:"varint,1,opt,name=mode_id,json=modeId,proto3" json:"mode_id"`
	PlayingCount uint32 `protobuf:"varint,2,opt,name=playing_count,json=playingCount,proto3" json:"playing_count"`
}

func (x *ResCurrentMatchInfo_CurrentMatchInfo) Reset() {
	*x = ResCurrentMatchInfo_CurrentMatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[755]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCurrentMatchInfo_CurrentMatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCurrentMatchInfo_CurrentMatchInfo) ProtoMessage() {}

func (x *ResCurrentMatchInfo_CurrentMatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[755]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCurrentMatchInfo_CurrentMatchInfo.ProtoReflect.Descriptor instead.
func (*ResCurrentMatchInfo_CurrentMatchInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{297, 0}
}

func (x *ResCurrentMatchInfo_CurrentMatchInfo) GetModeId() uint32 {
	if x != nil {
		return x.ModeId
	}
	return 0
}

func (x *ResCurrentMatchInfo_CurrentMatchInfo) GetPlayingCount() uint32 {
	if x != nil {
		return x.PlayingCount
	}
	return 0
}

type ResCreateWechatAppOrder_CallWechatAppParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid"`
	Partnerid string `protobuf:"bytes,2,opt,name=partnerid,proto3" json:"partnerid"`
	Prepayid  string `protobuf:"bytes,3,opt,name=prepayid,proto3" json:"prepayid"`
	Package   string `protobuf:"bytes,4,opt,name=package,proto3" json:"package"`
	Noncestr  string `protobuf:"bytes,5,opt,name=noncestr,proto3" json:"noncestr"`
	Timestamp string `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp"`
	Sign      string `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign"`
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) Reset() {
	*x = ResCreateWechatAppOrder_CallWechatAppParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[756]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateWechatAppOrder_CallWechatAppParam) ProtoMessage() {}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[756]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateWechatAppOrder_CallWechatAppParam.ProtoReflect.Descriptor instead.
func (*ResCreateWechatAppOrder_CallWechatAppParam) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{335, 0}
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) GetPartnerid() string {
	if x != nil {
		return x.Partnerid
	}
	return ""
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) GetPrepayid() string {
	if x != nil {
		return x.Prepayid
	}
	return ""
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) GetNoncestr() string {
	if x != nil {
		return x.Noncestr
	}
	return ""
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ResCreateWechatAppOrder_CallWechatAppParam) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type ResOpenChest_ChestReplaceCountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResOpenChest_ChestReplaceCountData) Reset() {
	*x = ResOpenChest_ChestReplaceCountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[757]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOpenChest_ChestReplaceCountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOpenChest_ChestReplaceCountData) ProtoMessage() {}

func (x *ResOpenChest_ChestReplaceCountData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[757]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOpenChest_ChestReplaceCountData.ProtoReflect.Descriptor instead.
func (*ResOpenChest_ChestReplaceCountData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{398, 0}
}

func (x *ResOpenChest_ChestReplaceCountData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResOpenChest_ChestReplaceCountData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResDoActivitySignIn_RewardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId uint32 `protobuf:"varint,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResDoActivitySignIn_RewardData) Reset() {
	*x = ResDoActivitySignIn_RewardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[758]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDoActivitySignIn_RewardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDoActivitySignIn_RewardData) ProtoMessage() {}

func (x *ResDoActivitySignIn_RewardData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[758]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDoActivitySignIn_RewardData.ProtoReflect.Descriptor instead.
func (*ResDoActivitySignIn_RewardData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{403, 0}
}

func (x *ResDoActivitySignIn_RewardData) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *ResDoActivitySignIn_RewardData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReqSendGiftToCharacter_Gift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count  uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqSendGiftToCharacter_Gift) Reset() {
	*x = ReqSendGiftToCharacter_Gift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[759]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSendGiftToCharacter_Gift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSendGiftToCharacter_Gift) ProtoMessage() {}

func (x *ReqSendGiftToCharacter_Gift) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[759]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSendGiftToCharacter_Gift.ProtoReflect.Descriptor instead.
func (*ReqSendGiftToCharacter_Gift) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{411, 0}
}

func (x *ReqSendGiftToCharacter_Gift) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ReqSendGiftToCharacter_Gift) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReqSellItem_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count  uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqSellItem_Item) Reset() {
	*x = ReqSellItem_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[760]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSellItem_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSellItem_Item) ProtoMessage() {}

func (x *ReqSellItem_Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[760]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSellItem_Item.ProtoReflect.Descriptor instead.
func (*ReqSellItem_Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{413, 0}
}

func (x *ReqSellItem_Item) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ReqSellItem_Item) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResCommonView_Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot  uint32 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value"`
}

func (x *ResCommonView_Slot) Reset() {
	*x = ResCommonView_Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[761]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCommonView_Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCommonView_Slot) ProtoMessage() {}

func (x *ResCommonView_Slot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[761]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCommonView_Slot.ProtoReflect.Descriptor instead.
func (*ResCommonView_Slot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{414, 0}
}

func (x *ResCommonView_Slot) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ResCommonView_Slot) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ResAllcommonViews_Views struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*ViewSlot `protobuf:"bytes,1,rep,name=values,proto3" json:"values"`
	Index  uint32      `protobuf:"varint,2,opt,name=index,proto3" json:"index"`
}

func (x *ResAllcommonViews_Views) Reset() {
	*x = ResAllcommonViews_Views{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[762]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAllcommonViews_Views) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAllcommonViews_Views) ProtoMessage() {}

func (x *ResAllcommonViews_Views) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[762]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAllcommonViews_Views.ProtoReflect.Descriptor instead.
func (*ResAllcommonViews_Views) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{419, 0}
}

func (x *ResAllcommonViews_Views) GetValues() []*ViewSlot {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ResAllcommonViews_Views) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ReqBuyFromShop_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ReqBuyFromShop_Item) Reset() {
	*x = ReqBuyFromShop_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[763]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBuyFromShop_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBuyFromShop_Item) ProtoMessage() {}

func (x *ReqBuyFromShop_Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[763]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBuyFromShop_Item.ProtoReflect.Descriptor instead.
func (*ReqBuyFromShop_Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{426, 0}
}

func (x *ReqBuyFromShop_Item) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqBuyFromShop_Item) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResMisc_MiscFaithData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaithId uint32 `protobuf:"varint,1,opt,name=faith_id,json=faithId,proto3" json:"faith_id"`
	Count   int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResMisc_MiscFaithData) Reset() {
	*x = ResMisc_MiscFaithData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[764]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMisc_MiscFaithData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMisc_MiscFaithData) ProtoMessage() {}

func (x *ResMisc_MiscFaithData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[764]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMisc_MiscFaithData.ProtoReflect.Descriptor instead.
func (*ResMisc_MiscFaithData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{439, 0}
}

func (x *ResMisc_MiscFaithData) GetFaithId() uint32 {
	if x != nil {
		return x.FaithId
	}
	return 0
}

func (x *ResMisc_MiscFaithData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResFetchRefundOrder_OrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessTime uint32 `protobuf:"varint,1,opt,name=success_time,json=successTime,proto3" json:"success_time"`
	GoodsId     uint32 `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	Cleared     uint32 `protobuf:"varint,3,opt,name=cleared,proto3" json:"cleared"`
	OrderId     string `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *ResFetchRefundOrder_OrderInfo) Reset() {
	*x = ResFetchRefundOrder_OrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[765]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRefundOrder_OrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRefundOrder_OrderInfo) ProtoMessage() {}

func (x *ResFetchRefundOrder_OrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[765]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRefundOrder_OrderInfo.ProtoReflect.Descriptor instead.
func (*ResFetchRefundOrder_OrderInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{444, 0}
}

func (x *ResFetchRefundOrder_OrderInfo) GetSuccessTime() uint32 {
	if x != nil {
		return x.SuccessTime
	}
	return 0
}

func (x *ResFetchRefundOrder_OrderInfo) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ResFetchRefundOrder_OrderInfo) GetCleared() uint32 {
	if x != nil {
		return x.Cleared
	}
	return 0
}

func (x *ResFetchRefundOrder_OrderInfo) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ResAccountActivityData_ActivitySignInData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId     uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	SignInCount    uint32 `protobuf:"varint,2,opt,name=sign_in_count,json=signInCount,proto3" json:"sign_in_count"`
	LastSignInTime uint32 `protobuf:"varint,3,opt,name=last_sign_in_time,json=lastSignInTime,proto3" json:"last_sign_in_time"`
}

func (x *ResAccountActivityData_ActivitySignInData) Reset() {
	*x = ResAccountActivityData_ActivitySignInData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[766]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountActivityData_ActivitySignInData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountActivityData_ActivitySignInData) ProtoMessage() {}

func (x *ResAccountActivityData_ActivitySignInData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[766]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountActivityData_ActivitySignInData.ProtoReflect.Descriptor instead.
func (*ResAccountActivityData_ActivitySignInData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{468, 0}
}

func (x *ResAccountActivityData_ActivitySignInData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ResAccountActivityData_ActivitySignInData) GetSignInCount() uint32 {
	if x != nil {
		return x.SignInCount
	}
	return 0
}

func (x *ResAccountActivityData_ActivitySignInData) GetLastSignInTime() uint32 {
	if x != nil {
		return x.LastSignInTime
	}
	return 0
}

type ResAccountActivityData_BuffData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Remain uint32 `protobuf:"varint,2,opt,name=remain,proto3" json:"remain"`
	Effect uint32 `protobuf:"varint,3,opt,name=effect,proto3" json:"effect"`
}

func (x *ResAccountActivityData_BuffData) Reset() {
	*x = ResAccountActivityData_BuffData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[767]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountActivityData_BuffData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountActivityData_BuffData) ProtoMessage() {}

func (x *ResAccountActivityData_BuffData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[767]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountActivityData_BuffData.ProtoReflect.Descriptor instead.
func (*ResAccountActivityData_BuffData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{468, 1}
}

func (x *ResAccountActivityData_BuffData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResAccountActivityData_BuffData) GetRemain() uint32 {
	if x != nil {
		return x.Remain
	}
	return 0
}

func (x *ResAccountActivityData_BuffData) GetEffect() uint32 {
	if x != nil {
		return x.Effect
	}
	return 0
}

type ResAccountActivityData_ActivityRichmanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    uint32                             `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Location      uint32                             `protobuf:"varint,2,opt,name=location,proto3" json:"location"`
	FinishedCount uint32                             `protobuf:"varint,3,opt,name=finished_count,json=finishedCount,proto3" json:"finished_count"`
	ChestPosition uint32                             `protobuf:"varint,4,opt,name=chest_position,json=chestPosition,proto3" json:"chest_position"`
	BankSave      uint32                             `protobuf:"varint,5,opt,name=bank_save,json=bankSave,proto3" json:"bank_save"`
	Exp           uint32                             `protobuf:"varint,6,opt,name=exp,proto3" json:"exp"`
	Buff          []*ResAccountActivityData_BuffData `protobuf:"bytes,7,rep,name=buff,proto3" json:"buff"`
}

func (x *ResAccountActivityData_ActivityRichmanData) Reset() {
	*x = ResAccountActivityData_ActivityRichmanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[768]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountActivityData_ActivityRichmanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountActivityData_ActivityRichmanData) ProtoMessage() {}

func (x *ResAccountActivityData_ActivityRichmanData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[768]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountActivityData_ActivityRichmanData.ProtoReflect.Descriptor instead.
func (*ResAccountActivityData_ActivityRichmanData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{468, 2}
}

func (x *ResAccountActivityData_ActivityRichmanData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ResAccountActivityData_ActivityRichmanData) GetLocation() uint32 {
	if x != nil {
		return x.Location
	}
	return 0
}

func (x *ResAccountActivityData_ActivityRichmanData) GetFinishedCount() uint32 {
	if x != nil {
		return x.FinishedCount
	}
	return 0
}

func (x *ResAccountActivityData_ActivityRichmanData) GetChestPosition() uint32 {
	if x != nil {
		return x.ChestPosition
	}
	return 0
}

func (x *ResAccountActivityData_ActivityRichmanData) GetBankSave() uint32 {
	if x != nil {
		return x.BankSave
	}
	return 0
}

func (x *ResAccountActivityData_ActivityRichmanData) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *ResAccountActivityData_ActivityRichmanData) GetBuff() []*ResAccountActivityData_BuffData {
	if x != nil {
		return x.Buff
	}
	return nil
}

type ResAccountActivityData_ChestUpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResAccountActivityData_ChestUpData) Reset() {
	*x = ResAccountActivityData_ChestUpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[769]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountActivityData_ChestUpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountActivityData_ChestUpData) ProtoMessage() {}

func (x *ResAccountActivityData_ChestUpData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[769]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountActivityData_ChestUpData.ProtoReflect.Descriptor instead.
func (*ResAccountActivityData_ChestUpData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{468, 3}
}

func (x *ResAccountActivityData_ChestUpData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResAccountActivityData_ChestUpData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResAccountActivityData_ActivitySNSData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blog    []*SNSBlog  `protobuf:"bytes,1,rep,name=blog,proto3" json:"blog"`
	LikedId []uint32    `protobuf:"varint,2,rep,packed,name=liked_id,json=likedId,proto3" json:"liked_id"`
	Reply   []*SNSReply `protobuf:"bytes,3,rep,name=reply,proto3" json:"reply"`
}

func (x *ResAccountActivityData_ActivitySNSData) Reset() {
	*x = ResAccountActivityData_ActivitySNSData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[770]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountActivityData_ActivitySNSData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountActivityData_ActivitySNSData) ProtoMessage() {}

func (x *ResAccountActivityData_ActivitySNSData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[770]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountActivityData_ActivitySNSData.ProtoReflect.Descriptor instead.
func (*ResAccountActivityData_ActivitySNSData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{468, 4}
}

func (x *ResAccountActivityData_ActivitySNSData) GetBlog() []*SNSBlog {
	if x != nil {
		return x.Blog
	}
	return nil
}

func (x *ResAccountActivityData_ActivitySNSData) GetLikedId() []uint32 {
	if x != nil {
		return x.LikedId
	}
	return nil
}

func (x *ResAccountActivityData_ActivitySNSData) GetReply() []*SNSReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type ResFetchRankPointLeaderboard_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32          `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Rank      uint32          `protobuf:"varint,2,opt,name=rank,proto3" json:"rank"`
	View      *PlayerBaseView `protobuf:"bytes,3,opt,name=view,proto3" json:"view"`
	Point     uint32          `protobuf:"varint,4,opt,name=point,proto3" json:"point"`
}

func (x *ResFetchRankPointLeaderboard_Item) Reset() {
	*x = ResFetchRankPointLeaderboard_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[771]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRankPointLeaderboard_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRankPointLeaderboard_Item) ProtoMessage() {}

func (x *ResFetchRankPointLeaderboard_Item) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[771]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRankPointLeaderboard_Item.ProtoReflect.Descriptor instead.
func (*ResFetchRankPointLeaderboard_Item) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{484, 0}
}

func (x *ResFetchRankPointLeaderboard_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResFetchRankPointLeaderboard_Item) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ResFetchRankPointLeaderboard_Item) GetView() *PlayerBaseView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *ResFetchRankPointLeaderboard_Item) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type ResRichmanNextMove_RewardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId  uint32 `protobuf:"varint,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id"`
	Count       uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	OriginCount uint32 `protobuf:"varint,3,opt,name=origin_count,json=originCount,proto3" json:"origin_count"`
	Type        uint32 `protobuf:"varint,5,opt,name=type,proto3" json:"type"`
}

func (x *ResRichmanNextMove_RewardData) Reset() {
	*x = ResRichmanNextMove_RewardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[772]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRichmanNextMove_RewardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRichmanNextMove_RewardData) ProtoMessage() {}

func (x *ResRichmanNextMove_RewardData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[772]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRichmanNextMove_RewardData.ProtoReflect.Descriptor instead.
func (*ResRichmanNextMove_RewardData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{487, 0}
}

func (x *ResRichmanNextMove_RewardData) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *ResRichmanNextMove_RewardData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ResRichmanNextMove_RewardData) GetOriginCount() uint32 {
	if x != nil {
		return x.OriginCount
	}
	return 0
}

func (x *ResRichmanNextMove_RewardData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResRichmanNextMove_PathData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location uint32                           `protobuf:"varint,1,opt,name=location,proto3" json:"location"`
	Rewards  []*ResRichmanNextMove_RewardData `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
	Events   []uint32                         `protobuf:"varint,3,rep,packed,name=events,proto3" json:"events"`
}

func (x *ResRichmanNextMove_PathData) Reset() {
	*x = ResRichmanNextMove_PathData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[773]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRichmanNextMove_PathData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRichmanNextMove_PathData) ProtoMessage() {}

func (x *ResRichmanNextMove_PathData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[773]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRichmanNextMove_PathData.ProtoReflect.Descriptor instead.
func (*ResRichmanNextMove_PathData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{487, 1}
}

func (x *ResRichmanNextMove_PathData) GetLocation() uint32 {
	if x != nil {
		return x.Location
	}
	return 0
}

func (x *ResRichmanNextMove_PathData) GetRewards() []*ResRichmanNextMove_RewardData {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ResRichmanNextMove_PathData) GetEvents() []uint32 {
	if x != nil {
		return x.Events
	}
	return nil
}

type ResRichmanNextMove_BuffData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Remain uint32 `protobuf:"varint,2,opt,name=remain,proto3" json:"remain"`
	Effect uint32 `protobuf:"varint,3,opt,name=effect,proto3" json:"effect"`
}

func (x *ResRichmanNextMove_BuffData) Reset() {
	*x = ResRichmanNextMove_BuffData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[774]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRichmanNextMove_BuffData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRichmanNextMove_BuffData) ProtoMessage() {}

func (x *ResRichmanNextMove_BuffData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[774]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRichmanNextMove_BuffData.ProtoReflect.Descriptor instead.
func (*ResRichmanNextMove_BuffData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{487, 2}
}

func (x *ResRichmanNextMove_BuffData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResRichmanNextMove_BuffData) GetRemain() uint32 {
	if x != nil {
		return x.Remain
	}
	return 0
}

func (x *ResRichmanNextMove_BuffData) GetEffect() uint32 {
	if x != nil {
		return x.Effect
	}
	return 0
}

type ResRichmanChestInfo_ItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResRichmanChestInfo_ItemData) Reset() {
	*x = ResRichmanChestInfo_ItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[775]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRichmanChestInfo_ItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRichmanChestInfo_ItemData) ProtoMessage() {}

func (x *ResRichmanChestInfo_ItemData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[775]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRichmanChestInfo_ItemData.ProtoReflect.Descriptor instead.
func (*ResRichmanChestInfo_ItemData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{490, 0}
}

func (x *ResRichmanChestInfo_ItemData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResRichmanChestInfo_ItemData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResReceiveAllActivityGift_ReceiveRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	FromAccountId uint32 `protobuf:"varint,2,opt,name=from_account_id,json=fromAccountId,proto3" json:"from_account_id"`
	ItemId        uint32 `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Count         uint32 `protobuf:"varint,4,opt,name=count,proto3" json:"count"`
}

func (x *ResReceiveAllActivityGift_ReceiveRewards) Reset() {
	*x = ResReceiveAllActivityGift_ReceiveRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[776]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveAllActivityGift_ReceiveRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveAllActivityGift_ReceiveRewards) ProtoMessage() {}

func (x *ResReceiveAllActivityGift_ReceiveRewards) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[776]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveAllActivityGift_ReceiveRewards.ProtoReflect.Descriptor instead.
func (*ResReceiveAllActivityGift_ReceiveRewards) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{502, 0}
}

func (x *ResReceiveAllActivityGift_ReceiveRewards) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResReceiveAllActivityGift_ReceiveRewards) GetFromAccountId() uint32 {
	if x != nil {
		return x.FromAccountId
	}
	return 0
}

func (x *ResReceiveAllActivityGift_ReceiveRewards) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ResReceiveAllActivityGift_ReceiveRewards) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResFetchABMatch_MatchPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId uint32 `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id"`
	Point   uint32 `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
}

func (x *ResFetchABMatch_MatchPoint) Reset() {
	*x = ResFetchABMatch_MatchPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[777]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchABMatch_MatchPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchABMatch_MatchPoint) ProtoMessage() {}

func (x *ResFetchABMatch_MatchPoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[777]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchABMatch_MatchPoint.ProtoReflect.Descriptor instead.
func (*ResFetchABMatch_MatchPoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{507, 0}
}

func (x *ResFetchABMatch_MatchPoint) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *ResFetchABMatch_MatchPoint) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type ResChallengeSeasonInfo_ChallengeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId  uint32 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id"`
	StartTime uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime   uint32 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	State     uint32 `protobuf:"varint,4,opt,name=state,proto3" json:"state"`
}

func (x *ResChallengeSeasonInfo_ChallengeInfo) Reset() {
	*x = ResChallengeSeasonInfo_ChallengeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[778]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResChallengeSeasonInfo_ChallengeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResChallengeSeasonInfo_ChallengeInfo) ProtoMessage() {}

func (x *ResChallengeSeasonInfo_ChallengeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[778]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResChallengeSeasonInfo_ChallengeInfo.ProtoReflect.Descriptor instead.
func (*ResChallengeSeasonInfo_ChallengeInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{510, 0}
}

func (x *ResChallengeSeasonInfo_ChallengeInfo) GetSeasonId() uint32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *ResChallengeSeasonInfo_ChallengeInfo) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ResChallengeSeasonInfo_ChallengeInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ResChallengeSeasonInfo_ChallengeInfo) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type ResReceiveChallengeRankReward_Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId uint32 `protobuf:"varint,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResReceiveChallengeRankReward_Reward) Reset() {
	*x = ResReceiveChallengeRankReward_Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[779]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveChallengeRankReward_Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveChallengeRankReward_Reward) ProtoMessage() {}

func (x *ResReceiveChallengeRankReward_Reward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[779]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveChallengeRankReward_Reward.ProtoReflect.Descriptor instead.
func (*ResReceiveChallengeRankReward_Reward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{512, 0}
}

func (x *ResReceiveChallengeRankReward_Reward) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *ResReceiveChallengeRankReward_Reward) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResGamePointRank_RankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Point     uint32 `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
}

func (x *ResGamePointRank_RankInfo) Reset() {
	*x = ResGamePointRank_RankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[780]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGamePointRank_RankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGamePointRank_RankInfo) ProtoMessage() {}

func (x *ResGamePointRank_RankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[780]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGamePointRank_RankInfo.ProtoReflect.Descriptor instead.
func (*ResGamePointRank_RankInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{515, 0}
}

func (x *ResGamePointRank_RankInfo) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResGamePointRank_RankInfo) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type ResFetchLastPrivacy_PrivacyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version"`
}

func (x *ResFetchLastPrivacy_PrivacyInfo) Reset() {
	*x = ResFetchLastPrivacy_PrivacyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[781]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchLastPrivacy_PrivacyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchLastPrivacy_PrivacyInfo) ProtoMessage() {}

func (x *ResFetchLastPrivacy_PrivacyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[781]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchLastPrivacy_PrivacyInfo.ProtoReflect.Descriptor instead.
func (*ResFetchLastPrivacy_PrivacyInfo) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{526, 0}
}

func (x *ResFetchLastPrivacy_PrivacyInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResFetchLastPrivacy_PrivacyInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ReqCheckPrivacy_Versions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version"`
	Type    uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *ReqCheckPrivacy_Versions) Reset() {
	*x = ReqCheckPrivacy_Versions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[782]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCheckPrivacy_Versions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCheckPrivacy_Versions) ProtoMessage() {}

func (x *ReqCheckPrivacy_Versions) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[782]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCheckPrivacy_Versions.ProtoReflect.Descriptor instead.
func (*ReqCheckPrivacy_Versions) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{527, 0}
}

func (x *ReqCheckPrivacy_Versions) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ReqCheckPrivacy_Versions) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResFetchRPGBattleHistory_BattleResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string `protobuf:"bytes,14,opt,name=uuid,proto3" json:"uuid"`
	Chang      uint32 `protobuf:"varint,1,opt,name=chang,proto3" json:"chang"`
	Ju         uint32 `protobuf:"varint,2,opt,name=ju,proto3" json:"ju"`
	Ben        uint32 `protobuf:"varint,3,opt,name=ben,proto3" json:"ben"`
	Target     uint32 `protobuf:"varint,4,opt,name=target,proto3" json:"target"`
	Damage     uint32 `protobuf:"varint,5,opt,name=damage,proto3" json:"damage"`
	Heal       uint32 `protobuf:"varint,6,opt,name=heal,proto3" json:"heal"`
	MonsterSeq uint32 `protobuf:"varint,7,opt,name=monster_seq,json=monsterSeq,proto3" json:"monster_seq"`
	ChainAtk   uint32 `protobuf:"varint,8,opt,name=chain_atk,json=chainAtk,proto3" json:"chain_atk"`
	Killed     uint32 `protobuf:"varint,9,opt,name=killed,proto3" json:"killed"`
	IsLuk      uint32 `protobuf:"varint,10,opt,name=is_luk,json=isLuk,proto3" json:"is_luk"`
	IsDex      uint32 `protobuf:"varint,11,opt,name=is_dex,json=isDex,proto3" json:"is_dex"`
	IsExtra    uint32 `protobuf:"varint,12,opt,name=is_extra,json=isExtra,proto3" json:"is_extra"`
	Reward     string `protobuf:"bytes,13,opt,name=reward,proto3" json:"reward"`
	Points     uint32 `protobuf:"varint,15,opt,name=points,proto3" json:"points"`
	IsZimo     uint32 `protobuf:"varint,16,opt,name=is_zimo,json=isZimo,proto3" json:"is_zimo"`
}

func (x *ResFetchRPGBattleHistory_BattleResult) Reset() {
	*x = ResFetchRPGBattleHistory_BattleResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[783]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRPGBattleHistory_BattleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRPGBattleHistory_BattleResult) ProtoMessage() {}

func (x *ResFetchRPGBattleHistory_BattleResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[783]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRPGBattleHistory_BattleResult.ProtoReflect.Descriptor instead.
func (*ResFetchRPGBattleHistory_BattleResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{530, 0}
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetChang() uint32 {
	if x != nil {
		return x.Chang
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetDamage() uint32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetHeal() uint32 {
	if x != nil {
		return x.Heal
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetMonsterSeq() uint32 {
	if x != nil {
		return x.MonsterSeq
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetChainAtk() uint32 {
	if x != nil {
		return x.ChainAtk
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetKilled() uint32 {
	if x != nil {
		return x.Killed
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetIsLuk() uint32 {
	if x != nil {
		return x.IsLuk
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetIsDex() uint32 {
	if x != nil {
		return x.IsDex
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetIsExtra() uint32 {
	if x != nil {
		return x.IsExtra
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetReward() string {
	if x != nil {
		return x.Reward
	}
	return ""
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetPoints() uint32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *ResFetchRPGBattleHistory_BattleResult) GetIsZimo() uint32 {
	if x != nil {
		return x.IsZimo
	}
	return 0
}

type ResFetchRPGBattleHistoryV2_BattleResultV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string              `protobuf:"bytes,14,opt,name=uuid,proto3" json:"uuid"`
	Chang      uint32              `protobuf:"varint,1,opt,name=chang,proto3" json:"chang"`
	Ju         uint32              `protobuf:"varint,2,opt,name=ju,proto3" json:"ju"`
	Ben        uint32              `protobuf:"varint,3,opt,name=ben,proto3" json:"ben"`
	Damage     uint32              `protobuf:"varint,5,opt,name=damage,proto3" json:"damage"`
	MonsterSeq uint32              `protobuf:"varint,7,opt,name=monster_seq,json=monsterSeq,proto3" json:"monster_seq"`
	Killed     uint32              `protobuf:"varint,9,opt,name=killed,proto3" json:"killed"`
	Buff       []*ActivityBuffData `protobuf:"bytes,10,rep,name=buff,proto3" json:"buff"`
	Points     uint32              `protobuf:"varint,11,opt,name=points,proto3" json:"points"`
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) Reset() {
	*x = ResFetchRPGBattleHistoryV2_BattleResultV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[784]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRPGBattleHistoryV2_BattleResultV2) ProtoMessage() {}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[784]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRPGBattleHistoryV2_BattleResultV2.ProtoReflect.Descriptor instead.
func (*ResFetchRPGBattleHistoryV2_BattleResultV2) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{531, 0}
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetChang() uint32 {
	if x != nil {
		return x.Chang
	}
	return 0
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetDamage() uint32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetMonsterSeq() uint32 {
	if x != nil {
		return x.MonsterSeq
	}
	return 0
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetKilled() uint32 {
	if x != nil {
		return x.Killed
	}
	return 0
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetBuff() []*ActivityBuffData {
	if x != nil {
		return x.Buff
	}
	return nil
}

func (x *ResFetchRPGBattleHistoryV2_BattleResultV2) GetPoints() uint32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type ResArenaReward_RewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResArenaReward_RewardItem) Reset() {
	*x = ResArenaReward_RewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[785]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResArenaReward_RewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResArenaReward_RewardItem) ProtoMessage() {}

func (x *ResArenaReward_RewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[785]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResArenaReward_RewardItem.ProtoReflect.Descriptor instead.
func (*ResArenaReward_RewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{535, 0}
}

func (x *ResArenaReward_RewardItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResArenaReward_RewardItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResReceiveRPGRewards_RewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResReceiveRPGRewards_RewardItem) Reset() {
	*x = ResReceiveRPGRewards_RewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[786]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveRPGRewards_RewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveRPGRewards_RewardItem) ProtoMessage() {}

func (x *ResReceiveRPGRewards_RewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[786]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveRPGRewards_RewardItem.ProtoReflect.Descriptor instead.
func (*ResReceiveRPGRewards_RewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{538, 0}
}

func (x *ResReceiveRPGRewards_RewardItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResReceiveRPGRewards_RewardItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResReceiveCharacterRewards_RewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResReceiveCharacterRewards_RewardItem) Reset() {
	*x = ResReceiveCharacterRewards_RewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[787]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveCharacterRewards_RewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveCharacterRewards_RewardItem) ProtoMessage() {}

func (x *ResReceiveCharacterRewards_RewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[787]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveCharacterRewards_RewardItem.ProtoReflect.Descriptor instead.
func (*ResReceiveCharacterRewards_RewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{542, 0}
}

func (x *ResReceiveCharacterRewards_RewardItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResReceiveCharacterRewards_RewardItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResFeedActivityFeed_RewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResFeedActivityFeed_RewardItem) Reset() {
	*x = ResFeedActivityFeed_RewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[788]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFeedActivityFeed_RewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFeedActivityFeed_RewardItem) ProtoMessage() {}

func (x *ResFeedActivityFeed_RewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[788]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFeedActivityFeed_RewardItem.ProtoReflect.Descriptor instead.
func (*ResFeedActivityFeed_RewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{544, 0}
}

func (x *ResFeedActivityFeed_RewardItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResFeedActivityFeed_RewardItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResFetchFriendGiftActivityData_ItemCountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item  uint32 `protobuf:"varint,1,opt,name=item,proto3" json:"item"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResFetchFriendGiftActivityData_ItemCountData) Reset() {
	*x = ResFetchFriendGiftActivityData_ItemCountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[789]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchFriendGiftActivityData_ItemCountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchFriendGiftActivityData_ItemCountData) ProtoMessage() {}

func (x *ResFetchFriendGiftActivityData_ItemCountData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[789]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchFriendGiftActivityData_ItemCountData.ProtoReflect.Descriptor instead.
func (*ResFetchFriendGiftActivityData_ItemCountData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{549, 0}
}

func (x *ResFetchFriendGiftActivityData_ItemCountData) GetItem() uint32 {
	if x != nil {
		return x.Item
	}
	return 0
}

func (x *ResFetchFriendGiftActivityData_ItemCountData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResFetchFriendGiftActivityData_FriendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    uint32                                          `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Items        []*ResFetchFriendGiftActivityData_ItemCountData `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	ReceiveCount uint32                                          `protobuf:"varint,3,opt,name=receive_count,json=receiveCount,proto3" json:"receive_count"`
}

func (x *ResFetchFriendGiftActivityData_FriendData) Reset() {
	*x = ResFetchFriendGiftActivityData_FriendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[790]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchFriendGiftActivityData_FriendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchFriendGiftActivityData_FriendData) ProtoMessage() {}

func (x *ResFetchFriendGiftActivityData_FriendData) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[790]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchFriendGiftActivityData_FriendData.ProtoReflect.Descriptor instead.
func (*ResFetchFriendGiftActivityData_FriendData) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{549, 1}
}

func (x *ResFetchFriendGiftActivityData_FriendData) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResFetchFriendGiftActivityData_FriendData) GetItems() []*ResFetchFriendGiftActivityData_ItemCountData {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResFetchFriendGiftActivityData_FriendData) GetReceiveCount() uint32 {
	if x != nil {
		return x.ReceiveCount
	}
	return 0
}

type ResReceiveActivitySpotReward_RewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ResReceiveActivitySpotReward_RewardItem) Reset() {
	*x = ResReceiveActivitySpotReward_RewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[791]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReceiveActivitySpotReward_RewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReceiveActivitySpotReward_RewardItem) ProtoMessage() {}

func (x *ResReceiveActivitySpotReward_RewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[791]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReceiveActivitySpotReward_RewardItem.ProtoReflect.Descriptor instead.
func (*ResReceiveActivitySpotReward_RewardItem) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{558, 0}
}

func (x *ResReceiveActivitySpotReward_RewardItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResReceiveActivitySpotReward_RewardItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResFetchShopInterval_ShopInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id"`
	Interval uint32 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval"`
}

func (x *ResFetchShopInterval_ShopInterval) Reset() {
	*x = ResFetchShopInterval_ShopInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[792]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchShopInterval_ShopInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchShopInterval_ShopInterval) ProtoMessage() {}

func (x *ResFetchShopInterval_ShopInterval) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[792]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchShopInterval_ShopInterval.ProtoReflect.Descriptor instead.
func (*ResFetchShopInterval_ShopInterval) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{565, 0}
}

func (x *ResFetchShopInterval_ShopInterval) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ResFetchShopInterval_ShopInterval) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type ResFetchActivityInterval_ActivityInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Interval   uint32 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval"`
}

func (x *ResFetchActivityInterval_ActivityInterval) Reset() {
	*x = ResFetchActivityInterval_ActivityInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[793]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchActivityInterval_ActivityInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchActivityInterval_ActivityInterval) ProtoMessage() {}

func (x *ResFetchActivityInterval_ActivityInterval) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[793]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchActivityInterval_ActivityInterval.ProtoReflect.Descriptor instead.
func (*ResFetchActivityInterval_ActivityInterval) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{566, 0}
}

func (x *ResFetchActivityInterval_ActivityInterval) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ResFetchActivityInterval_ActivityInterval) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type RecordNewRound_TingPai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32         `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Tingpais1 []*TingPaiInfo `protobuf:"bytes,2,rep,name=tingpais1,proto3" json:"tingpais1"`
}

func (x *RecordNewRound_TingPai) Reset() {
	*x = RecordNewRound_TingPai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[794]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNewRound_TingPai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNewRound_TingPai) ProtoMessage() {}

func (x *RecordNewRound_TingPai) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[794]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNewRound_TingPai.ProtoReflect.Descriptor instead.
func (*RecordNewRound_TingPai) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{578, 0}
}

func (x *RecordNewRound_TingPai) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordNewRound_TingPai) GetTingpais1() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais1
	}
	return nil
}

type GameSnapshot_PlayerSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score        int32                               `protobuf:"varint,1,opt,name=score,proto3" json:"score"`
	Liqiposition int32                               `protobuf:"varint,2,opt,name=liqiposition,proto3" json:"liqiposition"`
	Tilenum      uint32                              `protobuf:"varint,3,opt,name=tilenum,proto3" json:"tilenum"`
	Qipais       []string                            `protobuf:"bytes,4,rep,name=qipais,proto3" json:"qipais"`
	Mings        []*GameSnapshot_PlayerSnapshot_Fulu `protobuf:"bytes,5,rep,name=mings,proto3" json:"mings"`
}

func (x *GameSnapshot_PlayerSnapshot) Reset() {
	*x = GameSnapshot_PlayerSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[795]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSnapshot_PlayerSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSnapshot_PlayerSnapshot) ProtoMessage() {}

func (x *GameSnapshot_PlayerSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[795]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSnapshot_PlayerSnapshot.ProtoReflect.Descriptor instead.
func (*GameSnapshot_PlayerSnapshot) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{579, 0}
}

func (x *GameSnapshot_PlayerSnapshot) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GameSnapshot_PlayerSnapshot) GetLiqiposition() int32 {
	if x != nil {
		return x.Liqiposition
	}
	return 0
}

func (x *GameSnapshot_PlayerSnapshot) GetTilenum() uint32 {
	if x != nil {
		return x.Tilenum
	}
	return 0
}

func (x *GameSnapshot_PlayerSnapshot) GetQipais() []string {
	if x != nil {
		return x.Qipais
	}
	return nil
}

func (x *GameSnapshot_PlayerSnapshot) GetMings() []*GameSnapshot_PlayerSnapshot_Fulu {
	if x != nil {
		return x.Mings
	}
	return nil
}

type GameSnapshot_PlayerSnapshot_Fulu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Tile []string `protobuf:"bytes,2,rep,name=tile,proto3" json:"tile"`
	From []uint32 `protobuf:"varint,3,rep,packed,name=from,proto3" json:"from"`
}

func (x *GameSnapshot_PlayerSnapshot_Fulu) Reset() {
	*x = GameSnapshot_PlayerSnapshot_Fulu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[796]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSnapshot_PlayerSnapshot_Fulu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSnapshot_PlayerSnapshot_Fulu) ProtoMessage() {}

func (x *GameSnapshot_PlayerSnapshot_Fulu) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[796]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSnapshot_PlayerSnapshot_Fulu.ProtoReflect.Descriptor instead.
func (*GameSnapshot_PlayerSnapshot_Fulu) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{579, 0, 0}
}

func (x *GameSnapshot_PlayerSnapshot_Fulu) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameSnapshot_PlayerSnapshot_Fulu) GetTile() []string {
	if x != nil {
		return x.Tile
	}
	return nil
}

func (x *GameSnapshot_PlayerSnapshot_Fulu) GetFrom() []uint32 {
	if x != nil {
		return x.From
	}
	return nil
}

type RecordSelectGap_TingPai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32         `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Tingpais1 []*TingPaiInfo `protobuf:"bytes,2,rep,name=tingpais1,proto3" json:"tingpais1"`
}

func (x *RecordSelectGap_TingPai) Reset() {
	*x = RecordSelectGap_TingPai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[797]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordSelectGap_TingPai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordSelectGap_TingPai) ProtoMessage() {}

func (x *RecordSelectGap_TingPai) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[797]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordSelectGap_TingPai.ProtoReflect.Descriptor instead.
func (*RecordSelectGap_TingPai) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{597, 0}
}

func (x *RecordSelectGap_TingPai) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordSelectGap_TingPai) GetTingpais1() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais1
	}
	return nil
}

type RecordChangeTile_TingPai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat      uint32         `protobuf:"varint,1,opt,name=seat,proto3" json:"seat"`
	Tingpais1 []*TingPaiInfo `protobuf:"bytes,2,rep,name=tingpais1,proto3" json:"tingpais1"`
}

func (x *RecordChangeTile_TingPai) Reset() {
	*x = RecordChangeTile_TingPai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[798]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordChangeTile_TingPai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordChangeTile_TingPai) ProtoMessage() {}

func (x *RecordChangeTile_TingPai) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[798]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordChangeTile_TingPai.ProtoReflect.Descriptor instead.
func (*RecordChangeTile_TingPai) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{599, 0}
}

func (x *RecordChangeTile_TingPai) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordChangeTile_TingPai) GetTingpais1() []*TingPaiInfo {
	if x != nil {
		return x.Tingpais1
	}
	return nil
}

type RecordChangeTile_ChangeTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InTiles       []string `protobuf:"bytes,1,rep,name=in_tiles,json=inTiles,proto3" json:"in_tiles"`
	InTileStates  []int32  `protobuf:"varint,2,rep,packed,name=in_tile_states,json=inTileStates,proto3" json:"in_tile_states"`
	OutTiles      []string `protobuf:"bytes,3,rep,name=out_tiles,json=outTiles,proto3" json:"out_tiles"`
	OutTileStates []int32  `protobuf:"varint,4,rep,packed,name=out_tile_states,json=outTileStates,proto3" json:"out_tile_states"`
}

func (x *RecordChangeTile_ChangeTile) Reset() {
	*x = RecordChangeTile_ChangeTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[799]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordChangeTile_ChangeTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordChangeTile_ChangeTile) ProtoMessage() {}

func (x *RecordChangeTile_ChangeTile) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[799]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordChangeTile_ChangeTile.ProtoReflect.Descriptor instead.
func (*RecordChangeTile_ChangeTile) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{599, 1}
}

func (x *RecordChangeTile_ChangeTile) GetInTiles() []string {
	if x != nil {
		return x.InTiles
	}
	return nil
}

func (x *RecordChangeTile_ChangeTile) GetInTileStates() []int32 {
	if x != nil {
		return x.InTileStates
	}
	return nil
}

func (x *RecordChangeTile_ChangeTile) GetOutTiles() []string {
	if x != nil {
		return x.OutTiles
	}
	return nil
}

func (x *RecordChangeTile_ChangeTile) GetOutTileStates() []int32 {
	if x != nil {
		return x.OutTileStates
	}
	return nil
}

type NotifyGameFinishReward_LevelChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin *AccountLevel `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin"`
	Final  *AccountLevel `protobuf:"bytes,2,opt,name=final,proto3" json:"final"`
	Type   uint32        `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *NotifyGameFinishReward_LevelChange) Reset() {
	*x = NotifyGameFinishReward_LevelChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[800]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishReward_LevelChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishReward_LevelChange) ProtoMessage() {}

func (x *NotifyGameFinishReward_LevelChange) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[800]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishReward_LevelChange.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishReward_LevelChange) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{658, 0}
}

func (x *NotifyGameFinishReward_LevelChange) GetOrigin() *AccountLevel {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *NotifyGameFinishReward_LevelChange) GetFinal() *AccountLevel {
	if x != nil {
		return x.Final
	}
	return nil
}

func (x *NotifyGameFinishReward_LevelChange) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type NotifyGameFinishReward_MatchChest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChestId  uint32        `protobuf:"varint,1,opt,name=chest_id,json=chestId,proto3" json:"chest_id"`
	Origin   uint32        `protobuf:"varint,2,opt,name=origin,proto3" json:"origin"`
	Final    uint32        `protobuf:"varint,3,opt,name=final,proto3" json:"final"`
	IsGraded bool          `protobuf:"varint,4,opt,name=is_graded,json=isGraded,proto3" json:"is_graded"`
	Rewards  []*RewardSlot `protobuf:"bytes,5,rep,name=rewards,proto3" json:"rewards"`
}

func (x *NotifyGameFinishReward_MatchChest) Reset() {
	*x = NotifyGameFinishReward_MatchChest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[801]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishReward_MatchChest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishReward_MatchChest) ProtoMessage() {}

func (x *NotifyGameFinishReward_MatchChest) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[801]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishReward_MatchChest.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishReward_MatchChest) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{658, 1}
}

func (x *NotifyGameFinishReward_MatchChest) GetChestId() uint32 {
	if x != nil {
		return x.ChestId
	}
	return 0
}

func (x *NotifyGameFinishReward_MatchChest) GetOrigin() uint32 {
	if x != nil {
		return x.Origin
	}
	return 0
}

func (x *NotifyGameFinishReward_MatchChest) GetFinal() uint32 {
	if x != nil {
		return x.Final
	}
	return 0
}

func (x *NotifyGameFinishReward_MatchChest) GetIsGraded() bool {
	if x != nil {
		return x.IsGraded
	}
	return false
}

func (x *NotifyGameFinishReward_MatchChest) GetRewards() []*RewardSlot {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type NotifyGameFinishReward_MainCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level uint32 `protobuf:"varint,1,opt,name=level,proto3" json:"level"`
	Exp   uint32 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp"`
	Add   uint32 `protobuf:"varint,3,opt,name=add,proto3" json:"add"`
}

func (x *NotifyGameFinishReward_MainCharacter) Reset() {
	*x = NotifyGameFinishReward_MainCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[802]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishReward_MainCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishReward_MainCharacter) ProtoMessage() {}

func (x *NotifyGameFinishReward_MainCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[802]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishReward_MainCharacter.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishReward_MainCharacter) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{658, 2}
}

func (x *NotifyGameFinishReward_MainCharacter) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *NotifyGameFinishReward_MainCharacter) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *NotifyGameFinishReward_MainCharacter) GetAdd() uint32 {
	if x != nil {
		return x.Add
	}
	return 0
}

type NotifyGameFinishReward_CharacterGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin   uint32 `protobuf:"varint,1,opt,name=origin,proto3" json:"origin"`
	Final    uint32 `protobuf:"varint,2,opt,name=final,proto3" json:"final"`
	Add      uint32 `protobuf:"varint,3,opt,name=add,proto3" json:"add"`
	IsGraded bool   `protobuf:"varint,4,opt,name=is_graded,json=isGraded,proto3" json:"is_graded"`
}

func (x *NotifyGameFinishReward_CharacterGift) Reset() {
	*x = NotifyGameFinishReward_CharacterGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[803]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameFinishReward_CharacterGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameFinishReward_CharacterGift) ProtoMessage() {}

func (x *NotifyGameFinishReward_CharacterGift) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[803]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameFinishReward_CharacterGift.ProtoReflect.Descriptor instead.
func (*NotifyGameFinishReward_CharacterGift) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{658, 3}
}

func (x *NotifyGameFinishReward_CharacterGift) GetOrigin() uint32 {
	if x != nil {
		return x.Origin
	}
	return 0
}

func (x *NotifyGameFinishReward_CharacterGift) GetFinal() uint32 {
	if x != nil {
		return x.Final
	}
	return 0
}

func (x *NotifyGameFinishReward_CharacterGift) GetAdd() uint32 {
	if x != nil {
		return x.Add
	}
	return 0
}

func (x *NotifyGameFinishReward_CharacterGift) GetIsGraded() bool {
	if x != nil {
		return x.IsGraded
	}
	return false
}

type NotifyActivityReward_ActivityReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32        `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Rewards    []*RewardSlot `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards"`
}

func (x *NotifyActivityReward_ActivityReward) Reset() {
	*x = NotifyActivityReward_ActivityReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[804]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityReward_ActivityReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityReward_ActivityReward) ProtoMessage() {}

func (x *NotifyActivityReward_ActivityReward) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[804]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityReward_ActivityReward.ProtoReflect.Descriptor instead.
func (*NotifyActivityReward_ActivityReward) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{659, 0}
}

func (x *NotifyActivityReward_ActivityReward) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotifyActivityReward_ActivityReward) GetRewards() []*RewardSlot {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type NotifyActivityPoint_ActivityPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id"`
	Point      uint32 `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
}

func (x *NotifyActivityPoint_ActivityPoint) Reset() {
	*x = NotifyActivityPoint_ActivityPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[805]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityPoint_ActivityPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityPoint_ActivityPoint) ProtoMessage() {}

func (x *NotifyActivityPoint_ActivityPoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[805]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityPoint_ActivityPoint.ProtoReflect.Descriptor instead.
func (*NotifyActivityPoint_ActivityPoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{660, 0}
}

func (x *NotifyActivityPoint_ActivityPoint) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotifyActivityPoint_ActivityPoint) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type NotifyLeaderboardPoint_LeaderboardPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId,proto3" json:"leaderboard_id"`
	Point         uint32 `protobuf:"varint,2,opt,name=point,proto3" json:"point"`
}

func (x *NotifyLeaderboardPoint_LeaderboardPoint) Reset() {
	*x = NotifyLeaderboardPoint_LeaderboardPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[806]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyLeaderboardPoint_LeaderboardPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyLeaderboardPoint_LeaderboardPoint) ProtoMessage() {}

func (x *NotifyLeaderboardPoint_LeaderboardPoint) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[806]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyLeaderboardPoint_LeaderboardPoint.ProtoReflect.Descriptor instead.
func (*NotifyLeaderboardPoint_LeaderboardPoint) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{661, 0}
}

func (x *NotifyLeaderboardPoint_LeaderboardPoint) GetLeaderboardId() uint32 {
	if x != nil {
		return x.LeaderboardId
	}
	return 0
}

func (x *NotifyLeaderboardPoint_LeaderboardPoint) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type NotifyEndGameVote_VoteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	Yes       bool   `protobuf:"varint,2,opt,name=yes,proto3" json:"yes"`
}

func (x *NotifyEndGameVote_VoteResult) Reset() {
	*x = NotifyEndGameVote_VoteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liqi_proto_msgTypes[807]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyEndGameVote_VoteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyEndGameVote_VoteResult) ProtoMessage() {}

func (x *NotifyEndGameVote_VoteResult) ProtoReflect() protoreflect.Message {
	mi := &file_liqi_proto_msgTypes[807]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyEndGameVote_VoteResult.ProtoReflect.Descriptor instead.
func (*NotifyEndGameVote_VoteResult) Descriptor() ([]byte, []int) {
	return file_liqi_proto_rawDescGZIP(), []int{663, 0}
}

func (x *NotifyEndGameVote_VoteResult) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyEndGameVote_VoteResult) GetYes() bool {
	if x != nil {
		return x.Yes
	}
	return false
}

var File_liqi_proto protoreflect.FileDescriptor

var file_liqi_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x69, 0x71, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x6c, 0x71,
	0x22, 0x7c, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8e,
	0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xb3, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf8, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x12, 0x4e, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x1a, 0x48, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x22, 0x90, 0x02, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71,
	0x1a, 0x51, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x22, 0xf1, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f,
	0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x33,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x33, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x13, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x22, 0x71, 0x0a, 0x17,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x5d, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x56,
	0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x6b,
	0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x71, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x73, 0x0a, 0x14, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x49, 0x64,
	0x22, 0x6f, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x40, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x22, 0xb2, 0x01, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x44, 0x0a, 0x12, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x2d, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e,
	0x65, 0x77, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x04,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x34, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x16, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x67, 0x61, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x47, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d,
	0x61, 0x78, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x1e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x61,
	0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x1f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xd0, 0x05, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xf8,
	0x04, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x65, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x65, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6c, 0x71, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f,
	0x69, 0x6e, 0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6c, 0x71,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x1a, 0x53, 0x0a,
	0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x1a, 0xa4, 0x01, 0x0a, 0x0b, 0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0xf6, 0x01, 0x0a, 0x20, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x47, 0x69, 0x66, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x22, 0x3d, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x68,
	0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x9c, 0x02, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x70, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67,
	0x69, 0x66, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x7a, 0x68, 0x70, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x13, 0x7a, 0x68, 0x70, 0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x7a, 0x68, 0x70, 0x5f, 0x63,
	0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x7a, 0x68, 0x70, 0x43, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x64, 0x64, 0x79, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x62, 0x75, 0x64, 0x64, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x45, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xab, 0x02, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x1a, 0x4c, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0xdb, 0x01, 0x0a, 0x1c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x71, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x22, 0x26,
	0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33, 0x0a,
	0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x0f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x41, 0x46, 0x4b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22,
	0x1a, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0xbd, 0x06, 0x0a, 0x18,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x56, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x4b, 0x0a, 0x0c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x56, 0x32, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x48,
	0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x56,
	0x32, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x56, 0x32, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x6d, 0x61,
	0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x56,
	0x32, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x52,
	0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x1a, 0x73,
	0x0a, 0x0b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x1a, 0x9c, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x1a, 0x49, 0x0a, 0x0d, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x64, 0x64, 0x1a, 0x6c, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x16,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x56, 0x32, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x56, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x5b, 0x0a, 0x0e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56,
	0x32, 0x12, 0x50, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x71, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x56, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x1a, 0x46, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x18,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x32, 0x12, 0x5c, 0x0a, 0x12, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x56, 0x32, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x4f, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x33, 0x32, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x33, 0x32, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x22, 0x31, 0x0a, 0x07, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x0b, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x09, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x0d, 0x41, 0x6e, 0x74, 0x69,
	0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xad, 0x0a, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61,
	0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x32,
	0x0a, 0x15, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x12, 0x4b, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x42, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e,
	0x48, 0x75, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x48, 0x75, 0x12, 0x4a, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x68,
	0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x75, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x75, 0x12,
	0x5a, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x32, 0x30, 0x5f, 0x68, 0x75, 0x5f,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x4c, 0x69, 0x71, 0x69, 0x32,
	0x30, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x32, 0x30, 0x48, 0x75, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x5a, 0x0a, 0x14, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x31, 0x30, 0x5f, 0x68, 0x75, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x4c, 0x69, 0x51, 0x69, 0x31, 0x30, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x31, 0x30, 0x48, 0x75,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x59, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x5f, 0x31, 0x30, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x12,
	0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x31, 0x30, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x1a, 0x96, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x6f, 0x6e, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x7a, 0x69, 0x6d, 0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x7a, 0x69, 0x6d, 0x6f, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x61, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x61, 0x6e,
	0x67, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x73, 0x0a, 0x09, 0x48,
	0x75, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x6f, 0x72,
	0x61, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x6f, 0x72, 0x61, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x61, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x6e,
	0x1a, 0xb4, 0x01, 0x0a, 0x0f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x75, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6e, 0x73, 0x68, 0x75, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x6e, 0x73, 0x68, 0x75, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x6f, 0x72, 0x61, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64,
	0x6f, 0x72, 0x61, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x68, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x75, 0x70, 0x61, 0x69, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x75, 0x70, 0x61, 0x69, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x88, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x71, 0x69,
	0x32, 0x30, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x64,
	0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x68, 0x75, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x48, 0x75, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x1a, 0x5b, 0x0a, 0x0d, 0x4c, 0x69, 0x51, 0x69, 0x31, 0x30, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x78, 0x75, 0x61,
	0x6e, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x58, 0x75, 0x61, 0x6e, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x61, 0x6e, 0x73, 0x68, 0x75, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x6e, 0x73, 0x68, 0x75, 0x1a,
	0x41, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x6d, 0x0a, 0x08, 0x56, 0x69, 0x65,
	0x77, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x0a, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x61, 0x6e, 0x74, 0x69,
	0x5f, 0x61, 0x64, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x6e, 0x74, 0x69, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67,
	0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69,
	0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x69,
	0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x50, 0x0a, 0x14, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x73, 0x6b, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x12, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x45, 0x0a,
	0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x10, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x37, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x3a, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x6b, 0x69, 0x6e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x52, 0x0a, 0x0e,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x1a, 0x3c, 0x0a, 0x10, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f,
	0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x75,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x22,
	0xd3, 0x12, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x03, 0x62, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x42, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x03, 0x62, 0x61, 0x67, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x73,
	0x68, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x69, 0x4c, 0x69, 0x61, 0x6e,
	0x52, 0x07, 0x73, 0x68, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x12, 0x40, 0x0a, 0x0a, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x09, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x33, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x65,
	0x77, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41,
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x4a, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6c,
	0x69, 0x70, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x10, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x4e, 0x0a,
	0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x4e, 0x0a,
	0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x46, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x61, 0x62, 0x5f, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x07, 0x61, 0x62, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x57, 0x0a, 0x15, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x37, 0x0a, 0x0f, 0x4e, 0x75, 0x6d, 0x65,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x1a, 0xac, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x5f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x1a, 0x73, 0x0a, 0x11, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x60, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x51, 0x0a, 0x0b, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x1a, 0x5b, 0x0a, 0x0a, 0x54, 0x61,
	0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x89, 0x02, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x1a, 0xd4, 0x02, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x5f,
	0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x62, 0x75, 0x79, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x0f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x75, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x71, 0x75, 0x69, 0x74, 0x1a, 0x3d, 0x0a, 0x0a, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x69, 0x0a, 0x11, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x55, 0x69, 0x64, 0x22, 0x73, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xda, 0x04,
	0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x69, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x26, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e,
	0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x62, 0x61, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x62, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x0e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0xe0, 0x02, 0x0a, 0x0e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x30, 0x0a, 0x0b,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x87,
	0x02, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x61, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x33, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x52, 0x12, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x67, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x7c, 0x0a, 0x19, 0x47, 0x61, 0x6d, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x78, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x69, 0x78, 0x69, 0x6e, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70,
	0x65, 0x6c, 0x6c, 0x56, 0x61, 0x72, 0x22, 0xbf, 0x13, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x41, 0x64, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x64, 0x75, 0x61, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x69, 0x64, 0x75, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x61,
	0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x6a, 0x69, 0x66,
	0x65, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x4a, 0x69, 0x66,
	0x65, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x61, 0x6e, 0x62, 0x69, 0x61, 0x6e, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x61, 0x6e,
	0x62, 0x69, 0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x71,
	0x69, 0x62, 0x61, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x62, 0x61, 0x6e, 0x67, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x62, 0x61, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75, 0x5f, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x66, 0x75, 0x31, 0x12, 0x22, 0x0a,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75, 0x5f, 0x32, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x66, 0x75,
	0x32, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75,
	0x5f, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x46, 0x61, 0x66, 0x75, 0x33, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6c, 0x69,
	0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x68, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x71, 0x69, 0x65, 0x73, 0x68,
	0x61, 0x6e, 0x67, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x68, 0x61, 0x76, 0x65, 0x51, 0x69, 0x65, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x6d, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x62, 0x69,
	0x61, 0x6f, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68,
	0x61, 0x76, 0x65, 0x42, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x2d, 0x0a, 0x13, 0x68,
	0x61, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64, 0x6f,
	0x72, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x76, 0x65, 0x47, 0x61,
	0x6e, 0x67, 0x42, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x3b, 0x0a, 0x1a, 0x6d, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x65, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17,
	0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x72, 0x61, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x65, 0x6c, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x5f,
	0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68,
	0x61, 0x76, 0x65, 0x4c, 0x69, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x29, 0x0a, 0x11, 0x68, 0x61, 0x76,
	0x65, 0x5f, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6e, 0x67, 0x4c, 0x69,
	0x44, 0x6f, 0x72, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x66,
	0x65, 0x6e, 0x67, 0x6c, 0x69, 0x61, 0x6e, 0x64, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x68, 0x61, 0x76, 0x65, 0x53, 0x69, 0x66, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x61, 0x6e, 0x64,
	0x61, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x61, 0x6e, 0x67,
	0x73, 0x61, 0x6e, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x76,
	0x65, 0x53, 0x69, 0x67, 0x61, 0x6e, 0x67, 0x73, 0x61, 0x6e, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x6a, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x68, 0x69, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x53, 0x69, 0x6a, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x68, 0x69, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6a, 0x69,
	0x75, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x69, 0x75, 0x70, 0x61, 0x69, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x76, 0x65, 0x4a, 0x69, 0x75, 0x7a, 0x68, 0x6f, 0x6e, 0x67,
	0x6a, 0x69, 0x75, 0x70, 0x61, 0x69, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73,
	0x61, 0x6e, 0x6a, 0x69, 0x61, 0x68, 0x65, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x68, 0x61, 0x76, 0x65, 0x53, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x68, 0x65, 0x6c, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x74, 0x69,
	0x61, 0x6f, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x68, 0x65, 0x6c, 0x65, 0x6c,
	0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x68, 0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x65, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75,
	0x61, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x68, 0x65, 0x6c, 0x65,
	0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68,
	0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x65, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x12, 0x35,
	0x0a, 0x16, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x6c, 0x69,
	0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x68, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x7a,
	0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6e, 0x67, 0x70, 0x61, 0x69, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x7a,
	0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x79,
	0x69, 0x66, 0x61, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x76, 0x65, 0x59,
	0x69, 0x66, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x72,
	0x75, 0x78, 0x69, 0x72, 0x75, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x76,
	0x65, 0x4e, 0x61, 0x6e, 0x72, 0x75, 0x78, 0x69, 0x72, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x6a, 0x69,
	0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6a, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79, 0x75,
	0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x6d, 0x61, 0x5f, 0x32, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x6d, 0x61, 0x5f, 0x33, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x33, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x6d, 0x61, 0x5f, 0x34, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x34, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x69, 0x61,
	0x6e, 0x6a, 0x69, 0x65, 0x74, 0x69, 0x73, 0x68, 0x69, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x62, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x65, 0x74, 0x69, 0x73, 0x68, 0x69, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x69, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x69, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65,
	0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x73, 0x75, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x68, 0x61, 0x76, 0x65, 0x5a, 0x69, 0x6d, 0x6f, 0x73, 0x75, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x79, 0x75, 0x6b,
	0x61, 0x6d, 0x61, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x59, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x61, 0x6e, 0x66, 0x75, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x61, 0x6e, 0x66, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x75, 0x79, 0x69, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x75, 0x79, 0x69, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x72, 0x61, 0x33, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x72, 0x61, 0x33, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x69, 0x75,
	0x63, 0x68, 0x61, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6a, 0x69, 0x75, 0x63, 0x68, 0x61, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x75, 0x79, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6d, 0x75, 0x79, 0x75, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x78, 0x75, 0x65, 0x7a, 0x68, 0x61,
	0x6e, 0x64, 0x61, 0x6f, 0x64, 0x69, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x78, 0x75,
	0x65, 0x7a, 0x68, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x64, 0x69, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x75,
	0x61, 0x6e, 0x73, 0x61, 0x6e, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x68, 0x75, 0x61, 0x6e, 0x73, 0x61, 0x6e, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x6d, 0x61, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x6d, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x76, 0x65,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x61,
	0x6e, 0x78, 0x69, 0x6e, 0x67, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x7a, 0x68, 0x61,
	0x6e, 0x78, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x69,
	0x61, 0x6e, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x69, 0x6a, 0x69, 0x79, 0x69, 0x6d, 0x61, 0x6e,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c,
	0x65, 0x69, 0x6a, 0x69, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x79, 0x61, 0x6b, 0x75,
	0x6d, 0x61, 0x6e, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x59, 0x61, 0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x12,
	0x3a, 0x0a, 0x19, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x79, 0x61, 0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x18, 0x3f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x17, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x59, 0x61, 0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x74, 0x69, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x74, 0x69, 0x12, 0x30,
	0x0a, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x74, 0x73, 0x75, 0x6d,
	0x6f, 0x5f, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6e, 0x74, 0x73, 0x75, 0x6d, 0x6f, 0x4c, 0x69, 0x71, 0x69,
	0x12, 0x3c, 0x0a, 0x1b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x75, 0x18,
	0x42, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x75, 0x12, 0x32,
	0x0a, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x67,
	0x5f, 0x67, 0x75, 0x6f, 0x73, 0x68, 0x69, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x67, 0x61, 0x6e, 0x67, 0x47, 0x75, 0x6f, 0x73,
	0x68, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6e,
	0x68, 0x65, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x6e, 0x68, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x62, 0x61, 0x6f, 0x70, 0x61, 0x69, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6f, 0x70, 0x61, 0x69, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xeb, 0x02, 0x0a, 0x04, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x88, 0x02, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x1a, 0xbe, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x65, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x31, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f, 0x6c,
	0x64, 0x22, 0x6f, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x96,
	0x01, 0x0a, 0x11, 0x46, 0x61, 0x6b, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x67, 0x61, 0x69, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x35, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x66,
	0x0a, 0x03, 0x42, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3f, 0x0a, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x67,
	0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x47, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c, 0x71, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x4c, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22,
	0x32, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x6c,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x6c, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x4c, 0x0a, 0x08, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x3b, 0x0a, 0x0b, 0x49, 0x31, 0x38, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xaa, 0x03,
	0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x74, 0x61, 0x6b, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x30,
	0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53,
	0x6c, 0x6f, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69,
	0x31, 0x38, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x49,
	0x31, 0x38, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x49, 0x31, 0x38, 0x6e, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x31, 0x38, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71,
	0x2e, 0x49, 0x31, 0x38, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x31, 0x38, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf0, 0x05, 0x0a, 0x1a, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x42, 0x79,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x11, 0x67, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x73, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x67, 0x6f, 0x6c, 0x64, 0x45, 0x61, 0x72, 0x6e,
	0x53, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x61, 0x64, 0x69, 0x61, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x64, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x53, 0x75, 0x6d, 0x12, 0x48, 0x0a, 0x09, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69,
	0x71, 0x69, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x69, 0x71, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d,
	0x12, 0x22, 0x0a, 0x0d, 0x78, 0x75, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75,
	0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x78, 0x75, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x12, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f,
	0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75,
	0x61, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x61, 0x72,
	0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x45, 0x61, 0x72, 0x6e, 0x53, 0x75, 0x6d, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x61, 0x6e,
	0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x1a, 0x34, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x1a, 0x52, 0x0a, 0x09, 0x52, 0x61, 0x6e, 0x6b,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x53, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x15,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x42, 0x79, 0x46, 0x61, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x90,
	0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x61, 0x6e, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x2b, 0x0a, 0x03, 0x66, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x42, 0x79, 0x46, 0x61, 0x6e, 0x52, 0x03, 0x66, 0x61, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x6e, 0x22, 0xe1, 0x01, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x3b, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x61, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x42, 0x79, 0x46, 0x61,
	0x6e, 0x52, 0x03, 0x66, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x69,
	0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x39, 0x0a, 0x0c, 0x66, 0x61,
	0x6e, 0x5f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x61, 0x6e,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x52, 0x0b, 0x66, 0x61, 0x6e, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x20, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x45, 0x0a, 0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x22, 0xb7, 0x0d,
	0x0a, 0x18, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32, 0x12, 0x4e, 0x0a, 0x15, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x51, 0x0a, 0x0e, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0d,
	0x72, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x79, 0x0a,
	0x1c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56,
	0x32, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x1a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x52, 0x0a, 0x17, 0x6c, 0x65, 0x69, 0x73,
	0x75, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x15, 0x6c, 0x65, 0x69, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x6b, 0x0a, 0x19,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32, 0x2e, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x17, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x54, 0x0a, 0x18, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x16, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x48, 0x0a, 0x12, 0x61, 0x62, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x10, 0x61, 0x62, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x1a, 0xa7, 0x04, 0x0a, 0x0d, 0x52, 0x61,
	0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x5c, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x56, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x5c, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x4a, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x11, 0x61, 0x6c, 0x6c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x69,
	0x0a, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x56, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x68, 0x0a, 0x0d, 0x52, 0x61, 0x6e,
	0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x1a, 0xd4, 0x01, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x12, 0x43, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0e, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x9a, 0x02, 0x0a, 0x12, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x10,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x56, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x1a, 0x63, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x22, 0x3a, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x68, 0x69, 0x4c, 0x69, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61,
	0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x27, 0x0a, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x71,
	0x0a, 0x0c, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x70, 0x0a, 0x0a,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x7b,
	0x0a, 0x08, 0x52, 0x50, 0x47, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x71, 0x22, 0xb4, 0x02, 0x0a, 0x0b,
	0x52, 0x50, 0x47, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x55, 0x75, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0d,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x50, 0x47, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x34, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x50,
	0x47, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x49, 0x64, 0x22, 0xb1, 0x02, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41,
	0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61,
	0x78, 0x5f, 0x77, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x04, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x66, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x13, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6c, 0x71, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x6e,
	0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x67, 0x69, 0x66,
	0x74, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x1a, 0x53, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xa4, 0x01, 0x0a, 0x0b,
	0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c,
	0x0a, 0x10, 0x4d, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x26, 0x0a, 0x09, 0x64, 0x69, 0x67, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x08, 0x64, 0x69, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x6d, 0x61,
	0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x03, 0x0a,
	0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x4d,
	0x69, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x70, 0x67,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x50, 0x47, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x07, 0x72, 0x70,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x66, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x73, 0x70, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x10, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a,
	0x0a, 0x67, 0x61, 0x63, 0x68, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47,
	0x61, 0x63, 0x68, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09,
	0x67, 0x61, 0x63, 0x68, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x04, 0x0a, 0x10, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x56,
	0x0a, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09,
	0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x1a, 0x53, 0x0a, 0x11, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x1a, 0xa4, 0x01, 0x0a, 0x0b, 0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0xe0, 0x04, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x49, 0x6e,
	0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47,
	0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x45, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x67,
	0x69, 0x66, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x1a, 0x79, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x1a, 0xa4, 0x01, 0x0a, 0x0b, 0x47, 0x69, 0x66, 0x74, 0x42, 0x6f, 0x78, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x6f,
	0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x13, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x3d, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x33, 0x0a, 0x0b, 0x47, 0x61, 0x63, 0x68, 0x61, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x11, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x61, 0x63, 0x68, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x06, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x63, 0x68, 0x61, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x06, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x61, 0x63, 0x68, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x63, 0x68,
	0x61, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53,
	0x70, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x70,
	0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x1a, 0x6c, 0x0a,
	0x08, 0x53, 0x70, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xc2, 0x01, 0x0a, 0x12,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x30,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x22, 0x5e, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x23, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x01, 0x79, 0x22, 0x66, 0x0a, 0x0a, 0x4d, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0x76, 0x0a,
	0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x54, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f,
	0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2c, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x11, 0x47, 0x61,
	0x6d, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x22, 0x25, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x4e,
	0x6f, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x22,
	0xb0, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x0c, 0x42, 0x69, 0x6c, 0x6c, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa5, 0x01, 0x0a,
	0x0e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x26, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6c, 0x71, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65,
	0x78, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x31, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x85, 0x02, 0x0a, 0x07, 0x5a, 0x48, 0x50, 0x53, 0x68,
	0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x75, 0x79, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x62, 0x75,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6c, 0x71, 0x2e, 0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x71,
	0x2e, 0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x60,
	0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x85, 0x01, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x03, 0x7a, 0x68, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e,
	0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x03, 0x7a, 0x68, 0x70, 0x12, 0x2e, 0x0a, 0x0b,
	0x62, 0x75, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x0a, 0x62, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x32, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x32, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x32, 0x12, 0x3e, 0x0a, 0x10,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x47, 0x0a, 0x0f,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xf1, 0x04, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x32, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x32, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x73, 0x1a, 0xa3, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x1a, 0xbd, 0x02, 0x0a, 0x12, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63,
	0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x63, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x12, 0x40, 0x0a,
	0x08, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x56, 0x32, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12,
	0x39, 0x0a, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x66, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0xf9, 0x03, 0x0a, 0x0e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x33, 0x0a, 0x16, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x68, 0x6f, 0x77,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x35,
	0x0a, 0x06, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61,
	0x6c, 0x69, 0x70, 0x61, 0x79, 0x1a, 0x90, 0x01, 0x0a, 0x0a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x1a, 0x6b, 0x0a, 0x0a, 0x41, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a,
	0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x38, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x9f, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x63, 0x68, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x66, 0x61, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x32, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x66, 0x61, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x35, 0x0a, 0x17, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x14, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x09, 0x46, 0x61, 0x69, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x74, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x61, 0x69, 0x74, 0x68, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xc3, 0x02, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5b, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0xec, 0x02, 0x0a, 0x19, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x41, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xad, 0x04, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e,
	0x6b, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x61,
	0x6e, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x1d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd9, 0x04, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0xf1,
	0x02, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x22,
	0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6c, 0x71, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x1a, 0x41, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x18, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x12, 0x3b, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x1a, 0x62, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x79, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x0e,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x15,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x67, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x67, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc8, 0x04, 0x0a,
	0x0f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x75, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2f, 0x0a, 0x05, 0x68, 0x75, 0x70, 0x61, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x75,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x48, 0x75, 0x50, 0x61, 0x69, 0x52, 0x05, 0x68, 0x75, 0x70, 0x61,
	0x69, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x75,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x61, 0x6e, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x75, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x78, 0x75, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x6e, 0x53, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x75,
	0x5f, 0x73, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x75, 0x53, 0x75,
	0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x79, 0x61, 0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x79, 0x61, 0x6b, 0x75, 0x6d, 0x61,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64,
	0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x44, 0x6f, 0x72, 0x61, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x69, 0x44,
	0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x62, 0x65,
	0x69, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62,
	0x61, 0x62, 0x65, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x78, 0x75, 0x61,
	0x6e, 0x5f, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x78, 0x75, 0x61, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x43, 0x0a, 0x05, 0x48, 0x75, 0x50, 0x61, 0x69, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x1a, 0x3d, 0x0a, 0x03, 0x46, 0x61, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x66, 0x61, 0x6e, 0x22, 0xfa, 0x01, 0x0a, 0x15, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x66, 0x75, 0x6c, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x46, 0x75, 0x6c, 0x75, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x75, 0x6a,
	0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x69, 0x73, 0x4c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x69, 0x61, 0x6e, 0x5f, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x61, 0x6e, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12,
	0x23, 0x0a, 0x02, 0x68, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x75, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x02, 0x68, 0x75, 0x22, 0x6e, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x64, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6a, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c,
	0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xe1, 0x09, 0x0a, 0x11, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x4d,
	0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x05, 0x73,
	0x65, 0x61, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x46, 0x0a, 0x0d,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x61, 0x66, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41, 0x46,
	0x4b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x66, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x7c,
	0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x10, 0x6a, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x64,
	0x69, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6a, 0x69, 0x6e, 0x67, 0x73,
	0x75, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x61, 0x6e, 0x6b, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0xc5, 0x01, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x1a, 0xbf, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x31, 0x12, 0x20, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x23, 0x0a,
	0x0d, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x1a, 0x66, 0x0a, 0x07, 0x41, 0x46, 0x4b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x61, 0x6c,
	0x54, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x71,
	0x69, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x6f, 0x71, 0x69, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x22, 0x7d,
	0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb8, 0x10,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x6e, 0x5f, 0x6a, 0x69, 0x66, 0x65, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x61, 0x6e, 0x4a, 0x69, 0x66, 0x65, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x61,
	0x6e, 0x62, 0x69, 0x61, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x74, 0x69, 0x61, 0x6e, 0x62, 0x69, 0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x62, 0x61, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x62, 0x61, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75, 0x5f,
	0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x46,
	0x61, 0x66, 0x75, 0x31, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x61, 0x66, 0x75, 0x5f, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x46, 0x61, 0x66, 0x75, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75, 0x5f, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x66, 0x75, 0x33, 0x12, 0x2b, 0x0a, 0x11,
	0x68, 0x61, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x75,
	0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x68, 0x61, 0x76,
	0x65, 0x5f, 0x71, 0x69, 0x65, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x61, 0x76, 0x65, 0x51, 0x69, 0x65,
	0x73, 0x68, 0x61, 0x6e, 0x67, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0e,
	0x68, 0x61, 0x76, 0x65, 0x5f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x42, 0x69, 0x61, 0x6f, 0x44, 0x6f,
	0x72, 0x61, 0x12, 0x2d, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x6e, 0x67, 0x5f,
	0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x68, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6e, 0x67, 0x42, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72,
	0x61, 0x12, 0x3b, 0x0a, 0x1a, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x69,
	0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x72, 0x61, 0x49,
	0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x20,
	0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x44, 0x6f, 0x72, 0x61,
	0x12, 0x29, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x6c, 0x69,
	0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x76,
	0x65, 0x47, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x68,
	0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x66, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x61, 0x6e, 0x64, 0x61,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x76, 0x65, 0x53, 0x69, 0x66, 0x65,
	0x6e, 0x67, 0x6c, 0x69, 0x61, 0x6e, 0x64, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x61, 0x76, 0x65,
	0x5f, 0x73, 0x69, 0x67, 0x61, 0x6e, 0x67, 0x73, 0x61, 0x6e, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x53, 0x69, 0x67, 0x61, 0x6e, 0x67, 0x73, 0x61,
	0x6e, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x6a, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x68, 0x69, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61,
	0x76, 0x65, 0x53, 0x69, 0x6a, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x68, 0x69, 0x12, 0x2f, 0x0a, 0x13,
	0x68, 0x61, 0x76, 0x65, 0x5f, 0x6a, 0x69, 0x75, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x69, 0x75,
	0x70, 0x61, 0x69, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x76, 0x65, 0x4a,
	0x69, 0x75, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x69, 0x75, 0x70, 0x61, 0x69, 0x12, 0x27, 0x0a,
	0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x68, 0x65, 0x6c, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x53, 0x61, 0x6e, 0x6a,
	0x69, 0x61, 0x68, 0x65, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74,
	0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61,
	0x76, 0x65, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76,
	0x65, 0x5f, 0x68, 0x65, 0x6c, 0x65, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x65,
	0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x61,
	0x76, 0x65, 0x5f, 0x68, 0x65, 0x6c, 0x65, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x65, 0x7a, 0x68,
	0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x12, 0x35, 0x0a, 0x16, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6e, 0x67, 0x70, 0x61, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x68, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6e, 0x67, 0x70,
	0x61, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x13,
	0x68, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x7a, 0x68, 0x6f, 0x6e,
	0x67, 0x6a, 0x75, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x76, 0x65, 0x54,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x79, 0x69, 0x66, 0x61, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x68, 0x61, 0x76, 0x65, 0x59, 0x69, 0x66, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61,
	0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x72, 0x75, 0x78, 0x69, 0x72, 0x75, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x76, 0x65, 0x4e, 0x61, 0x6e, 0x72, 0x75, 0x78, 0x69, 0x72,
	0x75, 0x12, 0x2a, 0x0a, 0x10, 0x6a, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79, 0x75, 0x61,
	0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6a, 0x69, 0x6e,
	0x67, 0x73, 0x75, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x5f, 0x32, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x32, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x5f, 0x33, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x33, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x5f, 0x34, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x34,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x65, 0x74, 0x69, 0x73, 0x68, 0x69,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x65, 0x74,
	0x69, 0x73, 0x68, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x69, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x69, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x73, 0x75, 0x6e, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x76, 0x65, 0x5a, 0x69, 0x6d, 0x6f, 0x73,
	0x75, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x5f, 0x79, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x59,
	0x75, 0x6b, 0x61, 0x6d, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x75, 0x79, 0x69, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x75, 0x79, 0x69, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c,
	0x65, 0x69, 0x6a, 0x69, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x69, 0x6a, 0x69, 0x79, 0x69, 0x6d,
	0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x72, 0x61, 0x33, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x72, 0x61, 0x33, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x78, 0x75, 0x65, 0x7a, 0x68, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x64,
	0x69, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x78, 0x75, 0x65, 0x7a, 0x68, 0x61, 0x6e,
	0x64, 0x61, 0x6f, 0x64, 0x69, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x75, 0x61, 0x6e, 0x73, 0x61, 0x6e,
	0x7a, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x75, 0x61,
	0x6e, 0x73, 0x61, 0x6e, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x75,
	0x61, 0x6e, 0x6d, 0x61, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x75, 0x61,
	0x6e, 0x6d, 0x61, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x79, 0x61, 0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x18, 0x3e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x59, 0x61, 0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x12, 0x3a, 0x0a, 0x19, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x79,
	0x61, 0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x59, 0x61,
	0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x73, 0x68, 0x69, 0x74, 0x69, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x74, 0x69, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x74, 0x73, 0x75, 0x6d, 0x6f, 0x5f, 0x6c, 0x69, 0x71, 0x69,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f,
	0x6e, 0x74, 0x73, 0x75, 0x6d, 0x6f, 0x4c, 0x69, 0x71, 0x69, 0x12, 0x3c, 0x0a, 0x1b, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x6e,
	0x64, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x75, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x75, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x67, 0x75, 0x6f, 0x73, 0x68,
	0x69, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x6e, 0x67, 0x61, 0x6e, 0x67, 0x47, 0x75, 0x6f, 0x73, 0x68, 0x69, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6e, 0x68, 0x65, 0x18, 0x44, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6e, 0x68, 0x65, 0x12,
	0x41, 0x0a, 0x1d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6f, 0x70, 0x61, 0x69,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x45, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61,
	0x6f, 0x70, 0x61, 0x69, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x61, 0x6e, 0x66, 0x75, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x66, 0x61, 0x6e, 0x66, 0x75, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x32,
	0x12, 0x32, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x56,
	0x32, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x58, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61,
	0x78, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xf5, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x64, 0x75, 0x61, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x68, 0x69, 0x64, 0x75, 0x61, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x64, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x52, 0x0c, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x22, 0xfa, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x65, 0x79, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x76, 0x65, 0x79, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x69,
	0x6d, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x75, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x66, 0x75, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64,
	0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x5a, 0x69, 0x6d, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x69, 0x6d, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x75, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66,
	0x75, 0x5a, 0x69, 0x6d, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x2b,
	0x0a, 0x05, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x69, 0x75, 0x6d, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x69, 0x75,
	0x6d, 0x61, 0x6e, 0x22, 0x87, 0x05, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x17,
	0x0a, 0x07, 0x68, 0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x75, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a,
	0x69, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x7a, 0x69, 0x6d, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x71, 0x69, 0x6e, 0x6a, 0x69, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x71, 0x69, 0x6e, 0x6a, 0x69, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x6f, 0x72, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x44, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x79, 0x69, 0x6d, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x79, 0x69, 0x6d,
	0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x46, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x66, 0x75, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x66, 0x75, 0x12, 0x24,
	0x0a, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x5f, 0x71, 0x69, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5a, 0x69, 0x6d,
	0x6f, 0x51, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x7a, 0x69,
	0x6d, 0x6f, 0x5f, 0x78, 0x69, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5a, 0x69, 0x6d, 0x6f, 0x58, 0x69, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x73, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x53, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x20, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x6a, 0x75, 0x65, 0x5f, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4a, 0x75, 0x65, 0x5a, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x78, 0x75, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x78, 0x75, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x69, 0x61, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x61, 0x6e, 0x1a, 0x31, 0x0a, 0x0d, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x46, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a,
	0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48,
	0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x39,
	0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x75, 0x6a, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6c, 0x0a, 0x10, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a,
	0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x6e, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f,
	0x54, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x71, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x73, 0x5f, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x69, 0x73, 0x57, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x7a, 0x68,
	0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x5a, 0x68, 0x65, 0x6e, 0x54, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x75, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x78, 0x75, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x75, 0x0a, 0x0e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x70, 0x61, 0x69, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x72,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x72, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x78, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x78, 0x75,
	0x6e, 0x22, 0x71, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x61, 0x42, 0x65, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x7a,
	0x69, 0x5f, 0x6d, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x5a, 0x69,
	0x4d, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x43, 0x68, 0x6f, 0x6e, 0x67, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x42, 0x65, 0x69, 0x22, 0x70, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65,
	0x69, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x72, 0x61,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f,
	0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x5f, 0x64, 0x6f, 0x72,
	0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72,
	0x44, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x69,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x65,
	0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xea, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x6a, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x62, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x31,
	0x0a, 0x0a, 0x6c, 0x69, 0x71, 0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69,
	0x71, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c, 0x69, 0x71, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x31, 0x0a, 0x0a, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x47, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x61, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x70, 0x65, 0x69, 0x70, 0x61, 0x69, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x69, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x70, 0x65, 0x69, 0x70, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x34, 0x0a,
	0x0b, 0x62, 0x61, 0x62, 0x61, 0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x61,
	0x42, 0x65, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x61, 0x62, 0x61, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x68, 0x75,
	0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x6c, 0x69, 0x75, 0x6a, 0x75,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x75, 0x6a, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x6e,
	0x6f, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x54,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0b, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x55, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x42, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62,
	0x75, 0x66, 0x66, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xfd, 0x04, 0x0a, 0x17,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x62, 0x61, 0x67, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x42, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x07, 0x62, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x48, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x64,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x84, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0x5a, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x2e, 0x0a, 0x0d, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x2e, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xdd, 0x04, 0x0a, 0x18,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x52, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x59, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x12, 0x40, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x53, 0x6b,
	0x69, 0x6e, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6b, 0x69,
	0x6e, 0x73, 0x12, 0x59, 0x0a, 0x11, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x10, 0x68, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a,
	0x15, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x2c, 0x0a, 0x0d, 0x53, 0x6b, 0x69,
	0x6e, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b,
	0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x6b, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x32, 0x0a, 0x0f, 0x48, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0a, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb6, 0x03, 0x0a, 0x11,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x4d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x49, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d,
	0x61, 0x69, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0d, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xe7, 0x01, 0x0a, 0x0c, 0x4d,
	0x61, 0x69, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xed, 0x02, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x5b, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0d,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4b, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x38, 0x0a, 0x15, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x49, 0x64, 0x1a, 0x2e, 0x0a, 0x12, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd8, 0x06, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x69, 0x73, 0x63, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x0a,
	0x66, 0x61, 0x69, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x46, 0x61, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x66, 0x61, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x11, 0x76, 0x69,
	0x70, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x69, 0x73, 0x63, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x49, 0x50, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0f, 0x76, 0x69, 0x70, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x47, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x69, 0x73, 0x63, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x49, 0x50, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x29,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x63,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x49, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x69, 0x73, 0x63, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x1a, 0x36, 0x0a, 0x18, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x49, 0x50, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x64, 0x1a, 0xa6, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x5f, 0x0a, 0x1a,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x63, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x1a, 0x1e, 0x0a,
	0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x49, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x69, 0x70, 0x1a, 0x50, 0x0a,
	0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x3d, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xce,
	0x02, 0x0a, 0x05, 0x41, 0x63, 0x63, 0x53, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x40, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0b, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x69,
	0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x63, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x04, 0x6d, 0x69, 0x73, 0x63, 0x12, 0x36, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x58, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x53, 0x6e, 0x44, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x72, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x3c, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x60, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22,
	0x3a, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xe4, 0x01, 0x0a, 0x10,
	0x52, 0x65, 0x71, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x22, 0x33, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb6, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6c, 0x71, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x67,
	0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x22, 0xb8, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x17, 0x68, 0x61, 0x73, 0x5f, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x68, 0x61, 0x73, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x41, 0x75, 0x74, 0x68, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xac, 0x02, 0x0a, 0x0d,
	0x52, 0x65, 0x71, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6c, 0x71, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x67, 0x65, 0x6e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x46, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x18, 0x52, 0x65,
	0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x4a, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5c,
	0x0a, 0x16, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x66, 0x69, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46,
	0x6f, 0x72, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x88, 0x01, 0x0a,
	0x12, 0x52, 0x65, 0x71, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x69, 0x6e, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x55, 0x6e,
	0x62, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x22, 0x35, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x54, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x42,
	0x69, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x7c,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c,
	0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7d, 0x0a, 0x0d,
	0x52, 0x65, 0x71, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x53, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x47, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x52, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x68, 0x61, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb5, 0x02,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x75,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65,
	0x53, 0x74, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x32, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa9, 0x03, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x3c,
	0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10,
	0x67, 0x65, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x2f, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x44, 0x4d, 0x4d, 0x50,
	0x72, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x22, 0x4f, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x44, 0x4d, 0x4d,
	0x50, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x0b, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x22, 0x2c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x48, 0x65, 0x61, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x6e, 0x6f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42,
	0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22,
	0x66, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x34, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a,
	0x0e, 0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x76,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x25, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x66, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x53, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x4f,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x2f, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x22, 0x4c, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1c, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0xa9,
	0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x4e, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x5a, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x4c, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x2d, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x71,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x2c, 0x0a, 0x0b, 0x52, 0x65, 0x71,
	0x52, 0x6f, 0x6f, 0x6d, 0x4b, 0x69, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x17, 0x52, 0x65, 0x71,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3f, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x56, 0x32, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xe1, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x4e, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x51, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x22, 0x5b, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x35, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x53,
	0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x06,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x60, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x04,
	0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x22,
	0x53, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa9, 0x01,
	0x0a, 0x1a, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a,
	0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x33, 0x0a, 0x14, 0x52, 0x65, 0x71,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x75, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x68,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x71,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3c,
	0x0a, 0x19, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x32, 0x0a, 0x1c,
	0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x22, 0x3f, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x53, 0x0a, 0x23, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x46, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x29,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x52,
	0x61, 0x6e, 0x6b, 0x1a, 0x4d, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x31, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xe8, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x6c, 0x66, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x65, 0x6c, 0x66, 0x52, 0x61, 0x6e, 0x6b, 0x1a, 0x57, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x57, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x4d, 0x75, 0x74, 0x69, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x4d, 0x75, 0x74, 0x69, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x75, 0x74, 0x69,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x3b, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x3b, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x0d,
	0x52, 0x65, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24,
	0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6c, 0x71, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x1a, 0x4b, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x22, 0x2e, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x56, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0e,
	0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x14, 0x52,
	0x65, 0x71, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x63, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x42, 0x61,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x6c, 0x71, 0x2e, 0x42, 0x61, 0x67, 0x52, 0x03, 0x62, 0x61,
	0x67, 0x22, 0x28, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x42, 0x61, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x17,
	0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0x64, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x4f, 0x70, 0x65,
	0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x9b,
	0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x0d, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x0b,
	0x52, 0x65, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x05,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c, 0x71,
	0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x26, 0x0a, 0x0b,
	0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x2c,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x54, 0x61, 0x6b, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x20,
	0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x20, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x38, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x44, 0x0a, 0x1b, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x78, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x38, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x17, 0x52,
	0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x1a, 0x35, 0x0a, 0x0f, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22,
	0x91, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x4e, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x42,
	0x75, 0x79, 0x53, 0x68, 0x69, 0x4c, 0x69, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a,
	0x14, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x01,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2e, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x2f, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x13,
	0x52, 0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3e,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x53,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x67, 0x61, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x47, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x5f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x13, 0x52, 0x65, 0x71,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x47,
	0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x55, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28,
	0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x55,
	0x73, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22,
	0x61, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x76, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x52, 0x08,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x77, 0x5f,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6e, 0x6f, 0x77, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x22, 0x5d, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x4c, 0x65, 0x66, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xed, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x4c, 0x65, 0x66, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x69, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x6f, 0x77, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x64, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x22, 0x2e, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x61, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x3e,
	0x0a, 0x17, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x32,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x52, 0x65,
	0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x16, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x48, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2f, 0x0a,
	0x14, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x3d,
	0x0a, 0x10, 0x52, 0x65, 0x71, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x30, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x3b, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x1a,
	0x52, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6c, 0x71, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x15,
	0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0x53, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x53, 0x6f, 0x6c, 0x76, 0x65,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e,
	0x61, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x14, 0x69, 0x6e, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69,
	0x6e, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x33, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xca, 0x01,
	0x0a, 0x1a, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x7d, 0x0a, 0x1a, 0x52, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x52, 0x65,
	0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x70, 0x12,
	0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0xec, 0x02, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x61, 0x0a, 0x15, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x12, 0x63, 0x61, 0x6c, 0x6c, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x1a, 0xcc, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x6c, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x70, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x22, 0xf0, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x56, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x22, 0xa9, 0x01,
	0x0a, 0x18, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x53, 0x63, 0x61, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x94, 0x01, 0x0a, 0x18, 0x52, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x53, 0x63, 0x61,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xa8, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x59, 0x0a, 0x17, 0x52,
	0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x41, 0x70,
	0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x69,
	0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x22, 0xed, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x58, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4a, 0x50, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xe9, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50,
	0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x54, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x50, 0x61, 0x79, 0x70, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x50, 0x41, 0x75, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x50, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x41, 0x75, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe9, 0x01, 0x0a,
	0x16, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x44, 0x6f, 0x63, 0x6f,
	0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x44, 0x6f, 0x63, 0x6f, 0x6d, 0x6f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xeb,
	0x01, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x57, 0x65,
	0x62, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x56, 0x0a, 0x18,
	0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x57, 0x65, 0x62, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4a, 0x50, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32,
	0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x22, 0x56, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a,
	0x50, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x16, 0x52,
	0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x50, 0x61, 0x79, 0x50, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4a, 0x50, 0x50, 0x61, 0x79, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x1f,
	0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4a, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1f, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x4a, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc4, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x59, 0x6f, 0x73, 0x74, 0x61,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x22, 0x52, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x59, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x71,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x4e, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x13, 0x52,
	0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x4a, 0x43, 0x42, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x4e, 0x4a, 0x43, 0x42, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x58, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x4e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xe7, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e,
	0x56, 0x69, 0x73, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x52, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x56, 0x69, 0x73, 0x61, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe9,
	0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x41, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xe9, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52,
	0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x54, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x50, 0x61, 0x79, 0x70, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4b, 0x52, 0x4a, 0x43, 0x42, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x4a, 0x43, 0x42, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xed,
	0x01, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x58,
	0x0a, 0x1a, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x56, 0x69, 0x73, 0x61, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32,
	0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x22, 0x52, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x52, 0x56, 0x69, 0x73, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32,
	0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x52, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x71,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x4d, 0x4d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x90, 0x02,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6d, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x6d, 0x6d, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6d, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x6d, 0x6d, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6d, 0x6d, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x22, 0xe9, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x41,
	0x50, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x62,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x4f, 0x0a, 0x11,
	0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x41, 0x50, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9d, 0x01,
	0x0a, 0x17, 0x52, 0x65, 0x71, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x41, 0x50, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a,
	0x17, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x41, 0x50, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xff, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x7d, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x52, 0x65,
	0x71, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x6f, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x14, 0x52,
	0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x64, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xf0, 0x01, 0x0a,
	0x14, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x58, 0x73, 0x6f, 0x6c, 0x6c, 0x61,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x62, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0x64, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x58, 0x73, 0x6f, 0x6c,
	0x6c, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x68, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x41, 0x41, 0x33, 0x32, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6e,
	0x73, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x73, 0x61,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x73, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x73, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x5e, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x68, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0xb5, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x74, 0x68, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x74,
	0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x1a, 0x3d, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x42, 0x75,
	0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x65, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x97, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68,
	0x65, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x74,
	0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66,
	0x61, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x12, 0x52, 0x65, 0x73,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61,
	0x79, 0x73, 0x22, 0x36, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x44, 0x6f, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x43, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9e, 0x03, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x6b, 0x69, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64,
	0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x2b,
	0x0a, 0x11, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x68, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x52,
	0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x3b, 0x0a, 0x16, 0x52, 0x65, 0x71,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x22, 0x68, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x22, 0x36, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x15, 0x52, 0x65, 0x73,
	0x53, 0x65, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x22, 0xa9, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74,
	0x54, 0x6f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x05, 0x67, 0x69, 0x66, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x6f,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x52, 0x05,
	0x67, 0x69, 0x66, 0x74, 0x73, 0x1a, 0x35, 0x0a, 0x04, 0x47, 0x69, 0x66, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x22,
	0x70, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2a,
	0x0a, 0x05, 0x73, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x73, 0x65, 0x6c, 0x6c, 0x73, 0x1a, 0x35, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x1a, 0x30, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x53, 0x61, 0x76, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x69, 0x73, 0x55, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x55, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x22, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x41, 0x6c, 0x6c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0x43, 0x0a, 0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x38, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x13, 0x52, 0x65, 0x73,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x6e,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x28,
	0x0a, 0x0c, 0x52, 0x65, 0x71, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x59, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x53,
	0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xdb, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x68, 0x6f, 0x70, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a,
	0x09, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x68, 0x6f, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x1a, 0x2c, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x5b, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x68, 0x6f, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x40,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x5a, 0x48, 0x50, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x30, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x50, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x7c, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x50, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x56, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x68, 0x5a, 0x48, 0x50, 0x53, 0x68,
	0x6f, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0x53, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x03, 0x7a, 0x68, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71,
	0x2e, 0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x03, 0x7a, 0x68, 0x70, 0x22, 0x76, 0x0a,
	0x12, 0x52, 0x65, 0x73, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x11, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3b, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x64, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x65, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2e, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x48, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x59, 0x0a, 0x12, 0x52, 0x65, 0x73,
	0x4d, 0x6f, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x4d, 0x69, 0x73, 0x63,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x74,
	0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x4d, 0x69, 0x73, 0x63, 0x2e, 0x4d, 0x69, 0x73, 0x63, 0x46, 0x61, 0x69, 0x74, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x66, 0x61, 0x69, 0x74, 0x68, 0x73, 0x1a, 0x40, 0x0a, 0x0d, 0x4d,
	0x69, 0x73, 0x63, 0x46, 0x61, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x61, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x66, 0x61, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x32, 0x0a,
	0x12, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x67, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x49, 0x44, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x4a, 0x0a, 0x13, 0x52, 0x65,
	0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x22, 0x5b, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x56, 0x69, 0x70,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0f, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x69, 0x70, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x73, 0x22, 0xc3, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x29,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x31, 0x38, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x7e, 0x0a, 0x09, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x10, 0x52, 0x65, 0x71,
	0x47, 0x61, 0x69, 0x6e, 0x56, 0x69, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x4b, 0x0a, 0x1d, 0x52, 0x65,
	0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c,
	0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x42, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x23, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07,
	0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x40,
	0x0a, 0x21, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x22, 0x6b, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x38, 0x0a,
	0x19, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x42, 0x0a,
	0x23, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x45,
	0x0a, 0x24, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x24, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x40, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x41, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x6c, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0x3f, 0x0a, 0x20, 0x52, 0x65, 0x71, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x22, 0x66, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x2d, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x53,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x25, 0x52, 0x65, 0x71, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x77, 0x0a,
	0x25, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x08, 0x6c, 0x69,
	0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x24, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x97, 0x01, 0x0a, 0x24, 0x52,
	0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22,
	0x60, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0xb5, 0x10, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a,
	0x10, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0f, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x12,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x10, 0x74, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x16,
	0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14,
	0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x17, 0x66, 0x6c, 0x69, 0x70, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x14, 0x66, 0x6c, 0x69, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4f,
	0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x51, 0x0a, 0x0c, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x4b, 0x0a, 0x19, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x16, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4b, 0x0a, 0x19, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x16, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0d,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x68, 0x65, 0x73, 0x74, 0x55, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x55, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x08, 0x73, 0x6e, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53,
	0x4e, 0x53, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x73, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x31, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x70, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x50, 0x47, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x07, 0x72, 0x70, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34,
	0x0a, 0x0a, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x41, 0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x61, 0x72, 0x65, 0x6e, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x66,
	0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x1a, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71,
	0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x17, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0c, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x31,
	0x0a, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53,
	0x70, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x70, 0x6f, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x44, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47,
	0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47,
	0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0a, 0x67, 0x61, 0x63, 0x68, 0x61, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x61, 0x63, 0x68, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x67, 0x61, 0x63, 0x68, 0x61, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x84, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x4e, 0x0a, 0x08, 0x42, 0x75, 0x66, 0x66, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x1a, 0x88, 0x02, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x61,
	0x6e, 0x6b, 0x53, 0x61, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x62, 0x75, 0x66, 0x66,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x75, 0x66,
	0x66, 0x1a, 0x33, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x73, 0x74, 0x55, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x71, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x4e, 0x53, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x04, 0x62, 0x6c, 0x6f,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x4e, 0x53,
	0x42, 0x6c, 0x6f, 0x67, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69,
	0x6b, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x6c, 0x69,
	0x6b, 0x65, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x4e, 0x53, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x36, 0x0a, 0x07, 0x53, 0x4e, 0x53,
	0x42, 0x6c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x39, 0x0a, 0x08, 0x53, 0x4e, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x17,
	0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x74,
	0x0a, 0x17, 0x52, 0x65, 0x73, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x0e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x22, 0x52, 0x65, 0x71, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x1a, 0x52,
	0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x46, 0x6c, 0x69, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x22, 0x53, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4d, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0x3b, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x65,
	0x0a, 0x25, 0x52, 0x65, 0x71, 0x47, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x1f, 0x52, 0x65, 0x71, 0x47, 0x61, 0x69, 0x6e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x45, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x61, 0x6e, 0x6b, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0xa1, 0x02, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x1a, 0x77, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x16, 0x52, 0x65,
	0x71, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x12,
	0x52, 0x65, 0x71, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f,
	0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0xcf, 0x05, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d,
	0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x70, 0x61,
	0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x76,
	0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x64, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x33, 0x0a, 0x04,
	0x62, 0x75, 0x66, 0x66, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f,
	0x76, 0x65, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x75, 0x66,
	0x66, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x53, 0x61, 0x76, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x73, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x62, 0x61, 0x6e, 0x6b, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x7a, 0x0a, 0x0a,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x7b, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61,
	0x6e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x08, 0x42, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x4c, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x52, 0x69, 0x63, 0x68,
	0x6d, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x22, 0x36, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61,
	0x6e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x13,
	0x52, 0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d,
	0x61, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x30, 0x0a, 0x08,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37,
	0x0a, 0x18, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4e, 0x0a, 0x19, 0x52, 0x65, 0x73,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x65, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x75, 0x66, 0x66, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a,
	0x09, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x75,
	0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x31, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x75, 0x66, 0x66, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75,
	0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x66,
	0x66, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x17, 0x52,
	0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0x42, 0x0a, 0x1f, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x3c, 0x0a, 0x19, 0x52, 0x65, 0x71,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x47, 0x69, 0x66, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xb3, 0x02, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x47, 0x69, 0x66, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x67,
	0x69, 0x66, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x47, 0x69, 0x66, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x47, 0x69, 0x66, 0x74, 0x1a, 0x77, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe6, 0x01,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x35, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x91, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0d, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x1d, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xdd, 0x02,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0c, 0x62, 0x75, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x12, 0x46, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x75,
	0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x71, 0x75, 0x69, 0x74, 0x1a, 0x3d,
	0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x67, 0x0a,
	0x14, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x34, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x64, 0x22, 0x95, 0x02, 0x0a,
	0x16, 0x52, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5c, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x13, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x7c, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x1d, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x3f, 0x0a, 0x06, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x42, 0x75, 0x79, 0x49, 0x6e, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xc4, 0x01,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x52,
	0x61, 0x6e, 0x6b, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x53, 0x65, 0x6c, 0x66, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x52, 0x61, 0x74, 0x65, 0x22,
	0x1c, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x53, 0x4e, 0x53, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x53, 0x4e, 0x53, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x0b,
	0x73, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x4e, 0x53, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x0a,
	0x73, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x1d, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x4e, 0x53, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x4e, 0x53, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x09, 0x73, 0x6e, 0x73,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c,
	0x71, 0x2e, 0x53, 0x4e, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08, 0x73, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x6b, 0x65, 0x53,
	0x4e, 0x53, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x48, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x4e, 0x53,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x22, 0x4e, 0x0a, 0x0a,
	0x52, 0x65, 0x71, 0x44, 0x69, 0x67, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x0a,
	0x52, 0x65, 0x73, 0x44, 0x69, 0x67, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x03, 0x6d,
	0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x26, 0x0a,
	0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xb2, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x1a, 0x3b, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x38, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xae,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x3b, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xf6, 0x04, 0x0a,
	0x18, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x0d, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x50, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x50, 0x47, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x50, 0x47, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x86, 0x03, 0x0a,
	0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x75, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x6a, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x65, 0x61, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x74, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6b,
	0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6b, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6c, 0x75, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x73, 0x4c, 0x75, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65,
	0x78, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69,
	0x73, 0x5a, 0x69, 0x6d, 0x6f, 0x22, 0xc6, 0x04, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x56, 0x32, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x32, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x32, 0x52, 0x0c, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x50, 0x47, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x50, 0x47, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x32, 0x52, 0x12, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0xef, 0x01, 0x0a,
	0x0e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x32, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x75, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6a, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x04,
	0x62, 0x75, 0x66, 0x66, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x62, 0x75, 0x66, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x34,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x41, 0x72, 0x65, 0x6e, 0x61,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x32, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x52, 0x50, 0x47, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22,
	0x57, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x50, 0x47,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x71, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x50, 0x47, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x52, 0x50, 0x47, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x32, 0x0a,
	0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x25, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x42, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x42, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x1a, 0x52, 0x65, 0x71,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0xb2, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x1a, 0x32, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x46, 0x65, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x46, 0x65, 0x65, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x46, 0x65, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x65, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x32, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x1b, 0x52, 0x65, 0x71,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x69, 0x66, 0x74,
	0x54, 0x6f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x66, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x47, 0x69, 0x66, 0x74, 0x54, 0x6f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x69,
	0x66, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x69, 0x66,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x64, 0x0a, 0x1e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xda, 0x02, 0x0a, 0x1e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69,
	0x66, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a,
	0x39, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x98, 0x01, 0x0a, 0x0a, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e,
	0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x60,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0x37, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x6f, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x46, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x56,
	0x6f, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x0c,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x51, 0x0a,
	0x15, 0x52, 0x65, 0x71, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x22, 0x3b, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0xb6, 0x01,
	0x0a, 0x1c, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x41, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x32, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x42,
	0x69, 0x6e, 0x64, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x49, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65,
	0x71, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x1a, 0x45, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xd3, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x4f, 0x0a,
	0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x5a,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x0c, 0x52, 0x65,
	0x71, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x63, 0x68, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xe4, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x63,
	0x68, 0x61, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x0f, 0x73, 0x70,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x73, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x4a, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x22, 0x55, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f,
	0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x08, 0x4d, 0x75,
	0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc1, 0x01,
	0x0a, 0x0b, 0x43, 0x68, 0x75, 0x61, 0x6e, 0x6d, 0x61, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x12, 0x31,
	0x0a, 0x0d, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x30, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x77, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70,
	0x65, 0x6c, 0x6c, 0x22, 0x30, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x65, 0x77,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x22, 0xc9, 0x04, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x65, 0x77, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x6a, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6a, 0x75, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f, 0x72, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c,
	0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70,
	0x61, 0x69, 0x73, 0x30, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e,
	0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x30, 0x12, 0x2d, 0x0a,
	0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x12, 0x0e, 0x0a, 0x02,
	0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x64, 0x35, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x26,
	0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x2d, 0x0a, 0x05,
	0x6f, 0x70, 0x65, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71,
	0x2e, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d,
	0x75, 0x79, 0x75, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d,
	0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6a, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x22, 0xf7, 0x05, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x65, 0x77, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6a, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x6f, 0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f, 0x72, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69,
	0x62, 0x61, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69,
	0x62, 0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x30, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x30, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69,
	0x6c, 0x65, 0x73, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69,
	0x6c, 0x65, 0x73, 0x33, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x52, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x73, 0x68, 0x61, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x69, 0x73, 0x68, 0x61, 0x6e, 0x12,
	0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x2d, 0x0a,
	0x05, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c,
	0x71, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64,
	0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x04,
	0x6d, 0x75, 0x79, 0x75, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e,
	0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x39,
	0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x13, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6a, 0x75, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x1a, 0x4c, 0x0a,
	0x07, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x09,
	0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x22, 0xaf, 0x04, 0x0a, 0x0c,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x6a, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x62, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x74, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x68, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c,
	0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0xfc,
	0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x71, 0x69, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c,
	0x69, 0x71, 0x69, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6c, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69,
	0x6c, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x69, 0x70, 0x61, 0x69, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x71, 0x69, 0x70, 0x61, 0x69, 0x73, 0x12, 0x3a, 0x0a,
	0x05, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c,
	0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x46, 0x75,
	0x6c, 0x75, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x42, 0x0a, 0x04, 0x46, 0x75, 0x6c,
	0x75, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x4d, 0x0a,
	0x0f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a,
	0x11, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x62, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62,
	0x61, 0x72, 0x22, 0xaa, 0x02, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x75,
	0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x75, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x80, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x69, 0x50, 0x65, 0x6e, 0x67, 0x47,
	0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x75,
	0x73, 0x65, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x79, 0x65, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x65, 0x6d, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x6c, 0x66, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x70, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x68, 0x69, 0x50, 0x65, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x52, 0x03, 0x63, 0x70, 0x67, 0x12,
	0x27, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xd3, 0x01, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xa3, 0x01, 0x0a, 0x15, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x3c, 0x0a,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x22, 0x6b, 0x0a, 0x0b, 0x4c, 0x69, 0x51, 0x69, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x22, 0x3f, 0x0a, 0x07, 0x46, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xf8, 0x04, 0x0a, 0x08, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x75, 0x5f, 0x74,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x75, 0x54, 0x69, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x7a, 0x69, 0x6d, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x69, 0x6e,
	0x6a, 0x69, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x71, 0x69, 0x6e, 0x6a, 0x69,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x69, 0x44, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x46, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x66,
	0x61, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x75, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x66, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x6f, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x5f, 0x71, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5a, 0x69, 0x6d, 0x6f, 0x51, 0x69, 0x6e, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x5f, 0x78, 0x69, 0x61,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5a, 0x69,
	0x6d, 0x6f, 0x58, 0x69, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x64, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6f, 0x70, 0x61, 0x69,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x61, 0x6f, 0x70, 0x61, 0x69, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x61, 0x6f, 0x70, 0x61, 0x69, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x61, 0x6f, 0x70, 0x61, 0x69, 0x53, 0x65, 0x61, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x61, 0x6e, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x74, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x22, 0xf4,
	0x01, 0x0a, 0x0b, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x65, 0x79, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x76, 0x65, 0x79, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x69,
	0x6d, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x75, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x66, 0x75, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64,
	0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x5a, 0x69, 0x6d, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x69, 0x6d, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x75, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66,
	0x75, 0x5a, 0x69, 0x6d, 0x6f, 0x22, 0x6b, 0x0a, 0x12, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e,
	0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x21, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61,
	0x69, 0x73, 0x30, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x54,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x30, 0x12, 0x2d, 0x0a, 0x09,
	0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x12, 0x37, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xec, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x61, 0x70, 0x2e, 0x54, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x69, 0x52, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x12, 0x37, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x4c, 0x0a, 0x07, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73,
	0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61,
	0x69, 0x73, 0x31, 0x22, 0xed, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x54, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6e, 0x54,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x75, 0x74,
	0x5f, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75,
	0x74, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0d, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x6f, 0x72, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73,
	0x30, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x69, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x30, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x69,
	0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c,
	0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xa5, 0x04, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x36,
	0x0a, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x52, 0x07, 0x74,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x12, 0x4b, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69,
	0x6c, 0x65, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4c, 0x0a, 0x07, 0x54, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x70,
	0x61, 0x69, 0x73, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e,
	0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x69, 0x6e,
	0x67, 0x70, 0x61, 0x69, 0x73, 0x31, 0x1a, 0x92, 0x01, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x54, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6e, 0x54, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x54, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x75,
	0x74, 0x54, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xba, 0x02, 0x0a, 0x10,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x71, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x71, 0x69, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x77, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x57, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x71, 0x69,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61,
	0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x08, 0x74,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xbc, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x71, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x77, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x57, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x12,
	0x39, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x69,
	0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c,
	0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x7a,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x7a,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x6e, 0x76, 0x65, 0x69, 0x6c, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69,
	0x62, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69,
	0x62, 0x61, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01,
	0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x6e, 0x76, 0x65, 0x69, 0x6c, 0x54, 0x69,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6c, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x7a,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x7a,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70,
	0x61, 0x69, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x69, 0x6e, 0x67,
	0x70, 0x61, 0x69, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x0e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69,
	0x62, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69,
	0x62, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x2b, 0x0a, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72,
	0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xae, 0x03, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x71, 0x69, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x77, 0x6c, 0x69,
	0x71, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x57, 0x6c, 0x69, 0x71,
	0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75,
	0x79, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61,
	0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61,
	0x6e, 0x67, 0x22, 0xe0, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x71, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x71,
	0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x08, 0x52, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x74,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x77, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x57, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x39, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6d, 0x75, 0x79, 0x75, 0x22, 0x84, 0x03, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x54,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x4c, 0x69, 0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x69, 0x6e, 0x67,
	0x70, 0x61, 0x69, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e,
	0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6d,
	0x75, 0x79, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d,
	0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xd0, 0x02, 0x0a,
	0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x74, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6c, 0x71, 0x2e, 0x4c, 0x69, 0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x04,
	0x6c, 0x69, 0x71, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x7a, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c,
	0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0xc6, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x77,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x66,
	0x74, 0x54, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x4c, 0x69, 0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x22, 0xc6, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x77,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6c,
	0x65, 0x66, 0x74, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04,
	0x6c, 0x69, 0x71, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e,
	0x4c, 0x69, 0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x71,
	0x69, 0x22, 0x8c, 0x03, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x50,
	0x65, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x6f, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x72, 0x6f, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x6c,
	0x69, 0x71, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x4c,
	0x69, 0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69,
	0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x7a, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x69, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75,
	0x79, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75,
	0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67,
	0x22, 0xd8, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x69, 0x50, 0x65,
	0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x6f, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x72, 0x6f, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69,
	0x71, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x4c, 0x69,
	0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x12,
	0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x08, 0x52, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x10, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2e, 0x0a, 0x0a, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x75, 0x61, 0x6e, 0x6d, 0x61,
	0x47, 0x61, 0x6e, 0x67, 0x52, 0x09, 0x67, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x42, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x75,
	0x61, 0x6e, 0x6d, 0x61, 0x47, 0x61, 0x6e, 0x67, 0x52, 0x09, 0x67, 0x61, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x67, 0x61,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x75, 0x61, 0x6e, 0x6d, 0x61, 0x47, 0x61, 0x6e, 0x67, 0x52,
	0x09, 0x67, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e,
	0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x75, 0x61, 0x6e,
	0x6d, 0x61, 0x47, 0x61, 0x6e, 0x67, 0x52, 0x09, 0x67, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x8d, 0x02, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x47, 0x61,
	0x6e, 0x67, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x12,
	0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79,
	0x75, 0x22, 0xc6, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x6e, 0x47, 0x61,
	0x6e, 0x67, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x22, 0x90, 0x02, 0x0a, 0x0b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x42, 0x65, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x37,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x69, 0x6e,
	0x67, 0x70, 0x61, 0x69, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71,
	0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x69,
	0x6e, 0x67, 0x70, 0x61, 0x69, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6d,
	0x75, 0x79, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d,
	0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x22, 0xc9, 0x01,
	0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x61, 0x42, 0x65, 0x69, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x22, 0xa4, 0x02, 0x0a, 0x0a, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x68, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x09, 0x6f, 0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6f, 0x70,
	0x61, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x61, 0x6f, 0x70, 0x61, 0x69,
	0x22, 0xa4, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x12,
	0x22, 0x0a, 0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x68, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x61, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07,
	0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x20, 0x0a,
	0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71,
	0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x61, 0x6f, 0x70, 0x61, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x62, 0x61, 0x6f, 0x70, 0x61, 0x69, 0x22, 0x92, 0x02, 0x0a, 0x10, 0x48, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x58, 0x75, 0x65, 0x5a, 0x68, 0x61, 0x6e, 0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x75, 0x5f, 0x74, 0x69,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x75, 0x54, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x7a, 0x69, 0x6d, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6c, 0x71, 0x2e, 0x46, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x66, 0x61, 0x6e,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x66,
	0x75, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x95, 0x02, 0x0a,
	0x14, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x75, 0x6c, 0x65, 0x58, 0x75, 0x65, 0x5a, 0x68,
	0x61, 0x6e, 0x4d, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x58, 0x75, 0x65, 0x5a, 0x68, 0x61, 0x6e, 0x4d, 0x69, 0x64, 0x52, 0x05, 0x68, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x6f, 0x72, 0x61, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61,
	0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d,
	0x75, 0x79, 0x75, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x4c, 0x69, 0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x7a, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x95, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48,
	0x75, 0x6c, 0x65, 0x58, 0x75, 0x65, 0x5a, 0x68, 0x61, 0x6e, 0x4d, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x71, 0x2e, 0x48, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x58, 0x75, 0x65, 0x5a, 0x68, 0x61, 0x6e, 0x4d,
	0x69, 0x64, 0x52, 0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6f,
	0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79,
	0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x23, 0x0a, 0x04, 0x6c,
	0x69, 0x71, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x4c,
	0x69, 0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69,
	0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x08, 0x52, 0x08, 0x7a, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xd1, 0x02, 0x0a,
	0x14, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x75, 0x6c, 0x65, 0x58, 0x75, 0x65, 0x5a, 0x68,
	0x61, 0x6e, 0x45, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x58, 0x75, 0x65, 0x5a, 0x68, 0x61, 0x6e, 0x4d, 0x69, 0x64, 0x52, 0x05, 0x68, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x25,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d,
	0x75, 0x79, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d,
	0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x31, 0x0a,
	0x0d, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x22, 0xd1, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x58,
	0x75, 0x65, 0x5a, 0x68, 0x61, 0x6e, 0x45, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x68, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x58, 0x75, 0x65, 0x5a, 0x68, 0x61, 0x6e, 0x4d, 0x69, 0x64, 0x52, 0x05,
	0x68, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72,
	0x61, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12,
	0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79,
	0x75, 0x12, 0x31, 0x0a, 0x0d, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0x94, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x75, 0x4a, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x71,
	0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x4c, 0x69, 0x51,
	0x69, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x26,
	0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x31, 0x0a, 0x0d, 0x68, 0x75, 0x6c, 0x65,
	0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x68,
	0x75, 0x6c, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x94, 0x02, 0x0a, 0x0b,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x75, 0x4a, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6c, 0x71, 0x2e, 0x4c, 0x69, 0x51, 0x69, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x04, 0x6c, 0x69, 0x71, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x6c, 0x6c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71,
	0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12,
	0x31, 0x0a, 0x0d, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70,
	0x61, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61,
	0x69, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x68, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x48, 0x75, 0x6c, 0x65, 0x22,
	0xe7, 0x01, 0x0a, 0x0f, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6c, 0x64,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61,
	0x78, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xfe, 0x01, 0x0a, 0x0c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69,
	0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x2e,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x2b,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x31, 0x0a, 0x0d, 0x68, 0x75, 0x6c, 0x65, 0x73,
	0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x68, 0x75,
	0x6c, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xfe, 0x01, 0x0a, 0x0c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c,
	0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12,
	0x2e, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x2b, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x75, 0x79, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6d, 0x75, 0x79, 0x75, 0x12, 0x31, 0x0a, 0x0d, 0x68, 0x75, 0x6c, 0x65,
	0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x68,
	0x75, 0x6c, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x23, 0x0a, 0x0d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x69, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x69, 0x66, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x76, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x76, 0x73,
	0x22, 0xf2, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x73, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2f, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x85, 0x02, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x22, 0x8e, 0x01,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x32, 0x0a, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x3c,
	0x0a, 0x0b, 0x52, 0x65, 0x71, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x8d, 0x01, 0x0a,
	0x0b, 0x52, 0x65, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x32, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xa9, 0x02, 0x0a,
	0x10, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6c, 0x66, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x71, 0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x6f, 0x71, 0x69, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x75, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x61, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x67, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7f, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x43,
	0x68, 0x69, 0x50, 0x65, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x75, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x12, 0x52, 0x65, 0x71,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x22, 0x33, 0x0a, 0x14, 0x52, 0x65,
	0x71, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x69, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x56, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x79, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x79, 0x65, 0x73, 0x22, 0x74,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x10, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x63, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x64, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x64, 0x0a, 0x0f,
	0x52, 0x65, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12,
	0x24, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52,
	0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x64, 0x22, 0x4d, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x3f, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x6f, 0x61, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x22,
	0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x43, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2d, 0x0a, 0x13, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x1b, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a,
	0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb3, 0x06, 0x0a, 0x16, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x49, 0x0a,
	0x0c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x63, 0x68, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x68, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x12, 0x4f, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x67,
	0x69, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47,
	0x69, 0x66, 0x74, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x69,
	0x66, 0x74, 0x1a, 0x73, 0x0a, 0x0b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x28, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x9c, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x68, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x49, 0x0a, 0x0d, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x64,
	0x64, 0x1a, 0x6c, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x69,
	0x66, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61,
	0x64, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x64, 0x22,
	0xc5, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x50, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x5b, 0x0a, 0x0e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x4e, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a,
	0x46, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x12, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x11, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x4f,
	0x0a, 0x10, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22,
	0x29, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x11, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x64,
	0x47, 0x61, 0x6d, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x1a, 0x3d, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x79, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x79, 0x65, 0x73, 0x22,
	0x39, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x2a, 0x3d, 0x0a, 0x0f, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x48, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4e, 0x43, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x03, 0x32, 0xba, 0x95, 0x01, 0x0a, 0x05, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x12, 0x3b, 0x0a, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x36, 0x0a, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x0b, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x34, 0x0a,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x14, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0c, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0c, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x0b, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x1a, 0x12, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x38, 0x0a, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x1a, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x0b, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0c, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x64,
	0x6d, 0x6d, 0x50, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x44, 0x4d, 0x4d, 0x50, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x12,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x44, 0x4d, 0x4d, 0x50, 0x72, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x44, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x1a,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x14, 0x76, 0x65, 0x72, 0x66, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x66, 0x69,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x38,
	0x0a, 0x0f, 0x62, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x11, 0x75, 0x6e, 0x62, 0x69,
	0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x42, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6e, 0x64,
	0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x1a, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09,
	0x62, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0e, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x1a, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x48, 0x65, 0x61, 0x74, 0x42, 0x65, 0x61, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x65, 0x61, 0x74, 0x12, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x65, 0x61, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x1a,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x1a,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x09, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x32, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x11, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x2c, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0f, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x0f, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x29, 0x0a,
	0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0e, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0a, 0x6b, 0x69,
	0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x52, 0x6f, 0x6f, 0x6d, 0x4b, 0x69, 0x63, 0x6b, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4a, 0x6f,
	0x69, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x10, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x13,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x19, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x54, 0x0a, 0x1d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x19, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38,
	0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x13,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x1a, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x70,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x11, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x11,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x32, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x1c, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x16, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x18, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x56, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x1a, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x5f, 0x0a, 0x19, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x20,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x74, 0x0a, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a, 0x27, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x49, 0x0a, 0x15, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x55, 0x0a, 0x19, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1b,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x4f, 0x0a, 0x17, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x4d, 0x75, 0x74, 0x69, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4d, 0x75, 0x74, 0x69,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x19,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x75, 0x74, 0x69, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x49, 0x0a, 0x16, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x72, 0x69, 0x65, 0x66, 0x12, 0x33, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x14, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x1a, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x1a, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x11, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x1a, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x11,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x18, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12,
	0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x1a, 0x1d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x3d, 0x0a,
	0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x0c,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x42, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0e, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x42, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x42, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x55, 0x73, 0x65, 0x42, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0e, 0x6f,
	0x70, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x14, 0x6f, 0x70, 0x65, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x47, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4f, 0x70, 0x65,
	0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x32,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x13,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x12,
	0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x69, 0x6c,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x11, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x16, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x54, 0x61, 0x6b, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x5c, 0x0a, 0x18, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x1f, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x6b, 0x0a,
	0x1d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x24,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x1a, 0x24, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x42, 0x0a, 0x14, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x0a, 0x10, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x53, 0x68, 0x69, 0x4c,
	0x69, 0x61, 0x6e, 0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x53,
	0x68, 0x69, 0x4c, 0x69, 0x61, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x68,
	0x69, 0x4c, 0x69, 0x61, 0x6e, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0d, 0x67, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x68, 0x69,
	0x4c, 0x69, 0x61, 0x6e, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x35, 0x0a, 0x10, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x49, 0x0a,
	0x15, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x1a, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x13,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x0e, 0x67, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0e, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x44, 0x0a, 0x10,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x35, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x47, 0x69, 0x66,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x55, 0x73,
	0x65, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x75, 0x73, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x55, 0x73, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31,
	0x0a, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a,
	0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0f, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x11, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x11, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x18, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d,
	0x0a, 0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x14, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x44,
	0x0a, 0x10, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x12, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x1a, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x15, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x62,
	0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x65, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x12,
	0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x68, 0x65, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x65, 0x73, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x12, 0x3d, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2d, 0x0a, 0x0d, 0x64, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x44, 0x0a, 0x10, 0x64, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x6f, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x1a, 0x17, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x39, 0x0a, 0x12, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x14, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x40, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53,
	0x6f, 0x72, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x69, 0x6e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x19,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x53, 0x65, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74,
	0x54, 0x6f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x6f, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x33, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x1a, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x3a, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65,
	0x77, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x61, 0x76, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x1a, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x10, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x12,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65,
	0x77, 0x73, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x3b, 0x0a, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x34, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x10, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x13, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x0d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35,
	0x0a, 0x0b, 0x62, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x68, 0x6f,
	0x70, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d,
	0x5a, 0x48, 0x50, 0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x46,
	0x72, 0x6f, 0x6d, 0x5a, 0x48, 0x50, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x52, 0x65, 0x73, 0x68, 0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x1a, 0x15, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5a, 0x48, 0x50, 0x53, 0x68,
	0x6f, 0x70, 0x12, 0x3d, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x50, 0x61, 0x79, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x50, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x3a, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x12, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x6e, 0x65, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x17,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x44, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1c, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a,
	0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x50, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41,
	0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x53, 0x0a,
	0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x53, 0x63, 0x61,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x50, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x41,
	0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x41, 0x70, 0x70, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a,
	0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x4d, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x50, 0x61, 0x79, 0x70, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4a, 0x50, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x41,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x41, 0x75, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x50, 0x41, 0x75, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x41, 0x75, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x44, 0x6f, 0x63,
	0x6f, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x44, 0x6f, 0x63, 0x6f, 0x6d, 0x6f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4a, 0x50, 0x44, 0x6f, 0x63, 0x6f, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x53, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x57, 0x65, 0x62, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x57, 0x65, 0x62, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x57, 0x65, 0x62, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a,
	0x50, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x53,
	0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x53, 0x6f, 0x66,
	0x74, 0x62, 0x61, 0x6e, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x50, 0x61, 0x79, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x50, 0x50, 0x61, 0x79, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1a, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x50, 0x50, 0x61,
	0x79, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x68, 0x0a, 0x1c, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x4a, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4a, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x23,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4a, 0x50, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x50,
	0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x50, 0x61, 0x79, 0x70, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x59, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1e, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a,
	0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x56, 0x69, 0x73, 0x61, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x4e, 0x56, 0x69, 0x73, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x56, 0x69, 0x73,
	0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x4e, 0x4a, 0x43, 0x42, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x4a, 0x43, 0x42, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x4e, 0x4a, 0x43, 0x42, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x13,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x4e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a,
	0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x4e,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x13, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x52, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1a,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x50,
	0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x17, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x52, 0x56, 0x69, 0x73, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x56, 0x69, 0x73, 0x61, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4b, 0x52, 0x56, 0x69, 0x73, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x44,
	0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x4a, 0x43, 0x42, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x52, 0x4a, 0x43, 0x42, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x4a, 0x43, 0x42, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x41, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x52, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x4d, 0x4d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x4d, 0x4d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6d, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x41, 0x50,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x41, 0x50, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x41, 0x50, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x10, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x65, 0x61,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x57, 0x65, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x61,
	0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x70, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x70, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x58, 0x73, 0x6f, 0x6c, 0x6c, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x58, 0x73,
	0x6f, 0x6c, 0x6c, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x58, 0x73, 0x6f, 0x6c, 0x6c, 0x61, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x43,
	0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x50, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x41, 0x50, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x41,
	0x50, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x41, 0x50, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x59, 0x6f, 0x73,
	0x74, 0x61, 0x72, 0x53, 0x44, 0x4b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x59, 0x6f, 0x73, 0x74, 0x61, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x59, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x4a, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x14, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x6f, 0x6c, 0x76,
	0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x45, 0x0a, 0x15, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x33, 0x12, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x33, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x41, 0x41, 0x33, 0x32, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41, 0x41, 0x33, 0x32, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x09, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x73, 0x63, 0x12,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0b,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x69, 0x73, 0x63, 0x12, 0x38, 0x0a, 0x0f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x49, 0x44,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x49, 0x44, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x10, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x56,
	0x69, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x56, 0x69, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x67, 0x61, 0x69,
	0x6e, 0x56, 0x69, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x47, 0x61, 0x69, 0x6e, 0x56, 0x69, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x10, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x1a, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x74, 0x0a, 0x20, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x27, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x6e, 0x0a, 0x1e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x25,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x16, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x16, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x20, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x27, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x77, 0x0a, 0x21, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x28, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x15,
	0x73, 0x74, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x1d, 0x6a, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x24, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4a, 0x6f, 0x69,
	0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x24, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x3e, 0x0a, 0x1e, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x0e, 0x73, 0x61, 0x79, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x21, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x28, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x7a, 0x0a, 0x22, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x17, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x19, 0x75, 0x6e, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x18,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x14, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x42, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x18, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69,
	0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x1f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x26,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x59, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x5f, 0x0a, 0x19, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x53, 0x0a, 0x15, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x5e, 0x0a, 0x22, 0x67, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47,
	0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x52, 0x0a, 0x1c, 0x67, 0x61, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x69, 0x6e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x19, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x61, 0x6e,
	0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x1a, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x40, 0x0a, 0x13, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x6e,
	0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x17, 0x72, 0x69, 0x63, 0x68, 0x6d,
	0x61, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f,
	0x76, 0x65, 0x12, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x69, 0x63, 0x68, 0x6d,
	0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x1a, 0x16, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f,
	0x76, 0x65, 0x12, 0x50, 0x0a, 0x1b, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x41, 0x63, 0x69,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x6f, 0x76,
	0x65, 0x12, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61,
	0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x6f, 0x76, 0x65, 0x1a, 0x16, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74,
	0x4d, 0x6f, 0x76, 0x65, 0x12, 0x4c, 0x0a, 0x18, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e,
	0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x61, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x53, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x56, 0x0a, 0x16, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x1a, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x37, 0x0a, 0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x42, 0x75, 0x66, 0x66, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x1a, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x42, 0x75, 0x66, 0x66, 0x12, 0x46, 0x0a, 0x13, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x75, 0x66, 0x66, 0x12,
	0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x75, 0x66, 0x66, 0x1a, 0x13, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x75, 0x66, 0x66,
	0x12, 0x50, 0x0a, 0x14, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x68, 0x0a, 0x1c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x10,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a,
	0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x17, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x12, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x1a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x62, 0x0a, 0x1a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x36, 0x0a, 0x10, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x13,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x42, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x32, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x49, 0x6e, 0x41, 0x42, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x49,
	0x6e, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x0b, 0x71, 0x75, 0x69, 0x74, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x11, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x6e, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x6e, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x12, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x14,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x1a, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x4d, 0x0a, 0x16, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x6c, 0x66, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x1a, 0x1d, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6c, 0x66, 0x47, 0x61, 0x6d, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x61,
	0x64, 0x53, 0x4e, 0x53, 0x12, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x4e, 0x53, 0x1a, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x4e, 0x53, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x4e, 0x53,
	0x12, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x4e,
	0x53, 0x1a, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53,
	0x4e, 0x53, 0x12, 0x29, 0x0a, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x53, 0x4e, 0x53, 0x12, 0x0e, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x4e, 0x53, 0x1a, 0x0e, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x4e, 0x53, 0x12, 0x29, 0x0a,
	0x07, 0x64, 0x69, 0x67, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x44, 0x69, 0x67, 0x4d, 0x69, 0x6e, 0x65, 0x1a, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x44, 0x69, 0x67, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x17, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x32,
	0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x13,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x1a, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x15,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x1a, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x57, 0x0a, 0x17, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x32, 0x12, 0x1c, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x50, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x32, 0x12, 0x47, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x50, 0x47, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x50, 0x47, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x50, 0x47, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x50,
	0x47, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x50, 0x47, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x52, 0x50, 0x47, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x0e, 0x62, 0x75,
	0x79, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x72, 0x65, 0x6e, 0x61,
	0x12, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x72,
	0x65, 0x6e, 0x61, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x72, 0x65,
	0x6e, 0x61, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x12, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x38, 0x0a, 0x0c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x42, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x42,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x4f, 0x42, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x59, 0x0a, 0x17, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65,
	0x65, 0x64, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x65, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x18, 0x73,
	0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x69, 0x66, 0x74, 0x54,
	0x6f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x69, 0x66, 0x74,
	0x54, 0x6f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x1a, 0x1f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x69, 0x66,
	0x74, 0x54, 0x6f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x13, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x69, 0x66, 0x74,
	0x12, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x69, 0x66, 0x74, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x16, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x47, 0x69, 0x66, 0x74, 0x12, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x47, 0x69, 0x66, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47,
	0x69, 0x66, 0x74, 0x12, 0x65, 0x0a, 0x1b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x10, 0x6f, 0x70,
	0x65, 0x6e, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x43, 0x68,
	0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x47, 0x0a, 0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a,
	0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x6f, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x76, 0x6f, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x13,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x12, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x53, 0x70, 0x6f, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x1a, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x13, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x2c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x0a, 0x62, 0x69, 0x6e, 0x64, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x11, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x38, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x4c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x44, 0x0a, 0x15, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x63, 0x68,
	0x61, 0x12, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61,
	0x63, 0x68, 0x61, 0x1a, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x47, 0x61, 0x63, 0x68, 0x61, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x32, 0xf5, 0x06, 0x0a, 0x08, 0x46, 0x61, 0x73, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x47, 0x61, 0x6d,
	0x65, 0x1a, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x10,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0f, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x1a, 0x0f, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2d,
	0x0a, 0x0d, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x35, 0x0a,
	0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6c, 0x66, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x68, 0x69,
	0x50, 0x65, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x68, 0x69, 0x50, 0x65, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0f,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x12, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x4c, 0x65, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x56, 0x6f, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x1a, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0b,
	0x61, 0x75, 0x74, 0x68, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x1a,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x13, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x12, 0x2b, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_liqi_proto_rawDescOnce sync.Once
	file_liqi_proto_rawDescData = file_liqi_proto_rawDesc
)

func file_liqi_proto_rawDescGZIP() []byte {
	file_liqi_proto_rawDescOnce.Do(func() {
		file_liqi_proto_rawDescData = protoimpl.X.CompressGZIP(file_liqi_proto_rawDescData)
	})
	return file_liqi_proto_rawDescData
}

var file_liqi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_liqi_proto_msgTypes = make([]protoimpl.MessageInfo, 808)
var file_liqi_proto_goTypes = []interface{}{
	(GamePlayerState)(0),                                            // 0: lq.GamePlayerState
	(*NotifyCaptcha)(nil),                                           // 1: lq.NotifyCaptcha
	(*NotifyRoomGameStart)(nil),                                     // 2: lq.NotifyRoomGameStart
	(*NotifyMatchGameStart)(nil),                                    // 3: lq.NotifyMatchGameStart
	(*NotifyRoomPlayerReady)(nil),                                   // 4: lq.NotifyRoomPlayerReady
	(*NotifyRoomPlayerDressing)(nil),                                // 5: lq.NotifyRoomPlayerDressing
	(*NotifyRoomPlayerUpdate)(nil),                                  // 6: lq.NotifyRoomPlayerUpdate
	(*NotifyRoomKickOut)(nil),                                       // 7: lq.NotifyRoomKickOut
	(*NotifyFriendStateChange)(nil),                                 // 8: lq.NotifyFriendStateChange
	(*NotifyFriendViewChange)(nil),                                  // 9: lq.NotifyFriendViewChange
	(*NotifyFriendChange)(nil),                                      // 10: lq.NotifyFriendChange
	(*NotifyNewFriendApply)(nil),                                    // 11: lq.NotifyNewFriendApply
	(*NotifyClientMessage)(nil),                                     // 12: lq.NotifyClientMessage
	(*NotifyAccountUpdate)(nil),                                     // 13: lq.NotifyAccountUpdate
	(*NotifyAnotherLogin)(nil),                                      // 14: lq.NotifyAnotherLogin
	(*NotifyAccountLogout)(nil),                                     // 15: lq.NotifyAccountLogout
	(*NotifyAnnouncementUpdate)(nil),                                // 16: lq.NotifyAnnouncementUpdate
	(*NotifyNewMail)(nil),                                           // 17: lq.NotifyNewMail
	(*NotifyDeleteMail)(nil),                                        // 18: lq.NotifyDeleteMail
	(*NotifyReviveCoinUpdate)(nil),                                  // 19: lq.NotifyReviveCoinUpdate
	(*NotifyDailyTaskUpdate)(nil),                                   // 20: lq.NotifyDailyTaskUpdate
	(*NotifyActivityTaskUpdate)(nil),                                // 21: lq.NotifyActivityTaskUpdate
	(*NotifyActivityPeriodTaskUpdate)(nil),                          // 22: lq.NotifyActivityPeriodTaskUpdate
	(*NotifyAccountRandomTaskUpdate)(nil),                           // 23: lq.NotifyAccountRandomTaskUpdate
	(*NotifyActivitySegmentTaskUpdate)(nil),                         // 24: lq.NotifyActivitySegmentTaskUpdate
	(*NotifyActivityUpdate)(nil),                                    // 25: lq.NotifyActivityUpdate
	(*NotifyAccountChallengeTaskUpdate)(nil),                        // 26: lq.NotifyAccountChallengeTaskUpdate
	(*NotifyNewComment)(nil),                                        // 27: lq.NotifyNewComment
	(*NotifyRollingNotice)(nil),                                     // 28: lq.NotifyRollingNotice
	(*NotifyGiftSendRefresh)(nil),                                   // 29: lq.NotifyGiftSendRefresh
	(*NotifyShopUpdate)(nil),                                        // 30: lq.NotifyShopUpdate
	(*NotifyVipLevelChange)(nil),                                    // 31: lq.NotifyVipLevelChange
	(*NotifyServerSetting)(nil),                                     // 32: lq.NotifyServerSetting
	(*NotifyPayResult)(nil),                                         // 33: lq.NotifyPayResult
	(*NotifyCustomContestAccountMsg)(nil),                           // 34: lq.NotifyCustomContestAccountMsg
	(*NotifyCustomContestSystemMsg)(nil),                            // 35: lq.NotifyCustomContestSystemMsg
	(*NotifyMatchTimeout)(nil),                                      // 36: lq.NotifyMatchTimeout
	(*NotifyCustomContestState)(nil),                                // 37: lq.NotifyCustomContestState
	(*NotifyActivityChange)(nil),                                    // 38: lq.NotifyActivityChange
	(*NotifyAFKResult)(nil),                                         // 39: lq.NotifyAFKResult
	(*NotifyLoginQueueFinished)(nil),                                // 40: lq.NotifyLoginQueueFinished
	(*NotifyGameFinishRewardV2)(nil),                                // 41: lq.NotifyGameFinishRewardV2
	(*NotifyActivityRewardV2)(nil),                                  // 42: lq.NotifyActivityRewardV2
	(*NotifyActivityPointV2)(nil),                                   // 43: lq.NotifyActivityPointV2
	(*NotifyLeaderboardPointV2)(nil),                                // 44: lq.NotifyLeaderboardPointV2
	(*Error)(nil),                                                   // 45: lq.Error
	(*Wrapper)(nil),                                                 // 46: lq.Wrapper
	(*NetworkEndpoint)(nil),                                         // 47: lq.NetworkEndpoint
	(*ReqCommon)(nil),                                               // 48: lq.ReqCommon
	(*ResCommon)(nil),                                               // 49: lq.ResCommon
	(*ResAccountUpdate)(nil),                                        // 50: lq.ResAccountUpdate
	(*AntiAddiction)(nil),                                           // 51: lq.AntiAddiction
	(*AccountMahjongStatistic)(nil),                                 // 52: lq.AccountMahjongStatistic
	(*AccountStatisticData)(nil),                                    // 53: lq.AccountStatisticData
	(*AccountLevel)(nil),                                            // 54: lq.AccountLevel
	(*ViewSlot)(nil),                                                // 55: lq.ViewSlot
	(*Account)(nil),                                                 // 56: lq.Account
	(*AccountOwnerData)(nil),                                        // 57: lq.AccountOwnerData
	(*AccountUpdate)(nil),                                           // 58: lq.AccountUpdate
	(*GameMetaData)(nil),                                            // 59: lq.GameMetaData
	(*AccountPlayingGame)(nil),                                      // 60: lq.AccountPlayingGame
	(*AccountCacheView)(nil),                                        // 61: lq.AccountCacheView
	(*PlayerBaseView)(nil),                                          // 62: lq.PlayerBaseView
	(*PlayerGameView)(nil),                                          // 63: lq.PlayerGameView
	(*GameSetting)(nil),                                             // 64: lq.GameSetting
	(*GameMode)(nil),                                                // 65: lq.GameMode
	(*GameTestingEnvironmentSet)(nil),                               // 66: lq.GameTestingEnvironmentSet
	(*GameDetailRule)(nil),                                          // 67: lq.GameDetailRule
	(*Room)(nil),                                                    // 68: lq.Room
	(*GameEndResult)(nil),                                           // 69: lq.GameEndResult
	(*GameConnectInfo)(nil),                                         // 70: lq.GameConnectInfo
	(*ItemGainRecord)(nil),                                          // 71: lq.ItemGainRecord
	(*ItemGainRecords)(nil),                                         // 72: lq.ItemGainRecords
	(*FakeRandomRecords)(nil),                                       // 73: lq.FakeRandomRecords
	(*Item)(nil),                                                    // 74: lq.Item
	(*Bag)(nil),                                                     // 75: lq.Bag
	(*BagUpdate)(nil),                                               // 76: lq.BagUpdate
	(*RewardSlot)(nil),                                              // 77: lq.RewardSlot
	(*OpenResult)(nil),                                              // 78: lq.OpenResult
	(*RewardPlusResult)(nil),                                        // 79: lq.RewardPlusResult
	(*ExecuteReward)(nil),                                           // 80: lq.ExecuteReward
	(*I18NContext)(nil),                                             // 81: lq.I18nContext
	(*Mail)(nil),                                                    // 82: lq.Mail
	(*AchievementProgress)(nil),                                     // 83: lq.AchievementProgress
	(*AccountStatisticByGameMode)(nil),                              // 84: lq.AccountStatisticByGameMode
	(*AccountStatisticByFan)(nil),                                   // 85: lq.AccountStatisticByFan
	(*AccountFanAchieved)(nil),                                      // 86: lq.AccountFanAchieved
	(*AccountDetailStatistic)(nil),                                  // 87: lq.AccountDetailStatistic
	(*AccountDetailStatisticByCategory)(nil),                        // 88: lq.AccountDetailStatisticByCategory
	(*AccountDetailStatisticV2)(nil),                                // 89: lq.AccountDetailStatisticV2
	(*AccountShiLian)(nil),                                          // 90: lq.AccountShiLian
	(*ClientDeviceInfo)(nil),                                        // 91: lq.ClientDeviceInfo
	(*ClientVersionInfo)(nil),                                       // 92: lq.ClientVersionInfo
	(*Announcement)(nil),                                            // 93: lq.Announcement
	(*TaskProgress)(nil),                                            // 94: lq.TaskProgress
	(*GameConfig)(nil),                                              // 95: lq.GameConfig
	(*RPGState)(nil),                                                // 96: lq.RPGState
	(*RPGActivity)(nil),                                             // 97: lq.RPGActivity
	(*ActivityArenaData)(nil),                                       // 98: lq.ActivityArenaData
	(*FeedActivityData)(nil),                                        // 99: lq.FeedActivityData
	(*SegmentTaskProgress)(nil),                                     // 100: lq.SegmentTaskProgress
	(*MineActivityData)(nil),                                        // 101: lq.MineActivityData
	(*AccountActivityUpdate)(nil),                                   // 102: lq.AccountActivityUpdate
	(*ActivityFeedData)(nil),                                        // 103: lq.ActivityFeedData
	(*ActivityFriendGiftData)(nil),                                  // 104: lq.ActivityFriendGiftData
	(*ActivityUpgradeData)(nil),                                     // 105: lq.ActivityUpgradeData
	(*GachaRecord)(nil),                                             // 106: lq.GachaRecord
	(*ActivityGachaData)(nil),                                       // 107: lq.ActivityGachaData
	(*ActivityGachaUpdateData)(nil),                                 // 108: lq.ActivityGachaUpdateData
	(*ActivitySpotData)(nil),                                        // 109: lq.ActivitySpotData
	(*AccountActiveState)(nil),                                      // 110: lq.AccountActiveState
	(*Friend)(nil),                                                  // 111: lq.Friend
	(*Point)(nil),                                                   // 112: lq.Point
	(*MineReward)(nil),                                              // 113: lq.MineReward
	(*GameLiveUnit)(nil),                                            // 114: lq.GameLiveUnit
	(*GameLiveSegment)(nil),                                         // 115: lq.GameLiveSegment
	(*GameLiveSegmentUri)(nil),                                      // 116: lq.GameLiveSegmentUri
	(*GameLiveHead)(nil),                                            // 117: lq.GameLiveHead
	(*GameNewRoundState)(nil),                                       // 118: lq.GameNewRoundState
	(*GameEndAction)(nil),                                           // 119: lq.GameEndAction
	(*GameNoopAction)(nil),                                          // 120: lq.GameNoopAction
	(*CommentItem)(nil),                                             // 121: lq.CommentItem
	(*RollingNotice)(nil),                                           // 122: lq.RollingNotice
	(*BillingGoods)(nil),                                            // 123: lq.BillingGoods
	(*BillShortcut)(nil),                                            // 124: lq.BillShortcut
	(*BillingProduct)(nil),                                          // 125: lq.BillingProduct
	(*Character)(nil),                                               // 126: lq.Character
	(*BuyRecord)(nil),                                               // 127: lq.BuyRecord
	(*ZHPShop)(nil),                                                 // 128: lq.ZHPShop
	(*MonthTicketInfo)(nil),                                         // 129: lq.MonthTicketInfo
	(*ShopInfo)(nil),                                                // 130: lq.ShopInfo
	(*ChangeNicknameRecord)(nil),                                    // 131: lq.ChangeNicknameRecord
	(*ServerSettings)(nil),                                          // 132: lq.ServerSettings
	(*NicknameSetting)(nil),                                         // 133: lq.NicknameSetting
	(*PaymentSettingV2)(nil),                                        // 134: lq.PaymentSettingV2
	(*PaymentSetting)(nil),                                          // 135: lq.PaymentSetting
	(*AccountSetting)(nil),                                          // 136: lq.AccountSetting
	(*ChestData)(nil),                                               // 137: lq.ChestData
	(*ChestDataV2)(nil),                                             // 138: lq.ChestDataV2
	(*FaithData)(nil),                                               // 139: lq.FaithData
	(*CustomizedContestBase)(nil),                                   // 140: lq.CustomizedContestBase
	(*CustomizedContestExtend)(nil),                                 // 141: lq.CustomizedContestExtend
	(*CustomizedContestAbstract)(nil),                               // 142: lq.CustomizedContestAbstract
	(*CustomizedContestDetail)(nil),                                 // 143: lq.CustomizedContestDetail
	(*CustomizedContestPlayerReport)(nil),                           // 144: lq.CustomizedContestPlayerReport
	(*RecordGame)(nil),                                              // 145: lq.RecordGame
	(*CustomizedContestGameStart)(nil),                              // 146: lq.CustomizedContestGameStart
	(*CustomizedContestGameEnd)(nil),                                // 147: lq.CustomizedContestGameEnd
	(*Activity)(nil),                                                // 148: lq.Activity
	(*ExchangeRecord)(nil),                                          // 149: lq.ExchangeRecord
	(*ActivityAccumulatedPointData)(nil),                            // 150: lq.ActivityAccumulatedPointData
	(*ActivityRankPointData)(nil),                                   // 151: lq.ActivityRankPointData
	(*GameRoundHuData)(nil),                                         // 152: lq.GameRoundHuData
	(*GameRoundPlayerResult)(nil),                                   // 153: lq.GameRoundPlayerResult
	(*GameRoundPlayer)(nil),                                         // 154: lq.GameRoundPlayer
	(*GameRoundSnapshot)(nil),                                       // 155: lq.GameRoundSnapshot
	(*GameFinalSnapshot)(nil),                                       // 156: lq.GameFinalSnapshot
	(*RecordCollectedData)(nil),                                     // 157: lq.RecordCollectedData
	(*ContestDetailRule)(nil),                                       // 158: lq.ContestDetailRule
	(*ContestDetailRuleV2)(nil),                                     // 159: lq.ContestDetailRuleV2
	(*GameRuleSetting)(nil),                                         // 160: lq.GameRuleSetting
	(*RecordTingPaiInfo)(nil),                                       // 161: lq.RecordTingPaiInfo
	(*RecordNoTilePlayerInfo)(nil),                                  // 162: lq.RecordNoTilePlayerInfo
	(*RecordHuleInfo)(nil),                                          // 163: lq.RecordHuleInfo
	(*RecordHulesInfo)(nil),                                         // 164: lq.RecordHulesInfo
	(*RecordLiujuInfo)(nil),                                         // 165: lq.RecordLiujuInfo
	(*RecordNoTileInfo)(nil),                                        // 166: lq.RecordNoTileInfo
	(*RecordLiqiInfo)(nil),                                          // 167: lq.RecordLiqiInfo
	(*RecordGangInfo)(nil),                                          // 168: lq.RecordGangInfo
	(*RecordBaBeiInfo)(nil),                                         // 169: lq.RecordBaBeiInfo
	(*RecordPeiPaiInfo)(nil),                                        // 170: lq.RecordPeiPaiInfo
	(*RecordRoundInfo)(nil),                                         // 171: lq.RecordRoundInfo
	(*RecordAnalysisedData)(nil),                                    // 172: lq.RecordAnalysisedData
	(*VoteData)(nil),                                                // 173: lq.VoteData
	(*ActivityBuffData)(nil),                                        // 174: lq.ActivityBuffData
	(*AccountResourceSnapshot)(nil),                                 // 175: lq.AccountResourceSnapshot
	(*AccountCharacterSnapshot)(nil),                                // 176: lq.AccountCharacterSnapshot
	(*AccountMailRecord)(nil),                                       // 177: lq.AccountMailRecord
	(*AccountAchievementSnapshot)(nil),                              // 178: lq.AccountAchievementSnapshot
	(*AccountMiscSnapshot)(nil),                                     // 179: lq.AccountMiscSnapshot
	(*AccountGiftCodeRecord)(nil),                                   // 180: lq.AccountGiftCodeRecord
	(*AccSn)(nil),                                                   // 181: lq.AccSn
	(*AccSnDa)(nil),                                                 // 182: lq.AccSnDa
	(*ResConnectionInfo)(nil),                                       // 183: lq.ResConnectionInfo
	(*ResFetchQueueInfo)(nil),                                       // 184: lq.ResFetchQueueInfo
	(*ReqOpenidCheck)(nil),                                          // 185: lq.ReqOpenidCheck
	(*ReqSignupAccount)(nil),                                        // 186: lq.ReqSignupAccount
	(*ResSignupAccount)(nil),                                        // 187: lq.ResSignupAccount
	(*ReqLogin)(nil),                                                // 188: lq.ReqLogin
	(*ResLogin)(nil),                                                // 189: lq.ResLogin
	(*ReqEmailLogin)(nil),                                           // 190: lq.ReqEmailLogin
	(*ReqBindAccount)(nil),                                          // 191: lq.ReqBindAccount
	(*ReqCreatePhoneVerifyCode)(nil),                                // 192: lq.ReqCreatePhoneVerifyCode
	(*ReqCreateEmailVerifyCode)(nil),                                // 193: lq.ReqCreateEmailVerifyCode
	(*ReqVerifyCodeForSecure)(nil),                                  // 194: lq.ReqVerifyCodeForSecure
	(*ResVerfiyCodeForSecure)(nil),                                  // 195: lq.ResVerfiyCodeForSecure
	(*ReqBindPhoneNumber)(nil),                                      // 196: lq.ReqBindPhoneNumber
	(*ReqUnbindPhoneNumber)(nil),                                    // 197: lq.ReqUnbindPhoneNumber
	(*ResFetchPhoneLoginBind)(nil),                                  // 198: lq.ResFetchPhoneLoginBind
	(*ReqCreatePhoneLoginBind)(nil),                                 // 199: lq.ReqCreatePhoneLoginBind
	(*ReqBindEmail)(nil),                                            // 200: lq.ReqBindEmail
	(*ReqModifyPassword)(nil),                                       // 201: lq.ReqModifyPassword
	(*ReqOauth2Auth)(nil),                                           // 202: lq.ReqOauth2Auth
	(*ResOauth2Auth)(nil),                                           // 203: lq.ResOauth2Auth
	(*ReqOauth2Check)(nil),                                          // 204: lq.ReqOauth2Check
	(*ResOauth2Check)(nil),                                          // 205: lq.ResOauth2Check
	(*ReqOauth2Signup)(nil),                                         // 206: lq.ReqOauth2Signup
	(*ResOauth2Signup)(nil),                                         // 207: lq.ResOauth2Signup
	(*ReqOauth2Login)(nil),                                          // 208: lq.ReqOauth2Login
	(*ReqDMMPreLogin)(nil),                                          // 209: lq.ReqDMMPreLogin
	(*ResDMMPreLogin)(nil),                                          // 210: lq.ResDMMPreLogin
	(*ReqLogout)(nil),                                               // 211: lq.ReqLogout
	(*ResLogout)(nil),                                               // 212: lq.ResLogout
	(*ReqHeatBeat)(nil),                                             // 213: lq.ReqHeatBeat
	(*ReqLoginBeat)(nil),                                            // 214: lq.ReqLoginBeat
	(*ReqJoinMatchQueue)(nil),                                       // 215: lq.ReqJoinMatchQueue
	(*ReqCancelMatchQueue)(nil),                                     // 216: lq.ReqCancelMatchQueue
	(*ReqAccountInfo)(nil),                                          // 217: lq.ReqAccountInfo
	(*ResAccountInfo)(nil),                                          // 218: lq.ResAccountInfo
	(*ReqCreateNickname)(nil),                                       // 219: lq.ReqCreateNickname
	(*ReqModifyNickname)(nil),                                       // 220: lq.ReqModifyNickname
	(*ReqModifyBirthday)(nil),                                       // 221: lq.ReqModifyBirthday
	(*ResSelfRoom)(nil),                                             // 222: lq.ResSelfRoom
	(*ReqCreateRoom)(nil),                                           // 223: lq.ReqCreateRoom
	(*ResCreateRoom)(nil),                                           // 224: lq.ResCreateRoom
	(*ReqJoinRoom)(nil),                                             // 225: lq.ReqJoinRoom
	(*ResJoinRoom)(nil),                                             // 226: lq.ResJoinRoom
	(*ReqRoomReady)(nil),                                            // 227: lq.ReqRoomReady
	(*ReqRoomDressing)(nil),                                         // 228: lq.ReqRoomDressing
	(*ReqRoomStart)(nil),                                            // 229: lq.ReqRoomStart
	(*ReqRoomKick)(nil),                                             // 230: lq.ReqRoomKick
	(*ReqModifyRoom)(nil),                                           // 231: lq.ReqModifyRoom
	(*ReqChangeAvatar)(nil),                                         // 232: lq.ReqChangeAvatar
	(*ReqAccountStatisticInfo)(nil),                                 // 233: lq.ReqAccountStatisticInfo
	(*ResAccountStatisticInfo)(nil),                                 // 234: lq.ResAccountStatisticInfo
	(*ResAccountChallengeRankInfo)(nil),                             // 235: lq.ResAccountChallengeRankInfo
	(*ResAccountCharacterInfo)(nil),                                 // 236: lq.ResAccountCharacterInfo
	(*ReqShopPurchase)(nil),                                         // 237: lq.ReqShopPurchase
	(*ResShopPurchase)(nil),                                         // 238: lq.ResShopPurchase
	(*ReqGameRecord)(nil),                                           // 239: lq.ReqGameRecord
	(*ResGameRecord)(nil),                                           // 240: lq.ResGameRecord
	(*ReqGameRecordList)(nil),                                       // 241: lq.ReqGameRecordList
	(*ResGameRecordList)(nil),                                       // 242: lq.ResGameRecordList
	(*ResCollectedGameRecordList)(nil),                              // 243: lq.ResCollectedGameRecordList
	(*ReqGameRecordsDetail)(nil),                                    // 244: lq.ReqGameRecordsDetail
	(*ResGameRecordsDetail)(nil),                                    // 245: lq.ResGameRecordsDetail
	(*ReqAddCollectedGameRecord)(nil),                               // 246: lq.ReqAddCollectedGameRecord
	(*ResAddCollectedGameRecord)(nil),                               // 247: lq.ResAddCollectedGameRecord
	(*ReqRemoveCollectedGameRecord)(nil),                            // 248: lq.ReqRemoveCollectedGameRecord
	(*ResRemoveCollectedGameRecord)(nil),                            // 249: lq.ResRemoveCollectedGameRecord
	(*ReqChangeCollectedGameRecordRemarks)(nil),                     // 250: lq.ReqChangeCollectedGameRecordRemarks
	(*ResChangeCollectedGameRecordRemarks)(nil),                     // 251: lq.ResChangeCollectedGameRecordRemarks
	(*ReqLevelLeaderboard)(nil),                                     // 252: lq.ReqLevelLeaderboard
	(*ResLevelLeaderboard)(nil),                                     // 253: lq.ResLevelLeaderboard
	(*ReqChallangeLeaderboard)(nil),                                 // 254: lq.ReqChallangeLeaderboard
	(*ResChallengeLeaderboard)(nil),                                 // 255: lq.ResChallengeLeaderboard
	(*ReqMutiChallengeLevel)(nil),                                   // 256: lq.ReqMutiChallengeLevel
	(*ResMutiChallengeLevel)(nil),                                   // 257: lq.ResMutiChallengeLevel
	(*ReqMultiAccountId)(nil),                                       // 258: lq.ReqMultiAccountId
	(*ResMultiAccountBrief)(nil),                                    // 259: lq.ResMultiAccountBrief
	(*ResFriendList)(nil),                                           // 260: lq.ResFriendList
	(*ResFriendApplyList)(nil),                                      // 261: lq.ResFriendApplyList
	(*ReqApplyFriend)(nil),                                          // 262: lq.ReqApplyFriend
	(*ReqHandleFriendApply)(nil),                                    // 263: lq.ReqHandleFriendApply
	(*ReqRemoveFriend)(nil),                                         // 264: lq.ReqRemoveFriend
	(*ReqSearchAccountByPattern)(nil),                               // 265: lq.ReqSearchAccountByPattern
	(*ResSearchAccountByPattern)(nil),                               // 266: lq.ResSearchAccountByPattern
	(*ReqAccountList)(nil),                                          // 267: lq.ReqAccountList
	(*ResAccountStates)(nil),                                        // 268: lq.ResAccountStates
	(*ReqSearchAccountById)(nil),                                    // 269: lq.ReqSearchAccountById
	(*ResSearchAccountById)(nil),                                    // 270: lq.ResSearchAccountById
	(*ResBagInfo)(nil),                                              // 271: lq.ResBagInfo
	(*ReqUseBagItem)(nil),                                           // 272: lq.ReqUseBagItem
	(*ReqOpenManualItem)(nil),                                       // 273: lq.ReqOpenManualItem
	(*ReqOpenRandomRewardItem)(nil),                                 // 274: lq.ReqOpenRandomRewardItem
	(*ResOpenRandomRewardItem)(nil),                                 // 275: lq.ResOpenRandomRewardItem
	(*ReqOpenAllRewardItem)(nil),                                    // 276: lq.ReqOpenAllRewardItem
	(*ResOpenAllRewardItem)(nil),                                    // 277: lq.ResOpenAllRewardItem
	(*ReqComposeShard)(nil),                                         // 278: lq.ReqComposeShard
	(*ReqFetchAnnouncement)(nil),                                    // 279: lq.ReqFetchAnnouncement
	(*ResAnnouncement)(nil),                                         // 280: lq.ResAnnouncement
	(*ResMailInfo)(nil),                                             // 281: lq.ResMailInfo
	(*ReqReadMail)(nil),                                             // 282: lq.ReqReadMail
	(*ReqDeleteMail)(nil),                                           // 283: lq.ReqDeleteMail
	(*ReqTakeAttachment)(nil),                                       // 284: lq.ReqTakeAttachment
	(*ReqReceiveAchievementGroupReward)(nil),                        // 285: lq.ReqReceiveAchievementGroupReward
	(*ResReceiveAchievementGroupReward)(nil),                        // 286: lq.ResReceiveAchievementGroupReward
	(*ReqReceiveAchievementReward)(nil),                             // 287: lq.ReqReceiveAchievementReward
	(*ResReceiveAchievementReward)(nil),                             // 288: lq.ResReceiveAchievementReward
	(*ResFetchAchievementRate)(nil),                                 // 289: lq.ResFetchAchievementRate
	(*ResAchievement)(nil),                                          // 290: lq.ResAchievement
	(*ResTitleList)(nil),                                            // 291: lq.ResTitleList
	(*ReqUseTitle)(nil),                                             // 292: lq.ReqUseTitle
	(*ReqBuyShiLian)(nil),                                           // 293: lq.ReqBuyShiLian
	(*ReqUpdateClientValue)(nil),                                    // 294: lq.ReqUpdateClientValue
	(*ResClientValue)(nil),                                          // 295: lq.ResClientValue
	(*ReqClientMessage)(nil),                                        // 296: lq.ReqClientMessage
	(*ReqCurrentMatchInfo)(nil),                                     // 297: lq.ReqCurrentMatchInfo
	(*ResCurrentMatchInfo)(nil),                                     // 298: lq.ResCurrentMatchInfo
	(*ReqUserComplain)(nil),                                         // 299: lq.ReqUserComplain
	(*ReqReadAnnouncement)(nil),                                     // 300: lq.ReqReadAnnouncement
	(*ResReviveCoinInfo)(nil),                                       // 301: lq.ResReviveCoinInfo
	(*ResDailyTask)(nil),                                            // 302: lq.ResDailyTask
	(*ReqRefreshDailyTask)(nil),                                     // 303: lq.ReqRefreshDailyTask
	(*ResRefreshDailyTask)(nil),                                     // 304: lq.ResRefreshDailyTask
	(*ReqUseGiftCode)(nil),                                          // 305: lq.ReqUseGiftCode
	(*ResUseGiftCode)(nil),                                          // 306: lq.ResUseGiftCode
	(*ResUseSpecialGiftCode)(nil),                                   // 307: lq.ResUseSpecialGiftCode
	(*ReqSendClientMessage)(nil),                                    // 308: lq.ReqSendClientMessage
	(*ReqGameLiveInfo)(nil),                                         // 309: lq.ReqGameLiveInfo
	(*ResGameLiveInfo)(nil),                                         // 310: lq.ResGameLiveInfo
	(*ReqGameLiveLeftSegment)(nil),                                  // 311: lq.ReqGameLiveLeftSegment
	(*ResGameLiveLeftSegment)(nil),                                  // 312: lq.ResGameLiveLeftSegment
	(*ReqGameLiveList)(nil),                                         // 313: lq.ReqGameLiveList
	(*ResGameLiveList)(nil),                                         // 314: lq.ResGameLiveList
	(*ResCommentSetting)(nil),                                       // 315: lq.ResCommentSetting
	(*ReqUpdateCommentSetting)(nil),                                 // 316: lq.ReqUpdateCommentSetting
	(*ReqFetchCommentList)(nil),                                     // 317: lq.ReqFetchCommentList
	(*ResFetchCommentList)(nil),                                     // 318: lq.ResFetchCommentList
	(*ReqFetchCommentContent)(nil),                                  // 319: lq.ReqFetchCommentContent
	(*ResFetchCommentContent)(nil),                                  // 320: lq.ResFetchCommentContent
	(*ReqLeaveComment)(nil),                                         // 321: lq.ReqLeaveComment
	(*ReqDeleteComment)(nil),                                        // 322: lq.ReqDeleteComment
	(*ReqUpdateReadComment)(nil),                                    // 323: lq.ReqUpdateReadComment
	(*ReqRollingNotice)(nil),                                        // 324: lq.ReqRollingNotice
	(*ResServerTime)(nil),                                           // 325: lq.ResServerTime
	(*ReqPlatformBillingProducts)(nil),                              // 326: lq.ReqPlatformBillingProducts
	(*ResPlatformBillingProducts)(nil),                              // 327: lq.ResPlatformBillingProducts
	(*ReqCreateBillingOrder)(nil),                                   // 328: lq.ReqCreateBillingOrder
	(*ResCreateBillingOrder)(nil),                                   // 329: lq.ResCreateBillingOrder
	(*ReqSolveGooglePlayOrder)(nil),                                 // 330: lq.ReqSolveGooglePlayOrder
	(*ReqSolveGooglePlayOrderV3)(nil),                               // 331: lq.ReqSolveGooglePlayOrderV3
	(*ReqCancelGooglePlayOrder)(nil),                                // 332: lq.ReqCancelGooglePlayOrder
	(*ReqCreateWechatNativeOrder)(nil),                              // 333: lq.ReqCreateWechatNativeOrder
	(*ResCreateWechatNativeOrder)(nil),                              // 334: lq.ResCreateWechatNativeOrder
	(*ReqCreateWechatAppOrder)(nil),                                 // 335: lq.ReqCreateWechatAppOrder
	(*ResCreateWechatAppOrder)(nil),                                 // 336: lq.ResCreateWechatAppOrder
	(*ReqCreateAlipayOrder)(nil),                                    // 337: lq.ReqCreateAlipayOrder
	(*ResCreateAlipayOrder)(nil),                                    // 338: lq.ResCreateAlipayOrder
	(*ReqCreateAlipayScanOrder)(nil),                                // 339: lq.ReqCreateAlipayScanOrder
	(*ResCreateAlipayScanOrder)(nil),                                // 340: lq.ResCreateAlipayScanOrder
	(*ReqCreateAlipayAppOrder)(nil),                                 // 341: lq.ReqCreateAlipayAppOrder
	(*ResCreateAlipayAppOrder)(nil),                                 // 342: lq.ResCreateAlipayAppOrder
	(*ReqCreateJPCreditCardOrder)(nil),                              // 343: lq.ReqCreateJPCreditCardOrder
	(*ResCreateJPCreditCardOrder)(nil),                              // 344: lq.ResCreateJPCreditCardOrder
	(*ReqCreateJPPaypalOrder)(nil),                                  // 345: lq.ReqCreateJPPaypalOrder
	(*ResCreateJPPaypalOrder)(nil),                                  // 346: lq.ResCreateJPPaypalOrder
	(*ReqCreateJPAuOrder)(nil),                                      // 347: lq.ReqCreateJPAuOrder
	(*ResCreateJPAuOrder)(nil),                                      // 348: lq.ResCreateJPAuOrder
	(*ReqCreateJPDocomoOrder)(nil),                                  // 349: lq.ReqCreateJPDocomoOrder
	(*ResCreateJPDocomoOrder)(nil),                                  // 350: lq.ResCreateJPDocomoOrder
	(*ReqCreateJPWebMoneyOrder)(nil),                                // 351: lq.ReqCreateJPWebMoneyOrder
	(*ResCreateJPWebMoneyOrder)(nil),                                // 352: lq.ResCreateJPWebMoneyOrder
	(*ReqCreateJPSoftbankOrder)(nil),                                // 353: lq.ReqCreateJPSoftbankOrder
	(*ResCreateJPSoftbankOrder)(nil),                                // 354: lq.ResCreateJPSoftbankOrder
	(*ReqCreateJPPayPayOrder)(nil),                                  // 355: lq.ReqCreateJPPayPayOrder
	(*ResCreateJPPayPayOrder)(nil),                                  // 356: lq.ResCreateJPPayPayOrder
	(*ReqFetchJPCommonCreditCardOrder)(nil),                         // 357: lq.ReqFetchJPCommonCreditCardOrder
	(*ResFetchJPCommonCreditCardOrder)(nil),                         // 358: lq.ResFetchJPCommonCreditCardOrder
	(*ReqCreateYostarOrder)(nil),                                    // 359: lq.ReqCreateYostarOrder
	(*ResCreateYostarOrder)(nil),                                    // 360: lq.ResCreateYostarOrder
	(*ReqCreateENPaypalOrder)(nil),                                  // 361: lq.ReqCreateENPaypalOrder
	(*ResCreateENPaypalOrder)(nil),                                  // 362: lq.ResCreateENPaypalOrder
	(*ReqCreateENJCBOrder)(nil),                                     // 363: lq.ReqCreateENJCBOrder
	(*ResCreateENJCBOrder)(nil),                                     // 364: lq.ResCreateENJCBOrder
	(*ReqCreateENMasterCardOrder)(nil),                              // 365: lq.ReqCreateENMasterCardOrder
	(*ResCreateENMasterCardOrder)(nil),                              // 366: lq.ResCreateENMasterCardOrder
	(*ReqCreateENVisaOrder)(nil),                                    // 367: lq.ReqCreateENVisaOrder
	(*ResCreateENVisaOrder)(nil),                                    // 368: lq.ResCreateENVisaOrder
	(*ReqCreateENAlipayOrder)(nil),                                  // 369: lq.ReqCreateENAlipayOrder
	(*ResCreateENAlipayOrder)(nil),                                  // 370: lq.ResCreateENAlipayOrder
	(*ReqCreateKRPaypalOrder)(nil),                                  // 371: lq.ReqCreateKRPaypalOrder
	(*ResCreateKRPaypalOrder)(nil),                                  // 372: lq.ResCreateKRPaypalOrder
	(*ReqCreateKRJCBOrder)(nil),                                     // 373: lq.ReqCreateKRJCBOrder
	(*ResCreateKRJCBOrder)(nil),                                     // 374: lq.ResCreateKRJCBOrder
	(*ReqCreateKRMasterCardOrder)(nil),                              // 375: lq.ReqCreateKRMasterCardOrder
	(*ResCreateKRMasterCardOrder)(nil),                              // 376: lq.ResCreateKRMasterCardOrder
	(*ReqCreateKRVisaOrder)(nil),                                    // 377: lq.ReqCreateKRVisaOrder
	(*ResCreateKRVisaOrder)(nil),                                    // 378: lq.ResCreateKRVisaOrder
	(*ReqCreateKRAlipayOrder)(nil),                                  // 379: lq.ReqCreateKRAlipayOrder
	(*ResCreateKRAlipayOrder)(nil),                                  // 380: lq.ResCreateKRAlipayOrder
	(*ReqCreateDMMOrder)(nil),                                       // 381: lq.ReqCreateDMMOrder
	(*ResCreateDmmOrder)(nil),                                       // 382: lq.ResCreateDmmOrder
	(*ReqCreateIAPOrder)(nil),                                       // 383: lq.ReqCreateIAPOrder
	(*ResCreateIAPOrder)(nil),                                       // 384: lq.ResCreateIAPOrder
	(*ReqVerificationIAPOrder)(nil),                                 // 385: lq.ReqVerificationIAPOrder
	(*ResVerificationIAPOrder)(nil),                                 // 386: lq.ResVerificationIAPOrder
	(*ReqCreateSteamOrder)(nil),                                     // 387: lq.ReqCreateSteamOrder
	(*ResCreateSteamOrder)(nil),                                     // 388: lq.ResCreateSteamOrder
	(*ReqVerifySteamOrder)(nil),                                     // 389: lq.ReqVerifySteamOrder
	(*ReqCreateMyCardOrder)(nil),                                    // 390: lq.ReqCreateMyCardOrder
	(*ResCreateMyCardOrder)(nil),                                    // 391: lq.ResCreateMyCardOrder
	(*ReqVerifyMyCardOrder)(nil),                                    // 392: lq.ReqVerifyMyCardOrder
	(*ReqCreatePaypalOrder)(nil),                                    // 393: lq.ReqCreatePaypalOrder
	(*ResCreatePaypalOrder)(nil),                                    // 394: lq.ResCreatePaypalOrder
	(*ReqCreateXsollaOrder)(nil),                                    // 395: lq.ReqCreateXsollaOrder
	(*ResCreateXsollaOrder)(nil),                                    // 396: lq.ResCreateXsollaOrder
	(*ReqDeliverAA32Order)(nil),                                     // 397: lq.ReqDeliverAA32Order
	(*ReqOpenChest)(nil),                                            // 398: lq.ReqOpenChest
	(*ResOpenChest)(nil),                                            // 399: lq.ResOpenChest
	(*ReqBuyFromChestShop)(nil),                                     // 400: lq.ReqBuyFromChestShop
	(*ResBuyFromChestShop)(nil),                                     // 401: lq.ResBuyFromChestShop
	(*ResDailySignInInfo)(nil),                                      // 402: lq.ResDailySignInInfo
	(*ReqDoActivitySignIn)(nil),                                     // 403: lq.ReqDoActivitySignIn
	(*ResDoActivitySignIn)(nil),                                     // 404: lq.ResDoActivitySignIn
	(*ResCharacterInfo)(nil),                                        // 405: lq.ResCharacterInfo
	(*ReqUpdateCharacterSort)(nil),                                  // 406: lq.ReqUpdateCharacterSort
	(*ReqChangeMainCharacter)(nil),                                  // 407: lq.ReqChangeMainCharacter
	(*ReqChangeCharacterSkin)(nil),                                  // 408: lq.ReqChangeCharacterSkin
	(*ReqChangeCharacterView)(nil),                                  // 409: lq.ReqChangeCharacterView
	(*ReqSetHiddenCharacter)(nil),                                   // 410: lq.ReqSetHiddenCharacter
	(*ResSetHiddenCharacter)(nil),                                   // 411: lq.ResSetHiddenCharacter
	(*ReqSendGiftToCharacter)(nil),                                  // 412: lq.ReqSendGiftToCharacter
	(*ResSendGiftToCharacter)(nil),                                  // 413: lq.ResSendGiftToCharacter
	(*ReqSellItem)(nil),                                             // 414: lq.ReqSellItem
	(*ResCommonView)(nil),                                           // 415: lq.ResCommonView
	(*ReqChangeCommonView)(nil),                                     // 416: lq.ReqChangeCommonView
	(*ReqSaveCommonViews)(nil),                                      // 417: lq.ReqSaveCommonViews
	(*ReqCommonViews)(nil),                                          // 418: lq.ReqCommonViews
	(*ResCommonViews)(nil),                                          // 419: lq.ResCommonViews
	(*ResAllcommonViews)(nil),                                       // 420: lq.ResAllcommonViews
	(*ReqUseCommonView)(nil),                                        // 421: lq.ReqUseCommonView
	(*ReqUpgradeCharacter)(nil),                                     // 422: lq.ReqUpgradeCharacter
	(*ResUpgradeCharacter)(nil),                                     // 423: lq.ResUpgradeCharacter
	(*ReqFinishedEnding)(nil),                                       // 424: lq.ReqFinishedEnding
	(*ReqGMCommand)(nil),                                            // 425: lq.ReqGMCommand
	(*ResShopInfo)(nil),                                             // 426: lq.ResShopInfo
	(*ReqBuyFromShop)(nil),                                          // 427: lq.ReqBuyFromShop
	(*ResBuyFromShop)(nil),                                          // 428: lq.ResBuyFromShop
	(*ReqBuyFromZHP)(nil),                                           // 429: lq.ReqBuyFromZHP
	(*ReqPayMonthTicket)(nil),                                       // 430: lq.ReqPayMonthTicket
	(*ResPayMonthTicket)(nil),                                       // 431: lq.ResPayMonthTicket
	(*ReqReshZHPShop)(nil),                                          // 432: lq.ReqReshZHPShop
	(*ResRefreshZHPShop)(nil),                                       // 433: lq.ResRefreshZHPShop
	(*ResMonthTicketInfo)(nil),                                      // 434: lq.ResMonthTicketInfo
	(*ReqExchangeCurrency)(nil),                                     // 435: lq.ReqExchangeCurrency
	(*ResServerSettings)(nil),                                       // 436: lq.ResServerSettings
	(*ResAccountSettings)(nil),                                      // 437: lq.ResAccountSettings
	(*ReqUpdateAccountSettings)(nil),                                // 438: lq.ReqUpdateAccountSettings
	(*ResModNicknameTime)(nil),                                      // 439: lq.ResModNicknameTime
	(*ResMisc)(nil),                                                 // 440: lq.ResMisc
	(*ReqModifySignature)(nil),                                      // 441: lq.ReqModifySignature
	(*ResIDCardInfo)(nil),                                           // 442: lq.ResIDCardInfo
	(*ReqUpdateIDCardInfo)(nil),                                     // 443: lq.ReqUpdateIDCardInfo
	(*ResVipReward)(nil),                                            // 444: lq.ResVipReward
	(*ResFetchRefundOrder)(nil),                                     // 445: lq.ResFetchRefundOrder
	(*ReqGainVipReward)(nil),                                        // 446: lq.ReqGainVipReward
	(*ReqFetchCustomizedContestList)(nil),                           // 447: lq.ReqFetchCustomizedContestList
	(*ResFetchCustomizedContestList)(nil),                           // 448: lq.ResFetchCustomizedContestList
	(*ReqFetchCustomizedContestExtendInfo)(nil),                     // 449: lq.ReqFetchCustomizedContestExtendInfo
	(*ResFetchCustomizedContestExtendInfo)(nil),                     // 450: lq.ResFetchCustomizedContestExtendInfo
	(*ReqFetchCustomizedContestAuthInfo)(nil),                       // 451: lq.ReqFetchCustomizedContestAuthInfo
	(*ResFetchCustomizedContestAuthInfo)(nil),                       // 452: lq.ResFetchCustomizedContestAuthInfo
	(*ReqEnterCustomizedContest)(nil),                               // 453: lq.ReqEnterCustomizedContest
	(*ResEnterCustomizedContest)(nil),                               // 454: lq.ResEnterCustomizedContest
	(*ReqFetchCustomizedContestOnlineInfo)(nil),                     // 455: lq.ReqFetchCustomizedContestOnlineInfo
	(*ResFetchCustomizedContestOnlineInfo)(nil),                     // 456: lq.ResFetchCustomizedContestOnlineInfo
	(*ReqFetchCustomizedContestByContestId)(nil),                    // 457: lq.ReqFetchCustomizedContestByContestId
	(*ResFetchCustomizedContestByContestId)(nil),                    // 458: lq.ResFetchCustomizedContestByContestId
	(*ReqStartCustomizedContest)(nil),                               // 459: lq.ReqStartCustomizedContest
	(*ReqJoinCustomizedContestChatRoom)(nil),                        // 460: lq.ReqJoinCustomizedContestChatRoom
	(*ResJoinCustomizedContestChatRoom)(nil),                        // 461: lq.ResJoinCustomizedContestChatRoom
	(*ReqSayChatMessage)(nil),                                       // 462: lq.ReqSayChatMessage
	(*ReqFetchCustomizedContestGameLiveList)(nil),                   // 463: lq.ReqFetchCustomizedContestGameLiveList
	(*ResFetchCustomizedContestGameLiveList)(nil),                   // 464: lq.ResFetchCustomizedContestGameLiveList
	(*ReqFetchCustomizedContestGameRecords)(nil),                    // 465: lq.ReqFetchCustomizedContestGameRecords
	(*ResFetchCustomizedContestGameRecords)(nil),                    // 466: lq.ResFetchCustomizedContestGameRecords
	(*ReqTargetCustomizedContest)(nil),                              // 467: lq.ReqTargetCustomizedContest
	(*ResActivityList)(nil),                                         // 468: lq.ResActivityList
	(*ResAccountActivityData)(nil),                                  // 469: lq.ResAccountActivityData
	(*SNSBlog)(nil),                                                 // 470: lq.SNSBlog
	(*SNSReply)(nil),                                                // 471: lq.SNSReply
	(*ReqExchangeActivityItem)(nil),                                 // 472: lq.ReqExchangeActivityItem
	(*ResExchangeActivityItem)(nil),                                 // 473: lq.ResExchangeActivityItem
	(*ReqCompleteActivityTask)(nil),                                 // 474: lq.ReqCompleteActivityTask
	(*ReqCompletePeriodActivityTaskBatch)(nil),                      // 475: lq.ReqCompletePeriodActivityTaskBatch
	(*ReqReceiveActivityFlipTask)(nil),                              // 476: lq.ReqReceiveActivityFlipTask
	(*ResReceiveActivityFlipTask)(nil),                              // 477: lq.ResReceiveActivityFlipTask
	(*ReqCompleteSegmentTaskReward)(nil),                            // 478: lq.ReqCompleteSegmentTaskReward
	(*ResCompleteSegmentTaskReward)(nil),                            // 479: lq.ResCompleteSegmentTaskReward
	(*ReqFetchActivityFlipInfo)(nil),                                // 480: lq.ReqFetchActivityFlipInfo
	(*ResFetchActivityFlipInfo)(nil),                                // 481: lq.ResFetchActivityFlipInfo
	(*ReqGainAccumulatedPointActivityReward)(nil),                   // 482: lq.ReqGainAccumulatedPointActivityReward
	(*ReqGainMultiPointActivityReward)(nil),                         // 483: lq.ReqGainMultiPointActivityReward
	(*ReqFetchRankPointLeaderboard)(nil),                            // 484: lq.ReqFetchRankPointLeaderboard
	(*ResFetchRankPointLeaderboard)(nil),                            // 485: lq.ResFetchRankPointLeaderboard
	(*ReqGainRankPointReward)(nil),                                  // 486: lq.ReqGainRankPointReward
	(*ReqRichmanNextMove)(nil),                                      // 487: lq.ReqRichmanNextMove
	(*ResRichmanNextMove)(nil),                                      // 488: lq.ResRichmanNextMove
	(*ReqRichmanSpecialMove)(nil),                                   // 489: lq.ReqRichmanSpecialMove
	(*ReqRichmanChestInfo)(nil),                                     // 490: lq.ReqRichmanChestInfo
	(*ResRichmanChestInfo)(nil),                                     // 491: lq.ResRichmanChestInfo
	(*ReqCreateGameObserveAuth)(nil),                                // 492: lq.ReqCreateGameObserveAuth
	(*ResCreateGameObserveAuth)(nil),                                // 493: lq.ResCreateGameObserveAuth
	(*ReqRefreshGameObserveAuth)(nil),                               // 494: lq.ReqRefreshGameObserveAuth
	(*ResRefreshGameObserveAuth)(nil),                               // 495: lq.ResRefreshGameObserveAuth
	(*ResActivityBuff)(nil),                                         // 496: lq.ResActivityBuff
	(*ReqUpgradeActivityBuff)(nil),                                  // 497: lq.ReqUpgradeActivityBuff
	(*ReqUpgradeActivityLevel)(nil),                                 // 498: lq.ReqUpgradeActivityLevel
	(*ResUpgradeActivityLevel)(nil),                                 // 499: lq.ResUpgradeActivityLevel
	(*ReqReceiveUpgradeActivityReward)(nil),                         // 500: lq.ReqReceiveUpgradeActivityReward
	(*ResReceiveUpgradeActivityReward)(nil),                         // 501: lq.ResReceiveUpgradeActivityReward
	(*ReqReceiveAllActivityGift)(nil),                               // 502: lq.ReqReceiveAllActivityGift
	(*ResReceiveAllActivityGift)(nil),                               // 503: lq.ResReceiveAllActivityGift
	(*ResUpgradeChallenge)(nil),                                     // 504: lq.ResUpgradeChallenge
	(*ResRefreshChallenge)(nil),                                     // 505: lq.ResRefreshChallenge
	(*ResFetchChallengeInfo)(nil),                                   // 506: lq.ResFetchChallengeInfo
	(*ReqForceCompleteChallengeTask)(nil),                           // 507: lq.ReqForceCompleteChallengeTask
	(*ResFetchABMatch)(nil),                                         // 508: lq.ResFetchABMatch
	(*ReqStartUnifiedMatch)(nil),                                    // 509: lq.ReqStartUnifiedMatch
	(*ReqCancelUnifiedMatch)(nil),                                   // 510: lq.ReqCancelUnifiedMatch
	(*ResChallengeSeasonInfo)(nil),                                  // 511: lq.ResChallengeSeasonInfo
	(*ReqReceiveChallengeRankReward)(nil),                           // 512: lq.ReqReceiveChallengeRankReward
	(*ResReceiveChallengeRankReward)(nil),                           // 513: lq.ResReceiveChallengeRankReward
	(*ReqBuyInABMatch)(nil),                                         // 514: lq.ReqBuyInABMatch
	(*ReqGamePointRank)(nil),                                        // 515: lq.ReqGamePointRank
	(*ResGamePointRank)(nil),                                        // 516: lq.ResGamePointRank
	(*ResFetchSelfGamePointRank)(nil),                               // 517: lq.ResFetchSelfGamePointRank
	(*ReqReadSNS)(nil),                                              // 518: lq.ReqReadSNS
	(*ResReadSNS)(nil),                                              // 519: lq.ResReadSNS
	(*ReqReplySNS)(nil),                                             // 520: lq.ReqReplySNS
	(*ResReplySNS)(nil),                                             // 521: lq.ResReplySNS
	(*ReqLikeSNS)(nil),                                              // 522: lq.ReqLikeSNS
	(*ResLikeSNS)(nil),                                              // 523: lq.ResLikeSNS
	(*ReqDigMine)(nil),                                              // 524: lq.ReqDigMine
	(*ResDigMine)(nil),                                              // 525: lq.ResDigMine
	(*ReqFetchLastPrivacy)(nil),                                     // 526: lq.ReqFetchLastPrivacy
	(*ResFetchLastPrivacy)(nil),                                     // 527: lq.ResFetchLastPrivacy
	(*ReqCheckPrivacy)(nil),                                         // 528: lq.ReqCheckPrivacy
	(*ReqResponseCaptcha)(nil),                                      // 529: lq.ReqResponseCaptcha
	(*ReqFetchRPGBattleHistory)(nil),                                // 530: lq.ReqFetchRPGBattleHistory
	(*ResFetchRPGBattleHistory)(nil),                                // 531: lq.ResFetchRPGBattleHistory
	(*ResFetchRPGBattleHistoryV2)(nil),                              // 532: lq.ResFetchRPGBattleHistoryV2
	(*ReqBuyArenaTicket)(nil),                                       // 533: lq.ReqBuyArenaTicket
	(*ReqArenaReward)(nil),                                          // 534: lq.ReqArenaReward
	(*ReqEnterArena)(nil),                                           // 535: lq.ReqEnterArena
	(*ResArenaReward)(nil),                                          // 536: lq.ResArenaReward
	(*ReqReceiveRPGRewards)(nil),                                    // 537: lq.ReqReceiveRPGRewards
	(*ReqReceiveRPGReward)(nil),                                     // 538: lq.ReqReceiveRPGReward
	(*ResReceiveRPGRewards)(nil),                                    // 539: lq.ResReceiveRPGRewards
	(*ReqFetchOBToken)(nil),                                         // 540: lq.ReqFetchOBToken
	(*ResFetchOBToken)(nil),                                         // 541: lq.ResFetchOBToken
	(*ReqReceiveCharacterRewards)(nil),                              // 542: lq.ReqReceiveCharacterRewards
	(*ResReceiveCharacterRewards)(nil),                              // 543: lq.ResReceiveCharacterRewards
	(*ReqFeedActivityFeed)(nil),                                     // 544: lq.ReqFeedActivityFeed
	(*ResFeedActivityFeed)(nil),                                     // 545: lq.ResFeedActivityFeed
	(*ReqSendActivityGiftToFriend)(nil),                             // 546: lq.ReqSendActivityGiftToFriend
	(*ResSendActivityGiftToFriend)(nil),                             // 547: lq.ResSendActivityGiftToFriend
	(*ReqReceiveActivityGift)(nil),                                  // 548: lq.ReqReceiveActivityGift
	(*ReqFetchFriendGiftActivityData)(nil),                          // 549: lq.ReqFetchFriendGiftActivityData
	(*ResFetchFriendGiftActivityData)(nil),                          // 550: lq.ResFetchFriendGiftActivityData
	(*ReqOpenPreChestItem)(nil),                                     // 551: lq.ReqOpenPreChestItem
	(*ResOpenPreChestItem)(nil),                                     // 552: lq.ResOpenPreChestItem
	(*ReqFetchVoteActivity)(nil),                                    // 553: lq.ReqFetchVoteActivity
	(*ResFetchVoteActivity)(nil),                                    // 554: lq.ResFetchVoteActivity
	(*ReqVoteActivity)(nil),                                         // 555: lq.ReqVoteActivity
	(*ResVoteActivity)(nil),                                         // 556: lq.ResVoteActivity
	(*ReqUnlockActivitySpot)(nil),                                   // 557: lq.ReqUnlockActivitySpot
	(*ReqReceiveActivitySpotReward)(nil),                            // 558: lq.ReqReceiveActivitySpotReward
	(*ResReceiveActivitySpotReward)(nil),                            // 559: lq.ResReceiveActivitySpotReward
	(*ReqLogReport)(nil),                                            // 560: lq.ReqLogReport
	(*ReqBindOauth2)(nil),                                           // 561: lq.ReqBindOauth2
	(*ReqFetchOauth2)(nil),                                          // 562: lq.ReqFetchOauth2
	(*ResFetchOauth2)(nil),                                          // 563: lq.ResFetchOauth2
	(*ResDeleteAccount)(nil),                                        // 564: lq.ResDeleteAccount
	(*ReqSetLoadingImage)(nil),                                      // 565: lq.ReqSetLoadingImage
	(*ResFetchShopInterval)(nil),                                    // 566: lq.ResFetchShopInterval
	(*ResFetchActivityInterval)(nil),                                // 567: lq.ResFetchActivityInterval
	(*ResFetchrecentFriend)(nil),                                    // 568: lq.ResFetchrecentFriend
	(*ReqOpenGacha)(nil),                                            // 569: lq.ReqOpenGacha
	(*ResOpenGacha)(nil),                                            // 570: lq.ResOpenGacha
	(*ReqTaskRequest)(nil),                                          // 571: lq.ReqTaskRequest
	(*ActionMJStart)(nil),                                           // 572: lq.ActionMJStart
	(*NewRoundOpenedTiles)(nil),                                     // 573: lq.NewRoundOpenedTiles
	(*MuyuInfo)(nil),                                                // 574: lq.MuyuInfo
	(*ChuanmaGang)(nil),                                             // 575: lq.ChuanmaGang
	(*ActionNewCard)(nil),                                           // 576: lq.ActionNewCard
	(*RecordNewCard)(nil),                                           // 577: lq.RecordNewCard
	(*ActionNewRound)(nil),                                          // 578: lq.ActionNewRound
	(*RecordNewRound)(nil),                                          // 579: lq.RecordNewRound
	(*GameSnapshot)(nil),                                            // 580: lq.GameSnapshot
	(*ActionPrototype)(nil),                                         // 581: lq.ActionPrototype
	(*GameDetailRecords)(nil),                                       // 582: lq.GameDetailRecords
	(*GameSelfOperation)(nil),                                       // 583: lq.GameSelfOperation
	(*GameChiPengGang)(nil),                                         // 584: lq.GameChiPengGang
	(*GameVoteGameEnd)(nil),                                         // 585: lq.GameVoteGameEnd
	(*GameUserInput)(nil),                                           // 586: lq.GameUserInput
	(*GameUserEvent)(nil),                                           // 587: lq.GameUserEvent
	(*GameAction)(nil),                                              // 588: lq.GameAction
	(*OptionalOperation)(nil),                                       // 589: lq.OptionalOperation
	(*OptionalOperationList)(nil),                                   // 590: lq.OptionalOperationList
	(*LiQiSuccess)(nil),                                             // 591: lq.LiQiSuccess
	(*FanInfo)(nil),                                                 // 592: lq.FanInfo
	(*HuleInfo)(nil),                                                // 593: lq.HuleInfo
	(*TingPaiInfo)(nil),                                             // 594: lq.TingPaiInfo
	(*TingPaiDiscardInfo)(nil),                                      // 595: lq.TingPaiDiscardInfo
	(*GameEnd)(nil),                                                 // 596: lq.GameEnd
	(*ActionSelectGap)(nil),                                         // 597: lq.ActionSelectGap
	(*RecordSelectGap)(nil),                                         // 598: lq.RecordSelectGap
	(*ActionChangeTile)(nil),                                        // 599: lq.ActionChangeTile
	(*RecordChangeTile)(nil),                                        // 600: lq.RecordChangeTile
	(*ActionRevealTile)(nil),                                        // 601: lq.ActionRevealTile
	(*RecordRevealTile)(nil),                                        // 602: lq.RecordRevealTile
	(*ActionUnveilTile)(nil),                                        // 603: lq.ActionUnveilTile
	(*RecordUnveilTile)(nil),                                        // 604: lq.RecordUnveilTile
	(*ActionLockTile)(nil),                                          // 605: lq.ActionLockTile
	(*RecordLockTile)(nil),                                          // 606: lq.RecordLockTile
	(*ActionDiscardTile)(nil),                                       // 607: lq.ActionDiscardTile
	(*RecordDiscardTile)(nil),                                       // 608: lq.RecordDiscardTile
	(*ActionDealTile)(nil),                                          // 609: lq.ActionDealTile
	(*RecordDealTile)(nil),                                          // 610: lq.RecordDealTile
	(*ActionFillAwaitingTiles)(nil),                                 // 611: lq.ActionFillAwaitingTiles
	(*RecordFillAwaitingTiles)(nil),                                 // 612: lq.RecordFillAwaitingTiles
	(*ActionChiPengGang)(nil),                                       // 613: lq.ActionChiPengGang
	(*RecordChiPengGang)(nil),                                       // 614: lq.RecordChiPengGang
	(*ActionGangResult)(nil),                                        // 615: lq.ActionGangResult
	(*RecordGangResult)(nil),                                        // 616: lq.RecordGangResult
	(*ActionGangResultEnd)(nil),                                     // 617: lq.ActionGangResultEnd
	(*RecordGangResultEnd)(nil),                                     // 618: lq.RecordGangResultEnd
	(*ActionAnGangAddGang)(nil),                                     // 619: lq.ActionAnGangAddGang
	(*RecordAnGangAddGang)(nil),                                     // 620: lq.RecordAnGangAddGang
	(*ActionBaBei)(nil),                                             // 621: lq.ActionBaBei
	(*RecordBaBei)(nil),                                             // 622: lq.RecordBaBei
	(*ActionHule)(nil),                                              // 623: lq.ActionHule
	(*RecordHule)(nil),                                              // 624: lq.RecordHule
	(*HuInfoXueZhanMid)(nil),                                        // 625: lq.HuInfoXueZhanMid
	(*ActionHuleXueZhanMid)(nil),                                    // 626: lq.ActionHuleXueZhanMid
	(*RecordHuleXueZhanMid)(nil),                                    // 627: lq.RecordHuleXueZhanMid
	(*ActionHuleXueZhanEnd)(nil),                                    // 628: lq.ActionHuleXueZhanEnd
	(*RecordHuleXueZhanEnd)(nil),                                    // 629: lq.RecordHuleXueZhanEnd
	(*ActionLiuJu)(nil),                                             // 630: lq.ActionLiuJu
	(*RecordLiuJu)(nil),                                             // 631: lq.RecordLiuJu
	(*NoTilePlayerInfo)(nil),                                        // 632: lq.NoTilePlayerInfo
	(*NoTileScoreInfo)(nil),                                         // 633: lq.NoTileScoreInfo
	(*ActionNoTile)(nil),                                            // 634: lq.ActionNoTile
	(*RecordNoTile)(nil),                                            // 635: lq.RecordNoTile
	(*PlayerLeaving)(nil),                                           // 636: lq.PlayerLeaving
	(*ReqAuthGame)(nil),                                             // 637: lq.ReqAuthGame
	(*ResAuthGame)(nil),                                             // 638: lq.ResAuthGame
	(*GameRestore)(nil),                                             // 639: lq.GameRestore
	(*ResEnterGame)(nil),                                            // 640: lq.ResEnterGame
	(*ReqSyncGame)(nil),                                             // 641: lq.ReqSyncGame
	(*ResSyncGame)(nil),                                             // 642: lq.ResSyncGame
	(*ReqSelfOperation)(nil),                                        // 643: lq.ReqSelfOperation
	(*ReqChiPengGang)(nil),                                          // 644: lq.ReqChiPengGang
	(*ReqBroadcastInGame)(nil),                                      // 645: lq.ReqBroadcastInGame
	(*ReqGMCommandInGaming)(nil),                                    // 646: lq.ReqGMCommandInGaming
	(*ResGamePlayerState)(nil),                                      // 647: lq.ResGamePlayerState
	(*ReqVoteGameEnd)(nil),                                          // 648: lq.ReqVoteGameEnd
	(*ResGameEndVote)(nil),                                          // 649: lq.ResGameEndVote
	(*ReqAuthObserve)(nil),                                          // 650: lq.ReqAuthObserve
	(*ResStartObserve)(nil),                                         // 651: lq.ResStartObserve
	(*NotifyNewGame)(nil),                                           // 652: lq.NotifyNewGame
	(*NotifyPlayerLoadGameReady)(nil),                               // 653: lq.NotifyPlayerLoadGameReady
	(*NotifyGameBroadcast)(nil),                                     // 654: lq.NotifyGameBroadcast
	(*NotifyGameEndResult)(nil),                                     // 655: lq.NotifyGameEndResult
	(*NotifyGameTerminate)(nil),                                     // 656: lq.NotifyGameTerminate
	(*NotifyPlayerConnectionState)(nil),                             // 657: lq.NotifyPlayerConnectionState
	(*NotifyAccountLevelChange)(nil),                                // 658: lq.NotifyAccountLevelChange
	(*NotifyGameFinishReward)(nil),                                  // 659: lq.NotifyGameFinishReward
	(*NotifyActivityReward)(nil),                                    // 660: lq.NotifyActivityReward
	(*NotifyActivityPoint)(nil),                                     // 661: lq.NotifyActivityPoint
	(*NotifyLeaderboardPoint)(nil),                                  // 662: lq.NotifyLeaderboardPoint
	(*NotifyGamePause)(nil),                                         // 663: lq.NotifyGamePause
	(*NotifyEndGameVote)(nil),                                       // 664: lq.NotifyEndGameVote
	(*NotifyObserveData)(nil),                                       // 665: lq.NotifyObserveData
	(*NotifyRoomPlayerReady_AccountReadyState)(nil),                 // 666: lq.NotifyRoomPlayerReady.AccountReadyState
	(*NotifyRoomPlayerDressing_AccountDressingState)(nil),           // 667: lq.NotifyRoomPlayerDressing.AccountDressingState
	(*NotifyAnnouncementUpdate_AnnouncementUpdate)(nil),             // 668: lq.NotifyAnnouncementUpdate.AnnouncementUpdate
	(*NotifyActivityUpdate_FeedActivityData)(nil),                   // 669: lq.NotifyActivityUpdate.FeedActivityData
	(*NotifyActivityUpdate_FeedActivityData_CountWithTimeData)(nil), // 670: lq.NotifyActivityUpdate.FeedActivityData.CountWithTimeData
	(*NotifyActivityUpdate_FeedActivityData_GiftBoxData)(nil),       // 671: lq.NotifyActivityUpdate.FeedActivityData.GiftBoxData
	(*NotifyPayResult_ResourceModify)(nil),                          // 672: lq.NotifyPayResult.ResourceModify
	(*NotifyGameFinishRewardV2_LevelChange)(nil),                    // 673: lq.NotifyGameFinishRewardV2.LevelChange
	(*NotifyGameFinishRewardV2_MatchChest)(nil),                     // 674: lq.NotifyGameFinishRewardV2.MatchChest
	(*NotifyGameFinishRewardV2_MainCharacter)(nil),                  // 675: lq.NotifyGameFinishRewardV2.MainCharacter
	(*NotifyGameFinishRewardV2_CharacterGift)(nil),                  // 676: lq.NotifyGameFinishRewardV2.CharacterGift
	(*NotifyActivityRewardV2_ActivityReward)(nil),                   // 677: lq.NotifyActivityRewardV2.ActivityReward
	(*NotifyActivityPointV2_ActivityPoint)(nil),                     // 678: lq.NotifyActivityPointV2.ActivityPoint
	(*NotifyLeaderboardPointV2_LeaderboardPoint)(nil),               // 679: lq.NotifyLeaderboardPointV2.LeaderboardPoint
	(*AccountMahjongStatistic_RoundSummary)(nil),                    // 680: lq.AccountMahjongStatistic.RoundSummary
	(*AccountMahjongStatistic_HuSummary)(nil),                       // 681: lq.AccountMahjongStatistic.HuSummary
	(*AccountMahjongStatistic_HighestHuRecord)(nil),                 // 682: lq.AccountMahjongStatistic.HighestHuRecord
	(*AccountMahjongStatistic_Liqi20Summary)(nil),                   // 683: lq.AccountMahjongStatistic.Liqi20Summary
	(*AccountMahjongStatistic_LiQi10Summary)(nil),                   // 684: lq.AccountMahjongStatistic.LiQi10Summary
	(*AccountMahjongStatistic_GameResult)(nil),                      // 685: lq.AccountMahjongStatistic.GameResult
	(*Account_PlatformDiamond)(nil),                                 // 686: lq.Account.PlatformDiamond
	(*Account_PlatformSkinTicket)(nil),                              // 687: lq.Account.PlatformSkinTicket
	(*Account_ChallengeLevel)(nil),                                  // 688: lq.Account.ChallengeLevel
	(*Account_AchievementCount)(nil),                                // 689: lq.Account.AchievementCount
	(*AccountUpdate_NumericalUpdate)(nil),                           // 690: lq.AccountUpdate.NumericalUpdate
	(*AccountUpdate_CharacterUpdate)(nil),                           // 691: lq.AccountUpdate.CharacterUpdate
	(*AccountUpdate_AchievementUpdate)(nil),                         // 692: lq.AccountUpdate.AchievementUpdate
	(*AccountUpdate_DailyTaskUpdate)(nil),                           // 693: lq.AccountUpdate.DailyTaskUpdate
	(*AccountUpdate_TitleUpdate)(nil),                               // 694: lq.AccountUpdate.TitleUpdate
	(*AccountUpdate_TaskUpdate)(nil),                                // 695: lq.AccountUpdate.TaskUpdate
	(*AccountUpdate_AccountChallengeUpdate)(nil),                    // 696: lq.AccountUpdate.AccountChallengeUpdate
	(*AccountUpdate_AccountABMatchUpdate)(nil),                      // 697: lq.AccountUpdate.AccountABMatchUpdate
	(*AccountUpdate_SegmentTaskUpdate)(nil),                         // 698: lq.AccountUpdate.SegmentTaskUpdate
	(*AccountUpdate_AccountABMatchUpdate_MatchPoint)(nil),           // 699: lq.AccountUpdate.AccountABMatchUpdate.MatchPoint
	(*GameEndResult_PlayerItem)(nil),                                // 700: lq.GameEndResult.PlayerItem
	(*RewardPlusResult_Exchange)(nil),                               // 701: lq.RewardPlusResult.Exchange
	(*AccountStatisticByGameMode_RoundEndData)(nil),                 // 702: lq.AccountStatisticByGameMode.RoundEndData
	(*AccountStatisticByGameMode_RankScore)(nil),                    // 703: lq.AccountStatisticByGameMode.RankScore
	(*AccountDetailStatisticV2_RankStatistic)(nil),                  // 704: lq.AccountDetailStatisticV2.RankStatistic
	(*AccountDetailStatisticV2_CustomizedContestStatistic)(nil),     // 705: lq.AccountDetailStatisticV2.CustomizedContestStatistic
	(*AccountDetailStatisticV2_ChallengeStatistic)(nil),             // 706: lq.AccountDetailStatisticV2.ChallengeStatistic
	(*AccountDetailStatisticV2_RankStatistic_RankData)(nil),         // 707: lq.AccountDetailStatisticV2.RankStatistic.RankData
	(*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData)(nil), // 708: lq.AccountDetailStatisticV2.RankStatistic.RankData.RankLevelData
	(*AccountDetailStatisticV2_ChallengeStatistic_SeasonData)(nil),        // 709: lq.AccountDetailStatisticV2.ChallengeStatistic.SeasonData
	(*FeedActivityData_CountWithTimeData)(nil),                            // 710: lq.FeedActivityData.CountWithTimeData
	(*FeedActivityData_GiftBoxData)(nil),                                  // 711: lq.FeedActivityData.GiftBoxData
	(*ActivityFeedData_CountWithTimeData)(nil),                            // 712: lq.ActivityFeedData.CountWithTimeData
	(*ActivityFeedData_GiftBoxData)(nil),                                  // 713: lq.ActivityFeedData.GiftBoxData
	(*ActivityFriendGiftData_CountWithTimeData)(nil),                      // 714: lq.ActivityFriendGiftData.CountWithTimeData
	(*ActivityFriendGiftData_GiftBoxData)(nil),                            // 715: lq.ActivityFriendGiftData.GiftBoxData
	(*ActivityUpgradeData_LevelGroup)(nil),                                // 716: lq.ActivityUpgradeData.LevelGroup
	(*ActivitySpotData_SpotData)(nil),                                     // 717: lq.ActivitySpotData.SpotData
	(*ZHPShop_RefreshCount)(nil),                                          // 718: lq.ZHPShop.RefreshCount
	(*PaymentSettingV2_PaymentMaintain)(nil),                              // 719: lq.PaymentSettingV2.PaymentMaintain
	(*PaymentSettingV2_PaymentSettingUnit)(nil),                           // 720: lq.PaymentSettingV2.PaymentSettingUnit
	(*PaymentSetting_WechatData)(nil),                                     // 721: lq.PaymentSetting.WechatData
	(*PaymentSetting_AlipayData)(nil),                                     // 722: lq.PaymentSetting.AlipayData
	(*RecordGame_AccountInfo)(nil),                                        // 723: lq.RecordGame.AccountInfo
	(*CustomizedContestGameStart_Item)(nil),                               // 724: lq.CustomizedContestGameStart.Item
	(*CustomizedContestGameEnd_Item)(nil),                                 // 725: lq.CustomizedContestGameEnd.Item
	(*GameRoundHuData_HuPai)(nil),                                         // 726: lq.GameRoundHuData.HuPai
	(*GameRoundHuData_Fan)(nil),                                           // 727: lq.GameRoundHuData.Fan
	(*GameFinalSnapshot_CalculateParam)(nil),                              // 728: lq.GameFinalSnapshot.CalculateParam
	(*GameFinalSnapshot_GameSeat)(nil),                                    // 729: lq.GameFinalSnapshot.GameSeat
	(*GameFinalSnapshot_FinalPlayer)(nil),                                 // 730: lq.GameFinalSnapshot.FinalPlayer
	(*GameFinalSnapshot_AFKInfo)(nil),                                     // 731: lq.GameFinalSnapshot.AFKInfo
	(*ContestDetailRuleV2_ExtraRule)(nil),                                 // 732: lq.ContestDetailRuleV2.ExtraRule
	(*RecordHuleInfo_RecordFanInfo)(nil),                                  // 733: lq.RecordHuleInfo.RecordFanInfo
	(*AccountResourceSnapshot_BagItemSnapshot)(nil),                       // 734: lq.AccountResourceSnapshot.BagItemSnapshot
	(*AccountResourceSnapshot_CurrencySnapshot)(nil),                      // 735: lq.AccountResourceSnapshot.CurrencySnapshot
	(*AccountResourceSnapshot_TitleSnapshot)(nil),                         // 736: lq.AccountResourceSnapshot.TitleSnapshot
	(*AccountResourceSnapshot_UsedTitleSnapshot)(nil),                     // 737: lq.AccountResourceSnapshot.UsedTitleSnapshot
	(*AccountCharacterSnapshot_MainCharacterSnapshot)(nil),                // 738: lq.AccountCharacterSnapshot.MainCharacterSnapshot
	(*AccountCharacterSnapshot_SkinsSnapshot)(nil),                        // 739: lq.AccountCharacterSnapshot.SkinsSnapshot
	(*AccountCharacterSnapshot_HiddenCharacter)(nil),                      // 740: lq.AccountCharacterSnapshot.HiddenCharacter
	(*AccountMailRecord_MailSnapshot)(nil),                                // 741: lq.AccountMailRecord.MailSnapshot
	(*AccountAchievementSnapshot_RewardedGroupSnapshot)(nil),              // 742: lq.AccountAchievementSnapshot.RewardedGroupSnapshot
	(*AccountAchievementSnapshot_AchievementVersion)(nil),                 // 743: lq.AccountAchievementSnapshot.AchievementVersion
	(*AccountMiscSnapshot_AccountVIPRewardSnapshot)(nil),                  // 744: lq.AccountMiscSnapshot.AccountVIPRewardSnapshot
	(*AccountMiscSnapshot_MonthTicketInfo)(nil),                           // 745: lq.AccountMiscSnapshot.MonthTicketInfo
	(*AccountMiscSnapshot_AccountMonthTicketSnapshot)(nil),                // 746: lq.AccountMiscSnapshot.AccountMonthTicketSnapshot
	(*AccountMiscSnapshot_AccountVIP)(nil),                                // 747: lq.AccountMiscSnapshot.AccountVIP
	(*AccountMiscSnapshot_AccountRechargeInfo)(nil),                       // 748: lq.AccountMiscSnapshot.AccountRechargeInfo
	(*ResAccountChallengeRankInfo_ChallengeRank)(nil),                     // 749: lq.ResAccountChallengeRankInfo.ChallengeRank
	(*ResLevelLeaderboard_Item)(nil),                                      // 750: lq.ResLevelLeaderboard.Item
	(*ResChallengeLeaderboard_Item)(nil),                                  // 751: lq.ResChallengeLeaderboard.Item
	(*ResMutiChallengeLevel_Item)(nil),                                    // 752: lq.ResMutiChallengeLevel.Item
	(*ResFriendApplyList_FriendApply)(nil),                                // 753: lq.ResFriendApplyList.FriendApply
	(*ResFetchAchievementRate_AchievementRate)(nil),                       // 754: lq.ResFetchAchievementRate.AchievementRate
	(*ResClientValue_Value)(nil),                                          // 755: lq.ResClientValue.Value
	(*ResCurrentMatchInfo_CurrentMatchInfo)(nil),                          // 756: lq.ResCurrentMatchInfo.CurrentMatchInfo
	(*ResCreateWechatAppOrder_CallWechatAppParam)(nil),                    // 757: lq.ResCreateWechatAppOrder.CallWechatAppParam
	(*ResOpenChest_ChestReplaceCountData)(nil),                            // 758: lq.ResOpenChest.ChestReplaceCountData
	(*ResDoActivitySignIn_RewardData)(nil),                                // 759: lq.ResDoActivitySignIn.RewardData
	(*ReqSendGiftToCharacter_Gift)(nil),                                   // 760: lq.ReqSendGiftToCharacter.Gift
	(*ReqSellItem_Item)(nil),                                              // 761: lq.ReqSellItem.Item
	(*ResCommonView_Slot)(nil),                                            // 762: lq.ResCommonView.Slot
	(*ResAllcommonViews_Views)(nil),                                       // 763: lq.ResAllcommonViews.Views
	(*ReqBuyFromShop_Item)(nil),                                           // 764: lq.ReqBuyFromShop.Item
	(*ResMisc_MiscFaithData)(nil),                                         // 765: lq.ResMisc.MiscFaithData
	(*ResFetchRefundOrder_OrderInfo)(nil),                                 // 766: lq.ResFetchRefundOrder.OrderInfo
	(*ResAccountActivityData_ActivitySignInData)(nil),                     // 767: lq.ResAccountActivityData.ActivitySignInData
	(*ResAccountActivityData_BuffData)(nil),                               // 768: lq.ResAccountActivityData.BuffData
	(*ResAccountActivityData_ActivityRichmanData)(nil),                    // 769: lq.ResAccountActivityData.ActivityRichmanData
	(*ResAccountActivityData_ChestUpData)(nil),                            // 770: lq.ResAccountActivityData.ChestUpData
	(*ResAccountActivityData_ActivitySNSData)(nil),                        // 771: lq.ResAccountActivityData.ActivitySNSData
	(*ResFetchRankPointLeaderboard_Item)(nil),                             // 772: lq.ResFetchRankPointLeaderboard.Item
	(*ResRichmanNextMove_RewardData)(nil),                                 // 773: lq.ResRichmanNextMove.RewardData
	(*ResRichmanNextMove_PathData)(nil),                                   // 774: lq.ResRichmanNextMove.PathData
	(*ResRichmanNextMove_BuffData)(nil),                                   // 775: lq.ResRichmanNextMove.BuffData
	(*ResRichmanChestInfo_ItemData)(nil),                                  // 776: lq.ResRichmanChestInfo.ItemData
	(*ResReceiveAllActivityGift_ReceiveRewards)(nil),                      // 777: lq.ResReceiveAllActivityGift.ReceiveRewards
	(*ResFetchABMatch_MatchPoint)(nil),                                    // 778: lq.ResFetchABMatch.MatchPoint
	(*ResChallengeSeasonInfo_ChallengeInfo)(nil),                          // 779: lq.ResChallengeSeasonInfo.ChallengeInfo
	(*ResReceiveChallengeRankReward_Reward)(nil),                          // 780: lq.ResReceiveChallengeRankReward.Reward
	(*ResGamePointRank_RankInfo)(nil),                                     // 781: lq.ResGamePointRank.RankInfo
	(*ResFetchLastPrivacy_PrivacyInfo)(nil),                               // 782: lq.ResFetchLastPrivacy.PrivacyInfo
	(*ReqCheckPrivacy_Versions)(nil),                                      // 783: lq.ReqCheckPrivacy.Versions
	(*ResFetchRPGBattleHistory_BattleResult)(nil),                         // 784: lq.ResFetchRPGBattleHistory.BattleResult
	(*ResFetchRPGBattleHistoryV2_BattleResultV2)(nil),                     // 785: lq.ResFetchRPGBattleHistoryV2.BattleResultV2
	(*ResArenaReward_RewardItem)(nil),                                     // 786: lq.ResArenaReward.RewardItem
	(*ResReceiveRPGRewards_RewardItem)(nil),                               // 787: lq.ResReceiveRPGRewards.RewardItem
	(*ResReceiveCharacterRewards_RewardItem)(nil),                         // 788: lq.ResReceiveCharacterRewards.RewardItem
	(*ResFeedActivityFeed_RewardItem)(nil),                                // 789: lq.ResFeedActivityFeed.RewardItem
	(*ResFetchFriendGiftActivityData_ItemCountData)(nil),                  // 790: lq.ResFetchFriendGiftActivityData.ItemCountData
	(*ResFetchFriendGiftActivityData_FriendData)(nil),                     // 791: lq.ResFetchFriendGiftActivityData.FriendData
	(*ResReceiveActivitySpotReward_RewardItem)(nil),                       // 792: lq.ResReceiveActivitySpotReward.RewardItem
	(*ResFetchShopInterval_ShopInterval)(nil),                             // 793: lq.ResFetchShopInterval.ShopInterval
	(*ResFetchActivityInterval_ActivityInterval)(nil),                     // 794: lq.ResFetchActivityInterval.ActivityInterval
	(*RecordNewRound_TingPai)(nil),                                        // 795: lq.RecordNewRound.TingPai
	(*GameSnapshot_PlayerSnapshot)(nil),                                   // 796: lq.GameSnapshot.PlayerSnapshot
	(*GameSnapshot_PlayerSnapshot_Fulu)(nil),                              // 797: lq.GameSnapshot.PlayerSnapshot.Fulu
	(*RecordSelectGap_TingPai)(nil),                                       // 798: lq.RecordSelectGap.TingPai
	(*RecordChangeTile_TingPai)(nil),                                      // 799: lq.RecordChangeTile.TingPai
	(*RecordChangeTile_ChangeTile)(nil),                                   // 800: lq.RecordChangeTile.ChangeTile
	(*NotifyGameFinishReward_LevelChange)(nil),                            // 801: lq.NotifyGameFinishReward.LevelChange
	(*NotifyGameFinishReward_MatchChest)(nil),                             // 802: lq.NotifyGameFinishReward.MatchChest
	(*NotifyGameFinishReward_MainCharacter)(nil),                          // 803: lq.NotifyGameFinishReward.MainCharacter
	(*NotifyGameFinishReward_CharacterGift)(nil),                          // 804: lq.NotifyGameFinishReward.CharacterGift
	(*NotifyActivityReward_ActivityReward)(nil),                           // 805: lq.NotifyActivityReward.ActivityReward
	(*NotifyActivityPoint_ActivityPoint)(nil),                             // 806: lq.NotifyActivityPoint.ActivityPoint
	(*NotifyLeaderboardPoint_LeaderboardPoint)(nil),                       // 807: lq.NotifyLeaderboardPoint.LeaderboardPoint
	(*NotifyEndGameVote_VoteResult)(nil),                                  // 808: lq.NotifyEndGameVote.VoteResult
}
var file_liqi_proto_depIdxs = []int32{
	666,  // 0: lq.NotifyRoomPlayerReady.account_list:type_name -> lq.NotifyRoomPlayerReady.AccountReadyState
	667,  // 1: lq.NotifyRoomPlayerDressing.account_list:type_name -> lq.NotifyRoomPlayerDressing.AccountDressingState
	62,   // 2: lq.NotifyRoomPlayerUpdate.update_list:type_name -> lq.PlayerBaseView
	62,   // 3: lq.NotifyRoomPlayerUpdate.player_list:type_name -> lq.PlayerBaseView
	110,  // 4: lq.NotifyFriendStateChange.active_state:type_name -> lq.AccountActiveState
	62,   // 5: lq.NotifyFriendViewChange.base:type_name -> lq.PlayerBaseView
	111,  // 6: lq.NotifyFriendChange.friend:type_name -> lq.Friend
	62,   // 7: lq.NotifyClientMessage.sender:type_name -> lq.PlayerBaseView
	58,   // 8: lq.NotifyAccountUpdate.update:type_name -> lq.AccountUpdate
	668,  // 9: lq.NotifyAnnouncementUpdate.update_list:type_name -> lq.NotifyAnnouncementUpdate.AnnouncementUpdate
	82,   // 10: lq.NotifyNewMail.mail:type_name -> lq.Mail
	94,   // 11: lq.NotifyDailyTaskUpdate.progresses:type_name -> lq.TaskProgress
	94,   // 12: lq.NotifyActivityTaskUpdate.progresses:type_name -> lq.TaskProgress
	94,   // 13: lq.NotifyActivityPeriodTaskUpdate.progresses:type_name -> lq.TaskProgress
	94,   // 14: lq.NotifyAccountRandomTaskUpdate.progresses:type_name -> lq.TaskProgress
	100,  // 15: lq.NotifyActivitySegmentTaskUpdate.progresses:type_name -> lq.SegmentTaskProgress
	669,  // 16: lq.NotifyActivityUpdate.list:type_name -> lq.NotifyActivityUpdate.FeedActivityData
	94,   // 17: lq.NotifyAccountChallengeTaskUpdate.progresses:type_name -> lq.TaskProgress
	122,  // 18: lq.NotifyRollingNotice.notice:type_name -> lq.RollingNotice
	130,  // 19: lq.NotifyShopUpdate.shop_info:type_name -> lq.ShopInfo
	132,  // 20: lq.NotifyServerSetting.settings:type_name -> lq.ServerSettings
	672,  // 21: lq.NotifyPayResult.resource_modify:type_name -> lq.NotifyPayResult.ResourceModify
	146,  // 22: lq.NotifyCustomContestSystemMsg.game_start:type_name -> lq.CustomizedContestGameStart
	147,  // 23: lq.NotifyCustomContestSystemMsg.game_end:type_name -> lq.CustomizedContestGameEnd
	148,  // 24: lq.NotifyActivityChange.new_activities:type_name -> lq.Activity
	673,  // 25: lq.NotifyGameFinishRewardV2.level_change:type_name -> lq.NotifyGameFinishRewardV2.LevelChange
	674,  // 26: lq.NotifyGameFinishRewardV2.match_chest:type_name -> lq.NotifyGameFinishRewardV2.MatchChest
	675,  // 27: lq.NotifyGameFinishRewardV2.main_character:type_name -> lq.NotifyGameFinishRewardV2.MainCharacter
	676,  // 28: lq.NotifyGameFinishRewardV2.character_gift:type_name -> lq.NotifyGameFinishRewardV2.CharacterGift
	677,  // 29: lq.NotifyActivityRewardV2.activity_reward:type_name -> lq.NotifyActivityRewardV2.ActivityReward
	678,  // 30: lq.NotifyActivityPointV2.activity_points:type_name -> lq.NotifyActivityPointV2.ActivityPoint
	679,  // 31: lq.NotifyLeaderboardPointV2.leaderboard_points:type_name -> lq.NotifyLeaderboardPointV2.LeaderboardPoint
	45,   // 32: lq.ResCommon.error:type_name -> lq.Error
	45,   // 33: lq.ResAccountUpdate.error:type_name -> lq.Error
	58,   // 34: lq.ResAccountUpdate.update:type_name -> lq.AccountUpdate
	680,  // 35: lq.AccountMahjongStatistic.recent_round:type_name -> lq.AccountMahjongStatistic.RoundSummary
	681,  // 36: lq.AccountMahjongStatistic.recent_hu:type_name -> lq.AccountMahjongStatistic.HuSummary
	682,  // 37: lq.AccountMahjongStatistic.highest_hu:type_name -> lq.AccountMahjongStatistic.HighestHuRecord
	683,  // 38: lq.AccountMahjongStatistic.recent_20_hu_summary:type_name -> lq.AccountMahjongStatistic.Liqi20Summary
	684,  // 39: lq.AccountMahjongStatistic.recent_10_hu_summary:type_name -> lq.AccountMahjongStatistic.LiQi10Summary
	685,  // 40: lq.AccountMahjongStatistic.recent_10_game_result:type_name -> lq.AccountMahjongStatistic.GameResult
	52,   // 41: lq.AccountStatisticData.statistic:type_name -> lq.AccountMahjongStatistic
	51,   // 42: lq.Account.anti_addiction:type_name -> lq.AntiAddiction
	686,  // 43: lq.Account.platform_diamond:type_name -> lq.Account.PlatformDiamond
	54,   // 44: lq.Account.level:type_name -> lq.AccountLevel
	54,   // 45: lq.Account.level3:type_name -> lq.AccountLevel
	687,  // 46: lq.Account.platform_skin_ticket:type_name -> lq.Account.PlatformSkinTicket
	688,  // 47: lq.Account.challenge_levels:type_name -> lq.Account.ChallengeLevel
	689,  // 48: lq.Account.achievement_count:type_name -> lq.Account.AchievementCount
	690,  // 49: lq.AccountUpdate.numerical:type_name -> lq.AccountUpdate.NumericalUpdate
	691,  // 50: lq.AccountUpdate.character:type_name -> lq.AccountUpdate.CharacterUpdate
	76,   // 51: lq.AccountUpdate.bag:type_name -> lq.BagUpdate
	692,  // 52: lq.AccountUpdate.achievement:type_name -> lq.AccountUpdate.AchievementUpdate
	90,   // 53: lq.AccountUpdate.shilian:type_name -> lq.AccountShiLian
	693,  // 54: lq.AccountUpdate.daily_task:type_name -> lq.AccountUpdate.DailyTaskUpdate
	694,  // 55: lq.AccountUpdate.title:type_name -> lq.AccountUpdate.TitleUpdate
	695,  // 56: lq.AccountUpdate.activity_task:type_name -> lq.AccountUpdate.TaskUpdate
	695,  // 57: lq.AccountUpdate.activity_flip_task:type_name -> lq.AccountUpdate.TaskUpdate
	695,  // 58: lq.AccountUpdate.activity_period_task:type_name -> lq.AccountUpdate.TaskUpdate
	695,  // 59: lq.AccountUpdate.activity_random_task:type_name -> lq.AccountUpdate.TaskUpdate
	696,  // 60: lq.AccountUpdate.challenge:type_name -> lq.AccountUpdate.AccountChallengeUpdate
	697,  // 61: lq.AccountUpdate.ab_match:type_name -> lq.AccountUpdate.AccountABMatchUpdate
	102,  // 62: lq.AccountUpdate.activity:type_name -> lq.AccountActivityUpdate
	698,  // 63: lq.AccountUpdate.activity_segment_task:type_name -> lq.AccountUpdate.SegmentTaskUpdate
	59,   // 64: lq.AccountPlayingGame.meta:type_name -> lq.GameMetaData
	54,   // 65: lq.AccountCacheView.level:type_name -> lq.AccountLevel
	60,   // 66: lq.AccountCacheView.playing_game:type_name -> lq.AccountPlayingGame
	54,   // 67: lq.AccountCacheView.level3:type_name -> lq.AccountLevel
	54,   // 68: lq.PlayerBaseView.level:type_name -> lq.AccountLevel
	54,   // 69: lq.PlayerBaseView.level3:type_name -> lq.AccountLevel
	54,   // 70: lq.PlayerGameView.level:type_name -> lq.AccountLevel
	126,  // 71: lq.PlayerGameView.character:type_name -> lq.Character
	54,   // 72: lq.PlayerGameView.level3:type_name -> lq.AccountLevel
	55,   // 73: lq.PlayerGameView.views:type_name -> lq.ViewSlot
	67,   // 74: lq.GameMode.detail_rule:type_name -> lq.GameDetailRule
	66,   // 75: lq.GameMode.testing_environment:type_name -> lq.GameTestingEnvironmentSet
	64,   // 76: lq.GameMode.game_setting:type_name -> lq.GameSetting
	65,   // 77: lq.Room.mode:type_name -> lq.GameMode
	63,   // 78: lq.Room.persons:type_name -> lq.PlayerGameView
	700,  // 79: lq.GameEndResult.players:type_name -> lq.GameEndResult.PlayerItem
	71,   // 80: lq.ItemGainRecords.records:type_name -> lq.ItemGainRecord
	74,   // 81: lq.Bag.items:type_name -> lq.Item
	72,   // 82: lq.Bag.daily_gain_record:type_name -> lq.ItemGainRecords
	74,   // 83: lq.BagUpdate.update_items:type_name -> lq.Item
	72,   // 84: lq.BagUpdate.update_daily_gain_record:type_name -> lq.ItemGainRecords
	77,   // 85: lq.OpenResult.reward:type_name -> lq.RewardSlot
	77,   // 86: lq.OpenResult.replace:type_name -> lq.RewardSlot
	701,  // 87: lq.RewardPlusResult.exchange:type_name -> lq.RewardPlusResult.Exchange
	77,   // 88: lq.ExecuteReward.reward:type_name -> lq.RewardSlot
	77,   // 89: lq.ExecuteReward.replace:type_name -> lq.RewardSlot
	77,   // 90: lq.Mail.attachments:type_name -> lq.RewardSlot
	81,   // 91: lq.Mail.title_i18n:type_name -> lq.I18nContext
	81,   // 92: lq.Mail.content_i18n:type_name -> lq.I18nContext
	702,  // 93: lq.AccountStatisticByGameMode.round_end:type_name -> lq.AccountStatisticByGameMode.RoundEndData
	703,  // 94: lq.AccountStatisticByGameMode.rank_score:type_name -> lq.AccountStatisticByGameMode.RankScore
	85,   // 95: lq.AccountFanAchieved.fan:type_name -> lq.AccountStatisticByFan
	84,   // 96: lq.AccountDetailStatistic.game_mode:type_name -> lq.AccountStatisticByGameMode
	85,   // 97: lq.AccountDetailStatistic.fan:type_name -> lq.AccountStatisticByFan
	86,   // 98: lq.AccountDetailStatistic.fan_achieved:type_name -> lq.AccountFanAchieved
	87,   // 99: lq.AccountDetailStatisticByCategory.detail_statistic:type_name -> lq.AccountDetailStatistic
	87,   // 100: lq.AccountDetailStatisticV2.friend_room_statistic:type_name -> lq.AccountDetailStatistic
	704,  // 101: lq.AccountDetailStatisticV2.rank_statistic:type_name -> lq.AccountDetailStatisticV2.RankStatistic
	705,  // 102: lq.AccountDetailStatisticV2.customized_contest_statistic:type_name -> lq.AccountDetailStatisticV2.CustomizedContestStatistic
	87,   // 103: lq.AccountDetailStatisticV2.leisure_match_statistic:type_name -> lq.AccountDetailStatistic
	706,  // 104: lq.AccountDetailStatisticV2.challenge_match_statistic:type_name -> lq.AccountDetailStatisticV2.ChallengeStatistic
	87,   // 105: lq.AccountDetailStatisticV2.activity_match_statistic:type_name -> lq.AccountDetailStatistic
	87,   // 106: lq.AccountDetailStatisticV2.ab_match_statistic:type_name -> lq.AccountDetailStatistic
	65,   // 107: lq.GameConfig.mode:type_name -> lq.GameMode
	59,   // 108: lq.GameConfig.meta:type_name -> lq.GameMetaData
	96,   // 109: lq.RPGActivity.current_state:type_name -> lq.RPGState
	96,   // 110: lq.RPGActivity.last_show_state:type_name -> lq.RPGState
	710,  // 111: lq.FeedActivityData.friend_receive_data:type_name -> lq.FeedActivityData.CountWithTimeData
	710,  // 112: lq.FeedActivityData.friend_send_data:type_name -> lq.FeedActivityData.CountWithTimeData
	711,  // 113: lq.FeedActivityData.gift_inbox:type_name -> lq.FeedActivityData.GiftBoxData
	112,  // 114: lq.MineActivityData.dig_point:type_name -> lq.Point
	113,  // 115: lq.MineActivityData.map:type_name -> lq.MineReward
	101,  // 116: lq.AccountActivityUpdate.mine_data:type_name -> lq.MineActivityData
	97,   // 117: lq.AccountActivityUpdate.rpg_data:type_name -> lq.RPGActivity
	103,  // 118: lq.AccountActivityUpdate.feed_data:type_name -> lq.ActivityFeedData
	109,  // 119: lq.AccountActivityUpdate.spot_data:type_name -> lq.ActivitySpotData
	104,  // 120: lq.AccountActivityUpdate.friend_gift_data:type_name -> lq.ActivityFriendGiftData
	105,  // 121: lq.AccountActivityUpdate.upgrade_data:type_name -> lq.ActivityUpgradeData
	108,  // 122: lq.AccountActivityUpdate.gacha_data:type_name -> lq.ActivityGachaUpdateData
	712,  // 123: lq.ActivityFeedData.friend_receive_data:type_name -> lq.ActivityFeedData.CountWithTimeData
	712,  // 124: lq.ActivityFeedData.friend_send_data:type_name -> lq.ActivityFeedData.CountWithTimeData
	713,  // 125: lq.ActivityFeedData.gift_inbox:type_name -> lq.ActivityFeedData.GiftBoxData
	714,  // 126: lq.ActivityFriendGiftData.receive_data:type_name -> lq.ActivityFriendGiftData.CountWithTimeData
	714,  // 127: lq.ActivityFriendGiftData.send_data:type_name -> lq.ActivityFriendGiftData.CountWithTimeData
	715,  // 128: lq.ActivityFriendGiftData.gift_inbox:type_name -> lq.ActivityFriendGiftData.GiftBoxData
	716,  // 129: lq.ActivityUpgradeData.groups:type_name -> lq.ActivityUpgradeData.LevelGroup
	106,  // 130: lq.ActivityGachaData.gained:type_name -> lq.GachaRecord
	106,  // 131: lq.ActivityGachaUpdateData.gained:type_name -> lq.GachaRecord
	717,  // 132: lq.ActivitySpotData.spots:type_name -> lq.ActivitySpotData.SpotData
	60,   // 133: lq.AccountActiveState.playing:type_name -> lq.AccountPlayingGame
	62,   // 134: lq.Friend.base:type_name -> lq.PlayerBaseView
	110,  // 135: lq.Friend.state:type_name -> lq.AccountActiveState
	112,  // 136: lq.MineReward.point:type_name -> lq.Point
	114,  // 137: lq.GameLiveSegment.actions:type_name -> lq.GameLiveUnit
	95,   // 138: lq.GameLiveHead.game_config:type_name -> lq.GameConfig
	63,   // 139: lq.GameLiveHead.players:type_name -> lq.PlayerGameView
	62,   // 140: lq.CommentItem.commenter:type_name -> lq.PlayerBaseView
	123,  // 141: lq.BillingProduct.goods:type_name -> lq.BillingGoods
	55,   // 142: lq.Character.views:type_name -> lq.ViewSlot
	127,  // 143: lq.ZHPShop.buy_records:type_name -> lq.BuyRecord
	718,  // 144: lq.ZHPShop.free_refresh:type_name -> lq.ZHPShop.RefreshCount
	718,  // 145: lq.ZHPShop.cost_refresh:type_name -> lq.ZHPShop.RefreshCount
	128,  // 146: lq.ShopInfo.zhp:type_name -> lq.ZHPShop
	127,  // 147: lq.ShopInfo.buy_records:type_name -> lq.BuyRecord
	135,  // 148: lq.ServerSettings.payment_setting:type_name -> lq.PaymentSetting
	134,  // 149: lq.ServerSettings.payment_setting_v2:type_name -> lq.PaymentSettingV2
	133,  // 150: lq.ServerSettings.nickname_setting:type_name -> lq.NicknameSetting
	720,  // 151: lq.PaymentSettingV2.payment_platforms:type_name -> lq.PaymentSettingV2.PaymentSettingUnit
	721,  // 152: lq.PaymentSetting.wechat:type_name -> lq.PaymentSetting.WechatData
	722,  // 153: lq.PaymentSetting.alipay:type_name -> lq.PaymentSetting.AlipayData
	65,   // 154: lq.CustomizedContestDetail.game_mode:type_name -> lq.GameMode
	95,   // 155: lq.RecordGame.config:type_name -> lq.GameConfig
	723,  // 156: lq.RecordGame.accounts:type_name -> lq.RecordGame.AccountInfo
	69,   // 157: lq.RecordGame.result:type_name -> lq.GameEndResult
	724,  // 158: lq.CustomizedContestGameStart.players:type_name -> lq.CustomizedContestGameStart.Item
	725,  // 159: lq.CustomizedContestGameEnd.players:type_name -> lq.CustomizedContestGameEnd.Item
	726,  // 160: lq.GameRoundHuData.hupai:type_name -> lq.GameRoundHuData.HuPai
	727,  // 161: lq.GameRoundHuData.fans:type_name -> lq.GameRoundHuData.Fan
	152,  // 162: lq.GameRoundPlayerResult.hu:type_name -> lq.GameRoundHuData
	153,  // 163: lq.GameRoundPlayer.result:type_name -> lq.GameRoundPlayerResult
	154,  // 164: lq.GameRoundSnapshot.players:type_name -> lq.GameRoundPlayer
	65,   // 165: lq.GameFinalSnapshot.mode:type_name -> lq.GameMode
	59,   // 166: lq.GameFinalSnapshot.meta:type_name -> lq.GameMetaData
	728,  // 167: lq.GameFinalSnapshot.calculate_param:type_name -> lq.GameFinalSnapshot.CalculateParam
	729,  // 168: lq.GameFinalSnapshot.seats:type_name -> lq.GameFinalSnapshot.GameSeat
	155,  // 169: lq.GameFinalSnapshot.rounds:type_name -> lq.GameRoundSnapshot
	63,   // 170: lq.GameFinalSnapshot.account_views:type_name -> lq.PlayerGameView
	730,  // 171: lq.GameFinalSnapshot.final_players:type_name -> lq.GameFinalSnapshot.FinalPlayer
	731,  // 172: lq.GameFinalSnapshot.afk_info:type_name -> lq.GameFinalSnapshot.AFKInfo
	158,  // 173: lq.ContestDetailRuleV2.game_rule:type_name -> lq.ContestDetailRule
	732,  // 174: lq.ContestDetailRuleV2.extra_rule:type_name -> lq.ContestDetailRuleV2.ExtraRule
	159,  // 175: lq.GameRuleSetting.detail_rule_v2:type_name -> lq.ContestDetailRuleV2
	161,  // 176: lq.RecordNoTilePlayerInfo.tings:type_name -> lq.RecordTingPaiInfo
	733,  // 177: lq.RecordHuleInfo.fans:type_name -> lq.RecordHuleInfo.RecordFanInfo
	163,  // 178: lq.RecordHulesInfo.hules:type_name -> lq.RecordHuleInfo
	162,  // 179: lq.RecordNoTileInfo.players:type_name -> lq.RecordNoTilePlayerInfo
	167,  // 180: lq.RecordRoundInfo.liqi_infos:type_name -> lq.RecordLiqiInfo
	168,  // 181: lq.RecordRoundInfo.gang_infos:type_name -> lq.RecordGangInfo
	170,  // 182: lq.RecordRoundInfo.peipai_infos:type_name -> lq.RecordPeiPaiInfo
	169,  // 183: lq.RecordRoundInfo.babai_infos:type_name -> lq.RecordBaBeiInfo
	164,  // 184: lq.RecordRoundInfo.hules_info:type_name -> lq.RecordHulesInfo
	165,  // 185: lq.RecordRoundInfo.liuju_info:type_name -> lq.RecordLiujuInfo
	166,  // 186: lq.RecordRoundInfo.no_tile_info:type_name -> lq.RecordNoTileInfo
	171,  // 187: lq.RecordAnalysisedData.round_infos:type_name -> lq.RecordRoundInfo
	734,  // 188: lq.AccountResourceSnapshot.bag_item:type_name -> lq.AccountResourceSnapshot.BagItemSnapshot
	735,  // 189: lq.AccountResourceSnapshot.currency:type_name -> lq.AccountResourceSnapshot.CurrencySnapshot
	736,  // 190: lq.AccountResourceSnapshot.title:type_name -> lq.AccountResourceSnapshot.TitleSnapshot
	737,  // 191: lq.AccountResourceSnapshot.used_title:type_name -> lq.AccountResourceSnapshot.UsedTitleSnapshot
	126,  // 192: lq.AccountCharacterSnapshot.removed_characters:type_name -> lq.Character
	126,  // 193: lq.AccountCharacterSnapshot.modified_characters:type_name -> lq.Character
	738,  // 194: lq.AccountCharacterSnapshot.main_character:type_name -> lq.AccountCharacterSnapshot.MainCharacterSnapshot
	739,  // 195: lq.AccountCharacterSnapshot.skins:type_name -> lq.AccountCharacterSnapshot.SkinsSnapshot
	740,  // 196: lq.AccountCharacterSnapshot.hidden_characters:type_name -> lq.AccountCharacterSnapshot.HiddenCharacter
	741,  // 197: lq.AccountMailRecord.removed_mails:type_name -> lq.AccountMailRecord.MailSnapshot
	741,  // 198: lq.AccountMailRecord.modified_mails:type_name -> lq.AccountMailRecord.MailSnapshot
	83,   // 199: lq.AccountAchievementSnapshot.achievements:type_name -> lq.AchievementProgress
	742,  // 200: lq.AccountAchievementSnapshot.rewarded_group:type_name -> lq.AccountAchievementSnapshot.RewardedGroupSnapshot
	743,  // 201: lq.AccountAchievementSnapshot.version:type_name -> lq.AccountAchievementSnapshot.AchievementVersion
	139,  // 202: lq.AccountMiscSnapshot.faith_data:type_name -> lq.FaithData
	744,  // 203: lq.AccountMiscSnapshot.vip_reward_gained:type_name -> lq.AccountMiscSnapshot.AccountVIPRewardSnapshot
	747,  // 204: lq.AccountMiscSnapshot.vip:type_name -> lq.AccountMiscSnapshot.AccountVIP
	130,  // 205: lq.AccountMiscSnapshot.shop_info:type_name -> lq.ShopInfo
	746,  // 206: lq.AccountMiscSnapshot.month_ticket:type_name -> lq.AccountMiscSnapshot.AccountMonthTicketSnapshot
	748,  // 207: lq.AccountMiscSnapshot.recharged:type_name -> lq.AccountMiscSnapshot.AccountRechargeInfo
	175,  // 208: lq.AccSn.resource:type_name -> lq.AccountResourceSnapshot
	176,  // 209: lq.AccSn.character:type_name -> lq.AccountCharacterSnapshot
	177,  // 210: lq.AccSn.mail:type_name -> lq.AccountMailRecord
	178,  // 211: lq.AccSn.achievement:type_name -> lq.AccountAchievementSnapshot
	179,  // 212: lq.AccSn.misc:type_name -> lq.AccountMiscSnapshot
	180,  // 213: lq.AccSn.gift_code:type_name -> lq.AccountGiftCodeRecord
	45,   // 214: lq.ResConnectionInfo.error:type_name -> lq.Error
	47,   // 215: lq.ResConnectionInfo.client_endpoint:type_name -> lq.NetworkEndpoint
	45,   // 216: lq.ResFetchQueueInfo.error:type_name -> lq.Error
	91,   // 217: lq.ReqSignupAccount.device:type_name -> lq.ClientDeviceInfo
	45,   // 218: lq.ResSignupAccount.error:type_name -> lq.Error
	91,   // 219: lq.ReqLogin.device:type_name -> lq.ClientDeviceInfo
	92,   // 220: lq.ReqLogin.client_version:type_name -> lq.ClientVersionInfo
	45,   // 221: lq.ResLogin.error:type_name -> lq.Error
	56,   // 222: lq.ResLogin.account:type_name -> lq.Account
	70,   // 223: lq.ResLogin.game_info:type_name -> lq.GameConnectInfo
	91,   // 224: lq.ReqEmailLogin.device:type_name -> lq.ClientDeviceInfo
	45,   // 225: lq.ResVerfiyCodeForSecure.error:type_name -> lq.Error
	45,   // 226: lq.ResFetchPhoneLoginBind.error:type_name -> lq.Error
	45,   // 227: lq.ResOauth2Auth.error:type_name -> lq.Error
	45,   // 228: lq.ResOauth2Check.error:type_name -> lq.Error
	91,   // 229: lq.ReqOauth2Signup.device:type_name -> lq.ClientDeviceInfo
	92,   // 230: lq.ReqOauth2Signup.client_version:type_name -> lq.ClientVersionInfo
	45,   // 231: lq.ResOauth2Signup.error:type_name -> lq.Error
	91,   // 232: lq.ReqOauth2Login.device:type_name -> lq.ClientDeviceInfo
	92,   // 233: lq.ReqOauth2Login.client_version:type_name -> lq.ClientVersionInfo
	45,   // 234: lq.ResDMMPreLogin.error:type_name -> lq.Error
	45,   // 235: lq.ResLogout.error:type_name -> lq.Error
	45,   // 236: lq.ResAccountInfo.error:type_name -> lq.Error
	56,   // 237: lq.ResAccountInfo.account:type_name -> lq.Account
	68,   // 238: lq.ResAccountInfo.room:type_name -> lq.Room
	45,   // 239: lq.ResSelfRoom.error:type_name -> lq.Error
	68,   // 240: lq.ResSelfRoom.room:type_name -> lq.Room
	65,   // 241: lq.ReqCreateRoom.mode:type_name -> lq.GameMode
	45,   // 242: lq.ResCreateRoom.error:type_name -> lq.Error
	68,   // 243: lq.ResCreateRoom.room:type_name -> lq.Room
	45,   // 244: lq.ResJoinRoom.error:type_name -> lq.Error
	68,   // 245: lq.ResJoinRoom.room:type_name -> lq.Room
	45,   // 246: lq.ResAccountStatisticInfo.error:type_name -> lq.Error
	53,   // 247: lq.ResAccountStatisticInfo.statistic_data:type_name -> lq.AccountStatisticData
	89,   // 248: lq.ResAccountStatisticInfo.detail_data:type_name -> lq.AccountDetailStatisticV2
	45,   // 249: lq.ResAccountChallengeRankInfo.error:type_name -> lq.Error
	749,  // 250: lq.ResAccountChallengeRankInfo.season_info:type_name -> lq.ResAccountChallengeRankInfo.ChallengeRank
	45,   // 251: lq.ResAccountCharacterInfo.error:type_name -> lq.Error
	45,   // 252: lq.ResShopPurchase.error:type_name -> lq.Error
	58,   // 253: lq.ResShopPurchase.update:type_name -> lq.AccountUpdate
	45,   // 254: lq.ResGameRecord.error:type_name -> lq.Error
	145,  // 255: lq.ResGameRecord.head:type_name -> lq.RecordGame
	45,   // 256: lq.ResGameRecordList.error:type_name -> lq.Error
	145,  // 257: lq.ResGameRecordList.record_list:type_name -> lq.RecordGame
	45,   // 258: lq.ResCollectedGameRecordList.error:type_name -> lq.Error
	157,  // 259: lq.ResCollectedGameRecordList.record_list:type_name -> lq.RecordCollectedData
	45,   // 260: lq.ResGameRecordsDetail.error:type_name -> lq.Error
	145,  // 261: lq.ResGameRecordsDetail.record_list:type_name -> lq.RecordGame
	45,   // 262: lq.ResAddCollectedGameRecord.error:type_name -> lq.Error
	45,   // 263: lq.ResRemoveCollectedGameRecord.error:type_name -> lq.Error
	45,   // 264: lq.ResChangeCollectedGameRecordRemarks.error:type_name -> lq.Error
	45,   // 265: lq.ResLevelLeaderboard.error:type_name -> lq.Error
	750,  // 266: lq.ResLevelLeaderboard.items:type_name -> lq.ResLevelLeaderboard.Item
	45,   // 267: lq.ResChallengeLeaderboard.error:type_name -> lq.Error
	751,  // 268: lq.ResChallengeLeaderboard.items:type_name -> lq.ResChallengeLeaderboard.Item
	45,   // 269: lq.ResMutiChallengeLevel.error:type_name -> lq.Error
	752,  // 270: lq.ResMutiChallengeLevel.items:type_name -> lq.ResMutiChallengeLevel.Item
	45,   // 271: lq.ResMultiAccountBrief.error:type_name -> lq.Error
	62,   // 272: lq.ResMultiAccountBrief.players:type_name -> lq.PlayerBaseView
	45,   // 273: lq.ResFriendList.error:type_name -> lq.Error
	111,  // 274: lq.ResFriendList.friends:type_name -> lq.Friend
	45,   // 275: lq.ResFriendApplyList.error:type_name -> lq.Error
	753,  // 276: lq.ResFriendApplyList.applies:type_name -> lq.ResFriendApplyList.FriendApply
	45,   // 277: lq.ResSearchAccountByPattern.error:type_name -> lq.Error
	45,   // 278: lq.ResAccountStates.error:type_name -> lq.Error
	110,  // 279: lq.ResAccountStates.states:type_name -> lq.AccountActiveState
	45,   // 280: lq.ResSearchAccountById.error:type_name -> lq.Error
	62,   // 281: lq.ResSearchAccountById.player:type_name -> lq.PlayerBaseView
	45,   // 282: lq.ResBagInfo.error:type_name -> lq.Error
	75,   // 283: lq.ResBagInfo.bag:type_name -> lq.Bag
	45,   // 284: lq.ResOpenRandomRewardItem.error:type_name -> lq.Error
	78,   // 285: lq.ResOpenRandomRewardItem.results:type_name -> lq.OpenResult
	45,   // 286: lq.ResOpenAllRewardItem.error:type_name -> lq.Error
	78,   // 287: lq.ResOpenAllRewardItem.results:type_name -> lq.OpenResult
	45,   // 288: lq.ResAnnouncement.error:type_name -> lq.Error
	93,   // 289: lq.ResAnnouncement.announcements:type_name -> lq.Announcement
	45,   // 290: lq.ResMailInfo.error:type_name -> lq.Error
	82,   // 291: lq.ResMailInfo.mails:type_name -> lq.Mail
	45,   // 292: lq.ResReceiveAchievementGroupReward.error:type_name -> lq.Error
	80,   // 293: lq.ResReceiveAchievementGroupReward.execute_reward:type_name -> lq.ExecuteReward
	45,   // 294: lq.ResReceiveAchievementReward.error:type_name -> lq.Error
	80,   // 295: lq.ResReceiveAchievementReward.execute_reward:type_name -> lq.ExecuteReward
	45,   // 296: lq.ResFetchAchievementRate.error:type_name -> lq.Error
	754,  // 297: lq.ResFetchAchievementRate.rate:type_name -> lq.ResFetchAchievementRate.AchievementRate
	45,   // 298: lq.ResAchievement.error:type_name -> lq.Error
	83,   // 299: lq.ResAchievement.progresses:type_name -> lq.AchievementProgress
	45,   // 300: lq.ResTitleList.error:type_name -> lq.Error
	45,   // 301: lq.ResClientValue.error:type_name -> lq.Error
	755,  // 302: lq.ResClientValue.datas:type_name -> lq.ResClientValue.Value
	45,   // 303: lq.ResCurrentMatchInfo.error:type_name -> lq.Error
	756,  // 304: lq.ResCurrentMatchInfo.matches:type_name -> lq.ResCurrentMatchInfo.CurrentMatchInfo
	45,   // 305: lq.ResReviveCoinInfo.error:type_name -> lq.Error
	45,   // 306: lq.ResDailyTask.error:type_name -> lq.Error
	94,   // 307: lq.ResDailyTask.progresses:type_name -> lq.TaskProgress
	45,   // 308: lq.ResRefreshDailyTask.error:type_name -> lq.Error
	94,   // 309: lq.ResRefreshDailyTask.progress:type_name -> lq.TaskProgress
	45,   // 310: lq.ResUseGiftCode.error:type_name -> lq.Error
	77,   // 311: lq.ResUseGiftCode.rewards:type_name -> lq.RewardSlot
	45,   // 312: lq.ResUseSpecialGiftCode.error:type_name -> lq.Error
	80,   // 313: lq.ResUseSpecialGiftCode.rewards:type_name -> lq.ExecuteReward
	45,   // 314: lq.ResGameLiveInfo.error:type_name -> lq.Error
	117,  // 315: lq.ResGameLiveInfo.live_head:type_name -> lq.GameLiveHead
	116,  // 316: lq.ResGameLiveInfo.segments:type_name -> lq.GameLiveSegmentUri
	45,   // 317: lq.ResGameLiveLeftSegment.error:type_name -> lq.Error
	116,  // 318: lq.ResGameLiveLeftSegment.segments:type_name -> lq.GameLiveSegmentUri
	45,   // 319: lq.ResGameLiveList.error:type_name -> lq.Error
	117,  // 320: lq.ResGameLiveList.live_list:type_name -> lq.GameLiveHead
	45,   // 321: lq.ResCommentSetting.error:type_name -> lq.Error
	45,   // 322: lq.ResFetchCommentList.error:type_name -> lq.Error
	45,   // 323: lq.ResFetchCommentContent.error:type_name -> lq.Error
	121,  // 324: lq.ResFetchCommentContent.comments:type_name -> lq.CommentItem
	122,  // 325: lq.ReqRollingNotice.notice:type_name -> lq.RollingNotice
	45,   // 326: lq.ResPlatformBillingProducts.error:type_name -> lq.Error
	125,  // 327: lq.ResPlatformBillingProducts.products:type_name -> lq.BillingProduct
	45,   // 328: lq.ResCreateBillingOrder.error:type_name -> lq.Error
	45,   // 329: lq.ResCreateWechatNativeOrder.error:type_name -> lq.Error
	45,   // 330: lq.ResCreateWechatAppOrder.error:type_name -> lq.Error
	757,  // 331: lq.ResCreateWechatAppOrder.call_wechat_app_param:type_name -> lq.ResCreateWechatAppOrder.CallWechatAppParam
	45,   // 332: lq.ResCreateAlipayOrder.error:type_name -> lq.Error
	45,   // 333: lq.ResCreateAlipayScanOrder.error:type_name -> lq.Error
	45,   // 334: lq.ResCreateAlipayAppOrder.error:type_name -> lq.Error
	45,   // 335: lq.ResCreateJPCreditCardOrder.error:type_name -> lq.Error
	45,   // 336: lq.ResCreateJPPaypalOrder.error:type_name -> lq.Error
	45,   // 337: lq.ResCreateJPAuOrder.error:type_name -> lq.Error
	45,   // 338: lq.ResCreateJPDocomoOrder.error:type_name -> lq.Error
	45,   // 339: lq.ResCreateJPWebMoneyOrder.error:type_name -> lq.Error
	45,   // 340: lq.ResCreateJPSoftbankOrder.error:type_name -> lq.Error
	45,   // 341: lq.ResCreateJPPayPayOrder.error:type_name -> lq.Error
	45,   // 342: lq.ResFetchJPCommonCreditCardOrder.error:type_name -> lq.Error
	45,   // 343: lq.ResCreateYostarOrder.error:type_name -> lq.Error
	45,   // 344: lq.ResCreateENPaypalOrder.error:type_name -> lq.Error
	45,   // 345: lq.ResCreateENJCBOrder.error:type_name -> lq.Error
	45,   // 346: lq.ResCreateENMasterCardOrder.error:type_name -> lq.Error
	45,   // 347: lq.ResCreateENVisaOrder.error:type_name -> lq.Error
	45,   // 348: lq.ResCreateENAlipayOrder.error:type_name -> lq.Error
	45,   // 349: lq.ResCreateKRPaypalOrder.error:type_name -> lq.Error
	45,   // 350: lq.ResCreateKRJCBOrder.error:type_name -> lq.Error
	45,   // 351: lq.ResCreateKRMasterCardOrder.error:type_name -> lq.Error
	45,   // 352: lq.ResCreateKRVisaOrder.error:type_name -> lq.Error
	45,   // 353: lq.ResCreateKRAlipayOrder.error:type_name -> lq.Error
	45,   // 354: lq.ResCreateDmmOrder.error:type_name -> lq.Error
	45,   // 355: lq.ResCreateIAPOrder.error:type_name -> lq.Error
	45,   // 356: lq.ResVerificationIAPOrder.error:type_name -> lq.Error
	45,   // 357: lq.ResCreateSteamOrder.error:type_name -> lq.Error
	45,   // 358: lq.ResCreateMyCardOrder.error:type_name -> lq.Error
	45,   // 359: lq.ResCreatePaypalOrder.error:type_name -> lq.Error
	45,   // 360: lq.ResCreateXsollaOrder.error:type_name -> lq.Error
	45,   // 361: lq.ResOpenChest.error:type_name -> lq.Error
	78,   // 362: lq.ResOpenChest.results:type_name -> lq.OpenResult
	758,  // 363: lq.ResOpenChest.chest_replace_up:type_name -> lq.ResOpenChest.ChestReplaceCountData
	45,   // 364: lq.ResBuyFromChestShop.error:type_name -> lq.Error
	45,   // 365: lq.ResDailySignInInfo.error:type_name -> lq.Error
	45,   // 366: lq.ResDoActivitySignIn.error:type_name -> lq.Error
	759,  // 367: lq.ResDoActivitySignIn.rewards:type_name -> lq.ResDoActivitySignIn.RewardData
	45,   // 368: lq.ResCharacterInfo.error:type_name -> lq.Error
	126,  // 369: lq.ResCharacterInfo.characters:type_name -> lq.Character
	45,   // 370: lq.ResSetHiddenCharacter.error:type_name -> lq.Error
	760,  // 371: lq.ReqSendGiftToCharacter.gifts:type_name -> lq.ReqSendGiftToCharacter.Gift
	45,   // 372: lq.ResSendGiftToCharacter.error:type_name -> lq.Error
	761,  // 373: lq.ReqSellItem.sells:type_name -> lq.ReqSellItem.Item
	45,   // 374: lq.ResCommonView.error:type_name -> lq.Error
	762,  // 375: lq.ResCommonView.slots:type_name -> lq.ResCommonView.Slot
	55,   // 376: lq.ReqSaveCommonViews.views:type_name -> lq.ViewSlot
	45,   // 377: lq.ResCommonViews.error:type_name -> lq.Error
	55,   // 378: lq.ResCommonViews.views:type_name -> lq.ViewSlot
	763,  // 379: lq.ResAllcommonViews.views:type_name -> lq.ResAllcommonViews.Views
	45,   // 380: lq.ResAllcommonViews.error:type_name -> lq.Error
	45,   // 381: lq.ResUpgradeCharacter.error:type_name -> lq.Error
	126,  // 382: lq.ResUpgradeCharacter.character:type_name -> lq.Character
	45,   // 383: lq.ResShopInfo.error:type_name -> lq.Error
	130,  // 384: lq.ResShopInfo.shop_info:type_name -> lq.ShopInfo
	764,  // 385: lq.ReqBuyFromShop.ver_price:type_name -> lq.ReqBuyFromShop.Item
	764,  // 386: lq.ReqBuyFromShop.ver_goods:type_name -> lq.ReqBuyFromShop.Item
	45,   // 387: lq.ResBuyFromShop.error:type_name -> lq.Error
	77,   // 388: lq.ResBuyFromShop.rewards:type_name -> lq.RewardSlot
	45,   // 389: lq.ResPayMonthTicket.error:type_name -> lq.Error
	45,   // 390: lq.ResRefreshZHPShop.error:type_name -> lq.Error
	128,  // 391: lq.ResRefreshZHPShop.zhp:type_name -> lq.ZHPShop
	45,   // 392: lq.ResMonthTicketInfo.error:type_name -> lq.Error
	129,  // 393: lq.ResMonthTicketInfo.month_ticket_info:type_name -> lq.MonthTicketInfo
	45,   // 394: lq.ResServerSettings.error:type_name -> lq.Error
	132,  // 395: lq.ResServerSettings.settings:type_name -> lq.ServerSettings
	45,   // 396: lq.ResAccountSettings.error:type_name -> lq.Error
	136,  // 397: lq.ResAccountSettings.settings:type_name -> lq.AccountSetting
	136,  // 398: lq.ReqUpdateAccountSettings.setting:type_name -> lq.AccountSetting
	45,   // 399: lq.ResModNicknameTime.error:type_name -> lq.Error
	45,   // 400: lq.ResMisc.error:type_name -> lq.Error
	765,  // 401: lq.ResMisc.faiths:type_name -> lq.ResMisc.MiscFaithData
	45,   // 402: lq.ResIDCardInfo.error:type_name -> lq.Error
	45,   // 403: lq.ResVipReward.error:type_name -> lq.Error
	45,   // 404: lq.ResFetchRefundOrder.error:type_name -> lq.Error
	766,  // 405: lq.ResFetchRefundOrder.orders:type_name -> lq.ResFetchRefundOrder.OrderInfo
	81,   // 406: lq.ResFetchRefundOrder.message:type_name -> lq.I18nContext
	45,   // 407: lq.ResFetchCustomizedContestList.error:type_name -> lq.Error
	140,  // 408: lq.ResFetchCustomizedContestList.contests:type_name -> lq.CustomizedContestBase
	140,  // 409: lq.ResFetchCustomizedContestList.follow_contests:type_name -> lq.CustomizedContestBase
	45,   // 410: lq.ResFetchCustomizedContestExtendInfo.error:type_name -> lq.Error
	141,  // 411: lq.ResFetchCustomizedContestExtendInfo.extend_list:type_name -> lq.CustomizedContestExtend
	45,   // 412: lq.ResFetchCustomizedContestAuthInfo.error:type_name -> lq.Error
	45,   // 413: lq.ResEnterCustomizedContest.error:type_name -> lq.Error
	143,  // 414: lq.ResEnterCustomizedContest.detail_info:type_name -> lq.CustomizedContestDetail
	144,  // 415: lq.ResEnterCustomizedContest.player_report:type_name -> lq.CustomizedContestPlayerReport
	45,   // 416: lq.ResFetchCustomizedContestOnlineInfo.error:type_name -> lq.Error
	45,   // 417: lq.ResFetchCustomizedContestByContestId.error:type_name -> lq.Error
	142,  // 418: lq.ResFetchCustomizedContestByContestId.contest_info:type_name -> lq.CustomizedContestAbstract
	45,   // 419: lq.ResJoinCustomizedContestChatRoom.error:type_name -> lq.Error
	45,   // 420: lq.ResFetchCustomizedContestGameLiveList.error:type_name -> lq.Error
	117,  // 421: lq.ResFetchCustomizedContestGameLiveList.live_list:type_name -> lq.GameLiveHead
	45,   // 422: lq.ResFetchCustomizedContestGameRecords.error:type_name -> lq.Error
	145,  // 423: lq.ResFetchCustomizedContestGameRecords.record_list:type_name -> lq.RecordGame
	45,   // 424: lq.ResActivityList.error:type_name -> lq.Error
	148,  // 425: lq.ResActivityList.activities:type_name -> lq.Activity
	45,   // 426: lq.ResAccountActivityData.error:type_name -> lq.Error
	149,  // 427: lq.ResAccountActivityData.exchange_records:type_name -> lq.ExchangeRecord
	94,   // 428: lq.ResAccountActivityData.task_progress_list:type_name -> lq.TaskProgress
	150,  // 429: lq.ResAccountActivityData.accumulated_point_list:type_name -> lq.ActivityAccumulatedPointData
	151,  // 430: lq.ResAccountActivityData.rank_data_list:type_name -> lq.ActivityRankPointData
	94,   // 431: lq.ResAccountActivityData.flip_task_progress_list:type_name -> lq.TaskProgress
	767,  // 432: lq.ResAccountActivityData.sign_in_data:type_name -> lq.ResAccountActivityData.ActivitySignInData
	769,  // 433: lq.ResAccountActivityData.richman_data:type_name -> lq.ResAccountActivityData.ActivityRichmanData
	94,   // 434: lq.ResAccountActivityData.period_task_progress_list:type_name -> lq.TaskProgress
	94,   // 435: lq.ResAccountActivityData.random_task_progress_list:type_name -> lq.TaskProgress
	770,  // 436: lq.ResAccountActivityData.chest_up_data:type_name -> lq.ResAccountActivityData.ChestUpData
	771,  // 437: lq.ResAccountActivityData.sns_data:type_name -> lq.ResAccountActivityData.ActivitySNSData
	101,  // 438: lq.ResAccountActivityData.mine_data:type_name -> lq.MineActivityData
	97,   // 439: lq.ResAccountActivityData.rpg_data:type_name -> lq.RPGActivity
	98,   // 440: lq.ResAccountActivityData.arena_data:type_name -> lq.ActivityArenaData
	99,   // 441: lq.ResAccountActivityData.feed_data:type_name -> lq.FeedActivityData
	100,  // 442: lq.ResAccountActivityData.segment_task_progress_list:type_name -> lq.SegmentTaskProgress
	173,  // 443: lq.ResAccountActivityData.vote_records:type_name -> lq.VoteData
	109,  // 444: lq.ResAccountActivityData.spot_data:type_name -> lq.ActivitySpotData
	104,  // 445: lq.ResAccountActivityData.friend_gift_data:type_name -> lq.ActivityFriendGiftData
	105,  // 446: lq.ResAccountActivityData.upgrade_data:type_name -> lq.ActivityUpgradeData
	108,  // 447: lq.ResAccountActivityData.gacha_data:type_name -> lq.ActivityGachaUpdateData
	45,   // 448: lq.ResExchangeActivityItem.error:type_name -> lq.Error
	80,   // 449: lq.ResExchangeActivityItem.execute_reward:type_name -> lq.ExecuteReward
	45,   // 450: lq.ResReceiveActivityFlipTask.error:type_name -> lq.Error
	45,   // 451: lq.ResCompleteSegmentTaskReward.error:type_name -> lq.Error
	80,   // 452: lq.ResCompleteSegmentTaskReward.rewards:type_name -> lq.ExecuteReward
	45,   // 453: lq.ResFetchActivityFlipInfo.error:type_name -> lq.Error
	45,   // 454: lq.ResFetchRankPointLeaderboard.error:type_name -> lq.Error
	772,  // 455: lq.ResFetchRankPointLeaderboard.items:type_name -> lq.ResFetchRankPointLeaderboard.Item
	774,  // 456: lq.ResRichmanNextMove.paths:type_name -> lq.ResRichmanNextMove.PathData
	775,  // 457: lq.ResRichmanNextMove.buff:type_name -> lq.ResRichmanNextMove.BuffData
	45,   // 458: lq.ResRichmanNextMove.error:type_name -> lq.Error
	776,  // 459: lq.ResRichmanChestInfo.items:type_name -> lq.ResRichmanChestInfo.ItemData
	45,   // 460: lq.ResRichmanChestInfo.error:type_name -> lq.Error
	45,   // 461: lq.ResCreateGameObserveAuth.error:type_name -> lq.Error
	45,   // 462: lq.ResRefreshGameObserveAuth.error:type_name -> lq.Error
	45,   // 463: lq.ResActivityBuff.error:type_name -> lq.Error
	174,  // 464: lq.ResActivityBuff.buff_list:type_name -> lq.ActivityBuffData
	45,   // 465: lq.ResUpgradeActivityLevel.error:type_name -> lq.Error
	80,   // 466: lq.ResUpgradeActivityLevel.rewards:type_name -> lq.ExecuteReward
	45,   // 467: lq.ResReceiveUpgradeActivityReward.error:type_name -> lq.Error
	80,   // 468: lq.ResReceiveUpgradeActivityReward.rewards:type_name -> lq.ExecuteReward
	45,   // 469: lq.ResReceiveAllActivityGift.error:type_name -> lq.Error
	80,   // 470: lq.ResReceiveAllActivityGift.rewards:type_name -> lq.ExecuteReward
	777,  // 471: lq.ResReceiveAllActivityGift.receive_gift:type_name -> lq.ResReceiveAllActivityGift.ReceiveRewards
	45,   // 472: lq.ResUpgradeChallenge.error:type_name -> lq.Error
	94,   // 473: lq.ResUpgradeChallenge.task_progress:type_name -> lq.TaskProgress
	45,   // 474: lq.ResRefreshChallenge.error:type_name -> lq.Error
	94,   // 475: lq.ResRefreshChallenge.task_progress:type_name -> lq.TaskProgress
	45,   // 476: lq.ResFetchChallengeInfo.error:type_name -> lq.Error
	94,   // 477: lq.ResFetchChallengeInfo.task_progress:type_name -> lq.TaskProgress
	45,   // 478: lq.ResFetchABMatch.error:type_name -> lq.Error
	778,  // 479: lq.ResFetchABMatch.match_max_point:type_name -> lq.ResFetchABMatch.MatchPoint
	45,   // 480: lq.ResChallengeSeasonInfo.error:type_name -> lq.Error
	779,  // 481: lq.ResChallengeSeasonInfo.challenge_season_list:type_name -> lq.ResChallengeSeasonInfo.ChallengeInfo
	45,   // 482: lq.ResReceiveChallengeRankReward.error:type_name -> lq.Error
	780,  // 483: lq.ResReceiveChallengeRankReward.rewards:type_name -> lq.ResReceiveChallengeRankReward.Reward
	45,   // 484: lq.ResGamePointRank.error:type_name -> lq.Error
	781,  // 485: lq.ResGamePointRank.rank:type_name -> lq.ResGamePointRank.RankInfo
	45,   // 486: lq.ResFetchSelfGamePointRank.error:type_name -> lq.Error
	45,   // 487: lq.ResReadSNS.error:type_name -> lq.Error
	470,  // 488: lq.ResReadSNS.sns_content:type_name -> lq.SNSBlog
	45,   // 489: lq.ResReplySNS.error:type_name -> lq.Error
	471,  // 490: lq.ResReplySNS.sns_reply:type_name -> lq.SNSReply
	45,   // 491: lq.ResLikeSNS.error:type_name -> lq.Error
	112,  // 492: lq.ReqDigMine.point:type_name -> lq.Point
	45,   // 493: lq.ResDigMine.error:type_name -> lq.Error
	113,  // 494: lq.ResDigMine.map:type_name -> lq.MineReward
	77,   // 495: lq.ResDigMine.reward:type_name -> lq.RewardSlot
	45,   // 496: lq.ResFetchLastPrivacy.error:type_name -> lq.Error
	782,  // 497: lq.ResFetchLastPrivacy.privacy:type_name -> lq.ResFetchLastPrivacy.PrivacyInfo
	783,  // 498: lq.ReqCheckPrivacy.versions:type_name -> lq.ReqCheckPrivacy.Versions
	45,   // 499: lq.ResFetchRPGBattleHistory.error:type_name -> lq.Error
	784,  // 500: lq.ResFetchRPGBattleHistory.battle_result:type_name -> lq.ResFetchRPGBattleHistory.BattleResult
	96,   // 501: lq.ResFetchRPGBattleHistory.start_state:type_name -> lq.RPGState
	96,   // 502: lq.ResFetchRPGBattleHistory.current_state:type_name -> lq.RPGState
	45,   // 503: lq.ResFetchRPGBattleHistoryV2.error:type_name -> lq.Error
	785,  // 504: lq.ResFetchRPGBattleHistoryV2.battle_result:type_name -> lq.ResFetchRPGBattleHistoryV2.BattleResultV2
	96,   // 505: lq.ResFetchRPGBattleHistoryV2.start_state:type_name -> lq.RPGState
	96,   // 506: lq.ResFetchRPGBattleHistoryV2.current_state:type_name -> lq.RPGState
	785,  // 507: lq.ResFetchRPGBattleHistoryV2.recent_battle_result:type_name -> lq.ResFetchRPGBattleHistoryV2.BattleResultV2
	45,   // 508: lq.ResArenaReward.error:type_name -> lq.Error
	786,  // 509: lq.ResArenaReward.items:type_name -> lq.ResArenaReward.RewardItem
	45,   // 510: lq.ResReceiveRPGRewards.error:type_name -> lq.Error
	787,  // 511: lq.ResReceiveRPGRewards.items:type_name -> lq.ResReceiveRPGRewards.RewardItem
	45,   // 512: lq.ResFetchOBToken.error:type_name -> lq.Error
	45,   // 513: lq.ResReceiveCharacterRewards.error:type_name -> lq.Error
	788,  // 514: lq.ResReceiveCharacterRewards.items:type_name -> lq.ResReceiveCharacterRewards.RewardItem
	45,   // 515: lq.ResFeedActivityFeed.error:type_name -> lq.Error
	789,  // 516: lq.ResFeedActivityFeed.items:type_name -> lq.ResFeedActivityFeed.RewardItem
	45,   // 517: lq.ResSendActivityGiftToFriend.error:type_name -> lq.Error
	45,   // 518: lq.ResFetchFriendGiftActivityData.error:type_name -> lq.Error
	791,  // 519: lq.ResFetchFriendGiftActivityData.list:type_name -> lq.ResFetchFriendGiftActivityData.FriendData
	45,   // 520: lq.ResOpenPreChestItem.error:type_name -> lq.Error
	78,   // 521: lq.ResOpenPreChestItem.results:type_name -> lq.OpenResult
	45,   // 522: lq.ResFetchVoteActivity.error:type_name -> lq.Error
	45,   // 523: lq.ResVoteActivity.error:type_name -> lq.Error
	173,  // 524: lq.ResVoteActivity.vote_records:type_name -> lq.VoteData
	45,   // 525: lq.ResReceiveActivitySpotReward.error:type_name -> lq.Error
	792,  // 526: lq.ResReceiveActivitySpotReward.items:type_name -> lq.ResReceiveActivitySpotReward.RewardItem
	45,   // 527: lq.ResFetchOauth2.error:type_name -> lq.Error
	45,   // 528: lq.ResDeleteAccount.error:type_name -> lq.Error
	45,   // 529: lq.ResFetchShopInterval.error:type_name -> lq.Error
	793,  // 530: lq.ResFetchShopInterval.result:type_name -> lq.ResFetchShopInterval.ShopInterval
	45,   // 531: lq.ResFetchActivityInterval.error:type_name -> lq.Error
	794,  // 532: lq.ResFetchActivityInterval.result:type_name -> lq.ResFetchActivityInterval.ActivityInterval
	45,   // 533: lq.ResFetchrecentFriend.error:type_name -> lq.Error
	45,   // 534: lq.ResOpenGacha.error:type_name -> lq.Error
	80,   // 535: lq.ResOpenGacha.reward_items:type_name -> lq.ExecuteReward
	80,   // 536: lq.ResOpenGacha.sp_reward_items:type_name -> lq.ExecuteReward
	596,  // 537: lq.ChuanmaGang.gameend:type_name -> lq.GameEnd
	593,  // 538: lq.ChuanmaGang.hules_history:type_name -> lq.HuleInfo
	590,  // 539: lq.ActionNewRound.operation:type_name -> lq.OptionalOperationList
	595,  // 540: lq.ActionNewRound.tingpais0:type_name -> lq.TingPaiDiscardInfo
	594,  // 541: lq.ActionNewRound.tingpais1:type_name -> lq.TingPaiInfo
	573,  // 542: lq.ActionNewRound.opens:type_name -> lq.NewRoundOpenedTiles
	574,  // 543: lq.ActionNewRound.muyu:type_name -> lq.MuyuInfo
	795,  // 544: lq.RecordNewRound.tingpai:type_name -> lq.RecordNewRound.TingPai
	590,  // 545: lq.RecordNewRound.operation:type_name -> lq.OptionalOperationList
	573,  // 546: lq.RecordNewRound.opens:type_name -> lq.NewRoundOpenedTiles
	574,  // 547: lq.RecordNewRound.muyu:type_name -> lq.MuyuInfo
	590,  // 548: lq.RecordNewRound.operations:type_name -> lq.OptionalOperationList
	796,  // 549: lq.GameSnapshot.players:type_name -> lq.GameSnapshot.PlayerSnapshot
	588,  // 550: lq.GameDetailRecords.actions:type_name -> lq.GameAction
	583,  // 551: lq.GameUserInput.operation:type_name -> lq.GameSelfOperation
	584,  // 552: lq.GameUserInput.cpg:type_name -> lq.GameChiPengGang
	585,  // 553: lq.GameUserInput.vote:type_name -> lq.GameVoteGameEnd
	586,  // 554: lq.GameAction.user_input:type_name -> lq.GameUserInput
	587,  // 555: lq.GameAction.user_event:type_name -> lq.GameUserEvent
	589,  // 556: lq.OptionalOperationList.operation_list:type_name -> lq.OptionalOperation
	592,  // 557: lq.HuleInfo.fans:type_name -> lq.FanInfo
	594,  // 558: lq.TingPaiDiscardInfo.infos:type_name -> lq.TingPaiInfo
	595,  // 559: lq.ActionSelectGap.tingpais0:type_name -> lq.TingPaiDiscardInfo
	594,  // 560: lq.ActionSelectGap.tingpais1:type_name -> lq.TingPaiInfo
	590,  // 561: lq.ActionSelectGap.operation:type_name -> lq.OptionalOperationList
	798,  // 562: lq.RecordSelectGap.tingpai:type_name -> lq.RecordSelectGap.TingPai
	590,  // 563: lq.RecordSelectGap.operation:type_name -> lq.OptionalOperationList
	595,  // 564: lq.ActionChangeTile.tingpais0:type_name -> lq.TingPaiDiscardInfo
	594,  // 565: lq.ActionChangeTile.tingpais1:type_name -> lq.TingPaiInfo
	590,  // 566: lq.ActionChangeTile.operation:type_name -> lq.OptionalOperationList
	799,  // 567: lq.RecordChangeTile.tingpai:type_name -> lq.RecordChangeTile.TingPai
	800,  // 568: lq.RecordChangeTile.change_tile_infos:type_name -> lq.RecordChangeTile.ChangeTile
	590,  // 569: lq.RecordChangeTile.operation:type_name -> lq.OptionalOperationList
	590,  // 570: lq.RecordChangeTile.operations:type_name -> lq.OptionalOperationList
	590,  // 571: lq.ActionRevealTile.operation:type_name -> lq.OptionalOperationList
	594,  // 572: lq.ActionRevealTile.tingpais:type_name -> lq.TingPaiInfo
	590,  // 573: lq.RecordRevealTile.operations:type_name -> lq.OptionalOperationList
	594,  // 574: lq.RecordRevealTile.tingpais:type_name -> lq.TingPaiInfo
	590,  // 575: lq.ActionUnveilTile.operation:type_name -> lq.OptionalOperationList
	590,  // 576: lq.RecordUnveilTile.operation:type_name -> lq.OptionalOperationList
	590,  // 577: lq.ActionLockTile.operation:type_name -> lq.OptionalOperationList
	594,  // 578: lq.ActionLockTile.tingpais:type_name -> lq.TingPaiInfo
	590,  // 579: lq.RecordLockTile.operation:type_name -> lq.OptionalOperationList
	594,  // 580: lq.RecordLockTile.tingpais:type_name -> lq.TingPaiInfo
	590,  // 581: lq.ActionDiscardTile.operation:type_name -> lq.OptionalOperationList
	594,  // 582: lq.ActionDiscardTile.tingpais:type_name -> lq.TingPaiInfo
	574,  // 583: lq.ActionDiscardTile.muyu:type_name -> lq.MuyuInfo
	594,  // 584: lq.RecordDiscardTile.tingpais:type_name -> lq.TingPaiInfo
	590,  // 585: lq.RecordDiscardTile.operations:type_name -> lq.OptionalOperationList
	574,  // 586: lq.RecordDiscardTile.muyu:type_name -> lq.MuyuInfo
	590,  // 587: lq.ActionDealTile.operation:type_name -> lq.OptionalOperationList
	591,  // 588: lq.ActionDealTile.liqi:type_name -> lq.LiQiSuccess
	595,  // 589: lq.ActionDealTile.tingpais:type_name -> lq.TingPaiDiscardInfo
	574,  // 590: lq.ActionDealTile.muyu:type_name -> lq.MuyuInfo
	591,  // 591: lq.RecordDealTile.liqi:type_name -> lq.LiQiSuccess
	590,  // 592: lq.RecordDealTile.operation:type_name -> lq.OptionalOperationList
	574,  // 593: lq.RecordDealTile.muyu:type_name -> lq.MuyuInfo
	590,  // 594: lq.ActionFillAwaitingTiles.operation:type_name -> lq.OptionalOperationList
	591,  // 595: lq.ActionFillAwaitingTiles.liqi:type_name -> lq.LiQiSuccess
	590,  // 596: lq.RecordFillAwaitingTiles.operation:type_name -> lq.OptionalOperationList
	591,  // 597: lq.RecordFillAwaitingTiles.liqi:type_name -> lq.LiQiSuccess
	591,  // 598: lq.ActionChiPengGang.liqi:type_name -> lq.LiQiSuccess
	590,  // 599: lq.ActionChiPengGang.operation:type_name -> lq.OptionalOperationList
	595,  // 600: lq.ActionChiPengGang.tingpais:type_name -> lq.TingPaiDiscardInfo
	574,  // 601: lq.ActionChiPengGang.muyu:type_name -> lq.MuyuInfo
	591,  // 602: lq.RecordChiPengGang.liqi:type_name -> lq.LiQiSuccess
	590,  // 603: lq.RecordChiPengGang.operation:type_name -> lq.OptionalOperationList
	574,  // 604: lq.RecordChiPengGang.muyu:type_name -> lq.MuyuInfo
	575,  // 605: lq.ActionGangResult.gang_infos:type_name -> lq.ChuanmaGang
	575,  // 606: lq.RecordGangResult.gang_infos:type_name -> lq.ChuanmaGang
	575,  // 607: lq.ActionGangResultEnd.gang_infos:type_name -> lq.ChuanmaGang
	575,  // 608: lq.RecordGangResultEnd.gang_infos:type_name -> lq.ChuanmaGang
	590,  // 609: lq.ActionAnGangAddGang.operation:type_name -> lq.OptionalOperationList
	594,  // 610: lq.ActionAnGangAddGang.tingpais:type_name -> lq.TingPaiInfo
	574,  // 611: lq.ActionAnGangAddGang.muyu:type_name -> lq.MuyuInfo
	590,  // 612: lq.RecordAnGangAddGang.operations:type_name -> lq.OptionalOperationList
	574,  // 613: lq.RecordAnGangAddGang.muyu:type_name -> lq.MuyuInfo
	590,  // 614: lq.ActionBaBei.operation:type_name -> lq.OptionalOperationList
	594,  // 615: lq.ActionBaBei.tingpais:type_name -> lq.TingPaiInfo
	574,  // 616: lq.ActionBaBei.muyu:type_name -> lq.MuyuInfo
	590,  // 617: lq.RecordBaBei.operations:type_name -> lq.OptionalOperationList
	574,  // 618: lq.RecordBaBei.muyu:type_name -> lq.MuyuInfo
	593,  // 619: lq.ActionHule.hules:type_name -> lq.HuleInfo
	596,  // 620: lq.ActionHule.gameend:type_name -> lq.GameEnd
	574,  // 621: lq.ActionHule.muyu:type_name -> lq.MuyuInfo
	593,  // 622: lq.RecordHule.hules:type_name -> lq.HuleInfo
	596,  // 623: lq.RecordHule.gameend:type_name -> lq.GameEnd
	574,  // 624: lq.RecordHule.muyu:type_name -> lq.MuyuInfo
	592,  // 625: lq.HuInfoXueZhanMid.fans:type_name -> lq.FanInfo
	625,  // 626: lq.ActionHuleXueZhanMid.hules:type_name -> lq.HuInfoXueZhanMid
	574,  // 627: lq.ActionHuleXueZhanMid.muyu:type_name -> lq.MuyuInfo
	591,  // 628: lq.ActionHuleXueZhanMid.liqi:type_name -> lq.LiQiSuccess
	625,  // 629: lq.RecordHuleXueZhanMid.hules:type_name -> lq.HuInfoXueZhanMid
	574,  // 630: lq.RecordHuleXueZhanMid.muyu:type_name -> lq.MuyuInfo
	591,  // 631: lq.RecordHuleXueZhanMid.liqi:type_name -> lq.LiQiSuccess
	625,  // 632: lq.ActionHuleXueZhanEnd.hules:type_name -> lq.HuInfoXueZhanMid
	596,  // 633: lq.ActionHuleXueZhanEnd.gameend:type_name -> lq.GameEnd
	574,  // 634: lq.ActionHuleXueZhanEnd.muyu:type_name -> lq.MuyuInfo
	593,  // 635: lq.ActionHuleXueZhanEnd.hules_history:type_name -> lq.HuleInfo
	625,  // 636: lq.RecordHuleXueZhanEnd.hules:type_name -> lq.HuInfoXueZhanMid
	596,  // 637: lq.RecordHuleXueZhanEnd.gameend:type_name -> lq.GameEnd
	574,  // 638: lq.RecordHuleXueZhanEnd.muyu:type_name -> lq.MuyuInfo
	593,  // 639: lq.RecordHuleXueZhanEnd.hules_history:type_name -> lq.HuleInfo
	596,  // 640: lq.ActionLiuJu.gameend:type_name -> lq.GameEnd
	591,  // 641: lq.ActionLiuJu.liqi:type_name -> lq.LiQiSuccess
	574,  // 642: lq.ActionLiuJu.muyu:type_name -> lq.MuyuInfo
	593,  // 643: lq.ActionLiuJu.hules_history:type_name -> lq.HuleInfo
	596,  // 644: lq.RecordLiuJu.gameend:type_name -> lq.GameEnd
	591,  // 645: lq.RecordLiuJu.liqi:type_name -> lq.LiQiSuccess
	574,  // 646: lq.RecordLiuJu.muyu:type_name -> lq.MuyuInfo
	593,  // 647: lq.RecordLiuJu.hules_history:type_name -> lq.HuleInfo
	594,  // 648: lq.NoTilePlayerInfo.tings:type_name -> lq.TingPaiInfo
	632,  // 649: lq.ActionNoTile.players:type_name -> lq.NoTilePlayerInfo
	633,  // 650: lq.ActionNoTile.scores:type_name -> lq.NoTileScoreInfo
	574,  // 651: lq.ActionNoTile.muyu:type_name -> lq.MuyuInfo
	593,  // 652: lq.ActionNoTile.hules_history:type_name -> lq.HuleInfo
	632,  // 653: lq.RecordNoTile.players:type_name -> lq.NoTilePlayerInfo
	633,  // 654: lq.RecordNoTile.scores:type_name -> lq.NoTileScoreInfo
	574,  // 655: lq.RecordNoTile.muyu:type_name -> lq.MuyuInfo
	593,  // 656: lq.RecordNoTile.hules_history:type_name -> lq.HuleInfo
	45,   // 657: lq.ResAuthGame.error:type_name -> lq.Error
	63,   // 658: lq.ResAuthGame.players:type_name -> lq.PlayerGameView
	95,   // 659: lq.ResAuthGame.game_config:type_name -> lq.GameConfig
	580,  // 660: lq.GameRestore.snapshot:type_name -> lq.GameSnapshot
	581,  // 661: lq.GameRestore.actions:type_name -> lq.ActionPrototype
	45,   // 662: lq.ResEnterGame.error:type_name -> lq.Error
	639,  // 663: lq.ResEnterGame.game_restore:type_name -> lq.GameRestore
	45,   // 664: lq.ResSyncGame.error:type_name -> lq.Error
	639,  // 665: lq.ResSyncGame.game_restore:type_name -> lq.GameRestore
	45,   // 666: lq.ResGamePlayerState.error:type_name -> lq.Error
	0,    // 667: lq.ResGamePlayerState.state_list:type_name -> lq.GamePlayerState
	45,   // 668: lq.ResGameEndVote.error:type_name -> lq.Error
	117,  // 669: lq.ResStartObserve.head:type_name -> lq.GameLiveHead
	115,  // 670: lq.ResStartObserve.passed:type_name -> lq.GameLiveSegment
	69,   // 671: lq.NotifyGameEndResult.result:type_name -> lq.GameEndResult
	0,    // 672: lq.NotifyPlayerConnectionState.state:type_name -> lq.GamePlayerState
	54,   // 673: lq.NotifyAccountLevelChange.origin:type_name -> lq.AccountLevel
	54,   // 674: lq.NotifyAccountLevelChange.final:type_name -> lq.AccountLevel
	801,  // 675: lq.NotifyGameFinishReward.level_change:type_name -> lq.NotifyGameFinishReward.LevelChange
	802,  // 676: lq.NotifyGameFinishReward.match_chest:type_name -> lq.NotifyGameFinishReward.MatchChest
	803,  // 677: lq.NotifyGameFinishReward.main_character:type_name -> lq.NotifyGameFinishReward.MainCharacter
	804,  // 678: lq.NotifyGameFinishReward.character_gift:type_name -> lq.NotifyGameFinishReward.CharacterGift
	805,  // 679: lq.NotifyActivityReward.activity_reward:type_name -> lq.NotifyActivityReward.ActivityReward
	806,  // 680: lq.NotifyActivityPoint.activity_points:type_name -> lq.NotifyActivityPoint.ActivityPoint
	807,  // 681: lq.NotifyLeaderboardPoint.leaderboard_points:type_name -> lq.NotifyLeaderboardPoint.LeaderboardPoint
	808,  // 682: lq.NotifyEndGameVote.results:type_name -> lq.NotifyEndGameVote.VoteResult
	114,  // 683: lq.NotifyObserveData.unit:type_name -> lq.GameLiveUnit
	670,  // 684: lq.NotifyActivityUpdate.FeedActivityData.friend_receive_data:type_name -> lq.NotifyActivityUpdate.FeedActivityData.CountWithTimeData
	670,  // 685: lq.NotifyActivityUpdate.FeedActivityData.friend_send_data:type_name -> lq.NotifyActivityUpdate.FeedActivityData.CountWithTimeData
	671,  // 686: lq.NotifyActivityUpdate.FeedActivityData.gift_inbox:type_name -> lq.NotifyActivityUpdate.FeedActivityData.GiftBoxData
	54,   // 687: lq.NotifyGameFinishRewardV2.LevelChange.origin:type_name -> lq.AccountLevel
	54,   // 688: lq.NotifyGameFinishRewardV2.LevelChange.final:type_name -> lq.AccountLevel
	77,   // 689: lq.NotifyGameFinishRewardV2.MatchChest.rewards:type_name -> lq.RewardSlot
	77,   // 690: lq.NotifyActivityRewardV2.ActivityReward.rewards:type_name -> lq.RewardSlot
	126,  // 691: lq.AccountUpdate.CharacterUpdate.characters:type_name -> lq.Character
	83,   // 692: lq.AccountUpdate.AchievementUpdate.progresses:type_name -> lq.AchievementProgress
	94,   // 693: lq.AccountUpdate.DailyTaskUpdate.progresses:type_name -> lq.TaskProgress
	94,   // 694: lq.AccountUpdate.TaskUpdate.progresses:type_name -> lq.TaskProgress
	94,   // 695: lq.AccountUpdate.AccountChallengeUpdate.progresses:type_name -> lq.TaskProgress
	699,  // 696: lq.AccountUpdate.AccountABMatchUpdate.match_max_point:type_name -> lq.AccountUpdate.AccountABMatchUpdate.MatchPoint
	100,  // 697: lq.AccountUpdate.SegmentTaskUpdate.progresses:type_name -> lq.SegmentTaskProgress
	707,  // 698: lq.AccountDetailStatisticV2.RankStatistic.total_statistic:type_name -> lq.AccountDetailStatisticV2.RankStatistic.RankData
	707,  // 699: lq.AccountDetailStatisticV2.RankStatistic.month_statistic:type_name -> lq.AccountDetailStatisticV2.RankStatistic.RankData
	87,   // 700: lq.AccountDetailStatisticV2.CustomizedContestStatistic.total_statistic:type_name -> lq.AccountDetailStatistic
	87,   // 701: lq.AccountDetailStatisticV2.CustomizedContestStatistic.month_statistic:type_name -> lq.AccountDetailStatistic
	87,   // 702: lq.AccountDetailStatisticV2.ChallengeStatistic.all_season:type_name -> lq.AccountDetailStatistic
	709,  // 703: lq.AccountDetailStatisticV2.ChallengeStatistic.season_data_list:type_name -> lq.AccountDetailStatisticV2.ChallengeStatistic.SeasonData
	87,   // 704: lq.AccountDetailStatisticV2.RankStatistic.RankData.all_level_statistic:type_name -> lq.AccountDetailStatistic
	708,  // 705: lq.AccountDetailStatisticV2.RankStatistic.RankData.level_data_list:type_name -> lq.AccountDetailStatisticV2.RankStatistic.RankData.RankLevelData
	87,   // 706: lq.AccountDetailStatisticV2.RankStatistic.RankData.RankLevelData.statistic:type_name -> lq.AccountDetailStatistic
	87,   // 707: lq.AccountDetailStatisticV2.ChallengeStatistic.SeasonData.statistic:type_name -> lq.AccountDetailStatistic
	719,  // 708: lq.PaymentSettingV2.PaymentSettingUnit.maintain:type_name -> lq.PaymentSettingV2.PaymentMaintain
	126,  // 709: lq.RecordGame.AccountInfo.character:type_name -> lq.Character
	54,   // 710: lq.RecordGame.AccountInfo.level:type_name -> lq.AccountLevel
	54,   // 711: lq.RecordGame.AccountInfo.level3:type_name -> lq.AccountLevel
	55,   // 712: lq.RecordGame.AccountInfo.views:type_name -> lq.ViewSlot
	47,   // 713: lq.GameFinalSnapshot.GameSeat.notify_endpoint:type_name -> lq.NetworkEndpoint
	77,   // 714: lq.AccountMailRecord.MailSnapshot.attachments:type_name -> lq.RewardSlot
	745,  // 715: lq.AccountMiscSnapshot.AccountMonthTicketSnapshot.tickets:type_name -> lq.AccountMiscSnapshot.MonthTicketInfo
	54,   // 716: lq.ResLevelLeaderboard.Item.level:type_name -> lq.AccountLevel
	55,   // 717: lq.ResAllcommonViews.Views.values:type_name -> lq.ViewSlot
	768,  // 718: lq.ResAccountActivityData.ActivityRichmanData.buff:type_name -> lq.ResAccountActivityData.BuffData
	470,  // 719: lq.ResAccountActivityData.ActivitySNSData.blog:type_name -> lq.SNSBlog
	471,  // 720: lq.ResAccountActivityData.ActivitySNSData.reply:type_name -> lq.SNSReply
	62,   // 721: lq.ResFetchRankPointLeaderboard.Item.view:type_name -> lq.PlayerBaseView
	773,  // 722: lq.ResRichmanNextMove.PathData.rewards:type_name -> lq.ResRichmanNextMove.RewardData
	174,  // 723: lq.ResFetchRPGBattleHistoryV2.BattleResultV2.buff:type_name -> lq.ActivityBuffData
	790,  // 724: lq.ResFetchFriendGiftActivityData.FriendData.items:type_name -> lq.ResFetchFriendGiftActivityData.ItemCountData
	594,  // 725: lq.RecordNewRound.TingPai.tingpais1:type_name -> lq.TingPaiInfo
	797,  // 726: lq.GameSnapshot.PlayerSnapshot.mings:type_name -> lq.GameSnapshot.PlayerSnapshot.Fulu
	594,  // 727: lq.RecordSelectGap.TingPai.tingpais1:type_name -> lq.TingPaiInfo
	594,  // 728: lq.RecordChangeTile.TingPai.tingpais1:type_name -> lq.TingPaiInfo
	54,   // 729: lq.NotifyGameFinishReward.LevelChange.origin:type_name -> lq.AccountLevel
	54,   // 730: lq.NotifyGameFinishReward.LevelChange.final:type_name -> lq.AccountLevel
	77,   // 731: lq.NotifyGameFinishReward.MatchChest.rewards:type_name -> lq.RewardSlot
	77,   // 732: lq.NotifyActivityReward.ActivityReward.rewards:type_name -> lq.RewardSlot
	48,   // 733: lq.Lobby.fetchConnectionInfo:input_type -> lq.ReqCommon
	48,   // 734: lq.Lobby.fetchQueueInfo:input_type -> lq.ReqCommon
	48,   // 735: lq.Lobby.cancelQueue:input_type -> lq.ReqCommon
	185,  // 736: lq.Lobby.openidCheck:input_type -> lq.ReqOpenidCheck
	186,  // 737: lq.Lobby.signup:input_type -> lq.ReqSignupAccount
	188,  // 738: lq.Lobby.login:input_type -> lq.ReqLogin
	48,   // 739: lq.Lobby.loginSuccess:input_type -> lq.ReqCommon
	190,  // 740: lq.Lobby.emailLogin:input_type -> lq.ReqEmailLogin
	202,  // 741: lq.Lobby.oauth2Auth:input_type -> lq.ReqOauth2Auth
	204,  // 742: lq.Lobby.oauth2Check:input_type -> lq.ReqOauth2Check
	206,  // 743: lq.Lobby.oauth2Signup:input_type -> lq.ReqOauth2Signup
	208,  // 744: lq.Lobby.oauth2Login:input_type -> lq.ReqOauth2Login
	209,  // 745: lq.Lobby.dmmPreLogin:input_type -> lq.ReqDMMPreLogin
	192,  // 746: lq.Lobby.createPhoneVerifyCode:input_type -> lq.ReqCreatePhoneVerifyCode
	193,  // 747: lq.Lobby.createEmailVerifyCode:input_type -> lq.ReqCreateEmailVerifyCode
	194,  // 748: lq.Lobby.verfifyCodeForSecure:input_type -> lq.ReqVerifyCodeForSecure
	196,  // 749: lq.Lobby.bindPhoneNumber:input_type -> lq.ReqBindPhoneNumber
	197,  // 750: lq.Lobby.unbindPhoneNumber:input_type -> lq.ReqUnbindPhoneNumber
	48,   // 751: lq.Lobby.fetchPhoneLoginBind:input_type -> lq.ReqCommon
	199,  // 752: lq.Lobby.createPhoneLoginBind:input_type -> lq.ReqCreatePhoneLoginBind
	200,  // 753: lq.Lobby.bindEmail:input_type -> lq.ReqBindEmail
	201,  // 754: lq.Lobby.modifyPassword:input_type -> lq.ReqModifyPassword
	191,  // 755: lq.Lobby.bindAccount:input_type -> lq.ReqBindAccount
	211,  // 756: lq.Lobby.logout:input_type -> lq.ReqLogout
	213,  // 757: lq.Lobby.heatbeat:input_type -> lq.ReqHeatBeat
	214,  // 758: lq.Lobby.loginBeat:input_type -> lq.ReqLoginBeat
	219,  // 759: lq.Lobby.createNickname:input_type -> lq.ReqCreateNickname
	220,  // 760: lq.Lobby.modifyNickname:input_type -> lq.ReqModifyNickname
	221,  // 761: lq.Lobby.modifyBirthday:input_type -> lq.ReqModifyBirthday
	48,   // 762: lq.Lobby.fetchRoom:input_type -> lq.ReqCommon
	223,  // 763: lq.Lobby.createRoom:input_type -> lq.ReqCreateRoom
	225,  // 764: lq.Lobby.joinRoom:input_type -> lq.ReqJoinRoom
	48,   // 765: lq.Lobby.leaveRoom:input_type -> lq.ReqCommon
	227,  // 766: lq.Lobby.readyPlay:input_type -> lq.ReqRoomReady
	228,  // 767: lq.Lobby.dressingStatus:input_type -> lq.ReqRoomDressing
	229,  // 768: lq.Lobby.startRoom:input_type -> lq.ReqRoomStart
	230,  // 769: lq.Lobby.kickPlayer:input_type -> lq.ReqRoomKick
	231,  // 770: lq.Lobby.modifyRoom:input_type -> lq.ReqModifyRoom
	215,  // 771: lq.Lobby.matchGame:input_type -> lq.ReqJoinMatchQueue
	216,  // 772: lq.Lobby.cancelMatch:input_type -> lq.ReqCancelMatchQueue
	217,  // 773: lq.Lobby.fetchAccountInfo:input_type -> lq.ReqAccountInfo
	232,  // 774: lq.Lobby.changeAvatar:input_type -> lq.ReqChangeAvatar
	48,   // 775: lq.Lobby.receiveVersionReward:input_type -> lq.ReqCommon
	233,  // 776: lq.Lobby.fetchAccountStatisticInfo:input_type -> lq.ReqAccountStatisticInfo
	217,  // 777: lq.Lobby.fetchAccountChallengeRankInfo:input_type -> lq.ReqAccountInfo
	48,   // 778: lq.Lobby.fetchAccountCharacterInfo:input_type -> lq.ReqCommon
	237,  // 779: lq.Lobby.shopPurchase:input_type -> lq.ReqShopPurchase
	239,  // 780: lq.Lobby.fetchGameRecord:input_type -> lq.ReqGameRecord
	239,  // 781: lq.Lobby.readGameRecord:input_type -> lq.ReqGameRecord
	241,  // 782: lq.Lobby.fetchGameRecordList:input_type -> lq.ReqGameRecordList
	48,   // 783: lq.Lobby.fetchCollectedGameRecordList:input_type -> lq.ReqCommon
	244,  // 784: lq.Lobby.fetchGameRecordsDetail:input_type -> lq.ReqGameRecordsDetail
	246,  // 785: lq.Lobby.addCollectedGameRecord:input_type -> lq.ReqAddCollectedGameRecord
	248,  // 786: lq.Lobby.removeCollectedGameRecord:input_type -> lq.ReqRemoveCollectedGameRecord
	250,  // 787: lq.Lobby.changeCollectedGameRecordRemarks:input_type -> lq.ReqChangeCollectedGameRecordRemarks
	252,  // 788: lq.Lobby.fetchLevelLeaderboard:input_type -> lq.ReqLevelLeaderboard
	254,  // 789: lq.Lobby.fetchChallengeLeaderboard:input_type -> lq.ReqChallangeLeaderboard
	256,  // 790: lq.Lobby.fetchMutiChallengeLevel:input_type -> lq.ReqMutiChallengeLevel
	258,  // 791: lq.Lobby.fetchMultiAccountBrief:input_type -> lq.ReqMultiAccountId
	48,   // 792: lq.Lobby.fetchFriendList:input_type -> lq.ReqCommon
	48,   // 793: lq.Lobby.fetchFriendApplyList:input_type -> lq.ReqCommon
	262,  // 794: lq.Lobby.applyFriend:input_type -> lq.ReqApplyFriend
	263,  // 795: lq.Lobby.handleFriendApply:input_type -> lq.ReqHandleFriendApply
	264,  // 796: lq.Lobby.removeFriend:input_type -> lq.ReqRemoveFriend
	269,  // 797: lq.Lobby.searchAccountById:input_type -> lq.ReqSearchAccountById
	265,  // 798: lq.Lobby.searchAccountByPattern:input_type -> lq.ReqSearchAccountByPattern
	267,  // 799: lq.Lobby.fetchAccountState:input_type -> lq.ReqAccountList
	48,   // 800: lq.Lobby.fetchBagInfo:input_type -> lq.ReqCommon
	272,  // 801: lq.Lobby.useBagItem:input_type -> lq.ReqUseBagItem
	273,  // 802: lq.Lobby.openManualItem:input_type -> lq.ReqOpenManualItem
	274,  // 803: lq.Lobby.openRandomRewardItem:input_type -> lq.ReqOpenRandomRewardItem
	276,  // 804: lq.Lobby.openAllRewardItem:input_type -> lq.ReqOpenAllRewardItem
	278,  // 805: lq.Lobby.composeShard:input_type -> lq.ReqComposeShard
	279,  // 806: lq.Lobby.fetchAnnouncement:input_type -> lq.ReqFetchAnnouncement
	300,  // 807: lq.Lobby.readAnnouncement:input_type -> lq.ReqReadAnnouncement
	48,   // 808: lq.Lobby.fetchMailInfo:input_type -> lq.ReqCommon
	282,  // 809: lq.Lobby.readMail:input_type -> lq.ReqReadMail
	283,  // 810: lq.Lobby.deleteMail:input_type -> lq.ReqDeleteMail
	284,  // 811: lq.Lobby.takeAttachmentFromMail:input_type -> lq.ReqTakeAttachment
	287,  // 812: lq.Lobby.receiveAchievementReward:input_type -> lq.ReqReceiveAchievementReward
	285,  // 813: lq.Lobby.receiveAchievementGroupReward:input_type -> lq.ReqReceiveAchievementGroupReward
	48,   // 814: lq.Lobby.fetchAchievementRate:input_type -> lq.ReqCommon
	48,   // 815: lq.Lobby.fetchAchievement:input_type -> lq.ReqCommon
	293,  // 816: lq.Lobby.buyShiLian:input_type -> lq.ReqBuyShiLian
	48,   // 817: lq.Lobby.matchShiLian:input_type -> lq.ReqCommon
	48,   // 818: lq.Lobby.goNextShiLian:input_type -> lq.ReqCommon
	294,  // 819: lq.Lobby.updateClientValue:input_type -> lq.ReqUpdateClientValue
	48,   // 820: lq.Lobby.fetchClientValue:input_type -> lq.ReqCommon
	296,  // 821: lq.Lobby.clientMessage:input_type -> lq.ReqClientMessage
	297,  // 822: lq.Lobby.fetchCurrentMatchInfo:input_type -> lq.ReqCurrentMatchInfo
	299,  // 823: lq.Lobby.userComplain:input_type -> lq.ReqUserComplain
	48,   // 824: lq.Lobby.fetchReviveCoinInfo:input_type -> lq.ReqCommon
	48,   // 825: lq.Lobby.gainReviveCoin:input_type -> lq.ReqCommon
	48,   // 826: lq.Lobby.fetchDailyTask:input_type -> lq.ReqCommon
	303,  // 827: lq.Lobby.refreshDailyTask:input_type -> lq.ReqRefreshDailyTask
	305,  // 828: lq.Lobby.useGiftCode:input_type -> lq.ReqUseGiftCode
	305,  // 829: lq.Lobby.useSpecialGiftCode:input_type -> lq.ReqUseGiftCode
	48,   // 830: lq.Lobby.fetchTitleList:input_type -> lq.ReqCommon
	292,  // 831: lq.Lobby.useTitle:input_type -> lq.ReqUseTitle
	308,  // 832: lq.Lobby.sendClientMessage:input_type -> lq.ReqSendClientMessage
	309,  // 833: lq.Lobby.fetchGameLiveInfo:input_type -> lq.ReqGameLiveInfo
	311,  // 834: lq.Lobby.fetchGameLiveLeftSegment:input_type -> lq.ReqGameLiveLeftSegment
	313,  // 835: lq.Lobby.fetchGameLiveList:input_type -> lq.ReqGameLiveList
	48,   // 836: lq.Lobby.fetchCommentSetting:input_type -> lq.ReqCommon
	316,  // 837: lq.Lobby.updateCommentSetting:input_type -> lq.ReqUpdateCommentSetting
	317,  // 838: lq.Lobby.fetchCommentList:input_type -> lq.ReqFetchCommentList
	319,  // 839: lq.Lobby.fetchCommentContent:input_type -> lq.ReqFetchCommentContent
	321,  // 840: lq.Lobby.leaveComment:input_type -> lq.ReqLeaveComment
	322,  // 841: lq.Lobby.deleteComment:input_type -> lq.ReqDeleteComment
	323,  // 842: lq.Lobby.updateReadComment:input_type -> lq.ReqUpdateReadComment
	48,   // 843: lq.Lobby.fetchRollingNotice:input_type -> lq.ReqCommon
	48,   // 844: lq.Lobby.fetchServerTime:input_type -> lq.ReqCommon
	326,  // 845: lq.Lobby.fetchPlatformProducts:input_type -> lq.ReqPlatformBillingProducts
	332,  // 846: lq.Lobby.cancelGooglePlayOrder:input_type -> lq.ReqCancelGooglePlayOrder
	398,  // 847: lq.Lobby.openChest:input_type -> lq.ReqOpenChest
	400,  // 848: lq.Lobby.buyFromChestShop:input_type -> lq.ReqBuyFromChestShop
	48,   // 849: lq.Lobby.fetchDailySignInInfo:input_type -> lq.ReqCommon
	48,   // 850: lq.Lobby.doDailySignIn:input_type -> lq.ReqCommon
	403,  // 851: lq.Lobby.doActivitySignIn:input_type -> lq.ReqDoActivitySignIn
	48,   // 852: lq.Lobby.fetchCharacterInfo:input_type -> lq.ReqCommon
	406,  // 853: lq.Lobby.updateCharacterSort:input_type -> lq.ReqUpdateCharacterSort
	407,  // 854: lq.Lobby.changeMainCharacter:input_type -> lq.ReqChangeMainCharacter
	408,  // 855: lq.Lobby.changeCharacterSkin:input_type -> lq.ReqChangeCharacterSkin
	409,  // 856: lq.Lobby.changeCharacterView:input_type -> lq.ReqChangeCharacterView
	410,  // 857: lq.Lobby.setHiddenCharacter:input_type -> lq.ReqSetHiddenCharacter
	412,  // 858: lq.Lobby.sendGiftToCharacter:input_type -> lq.ReqSendGiftToCharacter
	414,  // 859: lq.Lobby.sellItem:input_type -> lq.ReqSellItem
	48,   // 860: lq.Lobby.fetchCommonView:input_type -> lq.ReqCommon
	416,  // 861: lq.Lobby.changeCommonView:input_type -> lq.ReqChangeCommonView
	417,  // 862: lq.Lobby.saveCommonViews:input_type -> lq.ReqSaveCommonViews
	418,  // 863: lq.Lobby.fetchCommonViews:input_type -> lq.ReqCommonViews
	48,   // 864: lq.Lobby.fetchAllCommonViews:input_type -> lq.ReqCommon
	421,  // 865: lq.Lobby.useCommonView:input_type -> lq.ReqUseCommonView
	422,  // 866: lq.Lobby.upgradeCharacter:input_type -> lq.ReqUpgradeCharacter
	424,  // 867: lq.Lobby.addFinishedEnding:input_type -> lq.ReqFinishedEnding
	424,  // 868: lq.Lobby.receiveEndingReward:input_type -> lq.ReqFinishedEnding
	425,  // 869: lq.Lobby.gameMasterCommand:input_type -> lq.ReqGMCommand
	48,   // 870: lq.Lobby.fetchShopInfo:input_type -> lq.ReqCommon
	427,  // 871: lq.Lobby.buyFromShop:input_type -> lq.ReqBuyFromShop
	429,  // 872: lq.Lobby.buyFromZHP:input_type -> lq.ReqBuyFromZHP
	432,  // 873: lq.Lobby.refreshZHPShop:input_type -> lq.ReqReshZHPShop
	48,   // 874: lq.Lobby.fetchMonthTicketInfo:input_type -> lq.ReqCommon
	430,  // 875: lq.Lobby.payMonthTicket:input_type -> lq.ReqPayMonthTicket
	435,  // 876: lq.Lobby.exchangeCurrency:input_type -> lq.ReqExchangeCurrency
	435,  // 877: lq.Lobby.exchangeChestStone:input_type -> lq.ReqExchangeCurrency
	435,  // 878: lq.Lobby.exchangeDiamond:input_type -> lq.ReqExchangeCurrency
	48,   // 879: lq.Lobby.fetchServerSettings:input_type -> lq.ReqCommon
	48,   // 880: lq.Lobby.fetchAccountSettings:input_type -> lq.ReqCommon
	438,  // 881: lq.Lobby.updateAccountSettings:input_type -> lq.ReqUpdateAccountSettings
	48,   // 882: lq.Lobby.fetchModNicknameTime:input_type -> lq.ReqCommon
	333,  // 883: lq.Lobby.createWechatNativeOrder:input_type -> lq.ReqCreateWechatNativeOrder
	335,  // 884: lq.Lobby.createWechatAppOrder:input_type -> lq.ReqCreateWechatAppOrder
	337,  // 885: lq.Lobby.createAlipayOrder:input_type -> lq.ReqCreateAlipayOrder
	339,  // 886: lq.Lobby.createAlipayScanOrder:input_type -> lq.ReqCreateAlipayScanOrder
	341,  // 887: lq.Lobby.createAlipayAppOrder:input_type -> lq.ReqCreateAlipayAppOrder
	343,  // 888: lq.Lobby.createJPCreditCardOrder:input_type -> lq.ReqCreateJPCreditCardOrder
	345,  // 889: lq.Lobby.createJPPaypalOrder:input_type -> lq.ReqCreateJPPaypalOrder
	347,  // 890: lq.Lobby.createJPAuOrder:input_type -> lq.ReqCreateJPAuOrder
	349,  // 891: lq.Lobby.createJPDocomoOrder:input_type -> lq.ReqCreateJPDocomoOrder
	351,  // 892: lq.Lobby.createJPWebMoneyOrder:input_type -> lq.ReqCreateJPWebMoneyOrder
	353,  // 893: lq.Lobby.createJPSoftbankOrder:input_type -> lq.ReqCreateJPSoftbankOrder
	355,  // 894: lq.Lobby.createJPPayPayOrder:input_type -> lq.ReqCreateJPPayPayOrder
	357,  // 895: lq.Lobby.fetchJPCommonCreditCardOrder:input_type -> lq.ReqFetchJPCommonCreditCardOrder
	361,  // 896: lq.Lobby.createENPaypalOrder:input_type -> lq.ReqCreateENPaypalOrder
	365,  // 897: lq.Lobby.createENMasterCardOrder:input_type -> lq.ReqCreateENMasterCardOrder
	367,  // 898: lq.Lobby.createENVisaOrder:input_type -> lq.ReqCreateENVisaOrder
	363,  // 899: lq.Lobby.createENJCBOrder:input_type -> lq.ReqCreateENJCBOrder
	369,  // 900: lq.Lobby.createENAlipayOrder:input_type -> lq.ReqCreateENAlipayOrder
	371,  // 901: lq.Lobby.createKRPaypalOrder:input_type -> lq.ReqCreateKRPaypalOrder
	375,  // 902: lq.Lobby.createKRMasterCardOrder:input_type -> lq.ReqCreateKRMasterCardOrder
	377,  // 903: lq.Lobby.createKRVisaOrder:input_type -> lq.ReqCreateKRVisaOrder
	373,  // 904: lq.Lobby.createKRJCBOrder:input_type -> lq.ReqCreateKRJCBOrder
	379,  // 905: lq.Lobby.createKRAlipayOrder:input_type -> lq.ReqCreateKRAlipayOrder
	381,  // 906: lq.Lobby.createDMMOrder:input_type -> lq.ReqCreateDMMOrder
	383,  // 907: lq.Lobby.createIAPOrder:input_type -> lq.ReqCreateIAPOrder
	387,  // 908: lq.Lobby.createSteamOrder:input_type -> lq.ReqCreateSteamOrder
	389,  // 909: lq.Lobby.verifySteamOrder:input_type -> lq.ReqVerifySteamOrder
	390,  // 910: lq.Lobby.createMyCardAndroidOrder:input_type -> lq.ReqCreateMyCardOrder
	390,  // 911: lq.Lobby.createMyCardWebOrder:input_type -> lq.ReqCreateMyCardOrder
	393,  // 912: lq.Lobby.createPaypalOrder:input_type -> lq.ReqCreatePaypalOrder
	395,  // 913: lq.Lobby.createXsollaOrder:input_type -> lq.ReqCreateXsollaOrder
	392,  // 914: lq.Lobby.verifyMyCardOrder:input_type -> lq.ReqVerifyMyCardOrder
	385,  // 915: lq.Lobby.verificationIAPOrder:input_type -> lq.ReqVerificationIAPOrder
	359,  // 916: lq.Lobby.createYostarSDKOrder:input_type -> lq.ReqCreateYostarOrder
	328,  // 917: lq.Lobby.createBillingOrder:input_type -> lq.ReqCreateBillingOrder
	330,  // 918: lq.Lobby.solveGooglePlayOrder:input_type -> lq.ReqSolveGooglePlayOrder
	331,  // 919: lq.Lobby.solveGooglePayOrderV3:input_type -> lq.ReqSolveGooglePlayOrderV3
	397,  // 920: lq.Lobby.deliverAA32Order:input_type -> lq.ReqDeliverAA32Order
	48,   // 921: lq.Lobby.fetchMisc:input_type -> lq.ReqCommon
	441,  // 922: lq.Lobby.modifySignature:input_type -> lq.ReqModifySignature
	48,   // 923: lq.Lobby.fetchIDCardInfo:input_type -> lq.ReqCommon
	443,  // 924: lq.Lobby.updateIDCardInfo:input_type -> lq.ReqUpdateIDCardInfo
	48,   // 925: lq.Lobby.fetchVipReward:input_type -> lq.ReqCommon
	446,  // 926: lq.Lobby.gainVipReward:input_type -> lq.ReqGainVipReward
	48,   // 927: lq.Lobby.fetchRefundOrder:input_type -> lq.ReqCommon
	447,  // 928: lq.Lobby.fetchCustomizedContestList:input_type -> lq.ReqFetchCustomizedContestList
	449,  // 929: lq.Lobby.fetchCustomizedContestExtendInfo:input_type -> lq.ReqFetchCustomizedContestExtendInfo
	451,  // 930: lq.Lobby.fetchCustomizedContestAuthInfo:input_type -> lq.ReqFetchCustomizedContestAuthInfo
	453,  // 931: lq.Lobby.enterCustomizedContest:input_type -> lq.ReqEnterCustomizedContest
	48,   // 932: lq.Lobby.leaveCustomizedContest:input_type -> lq.ReqCommon
	455,  // 933: lq.Lobby.fetchCustomizedContestOnlineInfo:input_type -> lq.ReqFetchCustomizedContestOnlineInfo
	457,  // 934: lq.Lobby.fetchCustomizedContestByContestId:input_type -> lq.ReqFetchCustomizedContestByContestId
	459,  // 935: lq.Lobby.startCustomizedContest:input_type -> lq.ReqStartCustomizedContest
	48,   // 936: lq.Lobby.stopCustomizedContest:input_type -> lq.ReqCommon
	460,  // 937: lq.Lobby.joinCustomizedContestChatRoom:input_type -> lq.ReqJoinCustomizedContestChatRoom
	48,   // 938: lq.Lobby.leaveCustomizedContestChatRoom:input_type -> lq.ReqCommon
	462,  // 939: lq.Lobby.sayChatMessage:input_type -> lq.ReqSayChatMessage
	465,  // 940: lq.Lobby.fetchCustomizedContestGameRecords:input_type -> lq.ReqFetchCustomizedContestGameRecords
	463,  // 941: lq.Lobby.fetchCustomizedContestGameLiveList:input_type -> lq.ReqFetchCustomizedContestGameLiveList
	467,  // 942: lq.Lobby.followCustomizedContest:input_type -> lq.ReqTargetCustomizedContest
	467,  // 943: lq.Lobby.unfollowCustomizedContest:input_type -> lq.ReqTargetCustomizedContest
	48,   // 944: lq.Lobby.fetchActivityList:input_type -> lq.ReqCommon
	48,   // 945: lq.Lobby.fetchAccountActivityData:input_type -> lq.ReqCommon
	472,  // 946: lq.Lobby.exchangeActivityItem:input_type -> lq.ReqExchangeActivityItem
	474,  // 947: lq.Lobby.completeActivityTask:input_type -> lq.ReqCompleteActivityTask
	474,  // 948: lq.Lobby.completeActivityFlipTask:input_type -> lq.ReqCompleteActivityTask
	474,  // 949: lq.Lobby.completePeriodActivityTask:input_type -> lq.ReqCompleteActivityTask
	475,  // 950: lq.Lobby.completePeriodActivityTaskBatch:input_type -> lq.ReqCompletePeriodActivityTaskBatch
	474,  // 951: lq.Lobby.completeRandomActivityTask:input_type -> lq.ReqCompleteActivityTask
	476,  // 952: lq.Lobby.receiveActivityFlipTask:input_type -> lq.ReqReceiveActivityFlipTask
	478,  // 953: lq.Lobby.completeSegmentTaskReward:input_type -> lq.ReqCompleteSegmentTaskReward
	480,  // 954: lq.Lobby.fetchActivityFlipInfo:input_type -> lq.ReqFetchActivityFlipInfo
	482,  // 955: lq.Lobby.gainAccumulatedPointActivityReward:input_type -> lq.ReqGainAccumulatedPointActivityReward
	483,  // 956: lq.Lobby.gainMultiPointActivityReward:input_type -> lq.ReqGainMultiPointActivityReward
	484,  // 957: lq.Lobby.fetchRankPointLeaderboard:input_type -> lq.ReqFetchRankPointLeaderboard
	486,  // 958: lq.Lobby.gainRankPointReward:input_type -> lq.ReqGainRankPointReward
	487,  // 959: lq.Lobby.richmanActivityNextMove:input_type -> lq.ReqRichmanNextMove
	489,  // 960: lq.Lobby.richmanAcitivitySpecialMove:input_type -> lq.ReqRichmanSpecialMove
	490,  // 961: lq.Lobby.richmanActivityChestInfo:input_type -> lq.ReqRichmanChestInfo
	492,  // 962: lq.Lobby.createGameObserveAuth:input_type -> lq.ReqCreateGameObserveAuth
	494,  // 963: lq.Lobby.refreshGameObserveAuth:input_type -> lq.ReqRefreshGameObserveAuth
	48,   // 964: lq.Lobby.fetchActivityBuff:input_type -> lq.ReqCommon
	497,  // 965: lq.Lobby.upgradeActivityBuff:input_type -> lq.ReqUpgradeActivityBuff
	498,  // 966: lq.Lobby.upgradeActivityLevel:input_type -> lq.ReqUpgradeActivityLevel
	500,  // 967: lq.Lobby.receiveUpgradeActivityReward:input_type -> lq.ReqReceiveUpgradeActivityReward
	48,   // 968: lq.Lobby.upgradeChallenge:input_type -> lq.ReqCommon
	48,   // 969: lq.Lobby.refreshChallenge:input_type -> lq.ReqCommon
	48,   // 970: lq.Lobby.fetchChallengeInfo:input_type -> lq.ReqCommon
	507,  // 971: lq.Lobby.forceCompleteChallengeTask:input_type -> lq.ReqForceCompleteChallengeTask
	48,   // 972: lq.Lobby.fetchChallengeSeason:input_type -> lq.ReqCommon
	512,  // 973: lq.Lobby.receiveChallengeRankReward:input_type -> lq.ReqReceiveChallengeRankReward
	48,   // 974: lq.Lobby.fetchABMatchInfo:input_type -> lq.ReqCommon
	514,  // 975: lq.Lobby.buyInABMatch:input_type -> lq.ReqBuyInABMatch
	48,   // 976: lq.Lobby.receiveABMatchReward:input_type -> lq.ReqCommon
	48,   // 977: lq.Lobby.quitABMatch:input_type -> lq.ReqCommon
	509,  // 978: lq.Lobby.startUnifiedMatch:input_type -> lq.ReqStartUnifiedMatch
	510,  // 979: lq.Lobby.cancelUnifiedMatch:input_type -> lq.ReqCancelUnifiedMatch
	515,  // 980: lq.Lobby.fetchGamePointRank:input_type -> lq.ReqGamePointRank
	515,  // 981: lq.Lobby.fetchSelfGamePointRank:input_type -> lq.ReqGamePointRank
	518,  // 982: lq.Lobby.readSNS:input_type -> lq.ReqReadSNS
	520,  // 983: lq.Lobby.replySNS:input_type -> lq.ReqReplySNS
	522,  // 984: lq.Lobby.likeSNS:input_type -> lq.ReqLikeSNS
	524,  // 985: lq.Lobby.digMine:input_type -> lq.ReqDigMine
	526,  // 986: lq.Lobby.fetchLastPrivacy:input_type -> lq.ReqFetchLastPrivacy
	528,  // 987: lq.Lobby.checkPrivacy:input_type -> lq.ReqCheckPrivacy
	529,  // 988: lq.Lobby.responseCaptcha:input_type -> lq.ReqResponseCaptcha
	530,  // 989: lq.Lobby.fetchRPGBattleHistory:input_type -> lq.ReqFetchRPGBattleHistory
	530,  // 990: lq.Lobby.fetchRPGBattleHistoryV2:input_type -> lq.ReqFetchRPGBattleHistory
	537,  // 991: lq.Lobby.receiveRPGRewards:input_type -> lq.ReqReceiveRPGRewards
	538,  // 992: lq.Lobby.receiveRPGReward:input_type -> lq.ReqReceiveRPGReward
	533,  // 993: lq.Lobby.buyArenaTicket:input_type -> lq.ReqBuyArenaTicket
	535,  // 994: lq.Lobby.enterArena:input_type -> lq.ReqEnterArena
	534,  // 995: lq.Lobby.receiveArenaReward:input_type -> lq.ReqArenaReward
	540,  // 996: lq.Lobby.fetchOBToken:input_type -> lq.ReqFetchOBToken
	542,  // 997: lq.Lobby.receiveCharacterRewards:input_type -> lq.ReqReceiveCharacterRewards
	544,  // 998: lq.Lobby.feedActivityFeed:input_type -> lq.ReqFeedActivityFeed
	546,  // 999: lq.Lobby.sendActivityGiftToFriend:input_type -> lq.ReqSendActivityGiftToFriend
	548,  // 1000: lq.Lobby.receiveActivityGift:input_type -> lq.ReqReceiveActivityGift
	502,  // 1001: lq.Lobby.receiveAllActivityGift:input_type -> lq.ReqReceiveAllActivityGift
	549,  // 1002: lq.Lobby.fetchFriendGiftActivityData:input_type -> lq.ReqFetchFriendGiftActivityData
	551,  // 1003: lq.Lobby.openPreChestItem:input_type -> lq.ReqOpenPreChestItem
	553,  // 1004: lq.Lobby.fetchVoteActivity:input_type -> lq.ReqFetchVoteActivity
	555,  // 1005: lq.Lobby.voteActivity:input_type -> lq.ReqVoteActivity
	557,  // 1006: lq.Lobby.unlockActivitySpot:input_type -> lq.ReqUnlockActivitySpot
	558,  // 1007: lq.Lobby.receiveActivitySpotReward:input_type -> lq.ReqReceiveActivitySpotReward
	48,   // 1008: lq.Lobby.deleteAccount:input_type -> lq.ReqCommon
	48,   // 1009: lq.Lobby.cancelDeleteAccount:input_type -> lq.ReqCommon
	560,  // 1010: lq.Lobby.logReport:input_type -> lq.ReqLogReport
	561,  // 1011: lq.Lobby.bindOauth2:input_type -> lq.ReqBindOauth2
	562,  // 1012: lq.Lobby.fetchOauth2Info:input_type -> lq.ReqFetchOauth2
	565,  // 1013: lq.Lobby.setLoadingImage:input_type -> lq.ReqSetLoadingImage
	48,   // 1014: lq.Lobby.fetchShopInterval:input_type -> lq.ReqCommon
	48,   // 1015: lq.Lobby.fetchActivityInterval:input_type -> lq.ReqCommon
	48,   // 1016: lq.Lobby.fetchRecentFriend:input_type -> lq.ReqCommon
	569,  // 1017: lq.Lobby.openGacha:input_type -> lq.ReqOpenGacha
	571,  // 1018: lq.Lobby.taskRequest:input_type -> lq.ReqTaskRequest
	637,  // 1019: lq.FastTest.authGame:input_type -> lq.ReqAuthGame
	48,   // 1020: lq.FastTest.enterGame:input_type -> lq.ReqCommon
	641,  // 1021: lq.FastTest.syncGame:input_type -> lq.ReqSyncGame
	48,   // 1022: lq.FastTest.finishSyncGame:input_type -> lq.ReqCommon
	48,   // 1023: lq.FastTest.terminateGame:input_type -> lq.ReqCommon
	643,  // 1024: lq.FastTest.inputOperation:input_type -> lq.ReqSelfOperation
	644,  // 1025: lq.FastTest.inputChiPengGang:input_type -> lq.ReqChiPengGang
	48,   // 1026: lq.FastTest.confirmNewRound:input_type -> lq.ReqCommon
	645,  // 1027: lq.FastTest.broadcastInGame:input_type -> lq.ReqBroadcastInGame
	646,  // 1028: lq.FastTest.inputGameGMCommand:input_type -> lq.ReqGMCommandInGaming
	48,   // 1029: lq.FastTest.fetchGamePlayerState:input_type -> lq.ReqCommon
	48,   // 1030: lq.FastTest.checkNetworkDelay:input_type -> lq.ReqCommon
	48,   // 1031: lq.FastTest.clearLeaving:input_type -> lq.ReqCommon
	648,  // 1032: lq.FastTest.voteGameEnd:input_type -> lq.ReqVoteGameEnd
	650,  // 1033: lq.FastTest.authObserve:input_type -> lq.ReqAuthObserve
	48,   // 1034: lq.FastTest.startObserve:input_type -> lq.ReqCommon
	48,   // 1035: lq.FastTest.stopObserve:input_type -> lq.ReqCommon
	183,  // 1036: lq.Lobby.fetchConnectionInfo:output_type -> lq.ResConnectionInfo
	184,  // 1037: lq.Lobby.fetchQueueInfo:output_type -> lq.ResFetchQueueInfo
	49,   // 1038: lq.Lobby.cancelQueue:output_type -> lq.ResCommon
	205,  // 1039: lq.Lobby.openidCheck:output_type -> lq.ResOauth2Check
	187,  // 1040: lq.Lobby.signup:output_type -> lq.ResSignupAccount
	189,  // 1041: lq.Lobby.login:output_type -> lq.ResLogin
	49,   // 1042: lq.Lobby.loginSuccess:output_type -> lq.ResCommon
	189,  // 1043: lq.Lobby.emailLogin:output_type -> lq.ResLogin
	203,  // 1044: lq.Lobby.oauth2Auth:output_type -> lq.ResOauth2Auth
	205,  // 1045: lq.Lobby.oauth2Check:output_type -> lq.ResOauth2Check
	207,  // 1046: lq.Lobby.oauth2Signup:output_type -> lq.ResOauth2Signup
	189,  // 1047: lq.Lobby.oauth2Login:output_type -> lq.ResLogin
	210,  // 1048: lq.Lobby.dmmPreLogin:output_type -> lq.ResDMMPreLogin
	49,   // 1049: lq.Lobby.createPhoneVerifyCode:output_type -> lq.ResCommon
	49,   // 1050: lq.Lobby.createEmailVerifyCode:output_type -> lq.ResCommon
	195,  // 1051: lq.Lobby.verfifyCodeForSecure:output_type -> lq.ResVerfiyCodeForSecure
	49,   // 1052: lq.Lobby.bindPhoneNumber:output_type -> lq.ResCommon
	49,   // 1053: lq.Lobby.unbindPhoneNumber:output_type -> lq.ResCommon
	198,  // 1054: lq.Lobby.fetchPhoneLoginBind:output_type -> lq.ResFetchPhoneLoginBind
	49,   // 1055: lq.Lobby.createPhoneLoginBind:output_type -> lq.ResCommon
	49,   // 1056: lq.Lobby.bindEmail:output_type -> lq.ResCommon
	49,   // 1057: lq.Lobby.modifyPassword:output_type -> lq.ResCommon
	49,   // 1058: lq.Lobby.bindAccount:output_type -> lq.ResCommon
	212,  // 1059: lq.Lobby.logout:output_type -> lq.ResLogout
	49,   // 1060: lq.Lobby.heatbeat:output_type -> lq.ResCommon
	49,   // 1061: lq.Lobby.loginBeat:output_type -> lq.ResCommon
	49,   // 1062: lq.Lobby.createNickname:output_type -> lq.ResCommon
	49,   // 1063: lq.Lobby.modifyNickname:output_type -> lq.ResCommon
	49,   // 1064: lq.Lobby.modifyBirthday:output_type -> lq.ResCommon
	222,  // 1065: lq.Lobby.fetchRoom:output_type -> lq.ResSelfRoom
	224,  // 1066: lq.Lobby.createRoom:output_type -> lq.ResCreateRoom
	226,  // 1067: lq.Lobby.joinRoom:output_type -> lq.ResJoinRoom
	49,   // 1068: lq.Lobby.leaveRoom:output_type -> lq.ResCommon
	49,   // 1069: lq.Lobby.readyPlay:output_type -> lq.ResCommon
	49,   // 1070: lq.Lobby.dressingStatus:output_type -> lq.ResCommon
	49,   // 1071: lq.Lobby.startRoom:output_type -> lq.ResCommon
	49,   // 1072: lq.Lobby.kickPlayer:output_type -> lq.ResCommon
	49,   // 1073: lq.Lobby.modifyRoom:output_type -> lq.ResCommon
	49,   // 1074: lq.Lobby.matchGame:output_type -> lq.ResCommon
	49,   // 1075: lq.Lobby.cancelMatch:output_type -> lq.ResCommon
	218,  // 1076: lq.Lobby.fetchAccountInfo:output_type -> lq.ResAccountInfo
	49,   // 1077: lq.Lobby.changeAvatar:output_type -> lq.ResCommon
	49,   // 1078: lq.Lobby.receiveVersionReward:output_type -> lq.ResCommon
	234,  // 1079: lq.Lobby.fetchAccountStatisticInfo:output_type -> lq.ResAccountStatisticInfo
	235,  // 1080: lq.Lobby.fetchAccountChallengeRankInfo:output_type -> lq.ResAccountChallengeRankInfo
	236,  // 1081: lq.Lobby.fetchAccountCharacterInfo:output_type -> lq.ResAccountCharacterInfo
	238,  // 1082: lq.Lobby.shopPurchase:output_type -> lq.ResShopPurchase
	240,  // 1083: lq.Lobby.fetchGameRecord:output_type -> lq.ResGameRecord
	49,   // 1084: lq.Lobby.readGameRecord:output_type -> lq.ResCommon
	242,  // 1085: lq.Lobby.fetchGameRecordList:output_type -> lq.ResGameRecordList
	243,  // 1086: lq.Lobby.fetchCollectedGameRecordList:output_type -> lq.ResCollectedGameRecordList
	245,  // 1087: lq.Lobby.fetchGameRecordsDetail:output_type -> lq.ResGameRecordsDetail
	247,  // 1088: lq.Lobby.addCollectedGameRecord:output_type -> lq.ResAddCollectedGameRecord
	249,  // 1089: lq.Lobby.removeCollectedGameRecord:output_type -> lq.ResRemoveCollectedGameRecord
	251,  // 1090: lq.Lobby.changeCollectedGameRecordRemarks:output_type -> lq.ResChangeCollectedGameRecordRemarks
	253,  // 1091: lq.Lobby.fetchLevelLeaderboard:output_type -> lq.ResLevelLeaderboard
	255,  // 1092: lq.Lobby.fetchChallengeLeaderboard:output_type -> lq.ResChallengeLeaderboard
	257,  // 1093: lq.Lobby.fetchMutiChallengeLevel:output_type -> lq.ResMutiChallengeLevel
	259,  // 1094: lq.Lobby.fetchMultiAccountBrief:output_type -> lq.ResMultiAccountBrief
	260,  // 1095: lq.Lobby.fetchFriendList:output_type -> lq.ResFriendList
	261,  // 1096: lq.Lobby.fetchFriendApplyList:output_type -> lq.ResFriendApplyList
	49,   // 1097: lq.Lobby.applyFriend:output_type -> lq.ResCommon
	49,   // 1098: lq.Lobby.handleFriendApply:output_type -> lq.ResCommon
	49,   // 1099: lq.Lobby.removeFriend:output_type -> lq.ResCommon
	270,  // 1100: lq.Lobby.searchAccountById:output_type -> lq.ResSearchAccountById
	266,  // 1101: lq.Lobby.searchAccountByPattern:output_type -> lq.ResSearchAccountByPattern
	268,  // 1102: lq.Lobby.fetchAccountState:output_type -> lq.ResAccountStates
	271,  // 1103: lq.Lobby.fetchBagInfo:output_type -> lq.ResBagInfo
	49,   // 1104: lq.Lobby.useBagItem:output_type -> lq.ResCommon
	49,   // 1105: lq.Lobby.openManualItem:output_type -> lq.ResCommon
	275,  // 1106: lq.Lobby.openRandomRewardItem:output_type -> lq.ResOpenRandomRewardItem
	277,  // 1107: lq.Lobby.openAllRewardItem:output_type -> lq.ResOpenAllRewardItem
	49,   // 1108: lq.Lobby.composeShard:output_type -> lq.ResCommon
	280,  // 1109: lq.Lobby.fetchAnnouncement:output_type -> lq.ResAnnouncement
	49,   // 1110: lq.Lobby.readAnnouncement:output_type -> lq.ResCommon
	281,  // 1111: lq.Lobby.fetchMailInfo:output_type -> lq.ResMailInfo
	49,   // 1112: lq.Lobby.readMail:output_type -> lq.ResCommon
	49,   // 1113: lq.Lobby.deleteMail:output_type -> lq.ResCommon
	49,   // 1114: lq.Lobby.takeAttachmentFromMail:output_type -> lq.ResCommon
	288,  // 1115: lq.Lobby.receiveAchievementReward:output_type -> lq.ResReceiveAchievementReward
	286,  // 1116: lq.Lobby.receiveAchievementGroupReward:output_type -> lq.ResReceiveAchievementGroupReward
	289,  // 1117: lq.Lobby.fetchAchievementRate:output_type -> lq.ResFetchAchievementRate
	290,  // 1118: lq.Lobby.fetchAchievement:output_type -> lq.ResAchievement
	49,   // 1119: lq.Lobby.buyShiLian:output_type -> lq.ResCommon
	49,   // 1120: lq.Lobby.matchShiLian:output_type -> lq.ResCommon
	49,   // 1121: lq.Lobby.goNextShiLian:output_type -> lq.ResCommon
	49,   // 1122: lq.Lobby.updateClientValue:output_type -> lq.ResCommon
	295,  // 1123: lq.Lobby.fetchClientValue:output_type -> lq.ResClientValue
	49,   // 1124: lq.Lobby.clientMessage:output_type -> lq.ResCommon
	298,  // 1125: lq.Lobby.fetchCurrentMatchInfo:output_type -> lq.ResCurrentMatchInfo
	49,   // 1126: lq.Lobby.userComplain:output_type -> lq.ResCommon
	301,  // 1127: lq.Lobby.fetchReviveCoinInfo:output_type -> lq.ResReviveCoinInfo
	49,   // 1128: lq.Lobby.gainReviveCoin:output_type -> lq.ResCommon
	302,  // 1129: lq.Lobby.fetchDailyTask:output_type -> lq.ResDailyTask
	304,  // 1130: lq.Lobby.refreshDailyTask:output_type -> lq.ResRefreshDailyTask
	306,  // 1131: lq.Lobby.useGiftCode:output_type -> lq.ResUseGiftCode
	307,  // 1132: lq.Lobby.useSpecialGiftCode:output_type -> lq.ResUseSpecialGiftCode
	291,  // 1133: lq.Lobby.fetchTitleList:output_type -> lq.ResTitleList
	49,   // 1134: lq.Lobby.useTitle:output_type -> lq.ResCommon
	49,   // 1135: lq.Lobby.sendClientMessage:output_type -> lq.ResCommon
	310,  // 1136: lq.Lobby.fetchGameLiveInfo:output_type -> lq.ResGameLiveInfo
	312,  // 1137: lq.Lobby.fetchGameLiveLeftSegment:output_type -> lq.ResGameLiveLeftSegment
	314,  // 1138: lq.Lobby.fetchGameLiveList:output_type -> lq.ResGameLiveList
	315,  // 1139: lq.Lobby.fetchCommentSetting:output_type -> lq.ResCommentSetting
	49,   // 1140: lq.Lobby.updateCommentSetting:output_type -> lq.ResCommon
	318,  // 1141: lq.Lobby.fetchCommentList:output_type -> lq.ResFetchCommentList
	320,  // 1142: lq.Lobby.fetchCommentContent:output_type -> lq.ResFetchCommentContent
	49,   // 1143: lq.Lobby.leaveComment:output_type -> lq.ResCommon
	49,   // 1144: lq.Lobby.deleteComment:output_type -> lq.ResCommon
	49,   // 1145: lq.Lobby.updateReadComment:output_type -> lq.ResCommon
	324,  // 1146: lq.Lobby.fetchRollingNotice:output_type -> lq.ReqRollingNotice
	325,  // 1147: lq.Lobby.fetchServerTime:output_type -> lq.ResServerTime
	327,  // 1148: lq.Lobby.fetchPlatformProducts:output_type -> lq.ResPlatformBillingProducts
	49,   // 1149: lq.Lobby.cancelGooglePlayOrder:output_type -> lq.ResCommon
	399,  // 1150: lq.Lobby.openChest:output_type -> lq.ResOpenChest
	401,  // 1151: lq.Lobby.buyFromChestShop:output_type -> lq.ResBuyFromChestShop
	402,  // 1152: lq.Lobby.fetchDailySignInInfo:output_type -> lq.ResDailySignInInfo
	49,   // 1153: lq.Lobby.doDailySignIn:output_type -> lq.ResCommon
	404,  // 1154: lq.Lobby.doActivitySignIn:output_type -> lq.ResDoActivitySignIn
	405,  // 1155: lq.Lobby.fetchCharacterInfo:output_type -> lq.ResCharacterInfo
	49,   // 1156: lq.Lobby.updateCharacterSort:output_type -> lq.ResCommon
	49,   // 1157: lq.Lobby.changeMainCharacter:output_type -> lq.ResCommon
	49,   // 1158: lq.Lobby.changeCharacterSkin:output_type -> lq.ResCommon
	49,   // 1159: lq.Lobby.changeCharacterView:output_type -> lq.ResCommon
	411,  // 1160: lq.Lobby.setHiddenCharacter:output_type -> lq.ResSetHiddenCharacter
	413,  // 1161: lq.Lobby.sendGiftToCharacter:output_type -> lq.ResSendGiftToCharacter
	49,   // 1162: lq.Lobby.sellItem:output_type -> lq.ResCommon
	415,  // 1163: lq.Lobby.fetchCommonView:output_type -> lq.ResCommonView
	49,   // 1164: lq.Lobby.changeCommonView:output_type -> lq.ResCommon
	49,   // 1165: lq.Lobby.saveCommonViews:output_type -> lq.ResCommon
	419,  // 1166: lq.Lobby.fetchCommonViews:output_type -> lq.ResCommonViews
	420,  // 1167: lq.Lobby.fetchAllCommonViews:output_type -> lq.ResAllcommonViews
	49,   // 1168: lq.Lobby.useCommonView:output_type -> lq.ResCommon
	423,  // 1169: lq.Lobby.upgradeCharacter:output_type -> lq.ResUpgradeCharacter
	49,   // 1170: lq.Lobby.addFinishedEnding:output_type -> lq.ResCommon
	49,   // 1171: lq.Lobby.receiveEndingReward:output_type -> lq.ResCommon
	49,   // 1172: lq.Lobby.gameMasterCommand:output_type -> lq.ResCommon
	426,  // 1173: lq.Lobby.fetchShopInfo:output_type -> lq.ResShopInfo
	428,  // 1174: lq.Lobby.buyFromShop:output_type -> lq.ResBuyFromShop
	49,   // 1175: lq.Lobby.buyFromZHP:output_type -> lq.ResCommon
	433,  // 1176: lq.Lobby.refreshZHPShop:output_type -> lq.ResRefreshZHPShop
	434,  // 1177: lq.Lobby.fetchMonthTicketInfo:output_type -> lq.ResMonthTicketInfo
	431,  // 1178: lq.Lobby.payMonthTicket:output_type -> lq.ResPayMonthTicket
	49,   // 1179: lq.Lobby.exchangeCurrency:output_type -> lq.ResCommon
	49,   // 1180: lq.Lobby.exchangeChestStone:output_type -> lq.ResCommon
	49,   // 1181: lq.Lobby.exchangeDiamond:output_type -> lq.ResCommon
	436,  // 1182: lq.Lobby.fetchServerSettings:output_type -> lq.ResServerSettings
	437,  // 1183: lq.Lobby.fetchAccountSettings:output_type -> lq.ResAccountSettings
	49,   // 1184: lq.Lobby.updateAccountSettings:output_type -> lq.ResCommon
	439,  // 1185: lq.Lobby.fetchModNicknameTime:output_type -> lq.ResModNicknameTime
	334,  // 1186: lq.Lobby.createWechatNativeOrder:output_type -> lq.ResCreateWechatNativeOrder
	336,  // 1187: lq.Lobby.createWechatAppOrder:output_type -> lq.ResCreateWechatAppOrder
	338,  // 1188: lq.Lobby.createAlipayOrder:output_type -> lq.ResCreateAlipayOrder
	340,  // 1189: lq.Lobby.createAlipayScanOrder:output_type -> lq.ResCreateAlipayScanOrder
	342,  // 1190: lq.Lobby.createAlipayAppOrder:output_type -> lq.ResCreateAlipayAppOrder
	344,  // 1191: lq.Lobby.createJPCreditCardOrder:output_type -> lq.ResCreateJPCreditCardOrder
	346,  // 1192: lq.Lobby.createJPPaypalOrder:output_type -> lq.ResCreateJPPaypalOrder
	348,  // 1193: lq.Lobby.createJPAuOrder:output_type -> lq.ResCreateJPAuOrder
	350,  // 1194: lq.Lobby.createJPDocomoOrder:output_type -> lq.ResCreateJPDocomoOrder
	352,  // 1195: lq.Lobby.createJPWebMoneyOrder:output_type -> lq.ResCreateJPWebMoneyOrder
	354,  // 1196: lq.Lobby.createJPSoftbankOrder:output_type -> lq.ResCreateJPSoftbankOrder
	356,  // 1197: lq.Lobby.createJPPayPayOrder:output_type -> lq.ResCreateJPPayPayOrder
	358,  // 1198: lq.Lobby.fetchJPCommonCreditCardOrder:output_type -> lq.ResFetchJPCommonCreditCardOrder
	362,  // 1199: lq.Lobby.createENPaypalOrder:output_type -> lq.ResCreateENPaypalOrder
	366,  // 1200: lq.Lobby.createENMasterCardOrder:output_type -> lq.ResCreateENMasterCardOrder
	368,  // 1201: lq.Lobby.createENVisaOrder:output_type -> lq.ResCreateENVisaOrder
	364,  // 1202: lq.Lobby.createENJCBOrder:output_type -> lq.ResCreateENJCBOrder
	370,  // 1203: lq.Lobby.createENAlipayOrder:output_type -> lq.ResCreateENAlipayOrder
	372,  // 1204: lq.Lobby.createKRPaypalOrder:output_type -> lq.ResCreateKRPaypalOrder
	376,  // 1205: lq.Lobby.createKRMasterCardOrder:output_type -> lq.ResCreateKRMasterCardOrder
	378,  // 1206: lq.Lobby.createKRVisaOrder:output_type -> lq.ResCreateKRVisaOrder
	374,  // 1207: lq.Lobby.createKRJCBOrder:output_type -> lq.ResCreateKRJCBOrder
	380,  // 1208: lq.Lobby.createKRAlipayOrder:output_type -> lq.ResCreateKRAlipayOrder
	382,  // 1209: lq.Lobby.createDMMOrder:output_type -> lq.ResCreateDmmOrder
	384,  // 1210: lq.Lobby.createIAPOrder:output_type -> lq.ResCreateIAPOrder
	388,  // 1211: lq.Lobby.createSteamOrder:output_type -> lq.ResCreateSteamOrder
	49,   // 1212: lq.Lobby.verifySteamOrder:output_type -> lq.ResCommon
	391,  // 1213: lq.Lobby.createMyCardAndroidOrder:output_type -> lq.ResCreateMyCardOrder
	391,  // 1214: lq.Lobby.createMyCardWebOrder:output_type -> lq.ResCreateMyCardOrder
	394,  // 1215: lq.Lobby.createPaypalOrder:output_type -> lq.ResCreatePaypalOrder
	396,  // 1216: lq.Lobby.createXsollaOrder:output_type -> lq.ResCreateXsollaOrder
	49,   // 1217: lq.Lobby.verifyMyCardOrder:output_type -> lq.ResCommon
	386,  // 1218: lq.Lobby.verificationIAPOrder:output_type -> lq.ResVerificationIAPOrder
	360,  // 1219: lq.Lobby.createYostarSDKOrder:output_type -> lq.ResCreateYostarOrder
	329,  // 1220: lq.Lobby.createBillingOrder:output_type -> lq.ResCreateBillingOrder
	49,   // 1221: lq.Lobby.solveGooglePlayOrder:output_type -> lq.ResCommon
	49,   // 1222: lq.Lobby.solveGooglePayOrderV3:output_type -> lq.ResCommon
	49,   // 1223: lq.Lobby.deliverAA32Order:output_type -> lq.ResCommon
	440,  // 1224: lq.Lobby.fetchMisc:output_type -> lq.ResMisc
	49,   // 1225: lq.Lobby.modifySignature:output_type -> lq.ResCommon
	442,  // 1226: lq.Lobby.fetchIDCardInfo:output_type -> lq.ResIDCardInfo
	49,   // 1227: lq.Lobby.updateIDCardInfo:output_type -> lq.ResCommon
	444,  // 1228: lq.Lobby.fetchVipReward:output_type -> lq.ResVipReward
	49,   // 1229: lq.Lobby.gainVipReward:output_type -> lq.ResCommon
	445,  // 1230: lq.Lobby.fetchRefundOrder:output_type -> lq.ResFetchRefundOrder
	448,  // 1231: lq.Lobby.fetchCustomizedContestList:output_type -> lq.ResFetchCustomizedContestList
	450,  // 1232: lq.Lobby.fetchCustomizedContestExtendInfo:output_type -> lq.ResFetchCustomizedContestExtendInfo
	452,  // 1233: lq.Lobby.fetchCustomizedContestAuthInfo:output_type -> lq.ResFetchCustomizedContestAuthInfo
	454,  // 1234: lq.Lobby.enterCustomizedContest:output_type -> lq.ResEnterCustomizedContest
	49,   // 1235: lq.Lobby.leaveCustomizedContest:output_type -> lq.ResCommon
	456,  // 1236: lq.Lobby.fetchCustomizedContestOnlineInfo:output_type -> lq.ResFetchCustomizedContestOnlineInfo
	458,  // 1237: lq.Lobby.fetchCustomizedContestByContestId:output_type -> lq.ResFetchCustomizedContestByContestId
	49,   // 1238: lq.Lobby.startCustomizedContest:output_type -> lq.ResCommon
	49,   // 1239: lq.Lobby.stopCustomizedContest:output_type -> lq.ResCommon
	461,  // 1240: lq.Lobby.joinCustomizedContestChatRoom:output_type -> lq.ResJoinCustomizedContestChatRoom
	49,   // 1241: lq.Lobby.leaveCustomizedContestChatRoom:output_type -> lq.ResCommon
	49,   // 1242: lq.Lobby.sayChatMessage:output_type -> lq.ResCommon
	466,  // 1243: lq.Lobby.fetchCustomizedContestGameRecords:output_type -> lq.ResFetchCustomizedContestGameRecords
	464,  // 1244: lq.Lobby.fetchCustomizedContestGameLiveList:output_type -> lq.ResFetchCustomizedContestGameLiveList
	49,   // 1245: lq.Lobby.followCustomizedContest:output_type -> lq.ResCommon
	49,   // 1246: lq.Lobby.unfollowCustomizedContest:output_type -> lq.ResCommon
	468,  // 1247: lq.Lobby.fetchActivityList:output_type -> lq.ResActivityList
	469,  // 1248: lq.Lobby.fetchAccountActivityData:output_type -> lq.ResAccountActivityData
	473,  // 1249: lq.Lobby.exchangeActivityItem:output_type -> lq.ResExchangeActivityItem
	49,   // 1250: lq.Lobby.completeActivityTask:output_type -> lq.ResCommon
	49,   // 1251: lq.Lobby.completeActivityFlipTask:output_type -> lq.ResCommon
	49,   // 1252: lq.Lobby.completePeriodActivityTask:output_type -> lq.ResCommon
	49,   // 1253: lq.Lobby.completePeriodActivityTaskBatch:output_type -> lq.ResCommon
	49,   // 1254: lq.Lobby.completeRandomActivityTask:output_type -> lq.ResCommon
	477,  // 1255: lq.Lobby.receiveActivityFlipTask:output_type -> lq.ResReceiveActivityFlipTask
	479,  // 1256: lq.Lobby.completeSegmentTaskReward:output_type -> lq.ResCompleteSegmentTaskReward
	481,  // 1257: lq.Lobby.fetchActivityFlipInfo:output_type -> lq.ResFetchActivityFlipInfo
	49,   // 1258: lq.Lobby.gainAccumulatedPointActivityReward:output_type -> lq.ResCommon
	49,   // 1259: lq.Lobby.gainMultiPointActivityReward:output_type -> lq.ResCommon
	485,  // 1260: lq.Lobby.fetchRankPointLeaderboard:output_type -> lq.ResFetchRankPointLeaderboard
	49,   // 1261: lq.Lobby.gainRankPointReward:output_type -> lq.ResCommon
	488,  // 1262: lq.Lobby.richmanActivityNextMove:output_type -> lq.ResRichmanNextMove
	488,  // 1263: lq.Lobby.richmanAcitivitySpecialMove:output_type -> lq.ResRichmanNextMove
	491,  // 1264: lq.Lobby.richmanActivityChestInfo:output_type -> lq.ResRichmanChestInfo
	493,  // 1265: lq.Lobby.createGameObserveAuth:output_type -> lq.ResCreateGameObserveAuth
	495,  // 1266: lq.Lobby.refreshGameObserveAuth:output_type -> lq.ResRefreshGameObserveAuth
	496,  // 1267: lq.Lobby.fetchActivityBuff:output_type -> lq.ResActivityBuff
	496,  // 1268: lq.Lobby.upgradeActivityBuff:output_type -> lq.ResActivityBuff
	499,  // 1269: lq.Lobby.upgradeActivityLevel:output_type -> lq.ResUpgradeActivityLevel
	501,  // 1270: lq.Lobby.receiveUpgradeActivityReward:output_type -> lq.ResReceiveUpgradeActivityReward
	504,  // 1271: lq.Lobby.upgradeChallenge:output_type -> lq.ResUpgradeChallenge
	505,  // 1272: lq.Lobby.refreshChallenge:output_type -> lq.ResRefreshChallenge
	506,  // 1273: lq.Lobby.fetchChallengeInfo:output_type -> lq.ResFetchChallengeInfo
	49,   // 1274: lq.Lobby.forceCompleteChallengeTask:output_type -> lq.ResCommon
	511,  // 1275: lq.Lobby.fetchChallengeSeason:output_type -> lq.ResChallengeSeasonInfo
	513,  // 1276: lq.Lobby.receiveChallengeRankReward:output_type -> lq.ResReceiveChallengeRankReward
	508,  // 1277: lq.Lobby.fetchABMatchInfo:output_type -> lq.ResFetchABMatch
	49,   // 1278: lq.Lobby.buyInABMatch:output_type -> lq.ResCommon
	49,   // 1279: lq.Lobby.receiveABMatchReward:output_type -> lq.ResCommon
	49,   // 1280: lq.Lobby.quitABMatch:output_type -> lq.ResCommon
	49,   // 1281: lq.Lobby.startUnifiedMatch:output_type -> lq.ResCommon
	49,   // 1282: lq.Lobby.cancelUnifiedMatch:output_type -> lq.ResCommon
	516,  // 1283: lq.Lobby.fetchGamePointRank:output_type -> lq.ResGamePointRank
	517,  // 1284: lq.Lobby.fetchSelfGamePointRank:output_type -> lq.ResFetchSelfGamePointRank
	519,  // 1285: lq.Lobby.readSNS:output_type -> lq.ResReadSNS
	521,  // 1286: lq.Lobby.replySNS:output_type -> lq.ResReplySNS
	523,  // 1287: lq.Lobby.likeSNS:output_type -> lq.ResLikeSNS
	525,  // 1288: lq.Lobby.digMine:output_type -> lq.ResDigMine
	527,  // 1289: lq.Lobby.fetchLastPrivacy:output_type -> lq.ResFetchLastPrivacy
	49,   // 1290: lq.Lobby.checkPrivacy:output_type -> lq.ResCommon
	49,   // 1291: lq.Lobby.responseCaptcha:output_type -> lq.ResCommon
	531,  // 1292: lq.Lobby.fetchRPGBattleHistory:output_type -> lq.ResFetchRPGBattleHistory
	532,  // 1293: lq.Lobby.fetchRPGBattleHistoryV2:output_type -> lq.ResFetchRPGBattleHistoryV2
	539,  // 1294: lq.Lobby.receiveRPGRewards:output_type -> lq.ResReceiveRPGRewards
	539,  // 1295: lq.Lobby.receiveRPGReward:output_type -> lq.ResReceiveRPGRewards
	49,   // 1296: lq.Lobby.buyArenaTicket:output_type -> lq.ResCommon
	49,   // 1297: lq.Lobby.enterArena:output_type -> lq.ResCommon
	536,  // 1298: lq.Lobby.receiveArenaReward:output_type -> lq.ResArenaReward
	541,  // 1299: lq.Lobby.fetchOBToken:output_type -> lq.ResFetchOBToken
	543,  // 1300: lq.Lobby.receiveCharacterRewards:output_type -> lq.ResReceiveCharacterRewards
	545,  // 1301: lq.Lobby.feedActivityFeed:output_type -> lq.ResFeedActivityFeed
	547,  // 1302: lq.Lobby.sendActivityGiftToFriend:output_type -> lq.ResSendActivityGiftToFriend
	49,   // 1303: lq.Lobby.receiveActivityGift:output_type -> lq.ResCommon
	503,  // 1304: lq.Lobby.receiveAllActivityGift:output_type -> lq.ResReceiveAllActivityGift
	550,  // 1305: lq.Lobby.fetchFriendGiftActivityData:output_type -> lq.ResFetchFriendGiftActivityData
	552,  // 1306: lq.Lobby.openPreChestItem:output_type -> lq.ResOpenPreChestItem
	554,  // 1307: lq.Lobby.fetchVoteActivity:output_type -> lq.ResFetchVoteActivity
	556,  // 1308: lq.Lobby.voteActivity:output_type -> lq.ResVoteActivity
	49,   // 1309: lq.Lobby.unlockActivitySpot:output_type -> lq.ResCommon
	559,  // 1310: lq.Lobby.receiveActivitySpotReward:output_type -> lq.ResReceiveActivitySpotReward
	564,  // 1311: lq.Lobby.deleteAccount:output_type -> lq.ResDeleteAccount
	49,   // 1312: lq.Lobby.cancelDeleteAccount:output_type -> lq.ResCommon
	49,   // 1313: lq.Lobby.logReport:output_type -> lq.ResCommon
	49,   // 1314: lq.Lobby.bindOauth2:output_type -> lq.ResCommon
	563,  // 1315: lq.Lobby.fetchOauth2Info:output_type -> lq.ResFetchOauth2
	49,   // 1316: lq.Lobby.setLoadingImage:output_type -> lq.ResCommon
	566,  // 1317: lq.Lobby.fetchShopInterval:output_type -> lq.ResFetchShopInterval
	567,  // 1318: lq.Lobby.fetchActivityInterval:output_type -> lq.ResFetchActivityInterval
	568,  // 1319: lq.Lobby.fetchRecentFriend:output_type -> lq.ResFetchrecentFriend
	570,  // 1320: lq.Lobby.openGacha:output_type -> lq.ResOpenGacha
	49,   // 1321: lq.Lobby.taskRequest:output_type -> lq.ResCommon
	638,  // 1322: lq.FastTest.authGame:output_type -> lq.ResAuthGame
	640,  // 1323: lq.FastTest.enterGame:output_type -> lq.ResEnterGame
	642,  // 1324: lq.FastTest.syncGame:output_type -> lq.ResSyncGame
	49,   // 1325: lq.FastTest.finishSyncGame:output_type -> lq.ResCommon
	49,   // 1326: lq.FastTest.terminateGame:output_type -> lq.ResCommon
	49,   // 1327: lq.FastTest.inputOperation:output_type -> lq.ResCommon
	49,   // 1328: lq.FastTest.inputChiPengGang:output_type -> lq.ResCommon
	49,   // 1329: lq.FastTest.confirmNewRound:output_type -> lq.ResCommon
	49,   // 1330: lq.FastTest.broadcastInGame:output_type -> lq.ResCommon
	49,   // 1331: lq.FastTest.inputGameGMCommand:output_type -> lq.ResCommon
	647,  // 1332: lq.FastTest.fetchGamePlayerState:output_type -> lq.ResGamePlayerState
	49,   // 1333: lq.FastTest.checkNetworkDelay:output_type -> lq.ResCommon
	49,   // 1334: lq.FastTest.clearLeaving:output_type -> lq.ResCommon
	649,  // 1335: lq.FastTest.voteGameEnd:output_type -> lq.ResGameEndVote
	49,   // 1336: lq.FastTest.authObserve:output_type -> lq.ResCommon
	651,  // 1337: lq.FastTest.startObserve:output_type -> lq.ResStartObserve
	49,   // 1338: lq.FastTest.stopObserve:output_type -> lq.ResCommon
	1036, // [1036:1339] is the sub-list for method output_type
	733,  // [733:1036] is the sub-list for method input_type
	733,  // [733:733] is the sub-list for extension type_name
	733,  // [733:733] is the sub-list for extension extendee
	0,    // [0:733] is the sub-list for field type_name
}

func init() { file_liqi_proto_init() }
func file_liqi_proto_init() {
	if File_liqi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_liqi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCaptcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomGameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMatchGameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerDressing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomKickOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyFriendStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyFriendViewChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyFriendChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNewFriendApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAnotherLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAnnouncementUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNewMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyDeleteMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyReviveCoinUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyDailyTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityPeriodTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountRandomTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivitySegmentTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountChallengeTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNewComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRollingNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGiftSendRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyShopUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyVipLevelChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyServerSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyPayResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCustomContestAccountMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCustomContestSystemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMatchTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCustomContestState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAFKResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyLoginQueueFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishRewardV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityRewardV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityPointV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyLeaderboardPointV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntiAddiction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountOwnerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountPlayingGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCacheView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerBaseView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGameView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameTestingEnvironmentSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDetailRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEndResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameConnectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGainRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGainRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FakeRandomRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BagUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardPlusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*I18NContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticByGameMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticByFan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountFanAchieved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticByCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountShiLian); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientDeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientVersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Announcement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPGState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPGActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityArenaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentTaskProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MineActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountActivityUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFeedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFriendGiftData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityUpgradeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GachaRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityGachaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityGachaUpdateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivitySpotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountActiveState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MineReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLiveUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLiveSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLiveSegmentUri); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLiveHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameNewRoundState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEndAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameNoopAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollingNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillShortcut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZHPShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthTicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNicknameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NicknameSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSettingV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChestDataV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaithData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestAbstract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestPlayerReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestGameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestGameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityAccumulatedPointData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRankPointData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundHuData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundPlayerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordCollectedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestDetailRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestDetailRuleV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRuleSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordTingPaiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNoTilePlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHulesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordLiujuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNoTileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordLiqiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGangInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordBaBeiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordPeiPaiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordRoundInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordAnalysisedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityBuffData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResourceSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCharacterSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMailRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAchievementSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMiscSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountGiftCodeRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccSn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccSnDa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResConnectionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchQueueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOpenidCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSignupAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSignupAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEmailLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBindAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreatePhoneVerifyCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateEmailVerifyCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqVerifyCodeForSecure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResVerfiyCodeForSecure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBindPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUnbindPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchPhoneLoginBind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreatePhoneLoginBind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBindEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqModifyPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOauth2Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOauth2Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOauth2Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOauth2Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOauth2Signup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOauth2Signup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOauth2Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDMMPreLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDMMPreLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqHeatBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLoginBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqJoinMatchQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCancelMatchQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateNickname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqModifyNickname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqModifyBirthday); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSelfRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqJoinRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResJoinRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRoomReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRoomDressing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRoomStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRoomKick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqModifyRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqChangeAvatar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAccountStatisticInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountStatisticInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountChallengeRankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountCharacterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqShopPurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResShopPurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameRecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameRecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCollectedGameRecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameRecordsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameRecordsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddCollectedGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAddCollectedGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRemoveCollectedGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRemoveCollectedGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqChangeCollectedGameRecordRemarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResChangeCollectedGameRecordRemarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLevelLeaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResLevelLeaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqChallangeLeaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResChallengeLeaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMutiChallengeLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMutiChallengeLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMultiAccountId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMultiAccountBrief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFriendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFriendApplyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqApplyFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqHandleFriendApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRemoveFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSearchAccountByPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSearchAccountByPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAccountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSearchAccountById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSearchAccountById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResBagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUseBagItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOpenManualItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOpenRandomRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOpenRandomRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOpenAllRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOpenAllRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqComposeShard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchAnnouncement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAnnouncement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReadMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTakeAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveAchievementGroupReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveAchievementGroupReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveAchievementReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveAchievementReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchAchievementRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAchievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResTitleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUseTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBuyShiLian); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateClientValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResClientValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCurrentMatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCurrentMatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserComplain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReadAnnouncement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReviveCoinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDailyTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRefreshDailyTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRefreshDailyTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUseGiftCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUseGiftCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUseSpecialGiftCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSendClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameLiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameLiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameLiveLeftSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameLiveLeftSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameLiveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameLiveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCommentSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateCommentSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCommentContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCommentContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLeaveComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateReadComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRollingNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResServerTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPlatformBillingProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResPlatformBillingProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateBillingOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateBillingOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSolveGooglePlayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSolveGooglePlayOrderV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCancelGooglePlayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[332].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateWechatNativeOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[333].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateWechatNativeOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateWechatAppOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[335].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateWechatAppOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[336].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateAlipayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateAlipayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateAlipayScanOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateAlipayScanOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateAlipayAppOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateAlipayAppOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateJPCreditCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateJPCreditCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateJPPaypalOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateJPPaypalOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateJPAuOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateJPAuOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateJPDocomoOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateJPDocomoOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateJPWebMoneyOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateJPWebMoneyOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateJPSoftbankOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateJPSoftbankOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateJPPayPayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateJPPayPayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[356].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchJPCommonCreditCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchJPCommonCreditCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateYostarOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateYostarOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateENPaypalOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateENPaypalOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateENJCBOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateENJCBOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateENMasterCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[365].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateENMasterCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[366].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateENVisaOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[367].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateENVisaOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[368].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateENAlipayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[369].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateENAlipayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[370].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateKRPaypalOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[371].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateKRPaypalOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[372].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateKRJCBOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[373].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateKRJCBOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[374].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateKRMasterCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[375].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateKRMasterCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[376].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateKRVisaOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[377].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateKRVisaOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[378].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateKRAlipayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[379].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateKRAlipayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[380].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateDMMOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[381].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateDmmOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[382].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateIAPOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[383].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateIAPOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[384].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqVerificationIAPOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[385].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResVerificationIAPOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[386].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateSteamOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[387].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateSteamOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[388].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqVerifySteamOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[389].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateMyCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[390].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateMyCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[391].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqVerifyMyCardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[392].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreatePaypalOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[393].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreatePaypalOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[394].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateXsollaOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[395].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateXsollaOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[396].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeliverAA32Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[397].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOpenChest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[398].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOpenChest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[399].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBuyFromChestShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[400].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResBuyFromChestShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[401].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDailySignInInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[402].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDoActivitySignIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[403].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDoActivitySignIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[404].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCharacterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[405].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateCharacterSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[406].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqChangeMainCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[407].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqChangeCharacterSkin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[408].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqChangeCharacterView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[409].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSetHiddenCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[410].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSetHiddenCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[411].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSendGiftToCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[412].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSendGiftToCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[413].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSellItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[414].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCommonView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[415].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqChangeCommonView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[416].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSaveCommonViews); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[417].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCommonViews); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[418].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCommonViews); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[419].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAllcommonViews); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[420].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUseCommonView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[421].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpgradeCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[422].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpgradeCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[423].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFinishedEnding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[424].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGMCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[425].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResShopInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[426].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBuyFromShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[427].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResBuyFromShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[428].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBuyFromZHP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[429].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPayMonthTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[430].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResPayMonthTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[431].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReshZHPShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[432].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRefreshZHPShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[433].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMonthTicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[434].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqExchangeCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[435].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResServerSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[436].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[437].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateAccountSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[438].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResModNicknameTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[439].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMisc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[440].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqModifySignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[441].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIDCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[442].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateIDCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[443].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResVipReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[444].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRefundOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[445].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGainVipReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[446].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCustomizedContestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[447].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[448].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCustomizedContestExtendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[449].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestExtendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[450].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCustomizedContestAuthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[451].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestAuthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[452].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEnterCustomizedContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[453].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResEnterCustomizedContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[454].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCustomizedContestOnlineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[455].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestOnlineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[456].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCustomizedContestByContestId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[457].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestByContestId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[458].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqStartCustomizedContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[459].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqJoinCustomizedContestChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[460].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResJoinCustomizedContestChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[461].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSayChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[462].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCustomizedContestGameLiveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[463].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestGameLiveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[464].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCustomizedContestGameRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[465].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestGameRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[466].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTargetCustomizedContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[467].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResActivityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[468].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[469].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SNSBlog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[470].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SNSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[471].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqExchangeActivityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[472].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResExchangeActivityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[473].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCompleteActivityTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[474].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCompletePeriodActivityTaskBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[475].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveActivityFlipTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[476].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveActivityFlipTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[477].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCompleteSegmentTaskReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[478].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCompleteSegmentTaskReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[479].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchActivityFlipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[480].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchActivityFlipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[481].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGainAccumulatedPointActivityReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[482].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGainMultiPointActivityReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[483].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchRankPointLeaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[484].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRankPointLeaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[485].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGainRankPointReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[486].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRichmanNextMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[487].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRichmanNextMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[488].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRichmanSpecialMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[489].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRichmanChestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[490].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRichmanChestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[491].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateGameObserveAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[492].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateGameObserveAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[493].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRefreshGameObserveAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[494].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRefreshGameObserveAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[495].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResActivityBuff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[496].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpgradeActivityBuff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[497].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpgradeActivityLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[498].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpgradeActivityLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[499].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveUpgradeActivityReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[500].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveUpgradeActivityReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[501].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveAllActivityGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[502].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveAllActivityGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[503].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpgradeChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[504].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRefreshChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[505].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchChallengeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[506].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqForceCompleteChallengeTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[507].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchABMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[508].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqStartUnifiedMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[509].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCancelUnifiedMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[510].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResChallengeSeasonInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[511].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveChallengeRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[512].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveChallengeRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[513].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBuyInABMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[514].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGamePointRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[515].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGamePointRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[516].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchSelfGamePointRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[517].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReadSNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[518].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReadSNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[519].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReplySNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[520].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReplySNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[521].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLikeSNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[522].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResLikeSNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[523].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDigMine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[524].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDigMine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[525].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchLastPrivacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[526].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchLastPrivacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[527].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCheckPrivacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[528].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqResponseCaptcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[529].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchRPGBattleHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[530].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRPGBattleHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[531].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRPGBattleHistoryV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[532].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBuyArenaTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[533].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqArenaReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[534].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEnterArena); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[535].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResArenaReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[536].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveRPGRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[537].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveRPGReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[538].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveRPGRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[539].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchOBToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[540].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchOBToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[541].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveCharacterRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[542].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveCharacterRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[543].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFeedActivityFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[544].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFeedActivityFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[545].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSendActivityGiftToFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[546].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSendActivityGiftToFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[547].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveActivityGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[548].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchFriendGiftActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[549].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchFriendGiftActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[550].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOpenPreChestItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[551].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOpenPreChestItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[552].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchVoteActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[553].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchVoteActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[554].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqVoteActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[555].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResVoteActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[556].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUnlockActivitySpot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[557].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReceiveActivitySpotReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[558].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveActivitySpotReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[559].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLogReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[560].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBindOauth2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[561].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchOauth2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[562].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchOauth2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[563].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDeleteAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[564].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSetLoadingImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[565].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchShopInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[566].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchActivityInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[567].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchrecentFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[568].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOpenGacha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[569].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOpenGacha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[570].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[571].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionMJStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[572].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRoundOpenedTiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[573].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuyuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[574].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChuanmaGang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[575].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionNewCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[576].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNewCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[577].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionNewRound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[578].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNewRound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[579].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[580].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionPrototype); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[581].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDetailRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[582].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSelfOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[583].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameChiPengGang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[584].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameVoteGameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[585].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[586].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[587].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[588].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[589].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalOperationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[590].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiQiSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[591].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[592].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[593].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TingPaiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[594].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TingPaiDiscardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[595].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[596].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionSelectGap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[597].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordSelectGap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[598].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionChangeTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[599].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordChangeTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[600].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionRevealTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[601].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordRevealTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[602].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionUnveilTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[603].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordUnveilTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[604].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionLockTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[605].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordLockTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[606].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionDiscardTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[607].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordDiscardTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[608].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionDealTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[609].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordDealTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[610].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionFillAwaitingTiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[611].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordFillAwaitingTiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[612].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionChiPengGang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[613].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordChiPengGang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[614].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionGangResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[615].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGangResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[616].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionGangResultEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[617].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGangResultEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[618].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionAnGangAddGang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[619].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordAnGangAddGang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[620].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionBaBei); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[621].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordBaBei); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[622].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionHule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[623].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[624].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuInfoXueZhanMid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[625].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionHuleXueZhanMid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[626].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHuleXueZhanMid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[627].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionHuleXueZhanEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[628].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHuleXueZhanEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[629].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionLiuJu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[630].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordLiuJu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[631].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoTilePlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[632].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoTileScoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[633].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionNoTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[634].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNoTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[635].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLeaving); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[636].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAuthGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[637].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAuthGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[638].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRestore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[639].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResEnterGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[640].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSyncGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[641].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSyncGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[642].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSelfOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[643].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqChiPengGang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[644].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBroadcastInGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[645].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGMCommandInGaming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[646].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGamePlayerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[647].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqVoteGameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[648].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameEndVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[649].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAuthObserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[650].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResStartObserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[651].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNewGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[652].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyPlayerLoadGameReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[653].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[654].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameEndResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[655].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameTerminate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[656].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyPlayerConnectionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[657].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountLevelChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[658].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[659].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[660].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[661].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyLeaderboardPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[662].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGamePause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[663].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyEndGameVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[664].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyObserveData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[665].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerReady_AccountReadyState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[666].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerDressing_AccountDressingState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[667].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAnnouncementUpdate_AnnouncementUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[668].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityUpdate_FeedActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[669].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityUpdate_FeedActivityData_CountWithTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[670].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityUpdate_FeedActivityData_GiftBoxData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[671].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyPayResult_ResourceModify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[672].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishRewardV2_LevelChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[673].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishRewardV2_MatchChest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[674].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishRewardV2_MainCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[675].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishRewardV2_CharacterGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[676].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityRewardV2_ActivityReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[677].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityPointV2_ActivityPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[678].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyLeaderboardPointV2_LeaderboardPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[679].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_RoundSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[680].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_HuSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[681].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_HighestHuRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[682].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_Liqi20Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[683].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_LiQi10Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[684].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_GameResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[685].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_PlatformDiamond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[686].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_PlatformSkinTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[687].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_ChallengeLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[688].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_AchievementCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[689].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_NumericalUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[690].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_CharacterUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[691].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_AchievementUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[692].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_DailyTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[693].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_TitleUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[694].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_TaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[695].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_AccountChallengeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[696].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_AccountABMatchUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[697].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_SegmentTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[698].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_AccountABMatchUpdate_MatchPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[699].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEndResult_PlayerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[700].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardPlusResult_Exchange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[701].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticByGameMode_RoundEndData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[702].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticByGameMode_RankScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[703].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_RankStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[704].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_CustomizedContestStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[705].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_ChallengeStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[706].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_RankStatistic_RankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[707].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[708].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_ChallengeStatistic_SeasonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[709].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedActivityData_CountWithTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[710].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedActivityData_GiftBoxData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[711].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFeedData_CountWithTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[712].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFeedData_GiftBoxData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[713].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFriendGiftData_CountWithTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[714].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFriendGiftData_GiftBoxData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[715].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityUpgradeData_LevelGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[716].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivitySpotData_SpotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[717].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZHPShop_RefreshCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[718].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSettingV2_PaymentMaintain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[719].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSettingV2_PaymentSettingUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[720].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSetting_WechatData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[721].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSetting_AlipayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[722].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGame_AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[723].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestGameStart_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[724].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestGameEnd_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[725].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundHuData_HuPai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[726].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundHuData_Fan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[727].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot_CalculateParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[728].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot_GameSeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[729].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot_FinalPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[730].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot_AFKInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[731].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestDetailRuleV2_ExtraRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[732].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHuleInfo_RecordFanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[733].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResourceSnapshot_BagItemSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[734].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResourceSnapshot_CurrencySnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[735].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResourceSnapshot_TitleSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[736].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResourceSnapshot_UsedTitleSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[737].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCharacterSnapshot_MainCharacterSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[738].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCharacterSnapshot_SkinsSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[739].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCharacterSnapshot_HiddenCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[740].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMailRecord_MailSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[741].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAchievementSnapshot_RewardedGroupSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[742].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAchievementSnapshot_AchievementVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[743].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMiscSnapshot_AccountVIPRewardSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[744].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMiscSnapshot_MonthTicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[745].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMiscSnapshot_AccountMonthTicketSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[746].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMiscSnapshot_AccountVIP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[747].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMiscSnapshot_AccountRechargeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[748].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountChallengeRankInfo_ChallengeRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[749].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResLevelLeaderboard_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[750].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResChallengeLeaderboard_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[751].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMutiChallengeLevel_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[752].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFriendApplyList_FriendApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[753].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchAchievementRate_AchievementRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[754].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResClientValue_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[755].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCurrentMatchInfo_CurrentMatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[756].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateWechatAppOrder_CallWechatAppParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[757].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOpenChest_ChestReplaceCountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[758].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDoActivitySignIn_RewardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[759].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSendGiftToCharacter_Gift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[760].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSellItem_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[761].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCommonView_Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[762].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAllcommonViews_Views); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[763].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBuyFromShop_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[764].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMisc_MiscFaithData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[765].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRefundOrder_OrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[766].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountActivityData_ActivitySignInData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[767].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountActivityData_BuffData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[768].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountActivityData_ActivityRichmanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[769].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountActivityData_ChestUpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[770].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountActivityData_ActivitySNSData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[771].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRankPointLeaderboard_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[772].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRichmanNextMove_RewardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[773].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRichmanNextMove_PathData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[774].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRichmanNextMove_BuffData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[775].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRichmanChestInfo_ItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[776].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveAllActivityGift_ReceiveRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[777].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchABMatch_MatchPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[778].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResChallengeSeasonInfo_ChallengeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[779].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveChallengeRankReward_Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[780].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGamePointRank_RankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[781].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchLastPrivacy_PrivacyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[782].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCheckPrivacy_Versions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[783].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRPGBattleHistory_BattleResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[784].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRPGBattleHistoryV2_BattleResultV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[785].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResArenaReward_RewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[786].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveRPGRewards_RewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[787].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveCharacterRewards_RewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[788].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFeedActivityFeed_RewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[789].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchFriendGiftActivityData_ItemCountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[790].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchFriendGiftActivityData_FriendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[791].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReceiveActivitySpotReward_RewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[792].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchShopInterval_ShopInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[793].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchActivityInterval_ActivityInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[794].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNewRound_TingPai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[795].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSnapshot_PlayerSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[796].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSnapshot_PlayerSnapshot_Fulu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[797].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordSelectGap_TingPai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[798].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordChangeTile_TingPai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[799].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordChangeTile_ChangeTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[800].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishReward_LevelChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[801].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishReward_MatchChest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[802].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishReward_MainCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[803].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGameFinishReward_CharacterGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[804].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityReward_ActivityReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[805].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityPoint_ActivityPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[806].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyLeaderboardPoint_LeaderboardPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liqi_proto_msgTypes[807].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyEndGameVote_VoteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_liqi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   808,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_liqi_proto_goTypes,
		DependencyIndexes: file_liqi_proto_depIdxs,
		EnumInfos:         file_liqi_proto_enumTypes,
		MessageInfos:      file_liqi_proto_msgTypes,
	}.Build()
	File_liqi_proto = out.File
	file_liqi_proto_rawDesc = nil
	file_liqi_proto_goTypes = nil
	file_liqi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LobbyClient is the client API for Lobby service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LobbyClient interface {
	FetchConnectionInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResConnectionInfo, error)
	FetchQueueInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchQueueInfo, error)
	CancelQueue(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	OpenidCheck(ctx context.Context, in *ReqOpenidCheck, opts ...grpc.CallOption) (*ResOauth2Check, error)
	Signup(ctx context.Context, in *ReqSignupAccount, opts ...grpc.CallOption) (*ResSignupAccount, error)
	Login(ctx context.Context, in *ReqLogin, opts ...grpc.CallOption) (*ResLogin, error)
	LoginSuccess(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	EmailLogin(ctx context.Context, in *ReqEmailLogin, opts ...grpc.CallOption) (*ResLogin, error)
	Oauth2Auth(ctx context.Context, in *ReqOauth2Auth, opts ...grpc.CallOption) (*ResOauth2Auth, error)
	Oauth2Check(ctx context.Context, in *ReqOauth2Check, opts ...grpc.CallOption) (*ResOauth2Check, error)
	Oauth2Signup(ctx context.Context, in *ReqOauth2Signup, opts ...grpc.CallOption) (*ResOauth2Signup, error)
	Oauth2Login(ctx context.Context, in *ReqOauth2Login, opts ...grpc.CallOption) (*ResLogin, error)
	DmmPreLogin(ctx context.Context, in *ReqDMMPreLogin, opts ...grpc.CallOption) (*ResDMMPreLogin, error)
	CreatePhoneVerifyCode(ctx context.Context, in *ReqCreatePhoneVerifyCode, opts ...grpc.CallOption) (*ResCommon, error)
	CreateEmailVerifyCode(ctx context.Context, in *ReqCreateEmailVerifyCode, opts ...grpc.CallOption) (*ResCommon, error)
	VerfifyCodeForSecure(ctx context.Context, in *ReqVerifyCodeForSecure, opts ...grpc.CallOption) (*ResVerfiyCodeForSecure, error)
	BindPhoneNumber(ctx context.Context, in *ReqBindPhoneNumber, opts ...grpc.CallOption) (*ResCommon, error)
	UnbindPhoneNumber(ctx context.Context, in *ReqUnbindPhoneNumber, opts ...grpc.CallOption) (*ResCommon, error)
	FetchPhoneLoginBind(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchPhoneLoginBind, error)
	CreatePhoneLoginBind(ctx context.Context, in *ReqCreatePhoneLoginBind, opts ...grpc.CallOption) (*ResCommon, error)
	BindEmail(ctx context.Context, in *ReqBindEmail, opts ...grpc.CallOption) (*ResCommon, error)
	ModifyPassword(ctx context.Context, in *ReqModifyPassword, opts ...grpc.CallOption) (*ResCommon, error)
	BindAccount(ctx context.Context, in *ReqBindAccount, opts ...grpc.CallOption) (*ResCommon, error)
	Heatbeat(ctx context.Context, in *ReqHeatBeat, opts ...grpc.CallOption) (*ResCommon, error)
	Logout(ctx context.Context, in *ReqLogout, opts ...grpc.CallOption) (*ResLogout, error)
	LoginBeat(ctx context.Context, in *ReqLoginBeat, opts ...grpc.CallOption) (*ResCommon, error)
	CreateNickname(ctx context.Context, in *ReqCreateNickname, opts ...grpc.CallOption) (*ResCommon, error)
	ModifyNickname(ctx context.Context, in *ReqModifyNickname, opts ...grpc.CallOption) (*ResCommon, error)
	ModifyBirthday(ctx context.Context, in *ReqModifyBirthday, opts ...grpc.CallOption) (*ResCommon, error)
	FetchRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResSelfRoom, error)
	CreateRoom(ctx context.Context, in *ReqCreateRoom, opts ...grpc.CallOption) (*ResCreateRoom, error)
	JoinRoom(ctx context.Context, in *ReqJoinRoom, opts ...grpc.CallOption) (*ResJoinRoom, error)
	LeaveRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	ReadyPlay(ctx context.Context, in *ReqRoomReady, opts ...grpc.CallOption) (*ResCommon, error)
	DressingStatus(ctx context.Context, in *ReqRoomDressing, opts ...grpc.CallOption) (*ResCommon, error)
	StartRoom(ctx context.Context, in *ReqRoomStart, opts ...grpc.CallOption) (*ResCommon, error)
	KickPlayer(ctx context.Context, in *ReqRoomKick, opts ...grpc.CallOption) (*ResCommon, error)
	ModifyRoom(ctx context.Context, in *ReqModifyRoom, opts ...grpc.CallOption) (*ResCommon, error)
	MatchGame(ctx context.Context, in *ReqJoinMatchQueue, opts ...grpc.CallOption) (*ResCommon, error)
	CancelMatch(ctx context.Context, in *ReqCancelMatchQueue, opts ...grpc.CallOption) (*ResCommon, error)
	FetchAccountInfo(ctx context.Context, in *ReqAccountInfo, opts ...grpc.CallOption) (*ResAccountInfo, error)
	ChangeAvatar(ctx context.Context, in *ReqChangeAvatar, opts ...grpc.CallOption) (*ResCommon, error)
	ReceiveVersionReward(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	FetchAccountStatisticInfo(ctx context.Context, in *ReqAccountStatisticInfo, opts ...grpc.CallOption) (*ResAccountStatisticInfo, error)
	FetchAccountChallengeRankInfo(ctx context.Context, in *ReqAccountInfo, opts ...grpc.CallOption) (*ResAccountChallengeRankInfo, error)
	FetchAccountCharacterInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountCharacterInfo, error)
	ShopPurchase(ctx context.Context, in *ReqShopPurchase, opts ...grpc.CallOption) (*ResShopPurchase, error)
	FetchGameRecord(ctx context.Context, in *ReqGameRecord, opts ...grpc.CallOption) (*ResGameRecord, error)
	ReadGameRecord(ctx context.Context, in *ReqGameRecord, opts ...grpc.CallOption) (*ResCommon, error)
	FetchGameRecordList(ctx context.Context, in *ReqGameRecordList, opts ...grpc.CallOption) (*ResGameRecordList, error)
	FetchCollectedGameRecordList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCollectedGameRecordList, error)
	FetchGameRecordsDetail(ctx context.Context, in *ReqGameRecordsDetail, opts ...grpc.CallOption) (*ResGameRecordsDetail, error)
	AddCollectedGameRecord(ctx context.Context, in *ReqAddCollectedGameRecord, opts ...grpc.CallOption) (*ResAddCollectedGameRecord, error)
	RemoveCollectedGameRecord(ctx context.Context, in *ReqRemoveCollectedGameRecord, opts ...grpc.CallOption) (*ResRemoveCollectedGameRecord, error)
	ChangeCollectedGameRecordRemarks(ctx context.Context, in *ReqChangeCollectedGameRecordRemarks, opts ...grpc.CallOption) (*ResChangeCollectedGameRecordRemarks, error)
	FetchLevelLeaderboard(ctx context.Context, in *ReqLevelLeaderboard, opts ...grpc.CallOption) (*ResLevelLeaderboard, error)
	FetchChallengeLeaderboard(ctx context.Context, in *ReqChallangeLeaderboard, opts ...grpc.CallOption) (*ResChallengeLeaderboard, error)
	FetchMutiChallengeLevel(ctx context.Context, in *ReqMutiChallengeLevel, opts ...grpc.CallOption) (*ResMutiChallengeLevel, error)
	FetchMultiAccountBrief(ctx context.Context, in *ReqMultiAccountId, opts ...grpc.CallOption) (*ResMultiAccountBrief, error)
	FetchFriendList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFriendList, error)
	FetchFriendApplyList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFriendApplyList, error)
	ApplyFriend(ctx context.Context, in *ReqApplyFriend, opts ...grpc.CallOption) (*ResCommon, error)
	HandleFriendApply(ctx context.Context, in *ReqHandleFriendApply, opts ...grpc.CallOption) (*ResCommon, error)
	RemoveFriend(ctx context.Context, in *ReqRemoveFriend, opts ...grpc.CallOption) (*ResCommon, error)
	SearchAccountById(ctx context.Context, in *ReqSearchAccountById, opts ...grpc.CallOption) (*ResSearchAccountById, error)
	SearchAccountByPattern(ctx context.Context, in *ReqSearchAccountByPattern, opts ...grpc.CallOption) (*ResSearchAccountByPattern, error)
	FetchAccountState(ctx context.Context, in *ReqAccountList, opts ...grpc.CallOption) (*ResAccountStates, error)
	FetchBagInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResBagInfo, error)
	UseBagItem(ctx context.Context, in *ReqUseBagItem, opts ...grpc.CallOption) (*ResCommon, error)
	OpenManualItem(ctx context.Context, in *ReqOpenManualItem, opts ...grpc.CallOption) (*ResCommon, error)
	OpenRandomRewardItem(ctx context.Context, in *ReqOpenRandomRewardItem, opts ...grpc.CallOption) (*ResOpenRandomRewardItem, error)
	OpenAllRewardItem(ctx context.Context, in *ReqOpenAllRewardItem, opts ...grpc.CallOption) (*ResOpenAllRewardItem, error)
	ComposeShard(ctx context.Context, in *ReqComposeShard, opts ...grpc.CallOption) (*ResCommon, error)
	FetchAnnouncement(ctx context.Context, in *ReqFetchAnnouncement, opts ...grpc.CallOption) (*ResAnnouncement, error)
	ReadAnnouncement(ctx context.Context, in *ReqReadAnnouncement, opts ...grpc.CallOption) (*ResCommon, error)
	FetchMailInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMailInfo, error)
	ReadMail(ctx context.Context, in *ReqReadMail, opts ...grpc.CallOption) (*ResCommon, error)
	DeleteMail(ctx context.Context, in *ReqDeleteMail, opts ...grpc.CallOption) (*ResCommon, error)
	TakeAttachmentFromMail(ctx context.Context, in *ReqTakeAttachment, opts ...grpc.CallOption) (*ResCommon, error)
	ReceiveAchievementReward(ctx context.Context, in *ReqReceiveAchievementReward, opts ...grpc.CallOption) (*ResReceiveAchievementReward, error)
	ReceiveAchievementGroupReward(ctx context.Context, in *ReqReceiveAchievementGroupReward, opts ...grpc.CallOption) (*ResReceiveAchievementGroupReward, error)
	FetchAchievementRate(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchAchievementRate, error)
	FetchAchievement(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAchievement, error)
	BuyShiLian(ctx context.Context, in *ReqBuyShiLian, opts ...grpc.CallOption) (*ResCommon, error)
	MatchShiLian(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	GoNextShiLian(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	UpdateClientValue(ctx context.Context, in *ReqUpdateClientValue, opts ...grpc.CallOption) (*ResCommon, error)
	FetchClientValue(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResClientValue, error)
	ClientMessage(ctx context.Context, in *ReqClientMessage, opts ...grpc.CallOption) (*ResCommon, error)
	FetchCurrentMatchInfo(ctx context.Context, in *ReqCurrentMatchInfo, opts ...grpc.CallOption) (*ResCurrentMatchInfo, error)
	UserComplain(ctx context.Context, in *ReqUserComplain, opts ...grpc.CallOption) (*ResCommon, error)
	FetchReviveCoinInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResReviveCoinInfo, error)
	GainReviveCoin(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	FetchDailyTask(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDailyTask, error)
	RefreshDailyTask(ctx context.Context, in *ReqRefreshDailyTask, opts ...grpc.CallOption) (*ResRefreshDailyTask, error)
	UseGiftCode(ctx context.Context, in *ReqUseGiftCode, opts ...grpc.CallOption) (*ResUseGiftCode, error)
	UseSpecialGiftCode(ctx context.Context, in *ReqUseGiftCode, opts ...grpc.CallOption) (*ResUseSpecialGiftCode, error)
	FetchTitleList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResTitleList, error)
	UseTitle(ctx context.Context, in *ReqUseTitle, opts ...grpc.CallOption) (*ResCommon, error)
	SendClientMessage(ctx context.Context, in *ReqSendClientMessage, opts ...grpc.CallOption) (*ResCommon, error)
	FetchGameLiveInfo(ctx context.Context, in *ReqGameLiveInfo, opts ...grpc.CallOption) (*ResGameLiveInfo, error)
	FetchGameLiveLeftSegment(ctx context.Context, in *ReqGameLiveLeftSegment, opts ...grpc.CallOption) (*ResGameLiveLeftSegment, error)
	FetchGameLiveList(ctx context.Context, in *ReqGameLiveList, opts ...grpc.CallOption) (*ResGameLiveList, error)
	FetchCommentSetting(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommentSetting, error)
	UpdateCommentSetting(ctx context.Context, in *ReqUpdateCommentSetting, opts ...grpc.CallOption) (*ResCommon, error)
	FetchCommentList(ctx context.Context, in *ReqFetchCommentList, opts ...grpc.CallOption) (*ResFetchCommentList, error)
	FetchCommentContent(ctx context.Context, in *ReqFetchCommentContent, opts ...grpc.CallOption) (*ResFetchCommentContent, error)
	LeaveComment(ctx context.Context, in *ReqLeaveComment, opts ...grpc.CallOption) (*ResCommon, error)
	DeleteComment(ctx context.Context, in *ReqDeleteComment, opts ...grpc.CallOption) (*ResCommon, error)
	UpdateReadComment(ctx context.Context, in *ReqUpdateReadComment, opts ...grpc.CallOption) (*ResCommon, error)
	FetchRollingNotice(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ReqRollingNotice, error)
	FetchServerTime(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResServerTime, error)
	FetchPlatformProducts(ctx context.Context, in *ReqPlatformBillingProducts, opts ...grpc.CallOption) (*ResPlatformBillingProducts, error)
	CancelGooglePlayOrder(ctx context.Context, in *ReqCancelGooglePlayOrder, opts ...grpc.CallOption) (*ResCommon, error)
	OpenChest(ctx context.Context, in *ReqOpenChest, opts ...grpc.CallOption) (*ResOpenChest, error)
	BuyFromChestShop(ctx context.Context, in *ReqBuyFromChestShop, opts ...grpc.CallOption) (*ResBuyFromChestShop, error)
	FetchDailySignInInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDailySignInInfo, error)
	DoDailySignIn(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	DoActivitySignIn(ctx context.Context, in *ReqDoActivitySignIn, opts ...grpc.CallOption) (*ResDoActivitySignIn, error)
	FetchCharacterInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCharacterInfo, error)
	UpdateCharacterSort(ctx context.Context, in *ReqUpdateCharacterSort, opts ...grpc.CallOption) (*ResCommon, error)
	ChangeMainCharacter(ctx context.Context, in *ReqChangeMainCharacter, opts ...grpc.CallOption) (*ResCommon, error)
	ChangeCharacterSkin(ctx context.Context, in *ReqChangeCharacterSkin, opts ...grpc.CallOption) (*ResCommon, error)
	ChangeCharacterView(ctx context.Context, in *ReqChangeCharacterView, opts ...grpc.CallOption) (*ResCommon, error)
	SetHiddenCharacter(ctx context.Context, in *ReqSetHiddenCharacter, opts ...grpc.CallOption) (*ResSetHiddenCharacter, error)
	SendGiftToCharacter(ctx context.Context, in *ReqSendGiftToCharacter, opts ...grpc.CallOption) (*ResSendGiftToCharacter, error)
	SellItem(ctx context.Context, in *ReqSellItem, opts ...grpc.CallOption) (*ResCommon, error)
	FetchCommonView(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommonView, error)
	ChangeCommonView(ctx context.Context, in *ReqChangeCommonView, opts ...grpc.CallOption) (*ResCommon, error)
	SaveCommonViews(ctx context.Context, in *ReqSaveCommonViews, opts ...grpc.CallOption) (*ResCommon, error)
	FetchCommonViews(ctx context.Context, in *ReqCommonViews, opts ...grpc.CallOption) (*ResCommonViews, error)
	FetchAllCommonViews(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAllcommonViews, error)
	UseCommonView(ctx context.Context, in *ReqUseCommonView, opts ...grpc.CallOption) (*ResCommon, error)
	UpgradeCharacter(ctx context.Context, in *ReqUpgradeCharacter, opts ...grpc.CallOption) (*ResUpgradeCharacter, error)
	AddFinishedEnding(ctx context.Context, in *ReqFinishedEnding, opts ...grpc.CallOption) (*ResCommon, error)
	ReceiveEndingReward(ctx context.Context, in *ReqFinishedEnding, opts ...grpc.CallOption) (*ResCommon, error)
	GameMasterCommand(ctx context.Context, in *ReqGMCommand, opts ...grpc.CallOption) (*ResCommon, error)
	FetchShopInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResShopInfo, error)
	BuyFromShop(ctx context.Context, in *ReqBuyFromShop, opts ...grpc.CallOption) (*ResBuyFromShop, error)
	BuyFromZHP(ctx context.Context, in *ReqBuyFromZHP, opts ...grpc.CallOption) (*ResCommon, error)
	RefreshZHPShop(ctx context.Context, in *ReqReshZHPShop, opts ...grpc.CallOption) (*ResRefreshZHPShop, error)
	FetchMonthTicketInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMonthTicketInfo, error)
	PayMonthTicket(ctx context.Context, in *ReqPayMonthTicket, opts ...grpc.CallOption) (*ResPayMonthTicket, error)
	ExchangeCurrency(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error)
	ExchangeChestStone(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error)
	ExchangeDiamond(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error)
	FetchServerSettings(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResServerSettings, error)
	FetchAccountSettings(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountSettings, error)
	UpdateAccountSettings(ctx context.Context, in *ReqUpdateAccountSettings, opts ...grpc.CallOption) (*ResCommon, error)
	FetchModNicknameTime(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResModNicknameTime, error)
	CreateWechatNativeOrder(ctx context.Context, in *ReqCreateWechatNativeOrder, opts ...grpc.CallOption) (*ResCreateWechatNativeOrder, error)
	CreateWechatAppOrder(ctx context.Context, in *ReqCreateWechatAppOrder, opts ...grpc.CallOption) (*ResCreateWechatAppOrder, error)
	CreateAlipayOrder(ctx context.Context, in *ReqCreateAlipayOrder, opts ...grpc.CallOption) (*ResCreateAlipayOrder, error)
	CreateAlipayScanOrder(ctx context.Context, in *ReqCreateAlipayScanOrder, opts ...grpc.CallOption) (*ResCreateAlipayScanOrder, error)
	CreateAlipayAppOrder(ctx context.Context, in *ReqCreateAlipayAppOrder, opts ...grpc.CallOption) (*ResCreateAlipayAppOrder, error)
	CreateJPCreditCardOrder(ctx context.Context, in *ReqCreateJPCreditCardOrder, opts ...grpc.CallOption) (*ResCreateJPCreditCardOrder, error)
	CreateJPPaypalOrder(ctx context.Context, in *ReqCreateJPPaypalOrder, opts ...grpc.CallOption) (*ResCreateJPPaypalOrder, error)
	CreateJPAuOrder(ctx context.Context, in *ReqCreateJPAuOrder, opts ...grpc.CallOption) (*ResCreateJPAuOrder, error)
	CreateJPDocomoOrder(ctx context.Context, in *ReqCreateJPDocomoOrder, opts ...grpc.CallOption) (*ResCreateJPDocomoOrder, error)
	CreateJPWebMoneyOrder(ctx context.Context, in *ReqCreateJPWebMoneyOrder, opts ...grpc.CallOption) (*ResCreateJPWebMoneyOrder, error)
	CreateJPSoftbankOrder(ctx context.Context, in *ReqCreateJPSoftbankOrder, opts ...grpc.CallOption) (*ResCreateJPSoftbankOrder, error)
	CreateJPPayPayOrder(ctx context.Context, in *ReqCreateJPPayPayOrder, opts ...grpc.CallOption) (*ResCreateJPPayPayOrder, error)
	FetchJPCommonCreditCardOrder(ctx context.Context, in *ReqFetchJPCommonCreditCardOrder, opts ...grpc.CallOption) (*ResFetchJPCommonCreditCardOrder, error)
	CreateENPaypalOrder(ctx context.Context, in *ReqCreateENPaypalOrder, opts ...grpc.CallOption) (*ResCreateENPaypalOrder, error)
	CreateENMasterCardOrder(ctx context.Context, in *ReqCreateENMasterCardOrder, opts ...grpc.CallOption) (*ResCreateENMasterCardOrder, error)
	CreateENVisaOrder(ctx context.Context, in *ReqCreateENVisaOrder, opts ...grpc.CallOption) (*ResCreateENVisaOrder, error)
	CreateENJCBOrder(ctx context.Context, in *ReqCreateENJCBOrder, opts ...grpc.CallOption) (*ResCreateENJCBOrder, error)
	CreateENAlipayOrder(ctx context.Context, in *ReqCreateENAlipayOrder, opts ...grpc.CallOption) (*ResCreateENAlipayOrder, error)
	CreateKRPaypalOrder(ctx context.Context, in *ReqCreateKRPaypalOrder, opts ...grpc.CallOption) (*ResCreateKRPaypalOrder, error)
	CreateKRMasterCardOrder(ctx context.Context, in *ReqCreateKRMasterCardOrder, opts ...grpc.CallOption) (*ResCreateKRMasterCardOrder, error)
	CreateKRVisaOrder(ctx context.Context, in *ReqCreateKRVisaOrder, opts ...grpc.CallOption) (*ResCreateKRVisaOrder, error)
	CreateKRJCBOrder(ctx context.Context, in *ReqCreateKRJCBOrder, opts ...grpc.CallOption) (*ResCreateKRJCBOrder, error)
	CreateKRAlipayOrder(ctx context.Context, in *ReqCreateKRAlipayOrder, opts ...grpc.CallOption) (*ResCreateKRAlipayOrder, error)
	CreateDMMOrder(ctx context.Context, in *ReqCreateDMMOrder, opts ...grpc.CallOption) (*ResCreateDmmOrder, error)
	CreateIAPOrder(ctx context.Context, in *ReqCreateIAPOrder, opts ...grpc.CallOption) (*ResCreateIAPOrder, error)
	CreateSteamOrder(ctx context.Context, in *ReqCreateSteamOrder, opts ...grpc.CallOption) (*ResCreateSteamOrder, error)
	VerifySteamOrder(ctx context.Context, in *ReqVerifySteamOrder, opts ...grpc.CallOption) (*ResCommon, error)
	CreateMyCardAndroidOrder(ctx context.Context, in *ReqCreateMyCardOrder, opts ...grpc.CallOption) (*ResCreateMyCardOrder, error)
	CreateMyCardWebOrder(ctx context.Context, in *ReqCreateMyCardOrder, opts ...grpc.CallOption) (*ResCreateMyCardOrder, error)
	CreatePaypalOrder(ctx context.Context, in *ReqCreatePaypalOrder, opts ...grpc.CallOption) (*ResCreatePaypalOrder, error)
	CreateXsollaOrder(ctx context.Context, in *ReqCreateXsollaOrder, opts ...grpc.CallOption) (*ResCreateXsollaOrder, error)
	VerifyMyCardOrder(ctx context.Context, in *ReqVerifyMyCardOrder, opts ...grpc.CallOption) (*ResCommon, error)
	VerificationIAPOrder(ctx context.Context, in *ReqVerificationIAPOrder, opts ...grpc.CallOption) (*ResVerificationIAPOrder, error)
	CreateYostarSDKOrder(ctx context.Context, in *ReqCreateYostarOrder, opts ...grpc.CallOption) (*ResCreateYostarOrder, error)
	CreateBillingOrder(ctx context.Context, in *ReqCreateBillingOrder, opts ...grpc.CallOption) (*ResCreateBillingOrder, error)
	SolveGooglePlayOrder(ctx context.Context, in *ReqSolveGooglePlayOrder, opts ...grpc.CallOption) (*ResCommon, error)
	SolveGooglePayOrderV3(ctx context.Context, in *ReqSolveGooglePlayOrderV3, opts ...grpc.CallOption) (*ResCommon, error)
	DeliverAA32Order(ctx context.Context, in *ReqDeliverAA32Order, opts ...grpc.CallOption) (*ResCommon, error)
	FetchMisc(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMisc, error)
	ModifySignature(ctx context.Context, in *ReqModifySignature, opts ...grpc.CallOption) (*ResCommon, error)
	FetchIDCardInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResIDCardInfo, error)
	UpdateIDCardInfo(ctx context.Context, in *ReqUpdateIDCardInfo, opts ...grpc.CallOption) (*ResCommon, error)
	FetchVipReward(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResVipReward, error)
	GainVipReward(ctx context.Context, in *ReqGainVipReward, opts ...grpc.CallOption) (*ResCommon, error)
	FetchRefundOrder(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchRefundOrder, error)
	FetchCustomizedContestList(ctx context.Context, in *ReqFetchCustomizedContestList, opts ...grpc.CallOption) (*ResFetchCustomizedContestList, error)
	FetchCustomizedContestExtendInfo(ctx context.Context, in *ReqFetchCustomizedContestExtendInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestExtendInfo, error)
	FetchCustomizedContestAuthInfo(ctx context.Context, in *ReqFetchCustomizedContestAuthInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestAuthInfo, error)
	EnterCustomizedContest(ctx context.Context, in *ReqEnterCustomizedContest, opts ...grpc.CallOption) (*ResEnterCustomizedContest, error)
	LeaveCustomizedContest(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	FetchCustomizedContestOnlineInfo(ctx context.Context, in *ReqFetchCustomizedContestOnlineInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestOnlineInfo, error)
	FetchCustomizedContestByContestId(ctx context.Context, in *ReqFetchCustomizedContestByContestId, opts ...grpc.CallOption) (*ResFetchCustomizedContestByContestId, error)
	StartCustomizedContest(ctx context.Context, in *ReqStartCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error)
	StopCustomizedContest(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	JoinCustomizedContestChatRoom(ctx context.Context, in *ReqJoinCustomizedContestChatRoom, opts ...grpc.CallOption) (*ResJoinCustomizedContestChatRoom, error)
	LeaveCustomizedContestChatRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	SayChatMessage(ctx context.Context, in *ReqSayChatMessage, opts ...grpc.CallOption) (*ResCommon, error)
	FetchCustomizedContestGameRecords(ctx context.Context, in *ReqFetchCustomizedContestGameRecords, opts ...grpc.CallOption) (*ResFetchCustomizedContestGameRecords, error)
	FetchCustomizedContestGameLiveList(ctx context.Context, in *ReqFetchCustomizedContestGameLiveList, opts ...grpc.CallOption) (*ResFetchCustomizedContestGameLiveList, error)
	FollowCustomizedContest(ctx context.Context, in *ReqTargetCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error)
	UnfollowCustomizedContest(ctx context.Context, in *ReqTargetCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error)
	FetchActivityList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResActivityList, error)
	FetchAccountActivityData(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountActivityData, error)
	ExchangeActivityItem(ctx context.Context, in *ReqExchangeActivityItem, opts ...grpc.CallOption) (*ResExchangeActivityItem, error)
	CompleteActivityTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error)
	CompleteActivityFlipTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error)
	CompletePeriodActivityTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error)
	CompletePeriodActivityTaskBatch(ctx context.Context, in *ReqCompletePeriodActivityTaskBatch, opts ...grpc.CallOption) (*ResCommon, error)
	CompleteRandomActivityTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error)
	ReceiveActivityFlipTask(ctx context.Context, in *ReqReceiveActivityFlipTask, opts ...grpc.CallOption) (*ResReceiveActivityFlipTask, error)
	CompleteSegmentTaskReward(ctx context.Context, in *ReqCompleteSegmentTaskReward, opts ...grpc.CallOption) (*ResCompleteSegmentTaskReward, error)
	FetchActivityFlipInfo(ctx context.Context, in *ReqFetchActivityFlipInfo, opts ...grpc.CallOption) (*ResFetchActivityFlipInfo, error)
	GainAccumulatedPointActivityReward(ctx context.Context, in *ReqGainAccumulatedPointActivityReward, opts ...grpc.CallOption) (*ResCommon, error)
	GainMultiPointActivityReward(ctx context.Context, in *ReqGainMultiPointActivityReward, opts ...grpc.CallOption) (*ResCommon, error)
	FetchRankPointLeaderboard(ctx context.Context, in *ReqFetchRankPointLeaderboard, opts ...grpc.CallOption) (*ResFetchRankPointLeaderboard, error)
	GainRankPointReward(ctx context.Context, in *ReqGainRankPointReward, opts ...grpc.CallOption) (*ResCommon, error)
	RichmanActivityNextMove(ctx context.Context, in *ReqRichmanNextMove, opts ...grpc.CallOption) (*ResRichmanNextMove, error)
	RichmanAcitivitySpecialMove(ctx context.Context, in *ReqRichmanSpecialMove, opts ...grpc.CallOption) (*ResRichmanNextMove, error)
	RichmanActivityChestInfo(ctx context.Context, in *ReqRichmanChestInfo, opts ...grpc.CallOption) (*ResRichmanChestInfo, error)
	CreateGameObserveAuth(ctx context.Context, in *ReqCreateGameObserveAuth, opts ...grpc.CallOption) (*ResCreateGameObserveAuth, error)
	RefreshGameObserveAuth(ctx context.Context, in *ReqRefreshGameObserveAuth, opts ...grpc.CallOption) (*ResRefreshGameObserveAuth, error)
	FetchActivityBuff(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResActivityBuff, error)
	UpgradeActivityBuff(ctx context.Context, in *ReqUpgradeActivityBuff, opts ...grpc.CallOption) (*ResActivityBuff, error)
	UpgradeActivityLevel(ctx context.Context, in *ReqUpgradeActivityLevel, opts ...grpc.CallOption) (*ResUpgradeActivityLevel, error)
	ReceiveUpgradeActivityReward(ctx context.Context, in *ReqReceiveUpgradeActivityReward, opts ...grpc.CallOption) (*ResReceiveUpgradeActivityReward, error)
	UpgradeChallenge(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResUpgradeChallenge, error)
	RefreshChallenge(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResRefreshChallenge, error)
	FetchChallengeInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchChallengeInfo, error)
	ForceCompleteChallengeTask(ctx context.Context, in *ReqForceCompleteChallengeTask, opts ...grpc.CallOption) (*ResCommon, error)
	FetchChallengeSeason(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResChallengeSeasonInfo, error)
	ReceiveChallengeRankReward(ctx context.Context, in *ReqReceiveChallengeRankReward, opts ...grpc.CallOption) (*ResReceiveChallengeRankReward, error)
	FetchABMatchInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchABMatch, error)
	BuyInABMatch(ctx context.Context, in *ReqBuyInABMatch, opts ...grpc.CallOption) (*ResCommon, error)
	ReceiveABMatchReward(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	QuitABMatch(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	StartUnifiedMatch(ctx context.Context, in *ReqStartUnifiedMatch, opts ...grpc.CallOption) (*ResCommon, error)
	CancelUnifiedMatch(ctx context.Context, in *ReqCancelUnifiedMatch, opts ...grpc.CallOption) (*ResCommon, error)
	FetchGamePointRank(ctx context.Context, in *ReqGamePointRank, opts ...grpc.CallOption) (*ResGamePointRank, error)
	FetchSelfGamePointRank(ctx context.Context, in *ReqGamePointRank, opts ...grpc.CallOption) (*ResFetchSelfGamePointRank, error)
	ReadSNS(ctx context.Context, in *ReqReadSNS, opts ...grpc.CallOption) (*ResReadSNS, error)
	ReplySNS(ctx context.Context, in *ReqReplySNS, opts ...grpc.CallOption) (*ResReplySNS, error)
	LikeSNS(ctx context.Context, in *ReqLikeSNS, opts ...grpc.CallOption) (*ResLikeSNS, error)
	DigMine(ctx context.Context, in *ReqDigMine, opts ...grpc.CallOption) (*ResDigMine, error)
	FetchLastPrivacy(ctx context.Context, in *ReqFetchLastPrivacy, opts ...grpc.CallOption) (*ResFetchLastPrivacy, error)
	CheckPrivacy(ctx context.Context, in *ReqCheckPrivacy, opts ...grpc.CallOption) (*ResCommon, error)
	ResponseCaptcha(ctx context.Context, in *ReqResponseCaptcha, opts ...grpc.CallOption) (*ResCommon, error)
	FetchRPGBattleHistory(ctx context.Context, in *ReqFetchRPGBattleHistory, opts ...grpc.CallOption) (*ResFetchRPGBattleHistory, error)
	FetchRPGBattleHistoryV2(ctx context.Context, in *ReqFetchRPGBattleHistory, opts ...grpc.CallOption) (*ResFetchRPGBattleHistoryV2, error)
	ReceiveRPGRewards(ctx context.Context, in *ReqReceiveRPGRewards, opts ...grpc.CallOption) (*ResReceiveRPGRewards, error)
	ReceiveRPGReward(ctx context.Context, in *ReqReceiveRPGReward, opts ...grpc.CallOption) (*ResReceiveRPGRewards, error)
	BuyArenaTicket(ctx context.Context, in *ReqBuyArenaTicket, opts ...grpc.CallOption) (*ResCommon, error)
	EnterArena(ctx context.Context, in *ReqEnterArena, opts ...grpc.CallOption) (*ResCommon, error)
	ReceiveArenaReward(ctx context.Context, in *ReqArenaReward, opts ...grpc.CallOption) (*ResArenaReward, error)
	FetchOBToken(ctx context.Context, in *ReqFetchOBToken, opts ...grpc.CallOption) (*ResFetchOBToken, error)
	ReceiveCharacterRewards(ctx context.Context, in *ReqReceiveCharacterRewards, opts ...grpc.CallOption) (*ResReceiveCharacterRewards, error)
	FeedActivityFeed(ctx context.Context, in *ReqFeedActivityFeed, opts ...grpc.CallOption) (*ResFeedActivityFeed, error)
	SendActivityGiftToFriend(ctx context.Context, in *ReqSendActivityGiftToFriend, opts ...grpc.CallOption) (*ResSendActivityGiftToFriend, error)
	ReceiveActivityGift(ctx context.Context, in *ReqReceiveActivityGift, opts ...grpc.CallOption) (*ResCommon, error)
	ReceiveAllActivityGift(ctx context.Context, in *ReqReceiveAllActivityGift, opts ...grpc.CallOption) (*ResReceiveAllActivityGift, error)
	FetchFriendGiftActivityData(ctx context.Context, in *ReqFetchFriendGiftActivityData, opts ...grpc.CallOption) (*ResFetchFriendGiftActivityData, error)
	OpenPreChestItem(ctx context.Context, in *ReqOpenPreChestItem, opts ...grpc.CallOption) (*ResOpenPreChestItem, error)
	FetchVoteActivity(ctx context.Context, in *ReqFetchVoteActivity, opts ...grpc.CallOption) (*ResFetchVoteActivity, error)
	VoteActivity(ctx context.Context, in *ReqVoteActivity, opts ...grpc.CallOption) (*ResVoteActivity, error)
	UnlockActivitySpot(ctx context.Context, in *ReqUnlockActivitySpot, opts ...grpc.CallOption) (*ResCommon, error)
	ReceiveActivitySpotReward(ctx context.Context, in *ReqReceiveActivitySpotReward, opts ...grpc.CallOption) (*ResReceiveActivitySpotReward, error)
	DeleteAccount(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDeleteAccount, error)
	CancelDeleteAccount(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	LogReport(ctx context.Context, in *ReqLogReport, opts ...grpc.CallOption) (*ResCommon, error)
	BindOauth2(ctx context.Context, in *ReqBindOauth2, opts ...grpc.CallOption) (*ResCommon, error)
	FetchOauth2Info(ctx context.Context, in *ReqFetchOauth2, opts ...grpc.CallOption) (*ResFetchOauth2, error)
	SetLoadingImage(ctx context.Context, in *ReqSetLoadingImage, opts ...grpc.CallOption) (*ResCommon, error)
	FetchShopInterval(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchShopInterval, error)
	FetchActivityInterval(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchActivityInterval, error)
	FetchRecentFriend(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchrecentFriend, error)
	OpenGacha(ctx context.Context, in *ReqOpenGacha, opts ...grpc.CallOption) (*ResOpenGacha, error)
	TaskRequest(ctx context.Context, in *ReqTaskRequest, opts ...grpc.CallOption) (*ResCommon, error)
}

type lobbyClient struct {
	cc grpc.ClientConnInterface
}

func NewLobbyClient(cc grpc.ClientConnInterface) LobbyClient {
	return &lobbyClient{cc}
}

func (c *lobbyClient) FetchConnectionInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResConnectionInfo, error) {
	out := new(ResConnectionInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchConnectionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchQueueInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchQueueInfo, error) {
	out := new(ResFetchQueueInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchQueueInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CancelQueue(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/cancelQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenidCheck(ctx context.Context, in *ReqOpenidCheck, opts ...grpc.CallOption) (*ResOauth2Check, error) {
	out := new(ResOauth2Check)
	err := c.cc.Invoke(ctx, "/lq.Lobby/openidCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Signup(ctx context.Context, in *ReqSignupAccount, opts ...grpc.CallOption) (*ResSignupAccount, error) {
	out := new(ResSignupAccount)
	err := c.cc.Invoke(ctx, "/lq.Lobby/signup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Login(ctx context.Context, in *ReqLogin, opts ...grpc.CallOption) (*ResLogin, error) {
	out := new(ResLogin)
	err := c.cc.Invoke(ctx, "/lq.Lobby/login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LoginSuccess(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/loginSuccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) EmailLogin(ctx context.Context, in *ReqEmailLogin, opts ...grpc.CallOption) (*ResLogin, error) {
	out := new(ResLogin)
	err := c.cc.Invoke(ctx, "/lq.Lobby/emailLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Oauth2Auth(ctx context.Context, in *ReqOauth2Auth, opts ...grpc.CallOption) (*ResOauth2Auth, error) {
	out := new(ResOauth2Auth)
	err := c.cc.Invoke(ctx, "/lq.Lobby/oauth2Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Oauth2Check(ctx context.Context, in *ReqOauth2Check, opts ...grpc.CallOption) (*ResOauth2Check, error) {
	out := new(ResOauth2Check)
	err := c.cc.Invoke(ctx, "/lq.Lobby/oauth2Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Oauth2Signup(ctx context.Context, in *ReqOauth2Signup, opts ...grpc.CallOption) (*ResOauth2Signup, error) {
	out := new(ResOauth2Signup)
	err := c.cc.Invoke(ctx, "/lq.Lobby/oauth2Signup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Oauth2Login(ctx context.Context, in *ReqOauth2Login, opts ...grpc.CallOption) (*ResLogin, error) {
	out := new(ResLogin)
	err := c.cc.Invoke(ctx, "/lq.Lobby/oauth2Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DmmPreLogin(ctx context.Context, in *ReqDMMPreLogin, opts ...grpc.CallOption) (*ResDMMPreLogin, error) {
	out := new(ResDMMPreLogin)
	err := c.cc.Invoke(ctx, "/lq.Lobby/dmmPreLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreatePhoneVerifyCode(ctx context.Context, in *ReqCreatePhoneVerifyCode, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createPhoneVerifyCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateEmailVerifyCode(ctx context.Context, in *ReqCreateEmailVerifyCode, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createEmailVerifyCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) VerfifyCodeForSecure(ctx context.Context, in *ReqVerifyCodeForSecure, opts ...grpc.CallOption) (*ResVerfiyCodeForSecure, error) {
	out := new(ResVerfiyCodeForSecure)
	err := c.cc.Invoke(ctx, "/lq.Lobby/verfifyCodeForSecure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BindPhoneNumber(ctx context.Context, in *ReqBindPhoneNumber, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/bindPhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UnbindPhoneNumber(ctx context.Context, in *ReqUnbindPhoneNumber, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/unbindPhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchPhoneLoginBind(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchPhoneLoginBind, error) {
	out := new(ResFetchPhoneLoginBind)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchPhoneLoginBind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreatePhoneLoginBind(ctx context.Context, in *ReqCreatePhoneLoginBind, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createPhoneLoginBind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BindEmail(ctx context.Context, in *ReqBindEmail, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/bindEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifyPassword(ctx context.Context, in *ReqModifyPassword, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/modifyPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BindAccount(ctx context.Context, in *ReqBindAccount, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/bindAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Logout(ctx context.Context, in *ReqLogout, opts ...grpc.CallOption) (*ResLogout, error) {
	out := new(ResLogout)
	err := c.cc.Invoke(ctx, "/lq.Lobby/logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Heatbeat(ctx context.Context, in *ReqHeatBeat, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/heatbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LoginBeat(ctx context.Context, in *ReqLoginBeat, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/loginBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateNickname(ctx context.Context, in *ReqCreateNickname, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createNickname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifyNickname(ctx context.Context, in *ReqModifyNickname, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/modifyNickname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifyBirthday(ctx context.Context, in *ReqModifyBirthday, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/modifyBirthday", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResSelfRoom, error) {
	out := new(ResSelfRoom)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateRoom(ctx context.Context, in *ReqCreateRoom, opts ...grpc.CallOption) (*ResCreateRoom, error) {
	out := new(ResCreateRoom)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) JoinRoom(ctx context.Context, in *ReqJoinRoom, opts ...grpc.CallOption) (*ResJoinRoom, error) {
	out := new(ResJoinRoom)
	err := c.cc.Invoke(ctx, "/lq.Lobby/joinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LeaveRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/leaveRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReadyPlay(ctx context.Context, in *ReqRoomReady, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/readyPlay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DressingStatus(ctx context.Context, in *ReqRoomDressing, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/dressingStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) StartRoom(ctx context.Context, in *ReqRoomStart, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/startRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) KickPlayer(ctx context.Context, in *ReqRoomKick, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/kickPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifyRoom(ctx context.Context, in *ReqModifyRoom, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/modifyRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) MatchGame(ctx context.Context, in *ReqJoinMatchQueue, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/matchGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CancelMatch(ctx context.Context, in *ReqCancelMatchQueue, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/cancelMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountInfo(ctx context.Context, in *ReqAccountInfo, opts ...grpc.CallOption) (*ResAccountInfo, error) {
	out := new(ResAccountInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAccountInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeAvatar(ctx context.Context, in *ReqChangeAvatar, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/changeAvatar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveVersionReward(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveVersionReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountStatisticInfo(ctx context.Context, in *ReqAccountStatisticInfo, opts ...grpc.CallOption) (*ResAccountStatisticInfo, error) {
	out := new(ResAccountStatisticInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAccountStatisticInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountChallengeRankInfo(ctx context.Context, in *ReqAccountInfo, opts ...grpc.CallOption) (*ResAccountChallengeRankInfo, error) {
	out := new(ResAccountChallengeRankInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAccountChallengeRankInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountCharacterInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountCharacterInfo, error) {
	out := new(ResAccountCharacterInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAccountCharacterInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ShopPurchase(ctx context.Context, in *ReqShopPurchase, opts ...grpc.CallOption) (*ResShopPurchase, error) {
	out := new(ResShopPurchase)
	err := c.cc.Invoke(ctx, "/lq.Lobby/shopPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameRecord(ctx context.Context, in *ReqGameRecord, opts ...grpc.CallOption) (*ResGameRecord, error) {
	out := new(ResGameRecord)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchGameRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReadGameRecord(ctx context.Context, in *ReqGameRecord, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/readGameRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameRecordList(ctx context.Context, in *ReqGameRecordList, opts ...grpc.CallOption) (*ResGameRecordList, error) {
	out := new(ResGameRecordList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchGameRecordList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCollectedGameRecordList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCollectedGameRecordList, error) {
	out := new(ResCollectedGameRecordList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCollectedGameRecordList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameRecordsDetail(ctx context.Context, in *ReqGameRecordsDetail, opts ...grpc.CallOption) (*ResGameRecordsDetail, error) {
	out := new(ResGameRecordsDetail)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchGameRecordsDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) AddCollectedGameRecord(ctx context.Context, in *ReqAddCollectedGameRecord, opts ...grpc.CallOption) (*ResAddCollectedGameRecord, error) {
	out := new(ResAddCollectedGameRecord)
	err := c.cc.Invoke(ctx, "/lq.Lobby/addCollectedGameRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RemoveCollectedGameRecord(ctx context.Context, in *ReqRemoveCollectedGameRecord, opts ...grpc.CallOption) (*ResRemoveCollectedGameRecord, error) {
	out := new(ResRemoveCollectedGameRecord)
	err := c.cc.Invoke(ctx, "/lq.Lobby/removeCollectedGameRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeCollectedGameRecordRemarks(ctx context.Context, in *ReqChangeCollectedGameRecordRemarks, opts ...grpc.CallOption) (*ResChangeCollectedGameRecordRemarks, error) {
	out := new(ResChangeCollectedGameRecordRemarks)
	err := c.cc.Invoke(ctx, "/lq.Lobby/changeCollectedGameRecordRemarks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchLevelLeaderboard(ctx context.Context, in *ReqLevelLeaderboard, opts ...grpc.CallOption) (*ResLevelLeaderboard, error) {
	out := new(ResLevelLeaderboard)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchLevelLeaderboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchChallengeLeaderboard(ctx context.Context, in *ReqChallangeLeaderboard, opts ...grpc.CallOption) (*ResChallengeLeaderboard, error) {
	out := new(ResChallengeLeaderboard)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchChallengeLeaderboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchMutiChallengeLevel(ctx context.Context, in *ReqMutiChallengeLevel, opts ...grpc.CallOption) (*ResMutiChallengeLevel, error) {
	out := new(ResMutiChallengeLevel)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchMutiChallengeLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchMultiAccountBrief(ctx context.Context, in *ReqMultiAccountId, opts ...grpc.CallOption) (*ResMultiAccountBrief, error) {
	out := new(ResMultiAccountBrief)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchMultiAccountBrief", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchFriendList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFriendList, error) {
	out := new(ResFriendList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchFriendList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchFriendApplyList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFriendApplyList, error) {
	out := new(ResFriendApplyList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchFriendApplyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ApplyFriend(ctx context.Context, in *ReqApplyFriend, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/applyFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) HandleFriendApply(ctx context.Context, in *ReqHandleFriendApply, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/handleFriendApply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RemoveFriend(ctx context.Context, in *ReqRemoveFriend, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/removeFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SearchAccountById(ctx context.Context, in *ReqSearchAccountById, opts ...grpc.CallOption) (*ResSearchAccountById, error) {
	out := new(ResSearchAccountById)
	err := c.cc.Invoke(ctx, "/lq.Lobby/searchAccountById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SearchAccountByPattern(ctx context.Context, in *ReqSearchAccountByPattern, opts ...grpc.CallOption) (*ResSearchAccountByPattern, error) {
	out := new(ResSearchAccountByPattern)
	err := c.cc.Invoke(ctx, "/lq.Lobby/searchAccountByPattern", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountState(ctx context.Context, in *ReqAccountList, opts ...grpc.CallOption) (*ResAccountStates, error) {
	out := new(ResAccountStates)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAccountState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchBagInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResBagInfo, error) {
	out := new(ResBagInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchBagInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UseBagItem(ctx context.Context, in *ReqUseBagItem, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/useBagItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenManualItem(ctx context.Context, in *ReqOpenManualItem, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/openManualItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenRandomRewardItem(ctx context.Context, in *ReqOpenRandomRewardItem, opts ...grpc.CallOption) (*ResOpenRandomRewardItem, error) {
	out := new(ResOpenRandomRewardItem)
	err := c.cc.Invoke(ctx, "/lq.Lobby/openRandomRewardItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenAllRewardItem(ctx context.Context, in *ReqOpenAllRewardItem, opts ...grpc.CallOption) (*ResOpenAllRewardItem, error) {
	out := new(ResOpenAllRewardItem)
	err := c.cc.Invoke(ctx, "/lq.Lobby/openAllRewardItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ComposeShard(ctx context.Context, in *ReqComposeShard, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/composeShard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAnnouncement(ctx context.Context, in *ReqFetchAnnouncement, opts ...grpc.CallOption) (*ResAnnouncement, error) {
	out := new(ResAnnouncement)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAnnouncement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReadAnnouncement(ctx context.Context, in *ReqReadAnnouncement, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/readAnnouncement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchMailInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMailInfo, error) {
	out := new(ResMailInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchMailInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReadMail(ctx context.Context, in *ReqReadMail, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/readMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DeleteMail(ctx context.Context, in *ReqDeleteMail, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/deleteMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) TakeAttachmentFromMail(ctx context.Context, in *ReqTakeAttachment, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/takeAttachmentFromMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveAchievementReward(ctx context.Context, in *ReqReceiveAchievementReward, opts ...grpc.CallOption) (*ResReceiveAchievementReward, error) {
	out := new(ResReceiveAchievementReward)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveAchievementReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveAchievementGroupReward(ctx context.Context, in *ReqReceiveAchievementGroupReward, opts ...grpc.CallOption) (*ResReceiveAchievementGroupReward, error) {
	out := new(ResReceiveAchievementGroupReward)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveAchievementGroupReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAchievementRate(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchAchievementRate, error) {
	out := new(ResFetchAchievementRate)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAchievementRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAchievement(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAchievement, error) {
	out := new(ResAchievement)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAchievement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyShiLian(ctx context.Context, in *ReqBuyShiLian, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/buyShiLian", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) MatchShiLian(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/matchShiLian", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GoNextShiLian(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/goNextShiLian", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateClientValue(ctx context.Context, in *ReqUpdateClientValue, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/updateClientValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchClientValue(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResClientValue, error) {
	out := new(ResClientValue)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchClientValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ClientMessage(ctx context.Context, in *ReqClientMessage, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/clientMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCurrentMatchInfo(ctx context.Context, in *ReqCurrentMatchInfo, opts ...grpc.CallOption) (*ResCurrentMatchInfo, error) {
	out := new(ResCurrentMatchInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCurrentMatchInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UserComplain(ctx context.Context, in *ReqUserComplain, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/userComplain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchReviveCoinInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResReviveCoinInfo, error) {
	out := new(ResReviveCoinInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchReviveCoinInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainReviveCoin(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/gainReviveCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchDailyTask(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDailyTask, error) {
	out := new(ResDailyTask)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchDailyTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RefreshDailyTask(ctx context.Context, in *ReqRefreshDailyTask, opts ...grpc.CallOption) (*ResRefreshDailyTask, error) {
	out := new(ResRefreshDailyTask)
	err := c.cc.Invoke(ctx, "/lq.Lobby/refreshDailyTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UseGiftCode(ctx context.Context, in *ReqUseGiftCode, opts ...grpc.CallOption) (*ResUseGiftCode, error) {
	out := new(ResUseGiftCode)
	err := c.cc.Invoke(ctx, "/lq.Lobby/useGiftCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UseSpecialGiftCode(ctx context.Context, in *ReqUseGiftCode, opts ...grpc.CallOption) (*ResUseSpecialGiftCode, error) {
	out := new(ResUseSpecialGiftCode)
	err := c.cc.Invoke(ctx, "/lq.Lobby/useSpecialGiftCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchTitleList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResTitleList, error) {
	out := new(ResTitleList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchTitleList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UseTitle(ctx context.Context, in *ReqUseTitle, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/useTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SendClientMessage(ctx context.Context, in *ReqSendClientMessage, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/sendClientMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameLiveInfo(ctx context.Context, in *ReqGameLiveInfo, opts ...grpc.CallOption) (*ResGameLiveInfo, error) {
	out := new(ResGameLiveInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchGameLiveInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameLiveLeftSegment(ctx context.Context, in *ReqGameLiveLeftSegment, opts ...grpc.CallOption) (*ResGameLiveLeftSegment, error) {
	out := new(ResGameLiveLeftSegment)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchGameLiveLeftSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameLiveList(ctx context.Context, in *ReqGameLiveList, opts ...grpc.CallOption) (*ResGameLiveList, error) {
	out := new(ResGameLiveList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchGameLiveList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommentSetting(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommentSetting, error) {
	out := new(ResCommentSetting)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCommentSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateCommentSetting(ctx context.Context, in *ReqUpdateCommentSetting, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/updateCommentSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommentList(ctx context.Context, in *ReqFetchCommentList, opts ...grpc.CallOption) (*ResFetchCommentList, error) {
	out := new(ResFetchCommentList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCommentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommentContent(ctx context.Context, in *ReqFetchCommentContent, opts ...grpc.CallOption) (*ResFetchCommentContent, error) {
	out := new(ResFetchCommentContent)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCommentContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LeaveComment(ctx context.Context, in *ReqLeaveComment, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/leaveComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DeleteComment(ctx context.Context, in *ReqDeleteComment, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/deleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateReadComment(ctx context.Context, in *ReqUpdateReadComment, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/updateReadComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRollingNotice(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ReqRollingNotice, error) {
	out := new(ReqRollingNotice)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchRollingNotice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchServerTime(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResServerTime, error) {
	out := new(ResServerTime)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchServerTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchPlatformProducts(ctx context.Context, in *ReqPlatformBillingProducts, opts ...grpc.CallOption) (*ResPlatformBillingProducts, error) {
	out := new(ResPlatformBillingProducts)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchPlatformProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CancelGooglePlayOrder(ctx context.Context, in *ReqCancelGooglePlayOrder, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/cancelGooglePlayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenChest(ctx context.Context, in *ReqOpenChest, opts ...grpc.CallOption) (*ResOpenChest, error) {
	out := new(ResOpenChest)
	err := c.cc.Invoke(ctx, "/lq.Lobby/openChest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyFromChestShop(ctx context.Context, in *ReqBuyFromChestShop, opts ...grpc.CallOption) (*ResBuyFromChestShop, error) {
	out := new(ResBuyFromChestShop)
	err := c.cc.Invoke(ctx, "/lq.Lobby/buyFromChestShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchDailySignInInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDailySignInInfo, error) {
	out := new(ResDailySignInInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchDailySignInInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DoDailySignIn(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/doDailySignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DoActivitySignIn(ctx context.Context, in *ReqDoActivitySignIn, opts ...grpc.CallOption) (*ResDoActivitySignIn, error) {
	out := new(ResDoActivitySignIn)
	err := c.cc.Invoke(ctx, "/lq.Lobby/doActivitySignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCharacterInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCharacterInfo, error) {
	out := new(ResCharacterInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCharacterInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateCharacterSort(ctx context.Context, in *ReqUpdateCharacterSort, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/updateCharacterSort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeMainCharacter(ctx context.Context, in *ReqChangeMainCharacter, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/changeMainCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeCharacterSkin(ctx context.Context, in *ReqChangeCharacterSkin, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/changeCharacterSkin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeCharacterView(ctx context.Context, in *ReqChangeCharacterView, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/changeCharacterView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SetHiddenCharacter(ctx context.Context, in *ReqSetHiddenCharacter, opts ...grpc.CallOption) (*ResSetHiddenCharacter, error) {
	out := new(ResSetHiddenCharacter)
	err := c.cc.Invoke(ctx, "/lq.Lobby/setHiddenCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SendGiftToCharacter(ctx context.Context, in *ReqSendGiftToCharacter, opts ...grpc.CallOption) (*ResSendGiftToCharacter, error) {
	out := new(ResSendGiftToCharacter)
	err := c.cc.Invoke(ctx, "/lq.Lobby/sendGiftToCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SellItem(ctx context.Context, in *ReqSellItem, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/sellItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommonView(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommonView, error) {
	out := new(ResCommonView)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCommonView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeCommonView(ctx context.Context, in *ReqChangeCommonView, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/changeCommonView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SaveCommonViews(ctx context.Context, in *ReqSaveCommonViews, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/saveCommonViews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommonViews(ctx context.Context, in *ReqCommonViews, opts ...grpc.CallOption) (*ResCommonViews, error) {
	out := new(ResCommonViews)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCommonViews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAllCommonViews(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAllcommonViews, error) {
	out := new(ResAllcommonViews)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAllCommonViews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UseCommonView(ctx context.Context, in *ReqUseCommonView, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/useCommonView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpgradeCharacter(ctx context.Context, in *ReqUpgradeCharacter, opts ...grpc.CallOption) (*ResUpgradeCharacter, error) {
	out := new(ResUpgradeCharacter)
	err := c.cc.Invoke(ctx, "/lq.Lobby/upgradeCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) AddFinishedEnding(ctx context.Context, in *ReqFinishedEnding, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/addFinishedEnding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveEndingReward(ctx context.Context, in *ReqFinishedEnding, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveEndingReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GameMasterCommand(ctx context.Context, in *ReqGMCommand, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/gameMasterCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchShopInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResShopInfo, error) {
	out := new(ResShopInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchShopInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyFromShop(ctx context.Context, in *ReqBuyFromShop, opts ...grpc.CallOption) (*ResBuyFromShop, error) {
	out := new(ResBuyFromShop)
	err := c.cc.Invoke(ctx, "/lq.Lobby/buyFromShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyFromZHP(ctx context.Context, in *ReqBuyFromZHP, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/buyFromZHP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RefreshZHPShop(ctx context.Context, in *ReqReshZHPShop, opts ...grpc.CallOption) (*ResRefreshZHPShop, error) {
	out := new(ResRefreshZHPShop)
	err := c.cc.Invoke(ctx, "/lq.Lobby/refreshZHPShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchMonthTicketInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMonthTicketInfo, error) {
	out := new(ResMonthTicketInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchMonthTicketInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) PayMonthTicket(ctx context.Context, in *ReqPayMonthTicket, opts ...grpc.CallOption) (*ResPayMonthTicket, error) {
	out := new(ResPayMonthTicket)
	err := c.cc.Invoke(ctx, "/lq.Lobby/payMonthTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ExchangeCurrency(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/exchangeCurrency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ExchangeChestStone(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/exchangeChestStone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ExchangeDiamond(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/exchangeDiamond", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchServerSettings(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResServerSettings, error) {
	out := new(ResServerSettings)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchServerSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountSettings(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountSettings, error) {
	out := new(ResAccountSettings)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAccountSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateAccountSettings(ctx context.Context, in *ReqUpdateAccountSettings, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/updateAccountSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchModNicknameTime(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResModNicknameTime, error) {
	out := new(ResModNicknameTime)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchModNicknameTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateWechatNativeOrder(ctx context.Context, in *ReqCreateWechatNativeOrder, opts ...grpc.CallOption) (*ResCreateWechatNativeOrder, error) {
	out := new(ResCreateWechatNativeOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createWechatNativeOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateWechatAppOrder(ctx context.Context, in *ReqCreateWechatAppOrder, opts ...grpc.CallOption) (*ResCreateWechatAppOrder, error) {
	out := new(ResCreateWechatAppOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createWechatAppOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateAlipayOrder(ctx context.Context, in *ReqCreateAlipayOrder, opts ...grpc.CallOption) (*ResCreateAlipayOrder, error) {
	out := new(ResCreateAlipayOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createAlipayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateAlipayScanOrder(ctx context.Context, in *ReqCreateAlipayScanOrder, opts ...grpc.CallOption) (*ResCreateAlipayScanOrder, error) {
	out := new(ResCreateAlipayScanOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createAlipayScanOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateAlipayAppOrder(ctx context.Context, in *ReqCreateAlipayAppOrder, opts ...grpc.CallOption) (*ResCreateAlipayAppOrder, error) {
	out := new(ResCreateAlipayAppOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createAlipayAppOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPCreditCardOrder(ctx context.Context, in *ReqCreateJPCreditCardOrder, opts ...grpc.CallOption) (*ResCreateJPCreditCardOrder, error) {
	out := new(ResCreateJPCreditCardOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createJPCreditCardOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPPaypalOrder(ctx context.Context, in *ReqCreateJPPaypalOrder, opts ...grpc.CallOption) (*ResCreateJPPaypalOrder, error) {
	out := new(ResCreateJPPaypalOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createJPPaypalOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPAuOrder(ctx context.Context, in *ReqCreateJPAuOrder, opts ...grpc.CallOption) (*ResCreateJPAuOrder, error) {
	out := new(ResCreateJPAuOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createJPAuOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPDocomoOrder(ctx context.Context, in *ReqCreateJPDocomoOrder, opts ...grpc.CallOption) (*ResCreateJPDocomoOrder, error) {
	out := new(ResCreateJPDocomoOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createJPDocomoOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPWebMoneyOrder(ctx context.Context, in *ReqCreateJPWebMoneyOrder, opts ...grpc.CallOption) (*ResCreateJPWebMoneyOrder, error) {
	out := new(ResCreateJPWebMoneyOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createJPWebMoneyOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPSoftbankOrder(ctx context.Context, in *ReqCreateJPSoftbankOrder, opts ...grpc.CallOption) (*ResCreateJPSoftbankOrder, error) {
	out := new(ResCreateJPSoftbankOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createJPSoftbankOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPPayPayOrder(ctx context.Context, in *ReqCreateJPPayPayOrder, opts ...grpc.CallOption) (*ResCreateJPPayPayOrder, error) {
	out := new(ResCreateJPPayPayOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createJPPayPayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchJPCommonCreditCardOrder(ctx context.Context, in *ReqFetchJPCommonCreditCardOrder, opts ...grpc.CallOption) (*ResFetchJPCommonCreditCardOrder, error) {
	out := new(ResFetchJPCommonCreditCardOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchJPCommonCreditCardOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENPaypalOrder(ctx context.Context, in *ReqCreateENPaypalOrder, opts ...grpc.CallOption) (*ResCreateENPaypalOrder, error) {
	out := new(ResCreateENPaypalOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createENPaypalOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENMasterCardOrder(ctx context.Context, in *ReqCreateENMasterCardOrder, opts ...grpc.CallOption) (*ResCreateENMasterCardOrder, error) {
	out := new(ResCreateENMasterCardOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createENMasterCardOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENVisaOrder(ctx context.Context, in *ReqCreateENVisaOrder, opts ...grpc.CallOption) (*ResCreateENVisaOrder, error) {
	out := new(ResCreateENVisaOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createENVisaOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENJCBOrder(ctx context.Context, in *ReqCreateENJCBOrder, opts ...grpc.CallOption) (*ResCreateENJCBOrder, error) {
	out := new(ResCreateENJCBOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createENJCBOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENAlipayOrder(ctx context.Context, in *ReqCreateENAlipayOrder, opts ...grpc.CallOption) (*ResCreateENAlipayOrder, error) {
	out := new(ResCreateENAlipayOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createENAlipayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateKRPaypalOrder(ctx context.Context, in *ReqCreateKRPaypalOrder, opts ...grpc.CallOption) (*ResCreateKRPaypalOrder, error) {
	out := new(ResCreateKRPaypalOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createKRPaypalOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateKRMasterCardOrder(ctx context.Context, in *ReqCreateKRMasterCardOrder, opts ...grpc.CallOption) (*ResCreateKRMasterCardOrder, error) {
	out := new(ResCreateKRMasterCardOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createKRMasterCardOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateKRVisaOrder(ctx context.Context, in *ReqCreateKRVisaOrder, opts ...grpc.CallOption) (*ResCreateKRVisaOrder, error) {
	out := new(ResCreateKRVisaOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createKRVisaOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateKRJCBOrder(ctx context.Context, in *ReqCreateKRJCBOrder, opts ...grpc.CallOption) (*ResCreateKRJCBOrder, error) {
	out := new(ResCreateKRJCBOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createKRJCBOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateKRAlipayOrder(ctx context.Context, in *ReqCreateKRAlipayOrder, opts ...grpc.CallOption) (*ResCreateKRAlipayOrder, error) {
	out := new(ResCreateKRAlipayOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createKRAlipayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateDMMOrder(ctx context.Context, in *ReqCreateDMMOrder, opts ...grpc.CallOption) (*ResCreateDmmOrder, error) {
	out := new(ResCreateDmmOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createDMMOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateIAPOrder(ctx context.Context, in *ReqCreateIAPOrder, opts ...grpc.CallOption) (*ResCreateIAPOrder, error) {
	out := new(ResCreateIAPOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createIAPOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateSteamOrder(ctx context.Context, in *ReqCreateSteamOrder, opts ...grpc.CallOption) (*ResCreateSteamOrder, error) {
	out := new(ResCreateSteamOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createSteamOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) VerifySteamOrder(ctx context.Context, in *ReqVerifySteamOrder, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/verifySteamOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateMyCardAndroidOrder(ctx context.Context, in *ReqCreateMyCardOrder, opts ...grpc.CallOption) (*ResCreateMyCardOrder, error) {
	out := new(ResCreateMyCardOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createMyCardAndroidOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateMyCardWebOrder(ctx context.Context, in *ReqCreateMyCardOrder, opts ...grpc.CallOption) (*ResCreateMyCardOrder, error) {
	out := new(ResCreateMyCardOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createMyCardWebOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreatePaypalOrder(ctx context.Context, in *ReqCreatePaypalOrder, opts ...grpc.CallOption) (*ResCreatePaypalOrder, error) {
	out := new(ResCreatePaypalOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createPaypalOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateXsollaOrder(ctx context.Context, in *ReqCreateXsollaOrder, opts ...grpc.CallOption) (*ResCreateXsollaOrder, error) {
	out := new(ResCreateXsollaOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createXsollaOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) VerifyMyCardOrder(ctx context.Context, in *ReqVerifyMyCardOrder, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/verifyMyCardOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) VerificationIAPOrder(ctx context.Context, in *ReqVerificationIAPOrder, opts ...grpc.CallOption) (*ResVerificationIAPOrder, error) {
	out := new(ResVerificationIAPOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/verificationIAPOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateYostarSDKOrder(ctx context.Context, in *ReqCreateYostarOrder, opts ...grpc.CallOption) (*ResCreateYostarOrder, error) {
	out := new(ResCreateYostarOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createYostarSDKOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateBillingOrder(ctx context.Context, in *ReqCreateBillingOrder, opts ...grpc.CallOption) (*ResCreateBillingOrder, error) {
	out := new(ResCreateBillingOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createBillingOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SolveGooglePlayOrder(ctx context.Context, in *ReqSolveGooglePlayOrder, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/solveGooglePlayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SolveGooglePayOrderV3(ctx context.Context, in *ReqSolveGooglePlayOrderV3, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/solveGooglePayOrderV3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DeliverAA32Order(ctx context.Context, in *ReqDeliverAA32Order, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/deliverAA32Order", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchMisc(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMisc, error) {
	out := new(ResMisc)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchMisc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifySignature(ctx context.Context, in *ReqModifySignature, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/modifySignature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchIDCardInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResIDCardInfo, error) {
	out := new(ResIDCardInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchIDCardInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateIDCardInfo(ctx context.Context, in *ReqUpdateIDCardInfo, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/updateIDCardInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchVipReward(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResVipReward, error) {
	out := new(ResVipReward)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchVipReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainVipReward(ctx context.Context, in *ReqGainVipReward, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/gainVipReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRefundOrder(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchRefundOrder, error) {
	out := new(ResFetchRefundOrder)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchRefundOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestList(ctx context.Context, in *ReqFetchCustomizedContestList, opts ...grpc.CallOption) (*ResFetchCustomizedContestList, error) {
	out := new(ResFetchCustomizedContestList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestExtendInfo(ctx context.Context, in *ReqFetchCustomizedContestExtendInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestExtendInfo, error) {
	out := new(ResFetchCustomizedContestExtendInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestExtendInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestAuthInfo(ctx context.Context, in *ReqFetchCustomizedContestAuthInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestAuthInfo, error) {
	out := new(ResFetchCustomizedContestAuthInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestAuthInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) EnterCustomizedContest(ctx context.Context, in *ReqEnterCustomizedContest, opts ...grpc.CallOption) (*ResEnterCustomizedContest, error) {
	out := new(ResEnterCustomizedContest)
	err := c.cc.Invoke(ctx, "/lq.Lobby/enterCustomizedContest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LeaveCustomizedContest(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/leaveCustomizedContest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestOnlineInfo(ctx context.Context, in *ReqFetchCustomizedContestOnlineInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestOnlineInfo, error) {
	out := new(ResFetchCustomizedContestOnlineInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestOnlineInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestByContestId(ctx context.Context, in *ReqFetchCustomizedContestByContestId, opts ...grpc.CallOption) (*ResFetchCustomizedContestByContestId, error) {
	out := new(ResFetchCustomizedContestByContestId)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestByContestId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) StartCustomizedContest(ctx context.Context, in *ReqStartCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/startCustomizedContest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) StopCustomizedContest(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/stopCustomizedContest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) JoinCustomizedContestChatRoom(ctx context.Context, in *ReqJoinCustomizedContestChatRoom, opts ...grpc.CallOption) (*ResJoinCustomizedContestChatRoom, error) {
	out := new(ResJoinCustomizedContestChatRoom)
	err := c.cc.Invoke(ctx, "/lq.Lobby/joinCustomizedContestChatRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LeaveCustomizedContestChatRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/leaveCustomizedContestChatRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SayChatMessage(ctx context.Context, in *ReqSayChatMessage, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/sayChatMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestGameRecords(ctx context.Context, in *ReqFetchCustomizedContestGameRecords, opts ...grpc.CallOption) (*ResFetchCustomizedContestGameRecords, error) {
	out := new(ResFetchCustomizedContestGameRecords)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestGameRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestGameLiveList(ctx context.Context, in *ReqFetchCustomizedContestGameLiveList, opts ...grpc.CallOption) (*ResFetchCustomizedContestGameLiveList, error) {
	out := new(ResFetchCustomizedContestGameLiveList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestGameLiveList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FollowCustomizedContest(ctx context.Context, in *ReqTargetCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/followCustomizedContest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UnfollowCustomizedContest(ctx context.Context, in *ReqTargetCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/unfollowCustomizedContest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchActivityList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResActivityList, error) {
	out := new(ResActivityList)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchActivityList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountActivityData(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountActivityData, error) {
	out := new(ResAccountActivityData)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchAccountActivityData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ExchangeActivityItem(ctx context.Context, in *ReqExchangeActivityItem, opts ...grpc.CallOption) (*ResExchangeActivityItem, error) {
	out := new(ResExchangeActivityItem)
	err := c.cc.Invoke(ctx, "/lq.Lobby/exchangeActivityItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CompleteActivityTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/completeActivityTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CompleteActivityFlipTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/completeActivityFlipTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CompletePeriodActivityTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/completePeriodActivityTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CompletePeriodActivityTaskBatch(ctx context.Context, in *ReqCompletePeriodActivityTaskBatch, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/completePeriodActivityTaskBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CompleteRandomActivityTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/completeRandomActivityTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveActivityFlipTask(ctx context.Context, in *ReqReceiveActivityFlipTask, opts ...grpc.CallOption) (*ResReceiveActivityFlipTask, error) {
	out := new(ResReceiveActivityFlipTask)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveActivityFlipTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CompleteSegmentTaskReward(ctx context.Context, in *ReqCompleteSegmentTaskReward, opts ...grpc.CallOption) (*ResCompleteSegmentTaskReward, error) {
	out := new(ResCompleteSegmentTaskReward)
	err := c.cc.Invoke(ctx, "/lq.Lobby/completeSegmentTaskReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchActivityFlipInfo(ctx context.Context, in *ReqFetchActivityFlipInfo, opts ...grpc.CallOption) (*ResFetchActivityFlipInfo, error) {
	out := new(ResFetchActivityFlipInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchActivityFlipInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainAccumulatedPointActivityReward(ctx context.Context, in *ReqGainAccumulatedPointActivityReward, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/gainAccumulatedPointActivityReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainMultiPointActivityReward(ctx context.Context, in *ReqGainMultiPointActivityReward, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/gainMultiPointActivityReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRankPointLeaderboard(ctx context.Context, in *ReqFetchRankPointLeaderboard, opts ...grpc.CallOption) (*ResFetchRankPointLeaderboard, error) {
	out := new(ResFetchRankPointLeaderboard)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchRankPointLeaderboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainRankPointReward(ctx context.Context, in *ReqGainRankPointReward, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/gainRankPointReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RichmanActivityNextMove(ctx context.Context, in *ReqRichmanNextMove, opts ...grpc.CallOption) (*ResRichmanNextMove, error) {
	out := new(ResRichmanNextMove)
	err := c.cc.Invoke(ctx, "/lq.Lobby/richmanActivityNextMove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RichmanAcitivitySpecialMove(ctx context.Context, in *ReqRichmanSpecialMove, opts ...grpc.CallOption) (*ResRichmanNextMove, error) {
	out := new(ResRichmanNextMove)
	err := c.cc.Invoke(ctx, "/lq.Lobby/richmanAcitivitySpecialMove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RichmanActivityChestInfo(ctx context.Context, in *ReqRichmanChestInfo, opts ...grpc.CallOption) (*ResRichmanChestInfo, error) {
	out := new(ResRichmanChestInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/richmanActivityChestInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateGameObserveAuth(ctx context.Context, in *ReqCreateGameObserveAuth, opts ...grpc.CallOption) (*ResCreateGameObserveAuth, error) {
	out := new(ResCreateGameObserveAuth)
	err := c.cc.Invoke(ctx, "/lq.Lobby/createGameObserveAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RefreshGameObserveAuth(ctx context.Context, in *ReqRefreshGameObserveAuth, opts ...grpc.CallOption) (*ResRefreshGameObserveAuth, error) {
	out := new(ResRefreshGameObserveAuth)
	err := c.cc.Invoke(ctx, "/lq.Lobby/refreshGameObserveAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchActivityBuff(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResActivityBuff, error) {
	out := new(ResActivityBuff)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchActivityBuff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpgradeActivityBuff(ctx context.Context, in *ReqUpgradeActivityBuff, opts ...grpc.CallOption) (*ResActivityBuff, error) {
	out := new(ResActivityBuff)
	err := c.cc.Invoke(ctx, "/lq.Lobby/upgradeActivityBuff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpgradeActivityLevel(ctx context.Context, in *ReqUpgradeActivityLevel, opts ...grpc.CallOption) (*ResUpgradeActivityLevel, error) {
	out := new(ResUpgradeActivityLevel)
	err := c.cc.Invoke(ctx, "/lq.Lobby/upgradeActivityLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveUpgradeActivityReward(ctx context.Context, in *ReqReceiveUpgradeActivityReward, opts ...grpc.CallOption) (*ResReceiveUpgradeActivityReward, error) {
	out := new(ResReceiveUpgradeActivityReward)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveUpgradeActivityReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpgradeChallenge(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResUpgradeChallenge, error) {
	out := new(ResUpgradeChallenge)
	err := c.cc.Invoke(ctx, "/lq.Lobby/upgradeChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RefreshChallenge(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResRefreshChallenge, error) {
	out := new(ResRefreshChallenge)
	err := c.cc.Invoke(ctx, "/lq.Lobby/refreshChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchChallengeInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchChallengeInfo, error) {
	out := new(ResFetchChallengeInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchChallengeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ForceCompleteChallengeTask(ctx context.Context, in *ReqForceCompleteChallengeTask, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/forceCompleteChallengeTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchChallengeSeason(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResChallengeSeasonInfo, error) {
	out := new(ResChallengeSeasonInfo)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchChallengeSeason", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveChallengeRankReward(ctx context.Context, in *ReqReceiveChallengeRankReward, opts ...grpc.CallOption) (*ResReceiveChallengeRankReward, error) {
	out := new(ResReceiveChallengeRankReward)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveChallengeRankReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchABMatchInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchABMatch, error) {
	out := new(ResFetchABMatch)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchABMatchInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyInABMatch(ctx context.Context, in *ReqBuyInABMatch, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/buyInABMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveABMatchReward(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveABMatchReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) QuitABMatch(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/quitABMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) StartUnifiedMatch(ctx context.Context, in *ReqStartUnifiedMatch, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/startUnifiedMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CancelUnifiedMatch(ctx context.Context, in *ReqCancelUnifiedMatch, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/cancelUnifiedMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGamePointRank(ctx context.Context, in *ReqGamePointRank, opts ...grpc.CallOption) (*ResGamePointRank, error) {
	out := new(ResGamePointRank)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchGamePointRank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchSelfGamePointRank(ctx context.Context, in *ReqGamePointRank, opts ...grpc.CallOption) (*ResFetchSelfGamePointRank, error) {
	out := new(ResFetchSelfGamePointRank)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchSelfGamePointRank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReadSNS(ctx context.Context, in *ReqReadSNS, opts ...grpc.CallOption) (*ResReadSNS, error) {
	out := new(ResReadSNS)
	err := c.cc.Invoke(ctx, "/lq.Lobby/readSNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReplySNS(ctx context.Context, in *ReqReplySNS, opts ...grpc.CallOption) (*ResReplySNS, error) {
	out := new(ResReplySNS)
	err := c.cc.Invoke(ctx, "/lq.Lobby/replySNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LikeSNS(ctx context.Context, in *ReqLikeSNS, opts ...grpc.CallOption) (*ResLikeSNS, error) {
	out := new(ResLikeSNS)
	err := c.cc.Invoke(ctx, "/lq.Lobby/likeSNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DigMine(ctx context.Context, in *ReqDigMine, opts ...grpc.CallOption) (*ResDigMine, error) {
	out := new(ResDigMine)
	err := c.cc.Invoke(ctx, "/lq.Lobby/digMine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchLastPrivacy(ctx context.Context, in *ReqFetchLastPrivacy, opts ...grpc.CallOption) (*ResFetchLastPrivacy, error) {
	out := new(ResFetchLastPrivacy)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchLastPrivacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CheckPrivacy(ctx context.Context, in *ReqCheckPrivacy, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/checkPrivacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ResponseCaptcha(ctx context.Context, in *ReqResponseCaptcha, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/responseCaptcha", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRPGBattleHistory(ctx context.Context, in *ReqFetchRPGBattleHistory, opts ...grpc.CallOption) (*ResFetchRPGBattleHistory, error) {
	out := new(ResFetchRPGBattleHistory)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchRPGBattleHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRPGBattleHistoryV2(ctx context.Context, in *ReqFetchRPGBattleHistory, opts ...grpc.CallOption) (*ResFetchRPGBattleHistoryV2, error) {
	out := new(ResFetchRPGBattleHistoryV2)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchRPGBattleHistoryV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveRPGRewards(ctx context.Context, in *ReqReceiveRPGRewards, opts ...grpc.CallOption) (*ResReceiveRPGRewards, error) {
	out := new(ResReceiveRPGRewards)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveRPGRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveRPGReward(ctx context.Context, in *ReqReceiveRPGReward, opts ...grpc.CallOption) (*ResReceiveRPGRewards, error) {
	out := new(ResReceiveRPGRewards)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveRPGReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyArenaTicket(ctx context.Context, in *ReqBuyArenaTicket, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/buyArenaTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) EnterArena(ctx context.Context, in *ReqEnterArena, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/enterArena", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveArenaReward(ctx context.Context, in *ReqArenaReward, opts ...grpc.CallOption) (*ResArenaReward, error) {
	out := new(ResArenaReward)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveArenaReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchOBToken(ctx context.Context, in *ReqFetchOBToken, opts ...grpc.CallOption) (*ResFetchOBToken, error) {
	out := new(ResFetchOBToken)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchOBToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveCharacterRewards(ctx context.Context, in *ReqReceiveCharacterRewards, opts ...grpc.CallOption) (*ResReceiveCharacterRewards, error) {
	out := new(ResReceiveCharacterRewards)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveCharacterRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FeedActivityFeed(ctx context.Context, in *ReqFeedActivityFeed, opts ...grpc.CallOption) (*ResFeedActivityFeed, error) {
	out := new(ResFeedActivityFeed)
	err := c.cc.Invoke(ctx, "/lq.Lobby/feedActivityFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SendActivityGiftToFriend(ctx context.Context, in *ReqSendActivityGiftToFriend, opts ...grpc.CallOption) (*ResSendActivityGiftToFriend, error) {
	out := new(ResSendActivityGiftToFriend)
	err := c.cc.Invoke(ctx, "/lq.Lobby/sendActivityGiftToFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveActivityGift(ctx context.Context, in *ReqReceiveActivityGift, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveActivityGift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveAllActivityGift(ctx context.Context, in *ReqReceiveAllActivityGift, opts ...grpc.CallOption) (*ResReceiveAllActivityGift, error) {
	out := new(ResReceiveAllActivityGift)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveAllActivityGift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchFriendGiftActivityData(ctx context.Context, in *ReqFetchFriendGiftActivityData, opts ...grpc.CallOption) (*ResFetchFriendGiftActivityData, error) {
	out := new(ResFetchFriendGiftActivityData)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchFriendGiftActivityData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenPreChestItem(ctx context.Context, in *ReqOpenPreChestItem, opts ...grpc.CallOption) (*ResOpenPreChestItem, error) {
	out := new(ResOpenPreChestItem)
	err := c.cc.Invoke(ctx, "/lq.Lobby/openPreChestItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchVoteActivity(ctx context.Context, in *ReqFetchVoteActivity, opts ...grpc.CallOption) (*ResFetchVoteActivity, error) {
	out := new(ResFetchVoteActivity)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchVoteActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) VoteActivity(ctx context.Context, in *ReqVoteActivity, opts ...grpc.CallOption) (*ResVoteActivity, error) {
	out := new(ResVoteActivity)
	err := c.cc.Invoke(ctx, "/lq.Lobby/voteActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UnlockActivitySpot(ctx context.Context, in *ReqUnlockActivitySpot, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/unlockActivitySpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReceiveActivitySpotReward(ctx context.Context, in *ReqReceiveActivitySpotReward, opts ...grpc.CallOption) (*ResReceiveActivitySpotReward, error) {
	out := new(ResReceiveActivitySpotReward)
	err := c.cc.Invoke(ctx, "/lq.Lobby/receiveActivitySpotReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DeleteAccount(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDeleteAccount, error) {
	out := new(ResDeleteAccount)
	err := c.cc.Invoke(ctx, "/lq.Lobby/deleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CancelDeleteAccount(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/cancelDeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LogReport(ctx context.Context, in *ReqLogReport, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/logReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BindOauth2(ctx context.Context, in *ReqBindOauth2, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/bindOauth2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchOauth2Info(ctx context.Context, in *ReqFetchOauth2, opts ...grpc.CallOption) (*ResFetchOauth2, error) {
	out := new(ResFetchOauth2)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchOauth2Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SetLoadingImage(ctx context.Context, in *ReqSetLoadingImage, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/setLoadingImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchShopInterval(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchShopInterval, error) {
	out := new(ResFetchShopInterval)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchShopInterval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchActivityInterval(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchActivityInterval, error) {
	out := new(ResFetchActivityInterval)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchActivityInterval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRecentFriend(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFetchrecentFriend, error) {
	out := new(ResFetchrecentFriend)
	err := c.cc.Invoke(ctx, "/lq.Lobby/fetchRecentFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenGacha(ctx context.Context, in *ReqOpenGacha, opts ...grpc.CallOption) (*ResOpenGacha, error) {
	out := new(ResOpenGacha)
	err := c.cc.Invoke(ctx, "/lq.Lobby/openGacha", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) TaskRequest(ctx context.Context, in *ReqTaskRequest, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.Lobby/taskRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LobbyServer is the server API for Lobby service.
type LobbyServer interface {
	FetchConnectionInfo(context.Context, *ReqCommon) (*ResConnectionInfo, error)
	FetchQueueInfo(context.Context, *ReqCommon) (*ResFetchQueueInfo, error)
	CancelQueue(context.Context, *ReqCommon) (*ResCommon, error)
	OpenidCheck(context.Context, *ReqOpenidCheck) (*ResOauth2Check, error)
	Signup(context.Context, *ReqSignupAccount) (*ResSignupAccount, error)
	Login(context.Context, *ReqLogin) (*ResLogin, error)
	LoginSuccess(context.Context, *ReqCommon) (*ResCommon, error)
	EmailLogin(context.Context, *ReqEmailLogin) (*ResLogin, error)
	Oauth2Auth(context.Context, *ReqOauth2Auth) (*ResOauth2Auth, error)
	Oauth2Check(context.Context, *ReqOauth2Check) (*ResOauth2Check, error)
	Oauth2Signup(context.Context, *ReqOauth2Signup) (*ResOauth2Signup, error)
	Oauth2Login(context.Context, *ReqOauth2Login) (*ResLogin, error)
	DmmPreLogin(context.Context, *ReqDMMPreLogin) (*ResDMMPreLogin, error)
	CreatePhoneVerifyCode(context.Context, *ReqCreatePhoneVerifyCode) (*ResCommon, error)
	CreateEmailVerifyCode(context.Context, *ReqCreateEmailVerifyCode) (*ResCommon, error)
	VerfifyCodeForSecure(context.Context, *ReqVerifyCodeForSecure) (*ResVerfiyCodeForSecure, error)
	BindPhoneNumber(context.Context, *ReqBindPhoneNumber) (*ResCommon, error)
	UnbindPhoneNumber(context.Context, *ReqUnbindPhoneNumber) (*ResCommon, error)
	FetchPhoneLoginBind(context.Context, *ReqCommon) (*ResFetchPhoneLoginBind, error)
	CreatePhoneLoginBind(context.Context, *ReqCreatePhoneLoginBind) (*ResCommon, error)
	BindEmail(context.Context, *ReqBindEmail) (*ResCommon, error)
	ModifyPassword(context.Context, *ReqModifyPassword) (*ResCommon, error)
	BindAccount(context.Context, *ReqBindAccount) (*ResCommon, error)
	Logout(context.Context, *ReqLogout) (*ResLogout, error)
	Heatbeat(context.Context, *ReqHeatBeat) (*ResCommon, error)
	LoginBeat(context.Context, *ReqLoginBeat) (*ResCommon, error)
	CreateNickname(context.Context, *ReqCreateNickname) (*ResCommon, error)
	ModifyNickname(context.Context, *ReqModifyNickname) (*ResCommon, error)
	ModifyBirthday(context.Context, *ReqModifyBirthday) (*ResCommon, error)
	FetchRoom(context.Context, *ReqCommon) (*ResSelfRoom, error)
	CreateRoom(context.Context, *ReqCreateRoom) (*ResCreateRoom, error)
	JoinRoom(context.Context, *ReqJoinRoom) (*ResJoinRoom, error)
	LeaveRoom(context.Context, *ReqCommon) (*ResCommon, error)
	ReadyPlay(context.Context, *ReqRoomReady) (*ResCommon, error)
	DressingStatus(context.Context, *ReqRoomDressing) (*ResCommon, error)
	StartRoom(context.Context, *ReqRoomStart) (*ResCommon, error)
	KickPlayer(context.Context, *ReqRoomKick) (*ResCommon, error)
	ModifyRoom(context.Context, *ReqModifyRoom) (*ResCommon, error)
	MatchGame(context.Context, *ReqJoinMatchQueue) (*ResCommon, error)
	CancelMatch(context.Context, *ReqCancelMatchQueue) (*ResCommon, error)
	FetchAccountInfo(context.Context, *ReqAccountInfo) (*ResAccountInfo, error)
	ChangeAvatar(context.Context, *ReqChangeAvatar) (*ResCommon, error)
	ReceiveVersionReward(context.Context, *ReqCommon) (*ResCommon, error)
	FetchAccountStatisticInfo(context.Context, *ReqAccountStatisticInfo) (*ResAccountStatisticInfo, error)
	FetchAccountChallengeRankInfo(context.Context, *ReqAccountInfo) (*ResAccountChallengeRankInfo, error)
	FetchAccountCharacterInfo(context.Context, *ReqCommon) (*ResAccountCharacterInfo, error)
	ShopPurchase(context.Context, *ReqShopPurchase) (*ResShopPurchase, error)
	FetchGameRecord(context.Context, *ReqGameRecord) (*ResGameRecord, error)
	ReadGameRecord(context.Context, *ReqGameRecord) (*ResCommon, error)
	FetchGameRecordList(context.Context, *ReqGameRecordList) (*ResGameRecordList, error)
	FetchCollectedGameRecordList(context.Context, *ReqCommon) (*ResCollectedGameRecordList, error)
	FetchGameRecordsDetail(context.Context, *ReqGameRecordsDetail) (*ResGameRecordsDetail, error)
	AddCollectedGameRecord(context.Context, *ReqAddCollectedGameRecord) (*ResAddCollectedGameRecord, error)
	RemoveCollectedGameRecord(context.Context, *ReqRemoveCollectedGameRecord) (*ResRemoveCollectedGameRecord, error)
	ChangeCollectedGameRecordRemarks(context.Context, *ReqChangeCollectedGameRecordRemarks) (*ResChangeCollectedGameRecordRemarks, error)
	FetchLevelLeaderboard(context.Context, *ReqLevelLeaderboard) (*ResLevelLeaderboard, error)
	FetchChallengeLeaderboard(context.Context, *ReqChallangeLeaderboard) (*ResChallengeLeaderboard, error)
	FetchMutiChallengeLevel(context.Context, *ReqMutiChallengeLevel) (*ResMutiChallengeLevel, error)
	FetchMultiAccountBrief(context.Context, *ReqMultiAccountId) (*ResMultiAccountBrief, error)
	FetchFriendList(context.Context, *ReqCommon) (*ResFriendList, error)
	FetchFriendApplyList(context.Context, *ReqCommon) (*ResFriendApplyList, error)
	ApplyFriend(context.Context, *ReqApplyFriend) (*ResCommon, error)
	HandleFriendApply(context.Context, *ReqHandleFriendApply) (*ResCommon, error)
	RemoveFriend(context.Context, *ReqRemoveFriend) (*ResCommon, error)
	SearchAccountById(context.Context, *ReqSearchAccountById) (*ResSearchAccountById, error)
	SearchAccountByPattern(context.Context, *ReqSearchAccountByPattern) (*ResSearchAccountByPattern, error)
	FetchAccountState(context.Context, *ReqAccountList) (*ResAccountStates, error)
	FetchBagInfo(context.Context, *ReqCommon) (*ResBagInfo, error)
	UseBagItem(context.Context, *ReqUseBagItem) (*ResCommon, error)
	OpenManualItem(context.Context, *ReqOpenManualItem) (*ResCommon, error)
	OpenRandomRewardItem(context.Context, *ReqOpenRandomRewardItem) (*ResOpenRandomRewardItem, error)
	OpenAllRewardItem(context.Context, *ReqOpenAllRewardItem) (*ResOpenAllRewardItem, error)
	ComposeShard(context.Context, *ReqComposeShard) (*ResCommon, error)
	FetchAnnouncement(context.Context, *ReqFetchAnnouncement) (*ResAnnouncement, error)
	ReadAnnouncement(context.Context, *ReqReadAnnouncement) (*ResCommon, error)
	FetchMailInfo(context.Context, *ReqCommon) (*ResMailInfo, error)
	ReadMail(context.Context, *ReqReadMail) (*ResCommon, error)
	DeleteMail(context.Context, *ReqDeleteMail) (*ResCommon, error)
	TakeAttachmentFromMail(context.Context, *ReqTakeAttachment) (*ResCommon, error)
	ReceiveAchievementReward(context.Context, *ReqReceiveAchievementReward) (*ResReceiveAchievementReward, error)
	ReceiveAchievementGroupReward(context.Context, *ReqReceiveAchievementGroupReward) (*ResReceiveAchievementGroupReward, error)
	FetchAchievementRate(context.Context, *ReqCommon) (*ResFetchAchievementRate, error)
	FetchAchievement(context.Context, *ReqCommon) (*ResAchievement, error)
	BuyShiLian(context.Context, *ReqBuyShiLian) (*ResCommon, error)
	MatchShiLian(context.Context, *ReqCommon) (*ResCommon, error)
	GoNextShiLian(context.Context, *ReqCommon) (*ResCommon, error)
	UpdateClientValue(context.Context, *ReqUpdateClientValue) (*ResCommon, error)
	FetchClientValue(context.Context, *ReqCommon) (*ResClientValue, error)
	ClientMessage(context.Context, *ReqClientMessage) (*ResCommon, error)
	FetchCurrentMatchInfo(context.Context, *ReqCurrentMatchInfo) (*ResCurrentMatchInfo, error)
	UserComplain(context.Context, *ReqUserComplain) (*ResCommon, error)
	FetchReviveCoinInfo(context.Context, *ReqCommon) (*ResReviveCoinInfo, error)
	GainReviveCoin(context.Context, *ReqCommon) (*ResCommon, error)
	FetchDailyTask(context.Context, *ReqCommon) (*ResDailyTask, error)
	RefreshDailyTask(context.Context, *ReqRefreshDailyTask) (*ResRefreshDailyTask, error)
	UseGiftCode(context.Context, *ReqUseGiftCode) (*ResUseGiftCode, error)
	UseSpecialGiftCode(context.Context, *ReqUseGiftCode) (*ResUseSpecialGiftCode, error)
	FetchTitleList(context.Context, *ReqCommon) (*ResTitleList, error)
	UseTitle(context.Context, *ReqUseTitle) (*ResCommon, error)
	SendClientMessage(context.Context, *ReqSendClientMessage) (*ResCommon, error)
	FetchGameLiveInfo(context.Context, *ReqGameLiveInfo) (*ResGameLiveInfo, error)
	FetchGameLiveLeftSegment(context.Context, *ReqGameLiveLeftSegment) (*ResGameLiveLeftSegment, error)
	FetchGameLiveList(context.Context, *ReqGameLiveList) (*ResGameLiveList, error)
	FetchCommentSetting(context.Context, *ReqCommon) (*ResCommentSetting, error)
	UpdateCommentSetting(context.Context, *ReqUpdateCommentSetting) (*ResCommon, error)
	FetchCommentList(context.Context, *ReqFetchCommentList) (*ResFetchCommentList, error)
	FetchCommentContent(context.Context, *ReqFetchCommentContent) (*ResFetchCommentContent, error)
	LeaveComment(context.Context, *ReqLeaveComment) (*ResCommon, error)
	DeleteComment(context.Context, *ReqDeleteComment) (*ResCommon, error)
	UpdateReadComment(context.Context, *ReqUpdateReadComment) (*ResCommon, error)
	FetchRollingNotice(context.Context, *ReqCommon) (*ReqRollingNotice, error)
	FetchServerTime(context.Context, *ReqCommon) (*ResServerTime, error)
	FetchPlatformProducts(context.Context, *ReqPlatformBillingProducts) (*ResPlatformBillingProducts, error)
	CancelGooglePlayOrder(context.Context, *ReqCancelGooglePlayOrder) (*ResCommon, error)
	OpenChest(context.Context, *ReqOpenChest) (*ResOpenChest, error)
	BuyFromChestShop(context.Context, *ReqBuyFromChestShop) (*ResBuyFromChestShop, error)
	FetchDailySignInInfo(context.Context, *ReqCommon) (*ResDailySignInInfo, error)
	DoDailySignIn(context.Context, *ReqCommon) (*ResCommon, error)
	DoActivitySignIn(context.Context, *ReqDoActivitySignIn) (*ResDoActivitySignIn, error)
	FetchCharacterInfo(context.Context, *ReqCommon) (*ResCharacterInfo, error)
	UpdateCharacterSort(context.Context, *ReqUpdateCharacterSort) (*ResCommon, error)
	ChangeMainCharacter(context.Context, *ReqChangeMainCharacter) (*ResCommon, error)
	ChangeCharacterSkin(context.Context, *ReqChangeCharacterSkin) (*ResCommon, error)
	ChangeCharacterView(context.Context, *ReqChangeCharacterView) (*ResCommon, error)
	SetHiddenCharacter(context.Context, *ReqSetHiddenCharacter) (*ResSetHiddenCharacter, error)
	SendGiftToCharacter(context.Context, *ReqSendGiftToCharacter) (*ResSendGiftToCharacter, error)
	SellItem(context.Context, *ReqSellItem) (*ResCommon, error)
	FetchCommonView(context.Context, *ReqCommon) (*ResCommonView, error)
	ChangeCommonView(context.Context, *ReqChangeCommonView) (*ResCommon, error)
	SaveCommonViews(context.Context, *ReqSaveCommonViews) (*ResCommon, error)
	FetchCommonViews(context.Context, *ReqCommonViews) (*ResCommonViews, error)
	FetchAllCommonViews(context.Context, *ReqCommon) (*ResAllcommonViews, error)
	UseCommonView(context.Context, *ReqUseCommonView) (*ResCommon, error)
	UpgradeCharacter(context.Context, *ReqUpgradeCharacter) (*ResUpgradeCharacter, error)
	AddFinishedEnding(context.Context, *ReqFinishedEnding) (*ResCommon, error)
	ReceiveEndingReward(context.Context, *ReqFinishedEnding) (*ResCommon, error)
	GameMasterCommand(context.Context, *ReqGMCommand) (*ResCommon, error)
	FetchShopInfo(context.Context, *ReqCommon) (*ResShopInfo, error)
	BuyFromShop(context.Context, *ReqBuyFromShop) (*ResBuyFromShop, error)
	BuyFromZHP(context.Context, *ReqBuyFromZHP) (*ResCommon, error)
	RefreshZHPShop(context.Context, *ReqReshZHPShop) (*ResRefreshZHPShop, error)
	FetchMonthTicketInfo(context.Context, *ReqCommon) (*ResMonthTicketInfo, error)
	PayMonthTicket(context.Context, *ReqPayMonthTicket) (*ResPayMonthTicket, error)
	ExchangeCurrency(context.Context, *ReqExchangeCurrency) (*ResCommon, error)
	ExchangeChestStone(context.Context, *ReqExchangeCurrency) (*ResCommon, error)
	ExchangeDiamond(context.Context, *ReqExchangeCurrency) (*ResCommon, error)
	FetchServerSettings(context.Context, *ReqCommon) (*ResServerSettings, error)
	FetchAccountSettings(context.Context, *ReqCommon) (*ResAccountSettings, error)
	UpdateAccountSettings(context.Context, *ReqUpdateAccountSettings) (*ResCommon, error)
	FetchModNicknameTime(context.Context, *ReqCommon) (*ResModNicknameTime, error)
	CreateWechatNativeOrder(context.Context, *ReqCreateWechatNativeOrder) (*ResCreateWechatNativeOrder, error)
	CreateWechatAppOrder(context.Context, *ReqCreateWechatAppOrder) (*ResCreateWechatAppOrder, error)
	CreateAlipayOrder(context.Context, *ReqCreateAlipayOrder) (*ResCreateAlipayOrder, error)
	CreateAlipayScanOrder(context.Context, *ReqCreateAlipayScanOrder) (*ResCreateAlipayScanOrder, error)
	CreateAlipayAppOrder(context.Context, *ReqCreateAlipayAppOrder) (*ResCreateAlipayAppOrder, error)
	CreateJPCreditCardOrder(context.Context, *ReqCreateJPCreditCardOrder) (*ResCreateJPCreditCardOrder, error)
	CreateJPPaypalOrder(context.Context, *ReqCreateJPPaypalOrder) (*ResCreateJPPaypalOrder, error)
	CreateJPAuOrder(context.Context, *ReqCreateJPAuOrder) (*ResCreateJPAuOrder, error)
	CreateJPDocomoOrder(context.Context, *ReqCreateJPDocomoOrder) (*ResCreateJPDocomoOrder, error)
	CreateJPWebMoneyOrder(context.Context, *ReqCreateJPWebMoneyOrder) (*ResCreateJPWebMoneyOrder, error)
	CreateJPSoftbankOrder(context.Context, *ReqCreateJPSoftbankOrder) (*ResCreateJPSoftbankOrder, error)
	CreateJPPayPayOrder(context.Context, *ReqCreateJPPayPayOrder) (*ResCreateJPPayPayOrder, error)
	FetchJPCommonCreditCardOrder(context.Context, *ReqFetchJPCommonCreditCardOrder) (*ResFetchJPCommonCreditCardOrder, error)
	CreateENPaypalOrder(context.Context, *ReqCreateENPaypalOrder) (*ResCreateENPaypalOrder, error)
	CreateENMasterCardOrder(context.Context, *ReqCreateENMasterCardOrder) (*ResCreateENMasterCardOrder, error)
	CreateENVisaOrder(context.Context, *ReqCreateENVisaOrder) (*ResCreateENVisaOrder, error)
	CreateENJCBOrder(context.Context, *ReqCreateENJCBOrder) (*ResCreateENJCBOrder, error)
	CreateENAlipayOrder(context.Context, *ReqCreateENAlipayOrder) (*ResCreateENAlipayOrder, error)
	CreateKRPaypalOrder(context.Context, *ReqCreateKRPaypalOrder) (*ResCreateKRPaypalOrder, error)
	CreateKRMasterCardOrder(context.Context, *ReqCreateKRMasterCardOrder) (*ResCreateKRMasterCardOrder, error)
	CreateKRVisaOrder(context.Context, *ReqCreateKRVisaOrder) (*ResCreateKRVisaOrder, error)
	CreateKRJCBOrder(context.Context, *ReqCreateKRJCBOrder) (*ResCreateKRJCBOrder, error)
	CreateKRAlipayOrder(context.Context, *ReqCreateKRAlipayOrder) (*ResCreateKRAlipayOrder, error)
	CreateDMMOrder(context.Context, *ReqCreateDMMOrder) (*ResCreateDmmOrder, error)
	CreateIAPOrder(context.Context, *ReqCreateIAPOrder) (*ResCreateIAPOrder, error)
	CreateSteamOrder(context.Context, *ReqCreateSteamOrder) (*ResCreateSteamOrder, error)
	VerifySteamOrder(context.Context, *ReqVerifySteamOrder) (*ResCommon, error)
	CreateMyCardAndroidOrder(context.Context, *ReqCreateMyCardOrder) (*ResCreateMyCardOrder, error)
	CreateMyCardWebOrder(context.Context, *ReqCreateMyCardOrder) (*ResCreateMyCardOrder, error)
	CreatePaypalOrder(context.Context, *ReqCreatePaypalOrder) (*ResCreatePaypalOrder, error)
	CreateXsollaOrder(context.Context, *ReqCreateXsollaOrder) (*ResCreateXsollaOrder, error)
	VerifyMyCardOrder(context.Context, *ReqVerifyMyCardOrder) (*ResCommon, error)
	VerificationIAPOrder(context.Context, *ReqVerificationIAPOrder) (*ResVerificationIAPOrder, error)
	CreateYostarSDKOrder(context.Context, *ReqCreateYostarOrder) (*ResCreateYostarOrder, error)
	CreateBillingOrder(context.Context, *ReqCreateBillingOrder) (*ResCreateBillingOrder, error)
	SolveGooglePlayOrder(context.Context, *ReqSolveGooglePlayOrder) (*ResCommon, error)
	SolveGooglePayOrderV3(context.Context, *ReqSolveGooglePlayOrderV3) (*ResCommon, error)
	DeliverAA32Order(context.Context, *ReqDeliverAA32Order) (*ResCommon, error)
	FetchMisc(context.Context, *ReqCommon) (*ResMisc, error)
	ModifySignature(context.Context, *ReqModifySignature) (*ResCommon, error)
	FetchIDCardInfo(context.Context, *ReqCommon) (*ResIDCardInfo, error)
	UpdateIDCardInfo(context.Context, *ReqUpdateIDCardInfo) (*ResCommon, error)
	FetchVipReward(context.Context, *ReqCommon) (*ResVipReward, error)
	GainVipReward(context.Context, *ReqGainVipReward) (*ResCommon, error)
	FetchRefundOrder(context.Context, *ReqCommon) (*ResFetchRefundOrder, error)
	FetchCustomizedContestList(context.Context, *ReqFetchCustomizedContestList) (*ResFetchCustomizedContestList, error)
	FetchCustomizedContestExtendInfo(context.Context, *ReqFetchCustomizedContestExtendInfo) (*ResFetchCustomizedContestExtendInfo, error)
	FetchCustomizedContestAuthInfo(context.Context, *ReqFetchCustomizedContestAuthInfo) (*ResFetchCustomizedContestAuthInfo, error)
	EnterCustomizedContest(context.Context, *ReqEnterCustomizedContest) (*ResEnterCustomizedContest, error)
	LeaveCustomizedContest(context.Context, *ReqCommon) (*ResCommon, error)
	FetchCustomizedContestOnlineInfo(context.Context, *ReqFetchCustomizedContestOnlineInfo) (*ResFetchCustomizedContestOnlineInfo, error)
	FetchCustomizedContestByContestId(context.Context, *ReqFetchCustomizedContestByContestId) (*ResFetchCustomizedContestByContestId, error)
	StartCustomizedContest(context.Context, *ReqStartCustomizedContest) (*ResCommon, error)
	StopCustomizedContest(context.Context, *ReqCommon) (*ResCommon, error)
	JoinCustomizedContestChatRoom(context.Context, *ReqJoinCustomizedContestChatRoom) (*ResJoinCustomizedContestChatRoom, error)
	LeaveCustomizedContestChatRoom(context.Context, *ReqCommon) (*ResCommon, error)
	SayChatMessage(context.Context, *ReqSayChatMessage) (*ResCommon, error)
	FetchCustomizedContestGameRecords(context.Context, *ReqFetchCustomizedContestGameRecords) (*ResFetchCustomizedContestGameRecords, error)
	FetchCustomizedContestGameLiveList(context.Context, *ReqFetchCustomizedContestGameLiveList) (*ResFetchCustomizedContestGameLiveList, error)
	FollowCustomizedContest(context.Context, *ReqTargetCustomizedContest) (*ResCommon, error)
	UnfollowCustomizedContest(context.Context, *ReqTargetCustomizedContest) (*ResCommon, error)
	FetchActivityList(context.Context, *ReqCommon) (*ResActivityList, error)
	FetchAccountActivityData(context.Context, *ReqCommon) (*ResAccountActivityData, error)
	ExchangeActivityItem(context.Context, *ReqExchangeActivityItem) (*ResExchangeActivityItem, error)
	CompleteActivityTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error)
	CompleteActivityFlipTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error)
	CompletePeriodActivityTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error)
	CompletePeriodActivityTaskBatch(context.Context, *ReqCompletePeriodActivityTaskBatch) (*ResCommon, error)
	CompleteRandomActivityTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error)
	ReceiveActivityFlipTask(context.Context, *ReqReceiveActivityFlipTask) (*ResReceiveActivityFlipTask, error)
	CompleteSegmentTaskReward(context.Context, *ReqCompleteSegmentTaskReward) (*ResCompleteSegmentTaskReward, error)
	FetchActivityFlipInfo(context.Context, *ReqFetchActivityFlipInfo) (*ResFetchActivityFlipInfo, error)
	GainAccumulatedPointActivityReward(context.Context, *ReqGainAccumulatedPointActivityReward) (*ResCommon, error)
	GainMultiPointActivityReward(context.Context, *ReqGainMultiPointActivityReward) (*ResCommon, error)
	FetchRankPointLeaderboard(context.Context, *ReqFetchRankPointLeaderboard) (*ResFetchRankPointLeaderboard, error)
	GainRankPointReward(context.Context, *ReqGainRankPointReward) (*ResCommon, error)
	RichmanActivityNextMove(context.Context, *ReqRichmanNextMove) (*ResRichmanNextMove, error)
	RichmanAcitivitySpecialMove(context.Context, *ReqRichmanSpecialMove) (*ResRichmanNextMove, error)
	RichmanActivityChestInfo(context.Context, *ReqRichmanChestInfo) (*ResRichmanChestInfo, error)
	CreateGameObserveAuth(context.Context, *ReqCreateGameObserveAuth) (*ResCreateGameObserveAuth, error)
	RefreshGameObserveAuth(context.Context, *ReqRefreshGameObserveAuth) (*ResRefreshGameObserveAuth, error)
	FetchActivityBuff(context.Context, *ReqCommon) (*ResActivityBuff, error)
	UpgradeActivityBuff(context.Context, *ReqUpgradeActivityBuff) (*ResActivityBuff, error)
	UpgradeActivityLevel(context.Context, *ReqUpgradeActivityLevel) (*ResUpgradeActivityLevel, error)
	ReceiveUpgradeActivityReward(context.Context, *ReqReceiveUpgradeActivityReward) (*ResReceiveUpgradeActivityReward, error)
	UpgradeChallenge(context.Context, *ReqCommon) (*ResUpgradeChallenge, error)
	RefreshChallenge(context.Context, *ReqCommon) (*ResRefreshChallenge, error)
	FetchChallengeInfo(context.Context, *ReqCommon) (*ResFetchChallengeInfo, error)
	ForceCompleteChallengeTask(context.Context, *ReqForceCompleteChallengeTask) (*ResCommon, error)
	FetchChallengeSeason(context.Context, *ReqCommon) (*ResChallengeSeasonInfo, error)
	ReceiveChallengeRankReward(context.Context, *ReqReceiveChallengeRankReward) (*ResReceiveChallengeRankReward, error)
	FetchABMatchInfo(context.Context, *ReqCommon) (*ResFetchABMatch, error)
	BuyInABMatch(context.Context, *ReqBuyInABMatch) (*ResCommon, error)
	ReceiveABMatchReward(context.Context, *ReqCommon) (*ResCommon, error)
	QuitABMatch(context.Context, *ReqCommon) (*ResCommon, error)
	StartUnifiedMatch(context.Context, *ReqStartUnifiedMatch) (*ResCommon, error)
	CancelUnifiedMatch(context.Context, *ReqCancelUnifiedMatch) (*ResCommon, error)
	FetchGamePointRank(context.Context, *ReqGamePointRank) (*ResGamePointRank, error)
	FetchSelfGamePointRank(context.Context, *ReqGamePointRank) (*ResFetchSelfGamePointRank, error)
	ReadSNS(context.Context, *ReqReadSNS) (*ResReadSNS, error)
	ReplySNS(context.Context, *ReqReplySNS) (*ResReplySNS, error)
	LikeSNS(context.Context, *ReqLikeSNS) (*ResLikeSNS, error)
	DigMine(context.Context, *ReqDigMine) (*ResDigMine, error)
	FetchLastPrivacy(context.Context, *ReqFetchLastPrivacy) (*ResFetchLastPrivacy, error)
	CheckPrivacy(context.Context, *ReqCheckPrivacy) (*ResCommon, error)
	ResponseCaptcha(context.Context, *ReqResponseCaptcha) (*ResCommon, error)
	FetchRPGBattleHistory(context.Context, *ReqFetchRPGBattleHistory) (*ResFetchRPGBattleHistory, error)
	FetchRPGBattleHistoryV2(context.Context, *ReqFetchRPGBattleHistory) (*ResFetchRPGBattleHistoryV2, error)
	ReceiveRPGRewards(context.Context, *ReqReceiveRPGRewards) (*ResReceiveRPGRewards, error)
	ReceiveRPGReward(context.Context, *ReqReceiveRPGReward) (*ResReceiveRPGRewards, error)
	BuyArenaTicket(context.Context, *ReqBuyArenaTicket) (*ResCommon, error)
	EnterArena(context.Context, *ReqEnterArena) (*ResCommon, error)
	ReceiveArenaReward(context.Context, *ReqArenaReward) (*ResArenaReward, error)
	FetchOBToken(context.Context, *ReqFetchOBToken) (*ResFetchOBToken, error)
	ReceiveCharacterRewards(context.Context, *ReqReceiveCharacterRewards) (*ResReceiveCharacterRewards, error)
	FeedActivityFeed(context.Context, *ReqFeedActivityFeed) (*ResFeedActivityFeed, error)
	SendActivityGiftToFriend(context.Context, *ReqSendActivityGiftToFriend) (*ResSendActivityGiftToFriend, error)
	ReceiveActivityGift(context.Context, *ReqReceiveActivityGift) (*ResCommon, error)
	ReceiveAllActivityGift(context.Context, *ReqReceiveAllActivityGift) (*ResReceiveAllActivityGift, error)
	FetchFriendGiftActivityData(context.Context, *ReqFetchFriendGiftActivityData) (*ResFetchFriendGiftActivityData, error)
	OpenPreChestItem(context.Context, *ReqOpenPreChestItem) (*ResOpenPreChestItem, error)
	FetchVoteActivity(context.Context, *ReqFetchVoteActivity) (*ResFetchVoteActivity, error)
	VoteActivity(context.Context, *ReqVoteActivity) (*ResVoteActivity, error)
	UnlockActivitySpot(context.Context, *ReqUnlockActivitySpot) (*ResCommon, error)
	ReceiveActivitySpotReward(context.Context, *ReqReceiveActivitySpotReward) (*ResReceiveActivitySpotReward, error)
	DeleteAccount(context.Context, *ReqCommon) (*ResDeleteAccount, error)
	CancelDeleteAccount(context.Context, *ReqCommon) (*ResCommon, error)
	LogReport(context.Context, *ReqLogReport) (*ResCommon, error)
	BindOauth2(context.Context, *ReqBindOauth2) (*ResCommon, error)
	FetchOauth2Info(context.Context, *ReqFetchOauth2) (*ResFetchOauth2, error)
	SetLoadingImage(context.Context, *ReqSetLoadingImage) (*ResCommon, error)
	FetchShopInterval(context.Context, *ReqCommon) (*ResFetchShopInterval, error)
	FetchActivityInterval(context.Context, *ReqCommon) (*ResFetchActivityInterval, error)
	FetchRecentFriend(context.Context, *ReqCommon) (*ResFetchrecentFriend, error)
	OpenGacha(context.Context, *ReqOpenGacha) (*ResOpenGacha, error)
	TaskRequest(context.Context, *ReqTaskRequest) (*ResCommon, error)
}

// UnimplementedLobbyServer can be embedded to have forward compatible implementations.
type UnimplementedLobbyServer struct {
}

func (*UnimplementedLobbyServer) FetchConnectionInfo(context.Context, *ReqCommon) (*ResConnectionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchConnectionInfo not implemented")
}
func (*UnimplementedLobbyServer) FetchQueueInfo(context.Context, *ReqCommon) (*ResFetchQueueInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchQueueInfo not implemented")
}
func (*UnimplementedLobbyServer) CancelQueue(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelQueue not implemented")
}
func (*UnimplementedLobbyServer) OpenidCheck(context.Context, *ReqOpenidCheck) (*ResOauth2Check, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenidCheck not implemented")
}
func (*UnimplementedLobbyServer) Signup(context.Context, *ReqSignupAccount) (*ResSignupAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Signup not implemented")
}
func (*UnimplementedLobbyServer) Login(context.Context, *ReqLogin) (*ResLogin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedLobbyServer) LoginSuccess(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginSuccess not implemented")
}
func (*UnimplementedLobbyServer) EmailLogin(context.Context, *ReqEmailLogin) (*ResLogin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmailLogin not implemented")
}
func (*UnimplementedLobbyServer) Oauth2Auth(context.Context, *ReqOauth2Auth) (*ResOauth2Auth, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Oauth2Auth not implemented")
}
func (*UnimplementedLobbyServer) Oauth2Check(context.Context, *ReqOauth2Check) (*ResOauth2Check, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Oauth2Check not implemented")
}
func (*UnimplementedLobbyServer) Oauth2Signup(context.Context, *ReqOauth2Signup) (*ResOauth2Signup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Oauth2Signup not implemented")
}
func (*UnimplementedLobbyServer) Oauth2Login(context.Context, *ReqOauth2Login) (*ResLogin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Oauth2Login not implemented")
}
func (*UnimplementedLobbyServer) DmmPreLogin(context.Context, *ReqDMMPreLogin) (*ResDMMPreLogin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DmmPreLogin not implemented")
}
func (*UnimplementedLobbyServer) CreatePhoneVerifyCode(context.Context, *ReqCreatePhoneVerifyCode) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePhoneVerifyCode not implemented")
}
func (*UnimplementedLobbyServer) CreateEmailVerifyCode(context.Context, *ReqCreateEmailVerifyCode) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEmailVerifyCode not implemented")
}
func (*UnimplementedLobbyServer) VerfifyCodeForSecure(context.Context, *ReqVerifyCodeForSecure) (*ResVerfiyCodeForSecure, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerfifyCodeForSecure not implemented")
}
func (*UnimplementedLobbyServer) BindPhoneNumber(context.Context, *ReqBindPhoneNumber) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindPhoneNumber not implemented")
}
func (*UnimplementedLobbyServer) UnbindPhoneNumber(context.Context, *ReqUnbindPhoneNumber) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbindPhoneNumber not implemented")
}
func (*UnimplementedLobbyServer) FetchPhoneLoginBind(context.Context, *ReqCommon) (*ResFetchPhoneLoginBind, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchPhoneLoginBind not implemented")
}
func (*UnimplementedLobbyServer) CreatePhoneLoginBind(context.Context, *ReqCreatePhoneLoginBind) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePhoneLoginBind not implemented")
}
func (*UnimplementedLobbyServer) BindEmail(context.Context, *ReqBindEmail) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindEmail not implemented")
}
func (*UnimplementedLobbyServer) ModifyPassword(context.Context, *ReqModifyPassword) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyPassword not implemented")
}
func (*UnimplementedLobbyServer) BindAccount(context.Context, *ReqBindAccount) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindAccount not implemented")
}
func (*UnimplementedLobbyServer) Logout(context.Context, *ReqLogout) (*ResLogout, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedLobbyServer) Heatbeat(context.Context, *ReqHeatBeat) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heatbeat not implemented")
}
func (*UnimplementedLobbyServer) LoginBeat(context.Context, *ReqLoginBeat) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginBeat not implemented")
}
func (*UnimplementedLobbyServer) CreateNickname(context.Context, *ReqCreateNickname) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNickname not implemented")
}
func (*UnimplementedLobbyServer) ModifyNickname(context.Context, *ReqModifyNickname) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyNickname not implemented")
}
func (*UnimplementedLobbyServer) ModifyBirthday(context.Context, *ReqModifyBirthday) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyBirthday not implemented")
}
func (*UnimplementedLobbyServer) FetchRoom(context.Context, *ReqCommon) (*ResSelfRoom, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchRoom not implemented")
}
func (*UnimplementedLobbyServer) CreateRoom(context.Context, *ReqCreateRoom) (*ResCreateRoom, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedLobbyServer) JoinRoom(context.Context, *ReqJoinRoom) (*ResJoinRoom, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}
func (*UnimplementedLobbyServer) LeaveRoom(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveRoom not implemented")
}
func (*UnimplementedLobbyServer) ReadyPlay(context.Context, *ReqRoomReady) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadyPlay not implemented")
}
func (*UnimplementedLobbyServer) DressingStatus(context.Context, *ReqRoomDressing) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DressingStatus not implemented")
}
func (*UnimplementedLobbyServer) StartRoom(context.Context, *ReqRoomStart) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartRoom not implemented")
}
func (*UnimplementedLobbyServer) KickPlayer(context.Context, *ReqRoomKick) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickPlayer not implemented")
}
func (*UnimplementedLobbyServer) ModifyRoom(context.Context, *ReqModifyRoom) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyRoom not implemented")
}
func (*UnimplementedLobbyServer) MatchGame(context.Context, *ReqJoinMatchQueue) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MatchGame not implemented")
}
func (*UnimplementedLobbyServer) CancelMatch(context.Context, *ReqCancelMatchQueue) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelMatch not implemented")
}
func (*UnimplementedLobbyServer) FetchAccountInfo(context.Context, *ReqAccountInfo) (*ResAccountInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAccountInfo not implemented")
}
func (*UnimplementedLobbyServer) ChangeAvatar(context.Context, *ReqChangeAvatar) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeAvatar not implemented")
}
func (*UnimplementedLobbyServer) ReceiveVersionReward(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveVersionReward not implemented")
}
func (*UnimplementedLobbyServer) FetchAccountStatisticInfo(context.Context, *ReqAccountStatisticInfo) (*ResAccountStatisticInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAccountStatisticInfo not implemented")
}
func (*UnimplementedLobbyServer) FetchAccountChallengeRankInfo(context.Context, *ReqAccountInfo) (*ResAccountChallengeRankInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAccountChallengeRankInfo not implemented")
}
func (*UnimplementedLobbyServer) FetchAccountCharacterInfo(context.Context, *ReqCommon) (*ResAccountCharacterInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAccountCharacterInfo not implemented")
}
func (*UnimplementedLobbyServer) ShopPurchase(context.Context, *ReqShopPurchase) (*ResShopPurchase, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopPurchase not implemented")
}
func (*UnimplementedLobbyServer) FetchGameRecord(context.Context, *ReqGameRecord) (*ResGameRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchGameRecord not implemented")
}
func (*UnimplementedLobbyServer) ReadGameRecord(context.Context, *ReqGameRecord) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadGameRecord not implemented")
}
func (*UnimplementedLobbyServer) FetchGameRecordList(context.Context, *ReqGameRecordList) (*ResGameRecordList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchGameRecordList not implemented")
}
func (*UnimplementedLobbyServer) FetchCollectedGameRecordList(context.Context, *ReqCommon) (*ResCollectedGameRecordList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCollectedGameRecordList not implemented")
}
func (*UnimplementedLobbyServer) FetchGameRecordsDetail(context.Context, *ReqGameRecordsDetail) (*ResGameRecordsDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchGameRecordsDetail not implemented")
}
func (*UnimplementedLobbyServer) AddCollectedGameRecord(context.Context, *ReqAddCollectedGameRecord) (*ResAddCollectedGameRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCollectedGameRecord not implemented")
}
func (*UnimplementedLobbyServer) RemoveCollectedGameRecord(context.Context, *ReqRemoveCollectedGameRecord) (*ResRemoveCollectedGameRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveCollectedGameRecord not implemented")
}
func (*UnimplementedLobbyServer) ChangeCollectedGameRecordRemarks(context.Context, *ReqChangeCollectedGameRecordRemarks) (*ResChangeCollectedGameRecordRemarks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCollectedGameRecordRemarks not implemented")
}
func (*UnimplementedLobbyServer) FetchLevelLeaderboard(context.Context, *ReqLevelLeaderboard) (*ResLevelLeaderboard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchLevelLeaderboard not implemented")
}
func (*UnimplementedLobbyServer) FetchChallengeLeaderboard(context.Context, *ReqChallangeLeaderboard) (*ResChallengeLeaderboard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchChallengeLeaderboard not implemented")
}
func (*UnimplementedLobbyServer) FetchMutiChallengeLevel(context.Context, *ReqMutiChallengeLevel) (*ResMutiChallengeLevel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchMutiChallengeLevel not implemented")
}
func (*UnimplementedLobbyServer) FetchMultiAccountBrief(context.Context, *ReqMultiAccountId) (*ResMultiAccountBrief, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchMultiAccountBrief not implemented")
}
func (*UnimplementedLobbyServer) FetchFriendList(context.Context, *ReqCommon) (*ResFriendList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchFriendList not implemented")
}
func (*UnimplementedLobbyServer) FetchFriendApplyList(context.Context, *ReqCommon) (*ResFriendApplyList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchFriendApplyList not implemented")
}
func (*UnimplementedLobbyServer) ApplyFriend(context.Context, *ReqApplyFriend) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyFriend not implemented")
}
func (*UnimplementedLobbyServer) HandleFriendApply(context.Context, *ReqHandleFriendApply) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleFriendApply not implemented")
}
func (*UnimplementedLobbyServer) RemoveFriend(context.Context, *ReqRemoveFriend) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFriend not implemented")
}
func (*UnimplementedLobbyServer) SearchAccountById(context.Context, *ReqSearchAccountById) (*ResSearchAccountById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchAccountById not implemented")
}
func (*UnimplementedLobbyServer) SearchAccountByPattern(context.Context, *ReqSearchAccountByPattern) (*ResSearchAccountByPattern, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchAccountByPattern not implemented")
}
func (*UnimplementedLobbyServer) FetchAccountState(context.Context, *ReqAccountList) (*ResAccountStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAccountState not implemented")
}
func (*UnimplementedLobbyServer) FetchBagInfo(context.Context, *ReqCommon) (*ResBagInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchBagInfo not implemented")
}
func (*UnimplementedLobbyServer) UseBagItem(context.Context, *ReqUseBagItem) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseBagItem not implemented")
}
func (*UnimplementedLobbyServer) OpenManualItem(context.Context, *ReqOpenManualItem) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenManualItem not implemented")
}
func (*UnimplementedLobbyServer) OpenRandomRewardItem(context.Context, *ReqOpenRandomRewardItem) (*ResOpenRandomRewardItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenRandomRewardItem not implemented")
}
func (*UnimplementedLobbyServer) OpenAllRewardItem(context.Context, *ReqOpenAllRewardItem) (*ResOpenAllRewardItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenAllRewardItem not implemented")
}
func (*UnimplementedLobbyServer) ComposeShard(context.Context, *ReqComposeShard) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ComposeShard not implemented")
}
func (*UnimplementedLobbyServer) FetchAnnouncement(context.Context, *ReqFetchAnnouncement) (*ResAnnouncement, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAnnouncement not implemented")
}
func (*UnimplementedLobbyServer) ReadAnnouncement(context.Context, *ReqReadAnnouncement) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAnnouncement not implemented")
}
func (*UnimplementedLobbyServer) FetchMailInfo(context.Context, *ReqCommon) (*ResMailInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchMailInfo not implemented")
}
func (*UnimplementedLobbyServer) ReadMail(context.Context, *ReqReadMail) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadMail not implemented")
}
func (*UnimplementedLobbyServer) DeleteMail(context.Context, *ReqDeleteMail) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMail not implemented")
}
func (*UnimplementedLobbyServer) TakeAttachmentFromMail(context.Context, *ReqTakeAttachment) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TakeAttachmentFromMail not implemented")
}
func (*UnimplementedLobbyServer) ReceiveAchievementReward(context.Context, *ReqReceiveAchievementReward) (*ResReceiveAchievementReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveAchievementReward not implemented")
}
func (*UnimplementedLobbyServer) ReceiveAchievementGroupReward(context.Context, *ReqReceiveAchievementGroupReward) (*ResReceiveAchievementGroupReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveAchievementGroupReward not implemented")
}
func (*UnimplementedLobbyServer) FetchAchievementRate(context.Context, *ReqCommon) (*ResFetchAchievementRate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAchievementRate not implemented")
}
func (*UnimplementedLobbyServer) FetchAchievement(context.Context, *ReqCommon) (*ResAchievement, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAchievement not implemented")
}
func (*UnimplementedLobbyServer) BuyShiLian(context.Context, *ReqBuyShiLian) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyShiLian not implemented")
}
func (*UnimplementedLobbyServer) MatchShiLian(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MatchShiLian not implemented")
}
func (*UnimplementedLobbyServer) GoNextShiLian(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GoNextShiLian not implemented")
}
func (*UnimplementedLobbyServer) UpdateClientValue(context.Context, *ReqUpdateClientValue) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClientValue not implemented")
}
func (*UnimplementedLobbyServer) FetchClientValue(context.Context, *ReqCommon) (*ResClientValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchClientValue not implemented")
}
func (*UnimplementedLobbyServer) ClientMessage(context.Context, *ReqClientMessage) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientMessage not implemented")
}
func (*UnimplementedLobbyServer) FetchCurrentMatchInfo(context.Context, *ReqCurrentMatchInfo) (*ResCurrentMatchInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCurrentMatchInfo not implemented")
}
func (*UnimplementedLobbyServer) UserComplain(context.Context, *ReqUserComplain) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserComplain not implemented")
}
func (*UnimplementedLobbyServer) FetchReviveCoinInfo(context.Context, *ReqCommon) (*ResReviveCoinInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchReviveCoinInfo not implemented")
}
func (*UnimplementedLobbyServer) GainReviveCoin(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GainReviveCoin not implemented")
}
func (*UnimplementedLobbyServer) FetchDailyTask(context.Context, *ReqCommon) (*ResDailyTask, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchDailyTask not implemented")
}
func (*UnimplementedLobbyServer) RefreshDailyTask(context.Context, *ReqRefreshDailyTask) (*ResRefreshDailyTask, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshDailyTask not implemented")
}
func (*UnimplementedLobbyServer) UseGiftCode(context.Context, *ReqUseGiftCode) (*ResUseGiftCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseGiftCode not implemented")
}
func (*UnimplementedLobbyServer) UseSpecialGiftCode(context.Context, *ReqUseGiftCode) (*ResUseSpecialGiftCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseSpecialGiftCode not implemented")
}
func (*UnimplementedLobbyServer) FetchTitleList(context.Context, *ReqCommon) (*ResTitleList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchTitleList not implemented")
}
func (*UnimplementedLobbyServer) UseTitle(context.Context, *ReqUseTitle) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseTitle not implemented")
}
func (*UnimplementedLobbyServer) SendClientMessage(context.Context, *ReqSendClientMessage) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendClientMessage not implemented")
}
func (*UnimplementedLobbyServer) FetchGameLiveInfo(context.Context, *ReqGameLiveInfo) (*ResGameLiveInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchGameLiveInfo not implemented")
}
func (*UnimplementedLobbyServer) FetchGameLiveLeftSegment(context.Context, *ReqGameLiveLeftSegment) (*ResGameLiveLeftSegment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchGameLiveLeftSegment not implemented")
}
func (*UnimplementedLobbyServer) FetchGameLiveList(context.Context, *ReqGameLiveList) (*ResGameLiveList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchGameLiveList not implemented")
}
func (*UnimplementedLobbyServer) FetchCommentSetting(context.Context, *ReqCommon) (*ResCommentSetting, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCommentSetting not implemented")
}
func (*UnimplementedLobbyServer) UpdateCommentSetting(context.Context, *ReqUpdateCommentSetting) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCommentSetting not implemented")
}
func (*UnimplementedLobbyServer) FetchCommentList(context.Context, *ReqFetchCommentList) (*ResFetchCommentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCommentList not implemented")
}
func (*UnimplementedLobbyServer) FetchCommentContent(context.Context, *ReqFetchCommentContent) (*ResFetchCommentContent, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCommentContent not implemented")
}
func (*UnimplementedLobbyServer) LeaveComment(context.Context, *ReqLeaveComment) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveComment not implemented")
}
func (*UnimplementedLobbyServer) DeleteComment(context.Context, *ReqDeleteComment) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteComment not implemented")
}
func (*UnimplementedLobbyServer) UpdateReadComment(context.Context, *ReqUpdateReadComment) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReadComment not implemented")
}
func (*UnimplementedLobbyServer) FetchRollingNotice(context.Context, *ReqCommon) (*ReqRollingNotice, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchRollingNotice not implemented")
}
func (*UnimplementedLobbyServer) FetchServerTime(context.Context, *ReqCommon) (*ResServerTime, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchServerTime not implemented")
}
func (*UnimplementedLobbyServer) FetchPlatformProducts(context.Context, *ReqPlatformBillingProducts) (*ResPlatformBillingProducts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchPlatformProducts not implemented")
}
func (*UnimplementedLobbyServer) CancelGooglePlayOrder(context.Context, *ReqCancelGooglePlayOrder) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelGooglePlayOrder not implemented")
}
func (*UnimplementedLobbyServer) OpenChest(context.Context, *ReqOpenChest) (*ResOpenChest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenChest not implemented")
}
func (*UnimplementedLobbyServer) BuyFromChestShop(context.Context, *ReqBuyFromChestShop) (*ResBuyFromChestShop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyFromChestShop not implemented")
}
func (*UnimplementedLobbyServer) FetchDailySignInInfo(context.Context, *ReqCommon) (*ResDailySignInInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchDailySignInInfo not implemented")
}
func (*UnimplementedLobbyServer) DoDailySignIn(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoDailySignIn not implemented")
}
func (*UnimplementedLobbyServer) DoActivitySignIn(context.Context, *ReqDoActivitySignIn) (*ResDoActivitySignIn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoActivitySignIn not implemented")
}
func (*UnimplementedLobbyServer) FetchCharacterInfo(context.Context, *ReqCommon) (*ResCharacterInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCharacterInfo not implemented")
}
func (*UnimplementedLobbyServer) UpdateCharacterSort(context.Context, *ReqUpdateCharacterSort) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCharacterSort not implemented")
}
func (*UnimplementedLobbyServer) ChangeMainCharacter(context.Context, *ReqChangeMainCharacter) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeMainCharacter not implemented")
}
func (*UnimplementedLobbyServer) ChangeCharacterSkin(context.Context, *ReqChangeCharacterSkin) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCharacterSkin not implemented")
}
func (*UnimplementedLobbyServer) ChangeCharacterView(context.Context, *ReqChangeCharacterView) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCharacterView not implemented")
}
func (*UnimplementedLobbyServer) SetHiddenCharacter(context.Context, *ReqSetHiddenCharacter) (*ResSetHiddenCharacter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetHiddenCharacter not implemented")
}
func (*UnimplementedLobbyServer) SendGiftToCharacter(context.Context, *ReqSendGiftToCharacter) (*ResSendGiftToCharacter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendGiftToCharacter not implemented")
}
func (*UnimplementedLobbyServer) SellItem(context.Context, *ReqSellItem) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SellItem not implemented")
}
func (*UnimplementedLobbyServer) FetchCommonView(context.Context, *ReqCommon) (*ResCommonView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCommonView not implemented")
}
func (*UnimplementedLobbyServer) ChangeCommonView(context.Context, *ReqChangeCommonView) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCommonView not implemented")
}
func (*UnimplementedLobbyServer) SaveCommonViews(context.Context, *ReqSaveCommonViews) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCommonViews not implemented")
}
func (*UnimplementedLobbyServer) FetchCommonViews(context.Context, *ReqCommonViews) (*ResCommonViews, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCommonViews not implemented")
}
func (*UnimplementedLobbyServer) FetchAllCommonViews(context.Context, *ReqCommon) (*ResAllcommonViews, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAllCommonViews not implemented")
}
func (*UnimplementedLobbyServer) UseCommonView(context.Context, *ReqUseCommonView) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseCommonView not implemented")
}
func (*UnimplementedLobbyServer) UpgradeCharacter(context.Context, *ReqUpgradeCharacter) (*ResUpgradeCharacter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeCharacter not implemented")
}
func (*UnimplementedLobbyServer) AddFinishedEnding(context.Context, *ReqFinishedEnding) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFinishedEnding not implemented")
}
func (*UnimplementedLobbyServer) ReceiveEndingReward(context.Context, *ReqFinishedEnding) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveEndingReward not implemented")
}
func (*UnimplementedLobbyServer) GameMasterCommand(context.Context, *ReqGMCommand) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameMasterCommand not implemented")
}
func (*UnimplementedLobbyServer) FetchShopInfo(context.Context, *ReqCommon) (*ResShopInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchShopInfo not implemented")
}
func (*UnimplementedLobbyServer) BuyFromShop(context.Context, *ReqBuyFromShop) (*ResBuyFromShop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyFromShop not implemented")
}
func (*UnimplementedLobbyServer) BuyFromZHP(context.Context, *ReqBuyFromZHP) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyFromZHP not implemented")
}
func (*UnimplementedLobbyServer) RefreshZHPShop(context.Context, *ReqReshZHPShop) (*ResRefreshZHPShop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshZHPShop not implemented")
}
func (*UnimplementedLobbyServer) FetchMonthTicketInfo(context.Context, *ReqCommon) (*ResMonthTicketInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchMonthTicketInfo not implemented")
}
func (*UnimplementedLobbyServer) PayMonthTicket(context.Context, *ReqPayMonthTicket) (*ResPayMonthTicket, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PayMonthTicket not implemented")
}
func (*UnimplementedLobbyServer) ExchangeCurrency(context.Context, *ReqExchangeCurrency) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeCurrency not implemented")
}
func (*UnimplementedLobbyServer) ExchangeChestStone(context.Context, *ReqExchangeCurrency) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeChestStone not implemented")
}
func (*UnimplementedLobbyServer) ExchangeDiamond(context.Context, *ReqExchangeCurrency) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeDiamond not implemented")
}
func (*UnimplementedLobbyServer) FetchServerSettings(context.Context, *ReqCommon) (*ResServerSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchServerSettings not implemented")
}
func (*UnimplementedLobbyServer) FetchAccountSettings(context.Context, *ReqCommon) (*ResAccountSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAccountSettings not implemented")
}
func (*UnimplementedLobbyServer) UpdateAccountSettings(context.Context, *ReqUpdateAccountSettings) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccountSettings not implemented")
}
func (*UnimplementedLobbyServer) FetchModNicknameTime(context.Context, *ReqCommon) (*ResModNicknameTime, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchModNicknameTime not implemented")
}
func (*UnimplementedLobbyServer) CreateWechatNativeOrder(context.Context, *ReqCreateWechatNativeOrder) (*ResCreateWechatNativeOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWechatNativeOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateWechatAppOrder(context.Context, *ReqCreateWechatAppOrder) (*ResCreateWechatAppOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWechatAppOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateAlipayOrder(context.Context, *ReqCreateAlipayOrder) (*ResCreateAlipayOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAlipayOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateAlipayScanOrder(context.Context, *ReqCreateAlipayScanOrder) (*ResCreateAlipayScanOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAlipayScanOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateAlipayAppOrder(context.Context, *ReqCreateAlipayAppOrder) (*ResCreateAlipayAppOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAlipayAppOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateJPCreditCardOrder(context.Context, *ReqCreateJPCreditCardOrder) (*ResCreateJPCreditCardOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJPCreditCardOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateJPPaypalOrder(context.Context, *ReqCreateJPPaypalOrder) (*ResCreateJPPaypalOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJPPaypalOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateJPAuOrder(context.Context, *ReqCreateJPAuOrder) (*ResCreateJPAuOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJPAuOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateJPDocomoOrder(context.Context, *ReqCreateJPDocomoOrder) (*ResCreateJPDocomoOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJPDocomoOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateJPWebMoneyOrder(context.Context, *ReqCreateJPWebMoneyOrder) (*ResCreateJPWebMoneyOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJPWebMoneyOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateJPSoftbankOrder(context.Context, *ReqCreateJPSoftbankOrder) (*ResCreateJPSoftbankOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJPSoftbankOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateJPPayPayOrder(context.Context, *ReqCreateJPPayPayOrder) (*ResCreateJPPayPayOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJPPayPayOrder not implemented")
}
func (*UnimplementedLobbyServer) FetchJPCommonCreditCardOrder(context.Context, *ReqFetchJPCommonCreditCardOrder) (*ResFetchJPCommonCreditCardOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchJPCommonCreditCardOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateENPaypalOrder(context.Context, *ReqCreateENPaypalOrder) (*ResCreateENPaypalOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateENPaypalOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateENMasterCardOrder(context.Context, *ReqCreateENMasterCardOrder) (*ResCreateENMasterCardOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateENMasterCardOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateENVisaOrder(context.Context, *ReqCreateENVisaOrder) (*ResCreateENVisaOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateENVisaOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateENJCBOrder(context.Context, *ReqCreateENJCBOrder) (*ResCreateENJCBOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateENJCBOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateENAlipayOrder(context.Context, *ReqCreateENAlipayOrder) (*ResCreateENAlipayOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateENAlipayOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateKRPaypalOrder(context.Context, *ReqCreateKRPaypalOrder) (*ResCreateKRPaypalOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKRPaypalOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateKRMasterCardOrder(context.Context, *ReqCreateKRMasterCardOrder) (*ResCreateKRMasterCardOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKRMasterCardOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateKRVisaOrder(context.Context, *ReqCreateKRVisaOrder) (*ResCreateKRVisaOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKRVisaOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateKRJCBOrder(context.Context, *ReqCreateKRJCBOrder) (*ResCreateKRJCBOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKRJCBOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateKRAlipayOrder(context.Context, *ReqCreateKRAlipayOrder) (*ResCreateKRAlipayOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKRAlipayOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateDMMOrder(context.Context, *ReqCreateDMMOrder) (*ResCreateDmmOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDMMOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateIAPOrder(context.Context, *ReqCreateIAPOrder) (*ResCreateIAPOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIAPOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateSteamOrder(context.Context, *ReqCreateSteamOrder) (*ResCreateSteamOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSteamOrder not implemented")
}
func (*UnimplementedLobbyServer) VerifySteamOrder(context.Context, *ReqVerifySteamOrder) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifySteamOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateMyCardAndroidOrder(context.Context, *ReqCreateMyCardOrder) (*ResCreateMyCardOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMyCardAndroidOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateMyCardWebOrder(context.Context, *ReqCreateMyCardOrder) (*ResCreateMyCardOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMyCardWebOrder not implemented")
}
func (*UnimplementedLobbyServer) CreatePaypalOrder(context.Context, *ReqCreatePaypalOrder) (*ResCreatePaypalOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePaypalOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateXsollaOrder(context.Context, *ReqCreateXsollaOrder) (*ResCreateXsollaOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateXsollaOrder not implemented")
}
func (*UnimplementedLobbyServer) VerifyMyCardOrder(context.Context, *ReqVerifyMyCardOrder) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyMyCardOrder not implemented")
}
func (*UnimplementedLobbyServer) VerificationIAPOrder(context.Context, *ReqVerificationIAPOrder) (*ResVerificationIAPOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerificationIAPOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateYostarSDKOrder(context.Context, *ReqCreateYostarOrder) (*ResCreateYostarOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateYostarSDKOrder not implemented")
}
func (*UnimplementedLobbyServer) CreateBillingOrder(context.Context, *ReqCreateBillingOrder) (*ResCreateBillingOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBillingOrder not implemented")
}
func (*UnimplementedLobbyServer) SolveGooglePlayOrder(context.Context, *ReqSolveGooglePlayOrder) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SolveGooglePlayOrder not implemented")
}
func (*UnimplementedLobbyServer) SolveGooglePayOrderV3(context.Context, *ReqSolveGooglePlayOrderV3) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SolveGooglePayOrderV3 not implemented")
}
func (*UnimplementedLobbyServer) DeliverAA32Order(context.Context, *ReqDeliverAA32Order) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeliverAA32Order not implemented")
}
func (*UnimplementedLobbyServer) FetchMisc(context.Context, *ReqCommon) (*ResMisc, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchMisc not implemented")
}
func (*UnimplementedLobbyServer) ModifySignature(context.Context, *ReqModifySignature) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifySignature not implemented")
}
func (*UnimplementedLobbyServer) FetchIDCardInfo(context.Context, *ReqCommon) (*ResIDCardInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchIDCardInfo not implemented")
}
func (*UnimplementedLobbyServer) UpdateIDCardInfo(context.Context, *ReqUpdateIDCardInfo) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIDCardInfo not implemented")
}
func (*UnimplementedLobbyServer) FetchVipReward(context.Context, *ReqCommon) (*ResVipReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchVipReward not implemented")
}
func (*UnimplementedLobbyServer) GainVipReward(context.Context, *ReqGainVipReward) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GainVipReward not implemented")
}
func (*UnimplementedLobbyServer) FetchRefundOrder(context.Context, *ReqCommon) (*ResFetchRefundOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchRefundOrder not implemented")
}
func (*UnimplementedLobbyServer) FetchCustomizedContestList(context.Context, *ReqFetchCustomizedContestList) (*ResFetchCustomizedContestList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCustomizedContestList not implemented")
}
func (*UnimplementedLobbyServer) FetchCustomizedContestExtendInfo(context.Context, *ReqFetchCustomizedContestExtendInfo) (*ResFetchCustomizedContestExtendInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCustomizedContestExtendInfo not implemented")
}
func (*UnimplementedLobbyServer) FetchCustomizedContestAuthInfo(context.Context, *ReqFetchCustomizedContestAuthInfo) (*ResFetchCustomizedContestAuthInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCustomizedContestAuthInfo not implemented")
}
func (*UnimplementedLobbyServer) EnterCustomizedContest(context.Context, *ReqEnterCustomizedContest) (*ResEnterCustomizedContest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnterCustomizedContest not implemented")
}
func (*UnimplementedLobbyServer) LeaveCustomizedContest(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveCustomizedContest not implemented")
}
func (*UnimplementedLobbyServer) FetchCustomizedContestOnlineInfo(context.Context, *ReqFetchCustomizedContestOnlineInfo) (*ResFetchCustomizedContestOnlineInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCustomizedContestOnlineInfo not implemented")
}
func (*UnimplementedLobbyServer) FetchCustomizedContestByContestId(context.Context, *ReqFetchCustomizedContestByContestId) (*ResFetchCustomizedContestByContestId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCustomizedContestByContestId not implemented")
}
func (*UnimplementedLobbyServer) StartCustomizedContest(context.Context, *ReqStartCustomizedContest) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartCustomizedContest not implemented")
}
func (*UnimplementedLobbyServer) StopCustomizedContest(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopCustomizedContest not implemented")
}
func (*UnimplementedLobbyServer) JoinCustomizedContestChatRoom(context.Context, *ReqJoinCustomizedContestChatRoom) (*ResJoinCustomizedContestChatRoom, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinCustomizedContestChatRoom not implemented")
}
func (*UnimplementedLobbyServer) LeaveCustomizedContestChatRoom(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveCustomizedContestChatRoom not implemented")
}
func (*UnimplementedLobbyServer) SayChatMessage(context.Context, *ReqSayChatMessage) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayChatMessage not implemented")
}
func (*UnimplementedLobbyServer) FetchCustomizedContestGameRecords(context.Context, *ReqFetchCustomizedContestGameRecords) (*ResFetchCustomizedContestGameRecords, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCustomizedContestGameRecords not implemented")
}
func (*UnimplementedLobbyServer) FetchCustomizedContestGameLiveList(context.Context, *ReqFetchCustomizedContestGameLiveList) (*ResFetchCustomizedContestGameLiveList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCustomizedContestGameLiveList not implemented")
}
func (*UnimplementedLobbyServer) FollowCustomizedContest(context.Context, *ReqTargetCustomizedContest) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowCustomizedContest not implemented")
}
func (*UnimplementedLobbyServer) UnfollowCustomizedContest(context.Context, *ReqTargetCustomizedContest) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnfollowCustomizedContest not implemented")
}
func (*UnimplementedLobbyServer) FetchActivityList(context.Context, *ReqCommon) (*ResActivityList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchActivityList not implemented")
}
func (*UnimplementedLobbyServer) FetchAccountActivityData(context.Context, *ReqCommon) (*ResAccountActivityData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAccountActivityData not implemented")
}
func (*UnimplementedLobbyServer) ExchangeActivityItem(context.Context, *ReqExchangeActivityItem) (*ResExchangeActivityItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeActivityItem not implemented")
}
func (*UnimplementedLobbyServer) CompleteActivityTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteActivityTask not implemented")
}
func (*UnimplementedLobbyServer) CompleteActivityFlipTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteActivityFlipTask not implemented")
}
func (*UnimplementedLobbyServer) CompletePeriodActivityTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletePeriodActivityTask not implemented")
}
func (*UnimplementedLobbyServer) CompletePeriodActivityTaskBatch(context.Context, *ReqCompletePeriodActivityTaskBatch) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletePeriodActivityTaskBatch not implemented")
}
func (*UnimplementedLobbyServer) CompleteRandomActivityTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteRandomActivityTask not implemented")
}
func (*UnimplementedLobbyServer) ReceiveActivityFlipTask(context.Context, *ReqReceiveActivityFlipTask) (*ResReceiveActivityFlipTask, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveActivityFlipTask not implemented")
}
func (*UnimplementedLobbyServer) CompleteSegmentTaskReward(context.Context, *ReqCompleteSegmentTaskReward) (*ResCompleteSegmentTaskReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteSegmentTaskReward not implemented")
}
func (*UnimplementedLobbyServer) FetchActivityFlipInfo(context.Context, *ReqFetchActivityFlipInfo) (*ResFetchActivityFlipInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchActivityFlipInfo not implemented")
}
func (*UnimplementedLobbyServer) GainAccumulatedPointActivityReward(context.Context, *ReqGainAccumulatedPointActivityReward) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GainAccumulatedPointActivityReward not implemented")
}
func (*UnimplementedLobbyServer) GainMultiPointActivityReward(context.Context, *ReqGainMultiPointActivityReward) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GainMultiPointActivityReward not implemented")
}
func (*UnimplementedLobbyServer) FetchRankPointLeaderboard(context.Context, *ReqFetchRankPointLeaderboard) (*ResFetchRankPointLeaderboard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchRankPointLeaderboard not implemented")
}
func (*UnimplementedLobbyServer) GainRankPointReward(context.Context, *ReqGainRankPointReward) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GainRankPointReward not implemented")
}
func (*UnimplementedLobbyServer) RichmanActivityNextMove(context.Context, *ReqRichmanNextMove) (*ResRichmanNextMove, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RichmanActivityNextMove not implemented")
}
func (*UnimplementedLobbyServer) RichmanAcitivitySpecialMove(context.Context, *ReqRichmanSpecialMove) (*ResRichmanNextMove, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RichmanAcitivitySpecialMove not implemented")
}
func (*UnimplementedLobbyServer) RichmanActivityChestInfo(context.Context, *ReqRichmanChestInfo) (*ResRichmanChestInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RichmanActivityChestInfo not implemented")
}
func (*UnimplementedLobbyServer) CreateGameObserveAuth(context.Context, *ReqCreateGameObserveAuth) (*ResCreateGameObserveAuth, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGameObserveAuth not implemented")
}
func (*UnimplementedLobbyServer) RefreshGameObserveAuth(context.Context, *ReqRefreshGameObserveAuth) (*ResRefreshGameObserveAuth, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshGameObserveAuth not implemented")
}
func (*UnimplementedLobbyServer) FetchActivityBuff(context.Context, *ReqCommon) (*ResActivityBuff, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchActivityBuff not implemented")
}
func (*UnimplementedLobbyServer) UpgradeActivityBuff(context.Context, *ReqUpgradeActivityBuff) (*ResActivityBuff, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeActivityBuff not implemented")
}
func (*UnimplementedLobbyServer) UpgradeActivityLevel(context.Context, *ReqUpgradeActivityLevel) (*ResUpgradeActivityLevel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeActivityLevel not implemented")
}
func (*UnimplementedLobbyServer) ReceiveUpgradeActivityReward(context.Context, *ReqReceiveUpgradeActivityReward) (*ResReceiveUpgradeActivityReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveUpgradeActivityReward not implemented")
}
func (*UnimplementedLobbyServer) UpgradeChallenge(context.Context, *ReqCommon) (*ResUpgradeChallenge, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeChallenge not implemented")
}
func (*UnimplementedLobbyServer) RefreshChallenge(context.Context, *ReqCommon) (*ResRefreshChallenge, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshChallenge not implemented")
}
func (*UnimplementedLobbyServer) FetchChallengeInfo(context.Context, *ReqCommon) (*ResFetchChallengeInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchChallengeInfo not implemented")
}
func (*UnimplementedLobbyServer) ForceCompleteChallengeTask(context.Context, *ReqForceCompleteChallengeTask) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceCompleteChallengeTask not implemented")
}
func (*UnimplementedLobbyServer) FetchChallengeSeason(context.Context, *ReqCommon) (*ResChallengeSeasonInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchChallengeSeason not implemented")
}
func (*UnimplementedLobbyServer) ReceiveChallengeRankReward(context.Context, *ReqReceiveChallengeRankReward) (*ResReceiveChallengeRankReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveChallengeRankReward not implemented")
}
func (*UnimplementedLobbyServer) FetchABMatchInfo(context.Context, *ReqCommon) (*ResFetchABMatch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchABMatchInfo not implemented")
}
func (*UnimplementedLobbyServer) BuyInABMatch(context.Context, *ReqBuyInABMatch) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyInABMatch not implemented")
}
func (*UnimplementedLobbyServer) ReceiveABMatchReward(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveABMatchReward not implemented")
}
func (*UnimplementedLobbyServer) QuitABMatch(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuitABMatch not implemented")
}
func (*UnimplementedLobbyServer) StartUnifiedMatch(context.Context, *ReqStartUnifiedMatch) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartUnifiedMatch not implemented")
}
func (*UnimplementedLobbyServer) CancelUnifiedMatch(context.Context, *ReqCancelUnifiedMatch) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelUnifiedMatch not implemented")
}
func (*UnimplementedLobbyServer) FetchGamePointRank(context.Context, *ReqGamePointRank) (*ResGamePointRank, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchGamePointRank not implemented")
}
func (*UnimplementedLobbyServer) FetchSelfGamePointRank(context.Context, *ReqGamePointRank) (*ResFetchSelfGamePointRank, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchSelfGamePointRank not implemented")
}
func (*UnimplementedLobbyServer) ReadSNS(context.Context, *ReqReadSNS) (*ResReadSNS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadSNS not implemented")
}
func (*UnimplementedLobbyServer) ReplySNS(context.Context, *ReqReplySNS) (*ResReplySNS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplySNS not implemented")
}
func (*UnimplementedLobbyServer) LikeSNS(context.Context, *ReqLikeSNS) (*ResLikeSNS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LikeSNS not implemented")
}
func (*UnimplementedLobbyServer) DigMine(context.Context, *ReqDigMine) (*ResDigMine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DigMine not implemented")
}
func (*UnimplementedLobbyServer) FetchLastPrivacy(context.Context, *ReqFetchLastPrivacy) (*ResFetchLastPrivacy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchLastPrivacy not implemented")
}
func (*UnimplementedLobbyServer) CheckPrivacy(context.Context, *ReqCheckPrivacy) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPrivacy not implemented")
}
func (*UnimplementedLobbyServer) ResponseCaptcha(context.Context, *ReqResponseCaptcha) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResponseCaptcha not implemented")
}
func (*UnimplementedLobbyServer) FetchRPGBattleHistory(context.Context, *ReqFetchRPGBattleHistory) (*ResFetchRPGBattleHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchRPGBattleHistory not implemented")
}
func (*UnimplementedLobbyServer) FetchRPGBattleHistoryV2(context.Context, *ReqFetchRPGBattleHistory) (*ResFetchRPGBattleHistoryV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchRPGBattleHistoryV2 not implemented")
}
func (*UnimplementedLobbyServer) ReceiveRPGRewards(context.Context, *ReqReceiveRPGRewards) (*ResReceiveRPGRewards, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveRPGRewards not implemented")
}
func (*UnimplementedLobbyServer) ReceiveRPGReward(context.Context, *ReqReceiveRPGReward) (*ResReceiveRPGRewards, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveRPGReward not implemented")
}
func (*UnimplementedLobbyServer) BuyArenaTicket(context.Context, *ReqBuyArenaTicket) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyArenaTicket not implemented")
}
func (*UnimplementedLobbyServer) EnterArena(context.Context, *ReqEnterArena) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnterArena not implemented")
}
func (*UnimplementedLobbyServer) ReceiveArenaReward(context.Context, *ReqArenaReward) (*ResArenaReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveArenaReward not implemented")
}
func (*UnimplementedLobbyServer) FetchOBToken(context.Context, *ReqFetchOBToken) (*ResFetchOBToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchOBToken not implemented")
}
func (*UnimplementedLobbyServer) ReceiveCharacterRewards(context.Context, *ReqReceiveCharacterRewards) (*ResReceiveCharacterRewards, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveCharacterRewards not implemented")
}
func (*UnimplementedLobbyServer) FeedActivityFeed(context.Context, *ReqFeedActivityFeed) (*ResFeedActivityFeed, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FeedActivityFeed not implemented")
}
func (*UnimplementedLobbyServer) SendActivityGiftToFriend(context.Context, *ReqSendActivityGiftToFriend) (*ResSendActivityGiftToFriend, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendActivityGiftToFriend not implemented")
}
func (*UnimplementedLobbyServer) ReceiveActivityGift(context.Context, *ReqReceiveActivityGift) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveActivityGift not implemented")
}
func (*UnimplementedLobbyServer) ReceiveAllActivityGift(context.Context, *ReqReceiveAllActivityGift) (*ResReceiveAllActivityGift, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveAllActivityGift not implemented")
}
func (*UnimplementedLobbyServer) FetchFriendGiftActivityData(context.Context, *ReqFetchFriendGiftActivityData) (*ResFetchFriendGiftActivityData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchFriendGiftActivityData not implemented")
}
func (*UnimplementedLobbyServer) OpenPreChestItem(context.Context, *ReqOpenPreChestItem) (*ResOpenPreChestItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPreChestItem not implemented")
}
func (*UnimplementedLobbyServer) FetchVoteActivity(context.Context, *ReqFetchVoteActivity) (*ResFetchVoteActivity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchVoteActivity not implemented")
}
func (*UnimplementedLobbyServer) VoteActivity(context.Context, *ReqVoteActivity) (*ResVoteActivity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteActivity not implemented")
}
func (*UnimplementedLobbyServer) UnlockActivitySpot(context.Context, *ReqUnlockActivitySpot) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockActivitySpot not implemented")
}
func (*UnimplementedLobbyServer) ReceiveActivitySpotReward(context.Context, *ReqReceiveActivitySpotReward) (*ResReceiveActivitySpotReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveActivitySpotReward not implemented")
}
func (*UnimplementedLobbyServer) DeleteAccount(context.Context, *ReqCommon) (*ResDeleteAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccount not implemented")
}
func (*UnimplementedLobbyServer) CancelDeleteAccount(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelDeleteAccount not implemented")
}
func (*UnimplementedLobbyServer) LogReport(context.Context, *ReqLogReport) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogReport not implemented")
}
func (*UnimplementedLobbyServer) BindOauth2(context.Context, *ReqBindOauth2) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindOauth2 not implemented")
}
func (*UnimplementedLobbyServer) FetchOauth2Info(context.Context, *ReqFetchOauth2) (*ResFetchOauth2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchOauth2Info not implemented")
}
func (*UnimplementedLobbyServer) SetLoadingImage(context.Context, *ReqSetLoadingImage) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLoadingImage not implemented")
}
func (*UnimplementedLobbyServer) FetchShopInterval(context.Context, *ReqCommon) (*ResFetchShopInterval, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchShopInterval not implemented")
}
func (*UnimplementedLobbyServer) FetchActivityInterval(context.Context, *ReqCommon) (*ResFetchActivityInterval, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchActivityInterval not implemented")
}
func (*UnimplementedLobbyServer) FetchRecentFriend(context.Context, *ReqCommon) (*ResFetchrecentFriend, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchRecentFriend not implemented")
}
func (*UnimplementedLobbyServer) OpenGacha(context.Context, *ReqOpenGacha) (*ResOpenGacha, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenGacha not implemented")
}
func (*UnimplementedLobbyServer) TaskRequest(context.Context, *ReqTaskRequest) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskRequest not implemented")
}

func RegisterLobbyServer(s *grpc.Server, srv LobbyServer) {
	s.RegisterService(&_Lobby_serviceDesc, srv)
}

func _Lobby_FetchConnectionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchConnectionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchConnectionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchConnectionInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchQueueInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchQueueInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchQueueInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchQueueInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CancelQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CancelQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CancelQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CancelQueue(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenidCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenidCheck)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenidCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenidCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenidCheck(ctx, req.(*ReqOpenidCheck))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSignupAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Signup(ctx, req.(*ReqSignupAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Login(ctx, req.(*ReqLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LoginSuccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LoginSuccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LoginSuccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LoginSuccess(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_EmailLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqEmailLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).EmailLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/EmailLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).EmailLogin(ctx, req.(*ReqEmailLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Oauth2Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOauth2Auth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Oauth2Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Oauth2Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Oauth2Auth(ctx, req.(*ReqOauth2Auth))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Oauth2Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOauth2Check)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Oauth2Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Oauth2Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Oauth2Check(ctx, req.(*ReqOauth2Check))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Oauth2Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOauth2Signup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Oauth2Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Oauth2Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Oauth2Signup(ctx, req.(*ReqOauth2Signup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Oauth2Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOauth2Login)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Oauth2Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Oauth2Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Oauth2Login(ctx, req.(*ReqOauth2Login))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DmmPreLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDMMPreLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DmmPreLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DmmPreLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DmmPreLogin(ctx, req.(*ReqDMMPreLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreatePhoneVerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreatePhoneVerifyCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreatePhoneVerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreatePhoneVerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreatePhoneVerifyCode(ctx, req.(*ReqCreatePhoneVerifyCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateEmailVerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateEmailVerifyCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateEmailVerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateEmailVerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateEmailVerifyCode(ctx, req.(*ReqCreateEmailVerifyCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_VerfifyCodeForSecure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqVerifyCodeForSecure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).VerfifyCodeForSecure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/VerfifyCodeForSecure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).VerfifyCodeForSecure(ctx, req.(*ReqVerifyCodeForSecure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BindPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBindPhoneNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BindPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BindPhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BindPhoneNumber(ctx, req.(*ReqBindPhoneNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UnbindPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUnbindPhoneNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UnbindPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UnbindPhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UnbindPhoneNumber(ctx, req.(*ReqUnbindPhoneNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchPhoneLoginBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchPhoneLoginBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchPhoneLoginBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchPhoneLoginBind(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreatePhoneLoginBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreatePhoneLoginBind)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreatePhoneLoginBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreatePhoneLoginBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreatePhoneLoginBind(ctx, req.(*ReqCreatePhoneLoginBind))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BindEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBindEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BindEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BindEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BindEmail(ctx, req.(*ReqBindEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifyPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifyPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifyPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifyPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifyPassword(ctx, req.(*ReqModifyPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BindAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBindAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BindAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BindAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BindAccount(ctx, req.(*ReqBindAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLogout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Logout(ctx, req.(*ReqLogout))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Heatbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqHeatBeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Heatbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Heatbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Heatbeat(ctx, req.(*ReqHeatBeat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LoginBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLoginBeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LoginBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LoginBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LoginBeat(ctx, req.(*ReqLoginBeat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateNickname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateNickname)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateNickname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateNickname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateNickname(ctx, req.(*ReqCreateNickname))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifyNickname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifyNickname)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifyNickname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifyNickname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifyNickname(ctx, req.(*ReqModifyNickname))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifyBirthday_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifyBirthday)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifyBirthday(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifyBirthday",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifyBirthday(ctx, req.(*ReqModifyBirthday))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRoom(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateRoom(ctx, req.(*ReqCreateRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqJoinRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).JoinRoom(ctx, req.(*ReqJoinRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LeaveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LeaveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LeaveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LeaveRoom(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReadyPlay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRoomReady)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReadyPlay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReadyPlay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReadyPlay(ctx, req.(*ReqRoomReady))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DressingStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRoomDressing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DressingStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DressingStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DressingStatus(ctx, req.(*ReqRoomDressing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_StartRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRoomStart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).StartRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/StartRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).StartRoom(ctx, req.(*ReqRoomStart))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_KickPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRoomKick)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).KickPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/KickPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).KickPlayer(ctx, req.(*ReqRoomKick))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifyRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifyRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifyRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifyRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifyRoom(ctx, req.(*ReqModifyRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_MatchGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqJoinMatchQueue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).MatchGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/MatchGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).MatchGame(ctx, req.(*ReqJoinMatchQueue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CancelMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCancelMatchQueue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CancelMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CancelMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CancelMatch(ctx, req.(*ReqCancelMatchQueue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAccountInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountInfo(ctx, req.(*ReqAccountInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeAvatar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeAvatar(ctx, req.(*ReqChangeAvatar))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveVersionReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveVersionReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveVersionReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveVersionReward(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountStatisticInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAccountStatisticInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountStatisticInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountStatisticInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountStatisticInfo(ctx, req.(*ReqAccountStatisticInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountChallengeRankInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAccountInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountChallengeRankInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountChallengeRankInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountChallengeRankInfo(ctx, req.(*ReqAccountInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountCharacterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountCharacterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountCharacterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountCharacterInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ShopPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqShopPurchase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ShopPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ShopPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ShopPurchase(ctx, req.(*ReqShopPurchase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameRecord(ctx, req.(*ReqGameRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReadGameRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReadGameRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReadGameRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReadGameRecord(ctx, req.(*ReqGameRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameRecordList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecordList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameRecordList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameRecordList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameRecordList(ctx, req.(*ReqGameRecordList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCollectedGameRecordList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCollectedGameRecordList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCollectedGameRecordList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCollectedGameRecordList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameRecordsDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecordsDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameRecordsDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameRecordsDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameRecordsDetail(ctx, req.(*ReqGameRecordsDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_AddCollectedGameRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAddCollectedGameRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).AddCollectedGameRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/AddCollectedGameRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).AddCollectedGameRecord(ctx, req.(*ReqAddCollectedGameRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RemoveCollectedGameRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRemoveCollectedGameRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RemoveCollectedGameRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RemoveCollectedGameRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RemoveCollectedGameRecord(ctx, req.(*ReqRemoveCollectedGameRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeCollectedGameRecordRemarks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeCollectedGameRecordRemarks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeCollectedGameRecordRemarks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeCollectedGameRecordRemarks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeCollectedGameRecordRemarks(ctx, req.(*ReqChangeCollectedGameRecordRemarks))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchLevelLeaderboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLevelLeaderboard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchLevelLeaderboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchLevelLeaderboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchLevelLeaderboard(ctx, req.(*ReqLevelLeaderboard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchChallengeLeaderboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChallangeLeaderboard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchChallengeLeaderboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchChallengeLeaderboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchChallengeLeaderboard(ctx, req.(*ReqChallangeLeaderboard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchMutiChallengeLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqMutiChallengeLevel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchMutiChallengeLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchMutiChallengeLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchMutiChallengeLevel(ctx, req.(*ReqMutiChallengeLevel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchMultiAccountBrief_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqMultiAccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchMultiAccountBrief(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchMultiAccountBrief",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchMultiAccountBrief(ctx, req.(*ReqMultiAccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchFriendList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchFriendList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchFriendList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchFriendList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchFriendApplyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchFriendApplyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchFriendApplyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchFriendApplyList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ApplyFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqApplyFriend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ApplyFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ApplyFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ApplyFriend(ctx, req.(*ReqApplyFriend))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_HandleFriendApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqHandleFriendApply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).HandleFriendApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/HandleFriendApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).HandleFriendApply(ctx, req.(*ReqHandleFriendApply))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RemoveFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRemoveFriend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RemoveFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RemoveFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RemoveFriend(ctx, req.(*ReqRemoveFriend))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SearchAccountById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSearchAccountById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SearchAccountById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SearchAccountById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SearchAccountById(ctx, req.(*ReqSearchAccountById))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SearchAccountByPattern_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSearchAccountByPattern)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SearchAccountByPattern(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SearchAccountByPattern",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SearchAccountByPattern(ctx, req.(*ReqSearchAccountByPattern))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAccountList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountState(ctx, req.(*ReqAccountList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchBagInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchBagInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchBagInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchBagInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UseBagItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUseBagItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UseBagItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UseBagItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UseBagItem(ctx, req.(*ReqUseBagItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenManualItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenManualItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenManualItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenManualItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenManualItem(ctx, req.(*ReqOpenManualItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenRandomRewardItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenRandomRewardItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenRandomRewardItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenRandomRewardItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenRandomRewardItem(ctx, req.(*ReqOpenRandomRewardItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenAllRewardItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenAllRewardItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenAllRewardItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenAllRewardItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenAllRewardItem(ctx, req.(*ReqOpenAllRewardItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ComposeShard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqComposeShard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ComposeShard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ComposeShard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ComposeShard(ctx, req.(*ReqComposeShard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAnnouncement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchAnnouncement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAnnouncement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAnnouncement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAnnouncement(ctx, req.(*ReqFetchAnnouncement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReadAnnouncement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReadAnnouncement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReadAnnouncement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReadAnnouncement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReadAnnouncement(ctx, req.(*ReqReadAnnouncement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchMailInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchMailInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchMailInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchMailInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReadMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReadMail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReadMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReadMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReadMail(ctx, req.(*ReqReadMail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DeleteMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeleteMail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DeleteMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DeleteMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DeleteMail(ctx, req.(*ReqDeleteMail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_TakeAttachmentFromMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTakeAttachment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).TakeAttachmentFromMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/TakeAttachmentFromMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).TakeAttachmentFromMail(ctx, req.(*ReqTakeAttachment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveAchievementReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveAchievementReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveAchievementReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveAchievementReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveAchievementReward(ctx, req.(*ReqReceiveAchievementReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveAchievementGroupReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveAchievementGroupReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveAchievementGroupReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveAchievementGroupReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveAchievementGroupReward(ctx, req.(*ReqReceiveAchievementGroupReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAchievementRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAchievementRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAchievementRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAchievementRate(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAchievement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAchievement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAchievement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAchievement(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyShiLian_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyShiLian)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyShiLian(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyShiLian",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyShiLian(ctx, req.(*ReqBuyShiLian))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_MatchShiLian_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).MatchShiLian(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/MatchShiLian",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).MatchShiLian(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GoNextShiLian_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GoNextShiLian(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GoNextShiLian",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GoNextShiLian(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateClientValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateClientValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateClientValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateClientValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateClientValue(ctx, req.(*ReqUpdateClientValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchClientValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchClientValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchClientValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchClientValue(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ClientMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqClientMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ClientMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ClientMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ClientMessage(ctx, req.(*ReqClientMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCurrentMatchInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCurrentMatchInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCurrentMatchInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCurrentMatchInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCurrentMatchInfo(ctx, req.(*ReqCurrentMatchInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UserComplain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserComplain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UserComplain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UserComplain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UserComplain(ctx, req.(*ReqUserComplain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchReviveCoinInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchReviveCoinInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchReviveCoinInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchReviveCoinInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainReviveCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainReviveCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainReviveCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainReviveCoin(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchDailyTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchDailyTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchDailyTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchDailyTask(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RefreshDailyTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRefreshDailyTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RefreshDailyTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RefreshDailyTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RefreshDailyTask(ctx, req.(*ReqRefreshDailyTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UseGiftCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUseGiftCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UseGiftCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UseGiftCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UseGiftCode(ctx, req.(*ReqUseGiftCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UseSpecialGiftCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUseGiftCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UseSpecialGiftCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UseSpecialGiftCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UseSpecialGiftCode(ctx, req.(*ReqUseGiftCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchTitleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchTitleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchTitleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchTitleList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UseTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUseTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UseTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UseTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UseTitle(ctx, req.(*ReqUseTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SendClientMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSendClientMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SendClientMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SendClientMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SendClientMessage(ctx, req.(*ReqSendClientMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameLiveInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameLiveInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameLiveInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameLiveInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameLiveInfo(ctx, req.(*ReqGameLiveInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameLiveLeftSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameLiveLeftSegment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameLiveLeftSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameLiveLeftSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameLiveLeftSegment(ctx, req.(*ReqGameLiveLeftSegment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameLiveList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameLiveList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameLiveList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameLiveList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameLiveList(ctx, req.(*ReqGameLiveList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommentSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommentSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommentSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommentSetting(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateCommentSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateCommentSetting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateCommentSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateCommentSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateCommentSetting(ctx, req.(*ReqUpdateCommentSetting))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCommentList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommentList(ctx, req.(*ReqFetchCommentList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommentContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCommentContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommentContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommentContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommentContent(ctx, req.(*ReqFetchCommentContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LeaveComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLeaveComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LeaveComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LeaveComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LeaveComment(ctx, req.(*ReqLeaveComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeleteComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DeleteComment(ctx, req.(*ReqDeleteComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateReadComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateReadComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateReadComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateReadComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateReadComment(ctx, req.(*ReqUpdateReadComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRollingNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRollingNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRollingNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRollingNotice(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchServerTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchServerTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchServerTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchServerTime(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchPlatformProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqPlatformBillingProducts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchPlatformProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchPlatformProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchPlatformProducts(ctx, req.(*ReqPlatformBillingProducts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CancelGooglePlayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCancelGooglePlayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CancelGooglePlayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CancelGooglePlayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CancelGooglePlayOrder(ctx, req.(*ReqCancelGooglePlayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenChest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenChest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenChest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenChest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenChest(ctx, req.(*ReqOpenChest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyFromChestShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyFromChestShop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyFromChestShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyFromChestShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyFromChestShop(ctx, req.(*ReqBuyFromChestShop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchDailySignInInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchDailySignInInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchDailySignInInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchDailySignInInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DoDailySignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DoDailySignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DoDailySignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DoDailySignIn(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DoActivitySignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDoActivitySignIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DoActivitySignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DoActivitySignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DoActivitySignIn(ctx, req.(*ReqDoActivitySignIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCharacterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCharacterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCharacterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCharacterInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateCharacterSort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateCharacterSort)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateCharacterSort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateCharacterSort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateCharacterSort(ctx, req.(*ReqUpdateCharacterSort))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeMainCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeMainCharacter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeMainCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeMainCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeMainCharacter(ctx, req.(*ReqChangeMainCharacter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeCharacterSkin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeCharacterSkin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeCharacterSkin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeCharacterSkin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeCharacterSkin(ctx, req.(*ReqChangeCharacterSkin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeCharacterView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeCharacterView)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeCharacterView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeCharacterView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeCharacterView(ctx, req.(*ReqChangeCharacterView))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SetHiddenCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetHiddenCharacter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SetHiddenCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SetHiddenCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SetHiddenCharacter(ctx, req.(*ReqSetHiddenCharacter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SendGiftToCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSendGiftToCharacter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SendGiftToCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SendGiftToCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SendGiftToCharacter(ctx, req.(*ReqSendGiftToCharacter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SellItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSellItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SellItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SellItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SellItem(ctx, req.(*ReqSellItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommonView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommonView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommonView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommonView(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeCommonView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeCommonView)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeCommonView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeCommonView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeCommonView(ctx, req.(*ReqChangeCommonView))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SaveCommonViews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSaveCommonViews)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SaveCommonViews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SaveCommonViews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SaveCommonViews(ctx, req.(*ReqSaveCommonViews))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommonViews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommonViews)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommonViews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommonViews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommonViews(ctx, req.(*ReqCommonViews))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAllCommonViews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAllCommonViews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAllCommonViews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAllCommonViews(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UseCommonView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUseCommonView)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UseCommonView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UseCommonView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UseCommonView(ctx, req.(*ReqUseCommonView))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpgradeCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpgradeCharacter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpgradeCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpgradeCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpgradeCharacter(ctx, req.(*ReqUpgradeCharacter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_AddFinishedEnding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFinishedEnding)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).AddFinishedEnding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/AddFinishedEnding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).AddFinishedEnding(ctx, req.(*ReqFinishedEnding))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveEndingReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFinishedEnding)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveEndingReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveEndingReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveEndingReward(ctx, req.(*ReqFinishedEnding))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GameMasterCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGMCommand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GameMasterCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GameMasterCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GameMasterCommand(ctx, req.(*ReqGMCommand))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchShopInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchShopInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchShopInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchShopInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyFromShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyFromShop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyFromShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyFromShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyFromShop(ctx, req.(*ReqBuyFromShop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyFromZHP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyFromZHP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyFromZHP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyFromZHP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyFromZHP(ctx, req.(*ReqBuyFromZHP))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RefreshZHPShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReshZHPShop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RefreshZHPShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RefreshZHPShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RefreshZHPShop(ctx, req.(*ReqReshZHPShop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchMonthTicketInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchMonthTicketInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchMonthTicketInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchMonthTicketInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_PayMonthTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqPayMonthTicket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).PayMonthTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/PayMonthTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).PayMonthTicket(ctx, req.(*ReqPayMonthTicket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ExchangeCurrency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqExchangeCurrency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ExchangeCurrency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ExchangeCurrency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ExchangeCurrency(ctx, req.(*ReqExchangeCurrency))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ExchangeChestStone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqExchangeCurrency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ExchangeChestStone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ExchangeChestStone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ExchangeChestStone(ctx, req.(*ReqExchangeCurrency))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ExchangeDiamond_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqExchangeCurrency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ExchangeDiamond(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ExchangeDiamond",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ExchangeDiamond(ctx, req.(*ReqExchangeCurrency))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchServerSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchServerSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchServerSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchServerSettings(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountSettings(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateAccountSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateAccountSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateAccountSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateAccountSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateAccountSettings(ctx, req.(*ReqUpdateAccountSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchModNicknameTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchModNicknameTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchModNicknameTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchModNicknameTime(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateWechatNativeOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateWechatNativeOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateWechatNativeOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateWechatNativeOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateWechatNativeOrder(ctx, req.(*ReqCreateWechatNativeOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateWechatAppOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateWechatAppOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateWechatAppOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateWechatAppOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateWechatAppOrder(ctx, req.(*ReqCreateWechatAppOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateAlipayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateAlipayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateAlipayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateAlipayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateAlipayOrder(ctx, req.(*ReqCreateAlipayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateAlipayScanOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateAlipayScanOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateAlipayScanOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateAlipayScanOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateAlipayScanOrder(ctx, req.(*ReqCreateAlipayScanOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateAlipayAppOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateAlipayAppOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateAlipayAppOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateAlipayAppOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateAlipayAppOrder(ctx, req.(*ReqCreateAlipayAppOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPCreditCardOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPCreditCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPCreditCardOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPCreditCardOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPCreditCardOrder(ctx, req.(*ReqCreateJPCreditCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPPaypalOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPPaypalOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPPaypalOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPPaypalOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPPaypalOrder(ctx, req.(*ReqCreateJPPaypalOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPAuOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPAuOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPAuOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPAuOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPAuOrder(ctx, req.(*ReqCreateJPAuOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPDocomoOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPDocomoOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPDocomoOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPDocomoOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPDocomoOrder(ctx, req.(*ReqCreateJPDocomoOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPWebMoneyOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPWebMoneyOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPWebMoneyOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPWebMoneyOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPWebMoneyOrder(ctx, req.(*ReqCreateJPWebMoneyOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPSoftbankOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPSoftbankOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPSoftbankOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPSoftbankOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPSoftbankOrder(ctx, req.(*ReqCreateJPSoftbankOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPPayPayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPPayPayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPPayPayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPPayPayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPPayPayOrder(ctx, req.(*ReqCreateJPPayPayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchJPCommonCreditCardOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchJPCommonCreditCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchJPCommonCreditCardOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchJPCommonCreditCardOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchJPCommonCreditCardOrder(ctx, req.(*ReqFetchJPCommonCreditCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENPaypalOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENPaypalOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENPaypalOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENPaypalOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENPaypalOrder(ctx, req.(*ReqCreateENPaypalOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENMasterCardOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENMasterCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENMasterCardOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENMasterCardOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENMasterCardOrder(ctx, req.(*ReqCreateENMasterCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENVisaOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENVisaOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENVisaOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENVisaOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENVisaOrder(ctx, req.(*ReqCreateENVisaOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENJCBOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENJCBOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENJCBOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENJCBOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENJCBOrder(ctx, req.(*ReqCreateENJCBOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENAlipayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENAlipayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENAlipayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENAlipayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENAlipayOrder(ctx, req.(*ReqCreateENAlipayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateKRPaypalOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateKRPaypalOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateKRPaypalOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateKRPaypalOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateKRPaypalOrder(ctx, req.(*ReqCreateKRPaypalOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateKRMasterCardOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateKRMasterCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateKRMasterCardOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateKRMasterCardOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateKRMasterCardOrder(ctx, req.(*ReqCreateKRMasterCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateKRVisaOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateKRVisaOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateKRVisaOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateKRVisaOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateKRVisaOrder(ctx, req.(*ReqCreateKRVisaOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateKRJCBOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateKRJCBOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateKRJCBOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateKRJCBOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateKRJCBOrder(ctx, req.(*ReqCreateKRJCBOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateKRAlipayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateKRAlipayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateKRAlipayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateKRAlipayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateKRAlipayOrder(ctx, req.(*ReqCreateKRAlipayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateDMMOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateDMMOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateDMMOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateDMMOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateDMMOrder(ctx, req.(*ReqCreateDMMOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateIAPOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateIAPOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateIAPOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateIAPOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateIAPOrder(ctx, req.(*ReqCreateIAPOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateSteamOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateSteamOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateSteamOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateSteamOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateSteamOrder(ctx, req.(*ReqCreateSteamOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_VerifySteamOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqVerifySteamOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).VerifySteamOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/VerifySteamOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).VerifySteamOrder(ctx, req.(*ReqVerifySteamOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateMyCardAndroidOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateMyCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateMyCardAndroidOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateMyCardAndroidOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateMyCardAndroidOrder(ctx, req.(*ReqCreateMyCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateMyCardWebOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateMyCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateMyCardWebOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateMyCardWebOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateMyCardWebOrder(ctx, req.(*ReqCreateMyCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreatePaypalOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreatePaypalOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreatePaypalOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreatePaypalOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreatePaypalOrder(ctx, req.(*ReqCreatePaypalOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateXsollaOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateXsollaOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateXsollaOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateXsollaOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateXsollaOrder(ctx, req.(*ReqCreateXsollaOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_VerifyMyCardOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqVerifyMyCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).VerifyMyCardOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/VerifyMyCardOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).VerifyMyCardOrder(ctx, req.(*ReqVerifyMyCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_VerificationIAPOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqVerificationIAPOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).VerificationIAPOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/VerificationIAPOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).VerificationIAPOrder(ctx, req.(*ReqVerificationIAPOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateYostarSDKOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateYostarOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateYostarSDKOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateYostarSDKOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateYostarSDKOrder(ctx, req.(*ReqCreateYostarOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateBillingOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateBillingOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateBillingOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateBillingOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateBillingOrder(ctx, req.(*ReqCreateBillingOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SolveGooglePlayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSolveGooglePlayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SolveGooglePlayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SolveGooglePlayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SolveGooglePlayOrder(ctx, req.(*ReqSolveGooglePlayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SolveGooglePayOrderV3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSolveGooglePlayOrderV3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SolveGooglePayOrderV3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SolveGooglePayOrderV3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SolveGooglePayOrderV3(ctx, req.(*ReqSolveGooglePlayOrderV3))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DeliverAA32Order_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeliverAA32Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DeliverAA32Order(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DeliverAA32Order",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DeliverAA32Order(ctx, req.(*ReqDeliverAA32Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchMisc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchMisc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchMisc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchMisc(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifySignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifySignature)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifySignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifySignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifySignature(ctx, req.(*ReqModifySignature))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchIDCardInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchIDCardInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchIDCardInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchIDCardInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateIDCardInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateIDCardInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateIDCardInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateIDCardInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateIDCardInfo(ctx, req.(*ReqUpdateIDCardInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchVipReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchVipReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchVipReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchVipReward(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainVipReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGainVipReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainVipReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainVipReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainVipReward(ctx, req.(*ReqGainVipReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRefundOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRefundOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRefundOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRefundOrder(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestList(ctx, req.(*ReqFetchCustomizedContestList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestExtendInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestExtendInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestExtendInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestExtendInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestExtendInfo(ctx, req.(*ReqFetchCustomizedContestExtendInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestAuthInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestAuthInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestAuthInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestAuthInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestAuthInfo(ctx, req.(*ReqFetchCustomizedContestAuthInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_EnterCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqEnterCustomizedContest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).EnterCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/EnterCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).EnterCustomizedContest(ctx, req.(*ReqEnterCustomizedContest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LeaveCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LeaveCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LeaveCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LeaveCustomizedContest(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestOnlineInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestOnlineInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestOnlineInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestOnlineInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestOnlineInfo(ctx, req.(*ReqFetchCustomizedContestOnlineInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestByContestId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestByContestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestByContestId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestByContestId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestByContestId(ctx, req.(*ReqFetchCustomizedContestByContestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_StartCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqStartCustomizedContest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).StartCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/StartCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).StartCustomizedContest(ctx, req.(*ReqStartCustomizedContest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_StopCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).StopCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/StopCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).StopCustomizedContest(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_JoinCustomizedContestChatRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqJoinCustomizedContestChatRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).JoinCustomizedContestChatRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/JoinCustomizedContestChatRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).JoinCustomizedContestChatRoom(ctx, req.(*ReqJoinCustomizedContestChatRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LeaveCustomizedContestChatRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LeaveCustomizedContestChatRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LeaveCustomizedContestChatRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LeaveCustomizedContestChatRoom(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SayChatMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSayChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SayChatMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SayChatMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SayChatMessage(ctx, req.(*ReqSayChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestGameRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestGameRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestGameRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestGameRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestGameRecords(ctx, req.(*ReqFetchCustomizedContestGameRecords))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestGameLiveList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestGameLiveList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestGameLiveList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestGameLiveList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestGameLiveList(ctx, req.(*ReqFetchCustomizedContestGameLiveList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FollowCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTargetCustomizedContest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FollowCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FollowCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FollowCustomizedContest(ctx, req.(*ReqTargetCustomizedContest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UnfollowCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTargetCustomizedContest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UnfollowCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UnfollowCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UnfollowCustomizedContest(ctx, req.(*ReqTargetCustomizedContest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchActivityList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchActivityList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchActivityList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchActivityList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountActivityData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountActivityData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountActivityData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountActivityData(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ExchangeActivityItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqExchangeActivityItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ExchangeActivityItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ExchangeActivityItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ExchangeActivityItem(ctx, req.(*ReqExchangeActivityItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CompleteActivityTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCompleteActivityTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CompleteActivityTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CompleteActivityTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CompleteActivityTask(ctx, req.(*ReqCompleteActivityTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CompleteActivityFlipTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCompleteActivityTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CompleteActivityFlipTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CompleteActivityFlipTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CompleteActivityFlipTask(ctx, req.(*ReqCompleteActivityTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CompletePeriodActivityTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCompleteActivityTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CompletePeriodActivityTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CompletePeriodActivityTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CompletePeriodActivityTask(ctx, req.(*ReqCompleteActivityTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CompletePeriodActivityTaskBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCompletePeriodActivityTaskBatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CompletePeriodActivityTaskBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CompletePeriodActivityTaskBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CompletePeriodActivityTaskBatch(ctx, req.(*ReqCompletePeriodActivityTaskBatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CompleteRandomActivityTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCompleteActivityTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CompleteRandomActivityTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CompleteRandomActivityTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CompleteRandomActivityTask(ctx, req.(*ReqCompleteActivityTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveActivityFlipTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveActivityFlipTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveActivityFlipTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveActivityFlipTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveActivityFlipTask(ctx, req.(*ReqReceiveActivityFlipTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CompleteSegmentTaskReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCompleteSegmentTaskReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CompleteSegmentTaskReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CompleteSegmentTaskReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CompleteSegmentTaskReward(ctx, req.(*ReqCompleteSegmentTaskReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchActivityFlipInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchActivityFlipInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchActivityFlipInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchActivityFlipInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchActivityFlipInfo(ctx, req.(*ReqFetchActivityFlipInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainAccumulatedPointActivityReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGainAccumulatedPointActivityReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainAccumulatedPointActivityReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainAccumulatedPointActivityReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainAccumulatedPointActivityReward(ctx, req.(*ReqGainAccumulatedPointActivityReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainMultiPointActivityReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGainMultiPointActivityReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainMultiPointActivityReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainMultiPointActivityReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainMultiPointActivityReward(ctx, req.(*ReqGainMultiPointActivityReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRankPointLeaderboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchRankPointLeaderboard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRankPointLeaderboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRankPointLeaderboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRankPointLeaderboard(ctx, req.(*ReqFetchRankPointLeaderboard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainRankPointReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGainRankPointReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainRankPointReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainRankPointReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainRankPointReward(ctx, req.(*ReqGainRankPointReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RichmanActivityNextMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRichmanNextMove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RichmanActivityNextMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RichmanActivityNextMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RichmanActivityNextMove(ctx, req.(*ReqRichmanNextMove))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RichmanAcitivitySpecialMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRichmanSpecialMove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RichmanAcitivitySpecialMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RichmanAcitivitySpecialMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RichmanAcitivitySpecialMove(ctx, req.(*ReqRichmanSpecialMove))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RichmanActivityChestInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRichmanChestInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RichmanActivityChestInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RichmanActivityChestInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RichmanActivityChestInfo(ctx, req.(*ReqRichmanChestInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateGameObserveAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateGameObserveAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateGameObserveAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateGameObserveAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateGameObserveAuth(ctx, req.(*ReqCreateGameObserveAuth))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RefreshGameObserveAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRefreshGameObserveAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RefreshGameObserveAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RefreshGameObserveAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RefreshGameObserveAuth(ctx, req.(*ReqRefreshGameObserveAuth))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchActivityBuff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchActivityBuff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchActivityBuff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchActivityBuff(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpgradeActivityBuff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpgradeActivityBuff)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpgradeActivityBuff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpgradeActivityBuff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpgradeActivityBuff(ctx, req.(*ReqUpgradeActivityBuff))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpgradeActivityLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpgradeActivityLevel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpgradeActivityLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpgradeActivityLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpgradeActivityLevel(ctx, req.(*ReqUpgradeActivityLevel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveUpgradeActivityReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveUpgradeActivityReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveUpgradeActivityReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveUpgradeActivityReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveUpgradeActivityReward(ctx, req.(*ReqReceiveUpgradeActivityReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpgradeChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpgradeChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpgradeChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpgradeChallenge(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RefreshChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RefreshChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RefreshChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RefreshChallenge(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchChallengeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchChallengeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchChallengeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchChallengeInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ForceCompleteChallengeTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqForceCompleteChallengeTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ForceCompleteChallengeTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ForceCompleteChallengeTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ForceCompleteChallengeTask(ctx, req.(*ReqForceCompleteChallengeTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchChallengeSeason_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchChallengeSeason(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchChallengeSeason",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchChallengeSeason(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveChallengeRankReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveChallengeRankReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveChallengeRankReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveChallengeRankReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveChallengeRankReward(ctx, req.(*ReqReceiveChallengeRankReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchABMatchInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchABMatchInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchABMatchInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchABMatchInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyInABMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyInABMatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyInABMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyInABMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyInABMatch(ctx, req.(*ReqBuyInABMatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveABMatchReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveABMatchReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveABMatchReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveABMatchReward(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_QuitABMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).QuitABMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/QuitABMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).QuitABMatch(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_StartUnifiedMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqStartUnifiedMatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).StartUnifiedMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/StartUnifiedMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).StartUnifiedMatch(ctx, req.(*ReqStartUnifiedMatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CancelUnifiedMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCancelUnifiedMatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CancelUnifiedMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CancelUnifiedMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CancelUnifiedMatch(ctx, req.(*ReqCancelUnifiedMatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGamePointRank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGamePointRank)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGamePointRank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGamePointRank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGamePointRank(ctx, req.(*ReqGamePointRank))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchSelfGamePointRank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGamePointRank)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchSelfGamePointRank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchSelfGamePointRank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchSelfGamePointRank(ctx, req.(*ReqGamePointRank))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReadSNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReadSNS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReadSNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReadSNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReadSNS(ctx, req.(*ReqReadSNS))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReplySNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReplySNS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReplySNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReplySNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReplySNS(ctx, req.(*ReqReplySNS))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LikeSNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLikeSNS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LikeSNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LikeSNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LikeSNS(ctx, req.(*ReqLikeSNS))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DigMine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDigMine)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DigMine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DigMine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DigMine(ctx, req.(*ReqDigMine))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchLastPrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchLastPrivacy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchLastPrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchLastPrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchLastPrivacy(ctx, req.(*ReqFetchLastPrivacy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CheckPrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCheckPrivacy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CheckPrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CheckPrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CheckPrivacy(ctx, req.(*ReqCheckPrivacy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ResponseCaptcha_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqResponseCaptcha)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ResponseCaptcha(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ResponseCaptcha",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ResponseCaptcha(ctx, req.(*ReqResponseCaptcha))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRPGBattleHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchRPGBattleHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRPGBattleHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRPGBattleHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRPGBattleHistory(ctx, req.(*ReqFetchRPGBattleHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRPGBattleHistoryV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchRPGBattleHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRPGBattleHistoryV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRPGBattleHistoryV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRPGBattleHistoryV2(ctx, req.(*ReqFetchRPGBattleHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveRPGRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveRPGRewards)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveRPGRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveRPGRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveRPGRewards(ctx, req.(*ReqReceiveRPGRewards))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveRPGReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveRPGReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveRPGReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveRPGReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveRPGReward(ctx, req.(*ReqReceiveRPGReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyArenaTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyArenaTicket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyArenaTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyArenaTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyArenaTicket(ctx, req.(*ReqBuyArenaTicket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_EnterArena_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqEnterArena)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).EnterArena(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/EnterArena",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).EnterArena(ctx, req.(*ReqEnterArena))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveArenaReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqArenaReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveArenaReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveArenaReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveArenaReward(ctx, req.(*ReqArenaReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchOBToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchOBToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchOBToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchOBToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchOBToken(ctx, req.(*ReqFetchOBToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveCharacterRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveCharacterRewards)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveCharacterRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveCharacterRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveCharacterRewards(ctx, req.(*ReqReceiveCharacterRewards))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FeedActivityFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFeedActivityFeed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FeedActivityFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FeedActivityFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FeedActivityFeed(ctx, req.(*ReqFeedActivityFeed))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SendActivityGiftToFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSendActivityGiftToFriend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SendActivityGiftToFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SendActivityGiftToFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SendActivityGiftToFriend(ctx, req.(*ReqSendActivityGiftToFriend))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveActivityGift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveActivityGift)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveActivityGift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveActivityGift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveActivityGift(ctx, req.(*ReqReceiveActivityGift))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveAllActivityGift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveAllActivityGift)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveAllActivityGift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveAllActivityGift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveAllActivityGift(ctx, req.(*ReqReceiveAllActivityGift))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchFriendGiftActivityData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchFriendGiftActivityData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchFriendGiftActivityData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchFriendGiftActivityData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchFriendGiftActivityData(ctx, req.(*ReqFetchFriendGiftActivityData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenPreChestItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenPreChestItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenPreChestItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenPreChestItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenPreChestItem(ctx, req.(*ReqOpenPreChestItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchVoteActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchVoteActivity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchVoteActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchVoteActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchVoteActivity(ctx, req.(*ReqFetchVoteActivity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_VoteActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqVoteActivity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).VoteActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/VoteActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).VoteActivity(ctx, req.(*ReqVoteActivity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UnlockActivitySpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUnlockActivitySpot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UnlockActivitySpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UnlockActivitySpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UnlockActivitySpot(ctx, req.(*ReqUnlockActivitySpot))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReceiveActivitySpotReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReceiveActivitySpotReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReceiveActivitySpotReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReceiveActivitySpotReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReceiveActivitySpotReward(ctx, req.(*ReqReceiveActivitySpotReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DeleteAccount(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CancelDeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CancelDeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CancelDeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CancelDeleteAccount(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LogReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLogReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LogReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LogReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LogReport(ctx, req.(*ReqLogReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BindOauth2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBindOauth2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BindOauth2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BindOauth2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BindOauth2(ctx, req.(*ReqBindOauth2))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchOauth2Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchOauth2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchOauth2Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchOauth2Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchOauth2Info(ctx, req.(*ReqFetchOauth2))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SetLoadingImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetLoadingImage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SetLoadingImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SetLoadingImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SetLoadingImage(ctx, req.(*ReqSetLoadingImage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchShopInterval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchShopInterval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchShopInterval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchShopInterval(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchActivityInterval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchActivityInterval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchActivityInterval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchActivityInterval(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRecentFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRecentFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRecentFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRecentFriend(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenGacha_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenGacha)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenGacha(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenGacha",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenGacha(ctx, req.(*ReqOpenGacha))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_TaskRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).TaskRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/TaskRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).TaskRequest(ctx, req.(*ReqTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lobby_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lq.Lobby",
	HandlerType: (*LobbyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "fetchConnectionInfo",
			Handler:    _Lobby_FetchConnectionInfo_Handler,
		},
		{
			MethodName: "fetchQueueInfo",
			Handler:    _Lobby_FetchQueueInfo_Handler,
		},
		{
			MethodName: "cancelQueue",
			Handler:    _Lobby_CancelQueue_Handler,
		},
		{
			MethodName: "openidCheck",
			Handler:    _Lobby_OpenidCheck_Handler,
		},
		{
			MethodName: "signup",
			Handler:    _Lobby_Signup_Handler,
		},
		{
			MethodName: "login",
			Handler:    _Lobby_Login_Handler,
		},
		{
			MethodName: "loginSuccess",
			Handler:    _Lobby_LoginSuccess_Handler,
		},
		{
			MethodName: "emailLogin",
			Handler:    _Lobby_EmailLogin_Handler,
		},
		{
			MethodName: "oauth2Auth",
			Handler:    _Lobby_Oauth2Auth_Handler,
		},
		{
			MethodName: "oauth2Check",
			Handler:    _Lobby_Oauth2Check_Handler,
		},
		{
			MethodName: "oauth2Signup",
			Handler:    _Lobby_Oauth2Signup_Handler,
		},
		{
			MethodName: "oauth2Login",
			Handler:    _Lobby_Oauth2Login_Handler,
		},
		{
			MethodName: "dmmPreLogin",
			Handler:    _Lobby_DmmPreLogin_Handler,
		},
		{
			MethodName: "createPhoneVerifyCode",
			Handler:    _Lobby_CreatePhoneVerifyCode_Handler,
		},
		{
			MethodName: "createEmailVerifyCode",
			Handler:    _Lobby_CreateEmailVerifyCode_Handler,
		},
		{
			MethodName: "verfifyCodeForSecure",
			Handler:    _Lobby_VerfifyCodeForSecure_Handler,
		},
		{
			MethodName: "bindPhoneNumber",
			Handler:    _Lobby_BindPhoneNumber_Handler,
		},
		{
			MethodName: "unbindPhoneNumber",
			Handler:    _Lobby_UnbindPhoneNumber_Handler,
		},
		{
			MethodName: "fetchPhoneLoginBind",
			Handler:    _Lobby_FetchPhoneLoginBind_Handler,
		},
		{
			MethodName: "createPhoneLoginBind",
			Handler:    _Lobby_CreatePhoneLoginBind_Handler,
		},
		{
			MethodName: "bindEmail",
			Handler:    _Lobby_BindEmail_Handler,
		},
		{
			MethodName: "modifyPassword",
			Handler:    _Lobby_ModifyPassword_Handler,
		},
		{
			MethodName: "bindAccount",
			Handler:    _Lobby_BindAccount_Handler,
		},
		{
			MethodName: "logout",
			Handler:    _Lobby_Logout_Handler,
		},
		{
			MethodName: "heatbeat",
			Handler:    _Lobby_Heatbeat_Handler,
		},
		{
			MethodName: "loginBeat",
			Handler:    _Lobby_LoginBeat_Handler,
		},
		{
			MethodName: "createNickname",
			Handler:    _Lobby_CreateNickname_Handler,
		},
		{
			MethodName: "modifyNickname",
			Handler:    _Lobby_ModifyNickname_Handler,
		},
		{
			MethodName: "modifyBirthday",
			Handler:    _Lobby_ModifyBirthday_Handler,
		},
		{
			MethodName: "fetchRoom",
			Handler:    _Lobby_FetchRoom_Handler,
		},
		{
			MethodName: "createRoom",
			Handler:    _Lobby_CreateRoom_Handler,
		},
		{
			MethodName: "joinRoom",
			Handler:    _Lobby_JoinRoom_Handler,
		},
		{
			MethodName: "leaveRoom",
			Handler:    _Lobby_LeaveRoom_Handler,
		},
		{
			MethodName: "readyPlay",
			Handler:    _Lobby_ReadyPlay_Handler,
		},
		{
			MethodName: "dressingStatus",
			Handler:    _Lobby_DressingStatus_Handler,
		},
		{
			MethodName: "startRoom",
			Handler:    _Lobby_StartRoom_Handler,
		},
		{
			MethodName: "kickPlayer",
			Handler:    _Lobby_KickPlayer_Handler,
		},
		{
			MethodName: "modifyRoom",
			Handler:    _Lobby_ModifyRoom_Handler,
		},
		{
			MethodName: "matchGame",
			Handler:    _Lobby_MatchGame_Handler,
		},
		{
			MethodName: "cancelMatch",
			Handler:    _Lobby_CancelMatch_Handler,
		},
		{
			MethodName: "fetchAccountInfo",
			Handler:    _Lobby_FetchAccountInfo_Handler,
		},
		{
			MethodName: "changeAvatar",
			Handler:    _Lobby_ChangeAvatar_Handler,
		},
		{
			MethodName: "receiveVersionReward",
			Handler:    _Lobby_ReceiveVersionReward_Handler,
		},
		{
			MethodName: "fetchAccountStatisticInfo",
			Handler:    _Lobby_FetchAccountStatisticInfo_Handler,
		},
		{
			MethodName: "fetchAccountChallengeRankInfo",
			Handler:    _Lobby_FetchAccountChallengeRankInfo_Handler,
		},
		{
			MethodName: "fetchAccountCharacterInfo",
			Handler:    _Lobby_FetchAccountCharacterInfo_Handler,
		},
		{
			MethodName: "shopPurchase",
			Handler:    _Lobby_ShopPurchase_Handler,
		},
		{
			MethodName: "fetchGameRecord",
			Handler:    _Lobby_FetchGameRecord_Handler,
		},
		{
			MethodName: "readGameRecord",
			Handler:    _Lobby_ReadGameRecord_Handler,
		},
		{
			MethodName: "fetchGameRecordList",
			Handler:    _Lobby_FetchGameRecordList_Handler,
		},
		{
			MethodName: "fetchCollectedGameRecordList",
			Handler:    _Lobby_FetchCollectedGameRecordList_Handler,
		},
		{
			MethodName: "fetchGameRecordsDetail",
			Handler:    _Lobby_FetchGameRecordsDetail_Handler,
		},
		{
			MethodName: "addCollectedGameRecord",
			Handler:    _Lobby_AddCollectedGameRecord_Handler,
		},
		{
			MethodName: "removeCollectedGameRecord",
			Handler:    _Lobby_RemoveCollectedGameRecord_Handler,
		},
		{
			MethodName: "changeCollectedGameRecordRemarks",
			Handler:    _Lobby_ChangeCollectedGameRecordRemarks_Handler,
		},
		{
			MethodName: "fetchLevelLeaderboard",
			Handler:    _Lobby_FetchLevelLeaderboard_Handler,
		},
		{
			MethodName: "fetchChallengeLeaderboard",
			Handler:    _Lobby_FetchChallengeLeaderboard_Handler,
		},
		{
			MethodName: "fetchMutiChallengeLevel",
			Handler:    _Lobby_FetchMutiChallengeLevel_Handler,
		},
		{
			MethodName: "fetchMultiAccountBrief",
			Handler:    _Lobby_FetchMultiAccountBrief_Handler,
		},
		{
			MethodName: "fetchFriendList",
			Handler:    _Lobby_FetchFriendList_Handler,
		},
		{
			MethodName: "fetchFriendApplyList",
			Handler:    _Lobby_FetchFriendApplyList_Handler,
		},
		{
			MethodName: "applyFriend",
			Handler:    _Lobby_ApplyFriend_Handler,
		},
		{
			MethodName: "handleFriendApply",
			Handler:    _Lobby_HandleFriendApply_Handler,
		},
		{
			MethodName: "removeFriend",
			Handler:    _Lobby_RemoveFriend_Handler,
		},
		{
			MethodName: "searchAccountById",
			Handler:    _Lobby_SearchAccountById_Handler,
		},
		{
			MethodName: "searchAccountByPattern",
			Handler:    _Lobby_SearchAccountByPattern_Handler,
		},
		{
			MethodName: "fetchAccountState",
			Handler:    _Lobby_FetchAccountState_Handler,
		},
		{
			MethodName: "fetchBagInfo",
			Handler:    _Lobby_FetchBagInfo_Handler,
		},
		{
			MethodName: "useBagItem",
			Handler:    _Lobby_UseBagItem_Handler,
		},
		{
			MethodName: "openManualItem",
			Handler:    _Lobby_OpenManualItem_Handler,
		},
		{
			MethodName: "openRandomRewardItem",
			Handler:    _Lobby_OpenRandomRewardItem_Handler,
		},
		{
			MethodName: "openAllRewardItem",
			Handler:    _Lobby_OpenAllRewardItem_Handler,
		},
		{
			MethodName: "composeShard",
			Handler:    _Lobby_ComposeShard_Handler,
		},
		{
			MethodName: "fetchAnnouncement",
			Handler:    _Lobby_FetchAnnouncement_Handler,
		},
		{
			MethodName: "readAnnouncement",
			Handler:    _Lobby_ReadAnnouncement_Handler,
		},
		{
			MethodName: "fetchMailInfo",
			Handler:    _Lobby_FetchMailInfo_Handler,
		},
		{
			MethodName: "readMail",
			Handler:    _Lobby_ReadMail_Handler,
		},
		{
			MethodName: "deleteMail",
			Handler:    _Lobby_DeleteMail_Handler,
		},
		{
			MethodName: "takeAttachmentFromMail",
			Handler:    _Lobby_TakeAttachmentFromMail_Handler,
		},
		{
			MethodName: "receiveAchievementReward",
			Handler:    _Lobby_ReceiveAchievementReward_Handler,
		},
		{
			MethodName: "receiveAchievementGroupReward",
			Handler:    _Lobby_ReceiveAchievementGroupReward_Handler,
		},
		{
			MethodName: "fetchAchievementRate",
			Handler:    _Lobby_FetchAchievementRate_Handler,
		},
		{
			MethodName: "fetchAchievement",
			Handler:    _Lobby_FetchAchievement_Handler,
		},
		{
			MethodName: "buyShiLian",
			Handler:    _Lobby_BuyShiLian_Handler,
		},
		{
			MethodName: "matchShiLian",
			Handler:    _Lobby_MatchShiLian_Handler,
		},
		{
			MethodName: "goNextShiLian",
			Handler:    _Lobby_GoNextShiLian_Handler,
		},
		{
			MethodName: "updateClientValue",
			Handler:    _Lobby_UpdateClientValue_Handler,
		},
		{
			MethodName: "fetchClientValue",
			Handler:    _Lobby_FetchClientValue_Handler,
		},
		{
			MethodName: "clientMessage",
			Handler:    _Lobby_ClientMessage_Handler,
		},
		{
			MethodName: "fetchCurrentMatchInfo",
			Handler:    _Lobby_FetchCurrentMatchInfo_Handler,
		},
		{
			MethodName: "userComplain",
			Handler:    _Lobby_UserComplain_Handler,
		},
		{
			MethodName: "fetchReviveCoinInfo",
			Handler:    _Lobby_FetchReviveCoinInfo_Handler,
		},
		{
			MethodName: "gainReviveCoin",
			Handler:    _Lobby_GainReviveCoin_Handler,
		},
		{
			MethodName: "fetchDailyTask",
			Handler:    _Lobby_FetchDailyTask_Handler,
		},
		{
			MethodName: "refreshDailyTask",
			Handler:    _Lobby_RefreshDailyTask_Handler,
		},
		{
			MethodName: "useGiftCode",
			Handler:    _Lobby_UseGiftCode_Handler,
		},
		{
			MethodName: "useSpecialGiftCode",
			Handler:    _Lobby_UseSpecialGiftCode_Handler,
		},
		{
			MethodName: "fetchTitleList",
			Handler:    _Lobby_FetchTitleList_Handler,
		},
		{
			MethodName: "useTitle",
			Handler:    _Lobby_UseTitle_Handler,
		},
		{
			MethodName: "sendClientMessage",
			Handler:    _Lobby_SendClientMessage_Handler,
		},
		{
			MethodName: "fetchGameLiveInfo",
			Handler:    _Lobby_FetchGameLiveInfo_Handler,
		},
		{
			MethodName: "fetchGameLiveLeftSegment",
			Handler:    _Lobby_FetchGameLiveLeftSegment_Handler,
		},
		{
			MethodName: "fetchGameLiveList",
			Handler:    _Lobby_FetchGameLiveList_Handler,
		},
		{
			MethodName: "fetchCommentSetting",
			Handler:    _Lobby_FetchCommentSetting_Handler,
		},
		{
			MethodName: "updateCommentSetting",
			Handler:    _Lobby_UpdateCommentSetting_Handler,
		},
		{
			MethodName: "fetchCommentList",
			Handler:    _Lobby_FetchCommentList_Handler,
		},
		{
			MethodName: "fetchCommentContent",
			Handler:    _Lobby_FetchCommentContent_Handler,
		},
		{
			MethodName: "leaveComment",
			Handler:    _Lobby_LeaveComment_Handler,
		},
		{
			MethodName: "deleteComment",
			Handler:    _Lobby_DeleteComment_Handler,
		},
		{
			MethodName: "updateReadComment",
			Handler:    _Lobby_UpdateReadComment_Handler,
		},
		{
			MethodName: "fetchRollingNotice",
			Handler:    _Lobby_FetchRollingNotice_Handler,
		},
		{
			MethodName: "fetchServerTime",
			Handler:    _Lobby_FetchServerTime_Handler,
		},
		{
			MethodName: "fetchPlatformProducts",
			Handler:    _Lobby_FetchPlatformProducts_Handler,
		},
		{
			MethodName: "cancelGooglePlayOrder",
			Handler:    _Lobby_CancelGooglePlayOrder_Handler,
		},
		{
			MethodName: "openChest",
			Handler:    _Lobby_OpenChest_Handler,
		},
		{
			MethodName: "buyFromChestShop",
			Handler:    _Lobby_BuyFromChestShop_Handler,
		},
		{
			MethodName: "fetchDailySignInInfo",
			Handler:    _Lobby_FetchDailySignInInfo_Handler,
		},
		{
			MethodName: "doDailySignIn",
			Handler:    _Lobby_DoDailySignIn_Handler,
		},
		{
			MethodName: "doActivitySignIn",
			Handler:    _Lobby_DoActivitySignIn_Handler,
		},
		{
			MethodName: "fetchCharacterInfo",
			Handler:    _Lobby_FetchCharacterInfo_Handler,
		},
		{
			MethodName: "updateCharacterSort",
			Handler:    _Lobby_UpdateCharacterSort_Handler,
		},
		{
			MethodName: "changeMainCharacter",
			Handler:    _Lobby_ChangeMainCharacter_Handler,
		},
		{
			MethodName: "changeCharacterSkin",
			Handler:    _Lobby_ChangeCharacterSkin_Handler,
		},
		{
			MethodName: "changeCharacterView",
			Handler:    _Lobby_ChangeCharacterView_Handler,
		},
		{
			MethodName: "setHiddenCharacter",
			Handler:    _Lobby_SetHiddenCharacter_Handler,
		},
		{
			MethodName: "sendGiftToCharacter",
			Handler:    _Lobby_SendGiftToCharacter_Handler,
		},
		{
			MethodName: "sellItem",
			Handler:    _Lobby_SellItem_Handler,
		},
		{
			MethodName: "fetchCommonView",
			Handler:    _Lobby_FetchCommonView_Handler,
		},
		{
			MethodName: "changeCommonView",
			Handler:    _Lobby_ChangeCommonView_Handler,
		},
		{
			MethodName: "saveCommonViews",
			Handler:    _Lobby_SaveCommonViews_Handler,
		},
		{
			MethodName: "fetchCommonViews",
			Handler:    _Lobby_FetchCommonViews_Handler,
		},
		{
			MethodName: "fetchAllCommonViews",
			Handler:    _Lobby_FetchAllCommonViews_Handler,
		},
		{
			MethodName: "useCommonView",
			Handler:    _Lobby_UseCommonView_Handler,
		},
		{
			MethodName: "upgradeCharacter",
			Handler:    _Lobby_UpgradeCharacter_Handler,
		},
		{
			MethodName: "addFinishedEnding",
			Handler:    _Lobby_AddFinishedEnding_Handler,
		},
		{
			MethodName: "receiveEndingReward",
			Handler:    _Lobby_ReceiveEndingReward_Handler,
		},
		{
			MethodName: "gameMasterCommand",
			Handler:    _Lobby_GameMasterCommand_Handler,
		},
		{
			MethodName: "fetchShopInfo",
			Handler:    _Lobby_FetchShopInfo_Handler,
		},
		{
			MethodName: "buyFromShop",
			Handler:    _Lobby_BuyFromShop_Handler,
		},
		{
			MethodName: "buyFromZHP",
			Handler:    _Lobby_BuyFromZHP_Handler,
		},
		{
			MethodName: "refreshZHPShop",
			Handler:    _Lobby_RefreshZHPShop_Handler,
		},
		{
			MethodName: "fetchMonthTicketInfo",
			Handler:    _Lobby_FetchMonthTicketInfo_Handler,
		},
		{
			MethodName: "payMonthTicket",
			Handler:    _Lobby_PayMonthTicket_Handler,
		},
		{
			MethodName: "exchangeCurrency",
			Handler:    _Lobby_ExchangeCurrency_Handler,
		},
		{
			MethodName: "exchangeChestStone",
			Handler:    _Lobby_ExchangeChestStone_Handler,
		},
		{
			MethodName: "exchangeDiamond",
			Handler:    _Lobby_ExchangeDiamond_Handler,
		},
		{
			MethodName: "fetchServerSettings",
			Handler:    _Lobby_FetchServerSettings_Handler,
		},
		{
			MethodName: "fetchAccountSettings",
			Handler:    _Lobby_FetchAccountSettings_Handler,
		},
		{
			MethodName: "updateAccountSettings",
			Handler:    _Lobby_UpdateAccountSettings_Handler,
		},
		{
			MethodName: "fetchModNicknameTime",
			Handler:    _Lobby_FetchModNicknameTime_Handler,
		},
		{
			MethodName: "createWechatNativeOrder",
			Handler:    _Lobby_CreateWechatNativeOrder_Handler,
		},
		{
			MethodName: "createWechatAppOrder",
			Handler:    _Lobby_CreateWechatAppOrder_Handler,
		},
		{
			MethodName: "createAlipayOrder",
			Handler:    _Lobby_CreateAlipayOrder_Handler,
		},
		{
			MethodName: "createAlipayScanOrder",
			Handler:    _Lobby_CreateAlipayScanOrder_Handler,
		},
		{
			MethodName: "createAlipayAppOrder",
			Handler:    _Lobby_CreateAlipayAppOrder_Handler,
		},
		{
			MethodName: "createJPCreditCardOrder",
			Handler:    _Lobby_CreateJPCreditCardOrder_Handler,
		},
		{
			MethodName: "createJPPaypalOrder",
			Handler:    _Lobby_CreateJPPaypalOrder_Handler,
		},
		{
			MethodName: "createJPAuOrder",
			Handler:    _Lobby_CreateJPAuOrder_Handler,
		},
		{
			MethodName: "createJPDocomoOrder",
			Handler:    _Lobby_CreateJPDocomoOrder_Handler,
		},
		{
			MethodName: "createJPWebMoneyOrder",
			Handler:    _Lobby_CreateJPWebMoneyOrder_Handler,
		},
		{
			MethodName: "createJPSoftbankOrder",
			Handler:    _Lobby_CreateJPSoftbankOrder_Handler,
		},
		{
			MethodName: "createJPPayPayOrder",
			Handler:    _Lobby_CreateJPPayPayOrder_Handler,
		},
		{
			MethodName: "fetchJPCommonCreditCardOrder",
			Handler:    _Lobby_FetchJPCommonCreditCardOrder_Handler,
		},
		{
			MethodName: "createENPaypalOrder",
			Handler:    _Lobby_CreateENPaypalOrder_Handler,
		},
		{
			MethodName: "createENMasterCardOrder",
			Handler:    _Lobby_CreateENMasterCardOrder_Handler,
		},
		{
			MethodName: "createENVisaOrder",
			Handler:    _Lobby_CreateENVisaOrder_Handler,
		},
		{
			MethodName: "createENJCBOrder",
			Handler:    _Lobby_CreateENJCBOrder_Handler,
		},
		{
			MethodName: "createENAlipayOrder",
			Handler:    _Lobby_CreateENAlipayOrder_Handler,
		},
		{
			MethodName: "createKRPaypalOrder",
			Handler:    _Lobby_CreateKRPaypalOrder_Handler,
		},
		{
			MethodName: "createKRMasterCardOrder",
			Handler:    _Lobby_CreateKRMasterCardOrder_Handler,
		},
		{
			MethodName: "createKRVisaOrder",
			Handler:    _Lobby_CreateKRVisaOrder_Handler,
		},
		{
			MethodName: "createKRJCBOrder",
			Handler:    _Lobby_CreateKRJCBOrder_Handler,
		},
		{
			MethodName: "createKRAlipayOrder",
			Handler:    _Lobby_CreateKRAlipayOrder_Handler,
		},
		{
			MethodName: "createDMMOrder",
			Handler:    _Lobby_CreateDMMOrder_Handler,
		},
		{
			MethodName: "createIAPOrder",
			Handler:    _Lobby_CreateIAPOrder_Handler,
		},
		{
			MethodName: "createSteamOrder",
			Handler:    _Lobby_CreateSteamOrder_Handler,
		},
		{
			MethodName: "verifySteamOrder",
			Handler:    _Lobby_VerifySteamOrder_Handler,
		},
		{
			MethodName: "createMyCardAndroidOrder",
			Handler:    _Lobby_CreateMyCardAndroidOrder_Handler,
		},
		{
			MethodName: "createMyCardWebOrder",
			Handler:    _Lobby_CreateMyCardWebOrder_Handler,
		},
		{
			MethodName: "createPaypalOrder",
			Handler:    _Lobby_CreatePaypalOrder_Handler,
		},
		{
			MethodName: "createXsollaOrder",
			Handler:    _Lobby_CreateXsollaOrder_Handler,
		},
		{
			MethodName: "verifyMyCardOrder",
			Handler:    _Lobby_VerifyMyCardOrder_Handler,
		},
		{
			MethodName: "verificationIAPOrder",
			Handler:    _Lobby_VerificationIAPOrder_Handler,
		},
		{
			MethodName: "createYostarSDKOrder",
			Handler:    _Lobby_CreateYostarSDKOrder_Handler,
		},
		{
			MethodName: "createBillingOrder",
			Handler:    _Lobby_CreateBillingOrder_Handler,
		},
		{
			MethodName: "solveGooglePlayOrder",
			Handler:    _Lobby_SolveGooglePlayOrder_Handler,
		},
		{
			MethodName: "solveGooglePayOrderV3",
			Handler:    _Lobby_SolveGooglePayOrderV3_Handler,
		},
		{
			MethodName: "deliverAA32Order",
			Handler:    _Lobby_DeliverAA32Order_Handler,
		},
		{
			MethodName: "fetchMisc",
			Handler:    _Lobby_FetchMisc_Handler,
		},
		{
			MethodName: "modifySignature",
			Handler:    _Lobby_ModifySignature_Handler,
		},
		{
			MethodName: "fetchIDCardInfo",
			Handler:    _Lobby_FetchIDCardInfo_Handler,
		},
		{
			MethodName: "updateIDCardInfo",
			Handler:    _Lobby_UpdateIDCardInfo_Handler,
		},
		{
			MethodName: "fetchVipReward",
			Handler:    _Lobby_FetchVipReward_Handler,
		},
		{
			MethodName: "gainVipReward",
			Handler:    _Lobby_GainVipReward_Handler,
		},
		{
			MethodName: "fetchRefundOrder",
			Handler:    _Lobby_FetchRefundOrder_Handler,
		},
		{
			MethodName: "fetchCustomizedContestList",
			Handler:    _Lobby_FetchCustomizedContestList_Handler,
		},
		{
			MethodName: "fetchCustomizedContestExtendInfo",
			Handler:    _Lobby_FetchCustomizedContestExtendInfo_Handler,
		},
		{
			MethodName: "fetchCustomizedContestAuthInfo",
			Handler:    _Lobby_FetchCustomizedContestAuthInfo_Handler,
		},
		{
			MethodName: "enterCustomizedContest",
			Handler:    _Lobby_EnterCustomizedContest_Handler,
		},
		{
			MethodName: "leaveCustomizedContest",
			Handler:    _Lobby_LeaveCustomizedContest_Handler,
		},
		{
			MethodName: "fetchCustomizedContestOnlineInfo",
			Handler:    _Lobby_FetchCustomizedContestOnlineInfo_Handler,
		},
		{
			MethodName: "fetchCustomizedContestByContestId",
			Handler:    _Lobby_FetchCustomizedContestByContestId_Handler,
		},
		{
			MethodName: "startCustomizedContest",
			Handler:    _Lobby_StartCustomizedContest_Handler,
		},
		{
			MethodName: "stopCustomizedContest",
			Handler:    _Lobby_StopCustomizedContest_Handler,
		},
		{
			MethodName: "joinCustomizedContestChatRoom",
			Handler:    _Lobby_JoinCustomizedContestChatRoom_Handler,
		},
		{
			MethodName: "leaveCustomizedContestChatRoom",
			Handler:    _Lobby_LeaveCustomizedContestChatRoom_Handler,
		},
		{
			MethodName: "sayChatMessage",
			Handler:    _Lobby_SayChatMessage_Handler,
		},
		{
			MethodName: "fetchCustomizedContestGameRecords",
			Handler:    _Lobby_FetchCustomizedContestGameRecords_Handler,
		},
		{
			MethodName: "fetchCustomizedContestGameLiveList",
			Handler:    _Lobby_FetchCustomizedContestGameLiveList_Handler,
		},
		{
			MethodName: "followCustomizedContest",
			Handler:    _Lobby_FollowCustomizedContest_Handler,
		},
		{
			MethodName: "unfollowCustomizedContest",
			Handler:    _Lobby_UnfollowCustomizedContest_Handler,
		},
		{
			MethodName: "fetchActivityList",
			Handler:    _Lobby_FetchActivityList_Handler,
		},
		{
			MethodName: "fetchAccountActivityData",
			Handler:    _Lobby_FetchAccountActivityData_Handler,
		},
		{
			MethodName: "exchangeActivityItem",
			Handler:    _Lobby_ExchangeActivityItem_Handler,
		},
		{
			MethodName: "completeActivityTask",
			Handler:    _Lobby_CompleteActivityTask_Handler,
		},
		{
			MethodName: "completeActivityFlipTask",
			Handler:    _Lobby_CompleteActivityFlipTask_Handler,
		},
		{
			MethodName: "completePeriodActivityTask",
			Handler:    _Lobby_CompletePeriodActivityTask_Handler,
		},
		{
			MethodName: "completePeriodActivityTaskBatch",
			Handler:    _Lobby_CompletePeriodActivityTaskBatch_Handler,
		},
		{
			MethodName: "completeRandomActivityTask",
			Handler:    _Lobby_CompleteRandomActivityTask_Handler,
		},
		{
			MethodName: "receiveActivityFlipTask",
			Handler:    _Lobby_ReceiveActivityFlipTask_Handler,
		},
		{
			MethodName: "completeSegmentTaskReward",
			Handler:    _Lobby_CompleteSegmentTaskReward_Handler,
		},
		{
			MethodName: "fetchActivityFlipInfo",
			Handler:    _Lobby_FetchActivityFlipInfo_Handler,
		},
		{
			MethodName: "gainAccumulatedPointActivityReward",
			Handler:    _Lobby_GainAccumulatedPointActivityReward_Handler,
		},
		{
			MethodName: "gainMultiPointActivityReward",
			Handler:    _Lobby_GainMultiPointActivityReward_Handler,
		},
		{
			MethodName: "fetchRankPointLeaderboard",
			Handler:    _Lobby_FetchRankPointLeaderboard_Handler,
		},
		{
			MethodName: "gainRankPointReward",
			Handler:    _Lobby_GainRankPointReward_Handler,
		},
		{
			MethodName: "richmanActivityNextMove",
			Handler:    _Lobby_RichmanActivityNextMove_Handler,
		},
		{
			MethodName: "richmanAcitivitySpecialMove",
			Handler:    _Lobby_RichmanAcitivitySpecialMove_Handler,
		},
		{
			MethodName: "richmanActivityChestInfo",
			Handler:    _Lobby_RichmanActivityChestInfo_Handler,
		},
		{
			MethodName: "createGameObserveAuth",
			Handler:    _Lobby_CreateGameObserveAuth_Handler,
		},
		{
			MethodName: "refreshGameObserveAuth",
			Handler:    _Lobby_RefreshGameObserveAuth_Handler,
		},
		{
			MethodName: "fetchActivityBuff",
			Handler:    _Lobby_FetchActivityBuff_Handler,
		},
		{
			MethodName: "upgradeActivityBuff",
			Handler:    _Lobby_UpgradeActivityBuff_Handler,
		},
		{
			MethodName: "upgradeActivityLevel",
			Handler:    _Lobby_UpgradeActivityLevel_Handler,
		},
		{
			MethodName: "receiveUpgradeActivityReward",
			Handler:    _Lobby_ReceiveUpgradeActivityReward_Handler,
		},
		{
			MethodName: "upgradeChallenge",
			Handler:    _Lobby_UpgradeChallenge_Handler,
		},
		{
			MethodName: "refreshChallenge",
			Handler:    _Lobby_RefreshChallenge_Handler,
		},
		{
			MethodName: "fetchChallengeInfo",
			Handler:    _Lobby_FetchChallengeInfo_Handler,
		},
		{
			MethodName: "forceCompleteChallengeTask",
			Handler:    _Lobby_ForceCompleteChallengeTask_Handler,
		},
		{
			MethodName: "fetchChallengeSeason",
			Handler:    _Lobby_FetchChallengeSeason_Handler,
		},
		{
			MethodName: "receiveChallengeRankReward",
			Handler:    _Lobby_ReceiveChallengeRankReward_Handler,
		},
		{
			MethodName: "fetchABMatchInfo",
			Handler:    _Lobby_FetchABMatchInfo_Handler,
		},
		{
			MethodName: "buyInABMatch",
			Handler:    _Lobby_BuyInABMatch_Handler,
		},
		{
			MethodName: "receiveABMatchReward",
			Handler:    _Lobby_ReceiveABMatchReward_Handler,
		},
		{
			MethodName: "quitABMatch",
			Handler:    _Lobby_QuitABMatch_Handler,
		},
		{
			MethodName: "startUnifiedMatch",
			Handler:    _Lobby_StartUnifiedMatch_Handler,
		},
		{
			MethodName: "cancelUnifiedMatch",
			Handler:    _Lobby_CancelUnifiedMatch_Handler,
		},
		{
			MethodName: "fetchGamePointRank",
			Handler:    _Lobby_FetchGamePointRank_Handler,
		},
		{
			MethodName: "fetchSelfGamePointRank",
			Handler:    _Lobby_FetchSelfGamePointRank_Handler,
		},
		{
			MethodName: "readSNS",
			Handler:    _Lobby_ReadSNS_Handler,
		},
		{
			MethodName: "replySNS",
			Handler:    _Lobby_ReplySNS_Handler,
		},
		{
			MethodName: "likeSNS",
			Handler:    _Lobby_LikeSNS_Handler,
		},
		{
			MethodName: "digMine",
			Handler:    _Lobby_DigMine_Handler,
		},
		{
			MethodName: "fetchLastPrivacy",
			Handler:    _Lobby_FetchLastPrivacy_Handler,
		},
		{
			MethodName: "checkPrivacy",
			Handler:    _Lobby_CheckPrivacy_Handler,
		},
		{
			MethodName: "responseCaptcha",
			Handler:    _Lobby_ResponseCaptcha_Handler,
		},
		{
			MethodName: "fetchRPGBattleHistory",
			Handler:    _Lobby_FetchRPGBattleHistory_Handler,
		},
		{
			MethodName: "fetchRPGBattleHistoryV2",
			Handler:    _Lobby_FetchRPGBattleHistoryV2_Handler,
		},
		{
			MethodName: "receiveRPGRewards",
			Handler:    _Lobby_ReceiveRPGRewards_Handler,
		},
		{
			MethodName: "receiveRPGReward",
			Handler:    _Lobby_ReceiveRPGReward_Handler,
		},
		{
			MethodName: "buyArenaTicket",
			Handler:    _Lobby_BuyArenaTicket_Handler,
		},
		{
			MethodName: "enterArena",
			Handler:    _Lobby_EnterArena_Handler,
		},
		{
			MethodName: "receiveArenaReward",
			Handler:    _Lobby_ReceiveArenaReward_Handler,
		},
		{
			MethodName: "fetchOBToken",
			Handler:    _Lobby_FetchOBToken_Handler,
		},
		{
			MethodName: "receiveCharacterRewards",
			Handler:    _Lobby_ReceiveCharacterRewards_Handler,
		},
		{
			MethodName: "feedActivityFeed",
			Handler:    _Lobby_FeedActivityFeed_Handler,
		},
		{
			MethodName: "sendActivityGiftToFriend",
			Handler:    _Lobby_SendActivityGiftToFriend_Handler,
		},
		{
			MethodName: "receiveActivityGift",
			Handler:    _Lobby_ReceiveActivityGift_Handler,
		},
		{
			MethodName: "receiveAllActivityGift",
			Handler:    _Lobby_ReceiveAllActivityGift_Handler,
		},
		{
			MethodName: "fetchFriendGiftActivityData",
			Handler:    _Lobby_FetchFriendGiftActivityData_Handler,
		},
		{
			MethodName: "openPreChestItem",
			Handler:    _Lobby_OpenPreChestItem_Handler,
		},
		{
			MethodName: "fetchVoteActivity",
			Handler:    _Lobby_FetchVoteActivity_Handler,
		},
		{
			MethodName: "voteActivity",
			Handler:    _Lobby_VoteActivity_Handler,
		},
		{
			MethodName: "unlockActivitySpot",
			Handler:    _Lobby_UnlockActivitySpot_Handler,
		},
		{
			MethodName: "receiveActivitySpotReward",
			Handler:    _Lobby_ReceiveActivitySpotReward_Handler,
		},
		{
			MethodName: "deleteAccount",
			Handler:    _Lobby_DeleteAccount_Handler,
		},
		{
			MethodName: "cancelDeleteAccount",
			Handler:    _Lobby_CancelDeleteAccount_Handler,
		},
		{
			MethodName: "logReport",
			Handler:    _Lobby_LogReport_Handler,
		},
		{
			MethodName: "bindOauth2",
			Handler:    _Lobby_BindOauth2_Handler,
		},
		{
			MethodName: "fetchOauth2Info",
			Handler:    _Lobby_FetchOauth2Info_Handler,
		},
		{
			MethodName: "setLoadingImage",
			Handler:    _Lobby_SetLoadingImage_Handler,
		},
		{
			MethodName: "fetchShopInterval",
			Handler:    _Lobby_FetchShopInterval_Handler,
		},
		{
			MethodName: "fetchActivityInterval",
			Handler:    _Lobby_FetchActivityInterval_Handler,
		},
		{
			MethodName: "fetchRecentFriend",
			Handler:    _Lobby_FetchRecentFriend_Handler,
		},
		{
			MethodName: "openGacha",
			Handler:    _Lobby_OpenGacha_Handler,
		},
		{
			MethodName: "taskRequest",
			Handler:    _Lobby_TaskRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "liqi.proto",
}

// FastTestClient is the client API for FastTest service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FastTestClient interface {
	AuthGame(ctx context.Context, in *ReqAuthGame, opts ...grpc.CallOption) (*ResAuthGame, error)
	EnterGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResEnterGame, error)
	SyncGame(ctx context.Context, in *ReqSyncGame, opts ...grpc.CallOption) (*ResSyncGame, error)
	FinishSyncGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	TerminateGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	InputOperation(ctx context.Context, in *ReqSelfOperation, opts ...grpc.CallOption) (*ResCommon, error)
	InputChiPengGang(ctx context.Context, in *ReqChiPengGang, opts ...grpc.CallOption) (*ResCommon, error)
	ConfirmNewRound(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	BroadcastInGame(ctx context.Context, in *ReqBroadcastInGame, opts ...grpc.CallOption) (*ResCommon, error)
	InputGameGMCommand(ctx context.Context, in *ReqGMCommandInGaming, opts ...grpc.CallOption) (*ResCommon, error)
	FetchGamePlayerState(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResGamePlayerState, error)
	CheckNetworkDelay(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	ClearLeaving(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	VoteGameEnd(ctx context.Context, in *ReqVoteGameEnd, opts ...grpc.CallOption) (*ResGameEndVote, error)
	AuthObserve(ctx context.Context, in *ReqAuthObserve, opts ...grpc.CallOption) (*ResCommon, error)
	StartObserve(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResStartObserve, error)
	StopObserve(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
}

type fastTestClient struct {
	cc grpc.ClientConnInterface
}

func NewFastTestClient(cc grpc.ClientConnInterface) FastTestClient {
	return &fastTestClient{cc}
}

func (c *fastTestClient) AuthGame(ctx context.Context, in *ReqAuthGame, opts ...grpc.CallOption) (*ResAuthGame, error) {
	out := new(ResAuthGame)
	err := c.cc.Invoke(ctx, "/lq.FastTest/authGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) EnterGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResEnterGame, error) {
	out := new(ResEnterGame)
	err := c.cc.Invoke(ctx, "/lq.FastTest/enterGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) SyncGame(ctx context.Context, in *ReqSyncGame, opts ...grpc.CallOption) (*ResSyncGame, error) {
	out := new(ResSyncGame)
	err := c.cc.Invoke(ctx, "/lq.FastTest/syncGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) FinishSyncGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/finishSyncGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) TerminateGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/terminateGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) InputOperation(ctx context.Context, in *ReqSelfOperation, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/inputOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) InputChiPengGang(ctx context.Context, in *ReqChiPengGang, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/inputChiPengGang", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) ConfirmNewRound(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/confirmNewRound", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) BroadcastInGame(ctx context.Context, in *ReqBroadcastInGame, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/broadcastInGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) InputGameGMCommand(ctx context.Context, in *ReqGMCommandInGaming, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/inputGameGMCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) FetchGamePlayerState(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResGamePlayerState, error) {
	out := new(ResGamePlayerState)
	err := c.cc.Invoke(ctx, "/lq.FastTest/fetchGamePlayerState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) CheckNetworkDelay(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/checkNetworkDelay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) ClearLeaving(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/clearLeaving", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) VoteGameEnd(ctx context.Context, in *ReqVoteGameEnd, opts ...grpc.CallOption) (*ResGameEndVote, error) {
	out := new(ResGameEndVote)
	err := c.cc.Invoke(ctx, "/lq.FastTest/voteGameEnd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) AuthObserve(ctx context.Context, in *ReqAuthObserve, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/authObserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) StartObserve(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResStartObserve, error) {
	out := new(ResStartObserve)
	err := c.cc.Invoke(ctx, "/lq.FastTest/startObserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) StopObserve(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := c.cc.Invoke(ctx, "/lq.FastTest/stopObserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FastTestServer is the server API for FastTest service.
type FastTestServer interface {
	AuthGame(context.Context, *ReqAuthGame) (*ResAuthGame, error)
	EnterGame(context.Context, *ReqCommon) (*ResEnterGame, error)
	SyncGame(context.Context, *ReqSyncGame) (*ResSyncGame, error)
	FinishSyncGame(context.Context, *ReqCommon) (*ResCommon, error)
	TerminateGame(context.Context, *ReqCommon) (*ResCommon, error)
	InputOperation(context.Context, *ReqSelfOperation) (*ResCommon, error)
	InputChiPengGang(context.Context, *ReqChiPengGang) (*ResCommon, error)
	ConfirmNewRound(context.Context, *ReqCommon) (*ResCommon, error)
	BroadcastInGame(context.Context, *ReqBroadcastInGame) (*ResCommon, error)
	InputGameGMCommand(context.Context, *ReqGMCommandInGaming) (*ResCommon, error)
	FetchGamePlayerState(context.Context, *ReqCommon) (*ResGamePlayerState, error)
	CheckNetworkDelay(context.Context, *ReqCommon) (*ResCommon, error)
	ClearLeaving(context.Context, *ReqCommon) (*ResCommon, error)
	VoteGameEnd(context.Context, *ReqVoteGameEnd) (*ResGameEndVote, error)
	AuthObserve(context.Context, *ReqAuthObserve) (*ResCommon, error)
	StartObserve(context.Context, *ReqCommon) (*ResStartObserve, error)
	StopObserve(context.Context, *ReqCommon) (*ResCommon, error)
}

// UnimplementedFastTestServer can be embedded to have forward compatible implementations.
type UnimplementedFastTestServer struct {
}

func (*UnimplementedFastTestServer) AuthGame(context.Context, *ReqAuthGame) (*ResAuthGame, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthGame not implemented")
}
func (*UnimplementedFastTestServer) EnterGame(context.Context, *ReqCommon) (*ResEnterGame, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnterGame not implemented")
}
func (*UnimplementedFastTestServer) SyncGame(context.Context, *ReqSyncGame) (*ResSyncGame, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncGame not implemented")
}
func (*UnimplementedFastTestServer) FinishSyncGame(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinishSyncGame not implemented")
}
func (*UnimplementedFastTestServer) TerminateGame(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateGame not implemented")
}
func (*UnimplementedFastTestServer) InputOperation(context.Context, *ReqSelfOperation) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InputOperation not implemented")
}
func (*UnimplementedFastTestServer) InputChiPengGang(context.Context, *ReqChiPengGang) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InputChiPengGang not implemented")
}
func (*UnimplementedFastTestServer) ConfirmNewRound(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmNewRound not implemented")
}
func (*UnimplementedFastTestServer) BroadcastInGame(context.Context, *ReqBroadcastInGame) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BroadcastInGame not implemented")
}
func (*UnimplementedFastTestServer) InputGameGMCommand(context.Context, *ReqGMCommandInGaming) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InputGameGMCommand not implemented")
}
func (*UnimplementedFastTestServer) FetchGamePlayerState(context.Context, *ReqCommon) (*ResGamePlayerState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchGamePlayerState not implemented")
}
func (*UnimplementedFastTestServer) CheckNetworkDelay(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckNetworkDelay not implemented")
}
func (*UnimplementedFastTestServer) ClearLeaving(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearLeaving not implemented")
}
func (*UnimplementedFastTestServer) VoteGameEnd(context.Context, *ReqVoteGameEnd) (*ResGameEndVote, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteGameEnd not implemented")
}
func (*UnimplementedFastTestServer) AuthObserve(context.Context, *ReqAuthObserve) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthObserve not implemented")
}
func (*UnimplementedFastTestServer) StartObserve(context.Context, *ReqCommon) (*ResStartObserve, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartObserve not implemented")
}
func (*UnimplementedFastTestServer) StopObserve(context.Context, *ReqCommon) (*ResCommon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopObserve not implemented")
}

func RegisterFastTestServer(s *grpc.Server, srv FastTestServer) {
	s.RegisterService(&_FastTest_serviceDesc, srv)
}

func _FastTest_AuthGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAuthGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).AuthGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/AuthGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).AuthGame(ctx, req.(*ReqAuthGame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_EnterGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).EnterGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/EnterGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).EnterGame(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_SyncGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSyncGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).SyncGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/SyncGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).SyncGame(ctx, req.(*ReqSyncGame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_FinishSyncGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).FinishSyncGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/FinishSyncGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).FinishSyncGame(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_TerminateGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).TerminateGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/TerminateGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).TerminateGame(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_InputOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSelfOperation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).InputOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/InputOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).InputOperation(ctx, req.(*ReqSelfOperation))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_InputChiPengGang_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChiPengGang)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).InputChiPengGang(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/InputChiPengGang",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).InputChiPengGang(ctx, req.(*ReqChiPengGang))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_ConfirmNewRound_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).ConfirmNewRound(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/ConfirmNewRound",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).ConfirmNewRound(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_BroadcastInGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBroadcastInGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).BroadcastInGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/BroadcastInGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).BroadcastInGame(ctx, req.(*ReqBroadcastInGame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_InputGameGMCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGMCommandInGaming)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).InputGameGMCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/InputGameGMCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).InputGameGMCommand(ctx, req.(*ReqGMCommandInGaming))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_FetchGamePlayerState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).FetchGamePlayerState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/FetchGamePlayerState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).FetchGamePlayerState(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_CheckNetworkDelay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).CheckNetworkDelay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/CheckNetworkDelay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).CheckNetworkDelay(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_ClearLeaving_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).ClearLeaving(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/ClearLeaving",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).ClearLeaving(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_VoteGameEnd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqVoteGameEnd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).VoteGameEnd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/VoteGameEnd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).VoteGameEnd(ctx, req.(*ReqVoteGameEnd))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_AuthObserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAuthObserve)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).AuthObserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/AuthObserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).AuthObserve(ctx, req.(*ReqAuthObserve))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_StartObserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).StartObserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/StartObserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).StartObserve(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_StopObserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).StopObserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/StopObserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).StopObserve(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

var _FastTest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lq.FastTest",
	HandlerType: (*FastTestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "authGame",
			Handler:    _FastTest_AuthGame_Handler,
		},
		{
			MethodName: "enterGame",
			Handler:    _FastTest_EnterGame_Handler,
		},
		{
			MethodName: "syncGame",
			Handler:    _FastTest_SyncGame_Handler,
		},
		{
			MethodName: "finishSyncGame",
			Handler:    _FastTest_FinishSyncGame_Handler,
		},
		{
			MethodName: "terminateGame",
			Handler:    _FastTest_TerminateGame_Handler,
		},
		{
			MethodName: "inputOperation",
			Handler:    _FastTest_InputOperation_Handler,
		},
		{
			MethodName: "inputChiPengGang",
			Handler:    _FastTest_InputChiPengGang_Handler,
		},
		{
			MethodName: "confirmNewRound",
			Handler:    _FastTest_ConfirmNewRound_Handler,
		},
		{
			MethodName: "broadcastInGame",
			Handler:    _FastTest_BroadcastInGame_Handler,
		},
		{
			MethodName: "inputGameGMCommand",
			Handler:    _FastTest_InputGameGMCommand_Handler,
		},
		{
			MethodName: "fetchGamePlayerState",
			Handler:    _FastTest_FetchGamePlayerState_Handler,
		},
		{
			MethodName: "checkNetworkDelay",
			Handler:    _FastTest_CheckNetworkDelay_Handler,
		},
		{
			MethodName: "clearLeaving",
			Handler:    _FastTest_ClearLeaving_Handler,
		},
		{
			MethodName: "voteGameEnd",
			Handler:    _FastTest_VoteGameEnd_Handler,
		},
		{
			MethodName: "authObserve",
			Handler:    _FastTest_AuthObserve_Handler,
		},
		{
			MethodName: "startObserve",
			Handler:    _FastTest_StartObserve_Handler,
		},
		{
			MethodName: "stopObserve",
			Handler:    _FastTest_StopObserve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "liqi.proto",
}
